{"id":"2ee67c1df054971ad142ad877b84200c","_format":"hh-sol-build-info-1","solcVersion":"0.8.22","solcLongVersion":"0.8.22+commit.4fc1097e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/RCCStake.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport \"./RCCStakeLib.sol\";\n\n// 这个合约里有一个隐藏条件，就是我针对一个block发放的代币奖励是固定的，所有的池子靠权重来分配对应代币；池子里，再按照用户质押的数量，进行分配结算；\n// TODO: 看看这几个类型都是干啥的，需要用上翻译插件\ncontract RCCStake is\n    Initializable,\n    UUPSUpgradeable,\n    PausableUpgradeable,\n    AccessControlUpgradeable\n{\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using Math for uint256;\n\n    // ************************************** INVARIANT **************************************\n\n    bytes32 public constant ADMIN_ROLE = keccak256(\"admin_role\");\n    bytes32 public constant UPGRADE_ROLE = keccak256(\"upgrade_manager_role\");\n    uint256 public constant ETH_PID = 0;\n\n    // ************************************** DATA STRUCTURE **************************************\n\n    // 见引用\n\n    // ************************************** STATE VARIABLES **************************************\n    // First block that RCCStake will start from\n    uint256 public startBlock;\n    // First block that RCCStake will end from\n    uint256 public endBlock;\n    // RCC token reward per block\n    uint256 public rccPerBlock;\n    // Pause the withdraw function\n    bool public withdrawPaused;\n    // Pause the claim function\n    bool public claimPaused;\n    // RCC token\n    IERC20 public RCC;\n\n    // Total pool weight / Sum of all pool weights\n    uint256 public totalPoolWeight;\n\n    RCCStakeLib.Pool[] public pool;\n\n    // ---------------- 状态变量 ----------------\n    // pool id => user address => user info\n    mapping(uint256 => mapping(address => RCCStakeLib.User)) public user;\n\n    // ************************************** EVENT **************************************\n    event SetRCC(IERC20 indexed RCC);\n    event PausedWithdraw();\n    event UnpausedWithdraw();\n    event PausedClaim();\n    event UnpausedClaim();\n    event SetStartBlock(uint256 indexed startBlock);\n    event SetEndBlock(uint256 indexed endBlock);\n    event SetRCCPerBlock(uint256 indexed rccPerBlock);\n    event AddPool(\n        address indexed stakeTokenAddress,\n        uint256 indexed poolWeight,\n        uint256 indexed lastRewardBlock,\n        uint256 minDepositAmount,\n        uint256 unStakeLockedBlocks\n    );\n    // TODO:  UpdatePoolInfo 和  UpdatePool为啥要分两个？\n    event UpdatePoolInfo(\n        uint256 indexed poolId,\n        uint256 indexed minDepositAmount,\n        uint256 indexed unStakeLockedBlocks\n    );\n    event SetPoolWeight(\n        uint256 indexed poolId,\n        uint256 poolWeight,\n        uint256 totalPoolWeight\n    );\n    event UpdatePool(\n        uint256 indexed poolId,\n        uint256 indexed lastRewardBlock,\n        uint256 totalRCC\n    );\n    event Deposit(address indexed user, uint256 indexed poolId, uint256 amount);\n    event RequestUnstake(\n        address indexed user,\n        uint256 indexed poolId,\n        uint256 amount\n    );\n    event Withdraw(\n        address indexed user,\n        uint256 indexed poolId,\n        uint256 amount,\n        uint256 indexed blockNumber\n    );\n    event Claim(\n        address indexed user,\n        uint256 indexed poolId,\n        uint256 RccReward\n    );\n\n    event Stake(address indexed user, address indexed pid, uint256 amount);\n    event UnStake(address indexed user, address indexed pid, uint256 amount);\n    event GetRewards(address indexed user, address indexed pid, uint256 amount);\n\n    // ************************************** MODIFIER **************************************\n\n    modifier checkPid(uint256 _pid) {\n        require(_pid < pool.length, \"invalid pid\");\n        _;\n    }\n    modifier whenNotClaimPaused() {\n        require(!claimPaused, \"claim is paused\");\n        _;\n    }\n    modifier whenNotWithdrawPaused() {\n        require(!withdrawPaused, \"withdraw is paused\");\n        _;\n    }\n\n    // ************************************** FUNCTIONS **************************************\n    /**\n     * @notice Set RCC token address. Set basic info when deploying.\n     * - 执行初始化动作\n     * - 设置角色权限\n     * - 设置代币奖励相关信息\n     */\n\n    function initialize(\n        IERC20 _RCC,\n        uint256 _startBlock,\n        uint256 _endBlock,\n        uint256 _rccPerBlock\n    ) public initializer {\n        require(\n            _startBlock <= _endBlock,\n            \"start block must be less than end block\"\n        );\n        require(_rccPerBlock > 0, \"rcc per block must be greater than 0\");\n        // TODO: 看代码，下面一行代码啥也没干呀\n        __AccessControl_init();\n        __UUPSUpgradeable_init();\n        __Pausable_init(); // 添加这行来初始化 PausableUpgradeable\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(UPGRADE_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n\n        setRCC(_RCC);\n        startBlock = _startBlock;\n        endBlock = _endBlock;\n        rccPerBlock = _rccPerBlock;\n    }\n\n    // TODO: 这个函数在这里什么意思？又没有调用的地方\n    function _authorizeUpgrade(\n        address newImplementation\n    ) internal override onlyRole(UPGRADE_ROLE) {}\n\n    // ************************************** ADMIN FUNCTIONS **************************************\n    /**\n     * @notice Set RCC token address. Can only be called by admin\n     */\n\n    function setRCC(IERC20 _RCC) public onlyRole(ADMIN_ROLE) {\n        RCC = _RCC;\n        emit SetRCC(RCC);\n    }\n\n    /**\n     * @notice Pause withdraw. Can only be called by admin.\n     */\n    function pauseWithdraw() public onlyRole(ADMIN_ROLE) {\n        require(withdrawPaused, \"withdraw has already been unpaused\");\n        withdrawPaused = true;\n        emit PausedWithdraw();\n    }\n\n    /**\n     * @notice Unpause withdraw. Can only be called by admin.\n     */\n    function toggleWithdrawPause() external onlyRole(ADMIN_ROLE) {\n        withdrawPaused = !withdrawPaused;\n        if (withdrawPaused) {\n            emit PausedWithdraw();\n        } else {\n            emit UnpausedWithdraw();\n        }\n    }\n\n    function toggleClaimPause() external onlyRole(ADMIN_ROLE) {\n        claimPaused = !claimPaused;\n        if (claimPaused) {\n            emit PausedClaim();\n        } else {\n            emit UnpausedClaim();\n        }\n    }\n\n    // TODO: 这俩函数为啥单独拎出来，设置区块的放一类，设置池子放另一类？\n    /**\n     * @notice Update staking start block. Can only be called by admin.\n     */\n    function setStartBlock(uint256 _startBlock) public onlyRole(ADMIN_ROLE) {\n        require(_startBlock <= endBlock, \"Invalid start block\");\n        startBlock = _startBlock;\n        emit SetStartBlock(_startBlock);\n    }\n\n    /**\n     * @notice Update staking end block. Can only be called by admin.\n     */\n    function setEndBlock(uint256 _endBlock) public onlyRole(ADMIN_ROLE) {\n        require(startBlock <= _endBlock, \"Invalid end block\");\n        endBlock = _endBlock;\n        emit SetEndBlock(_endBlock);\n    }\n\n    /**\n     * @notice Update the RCC reward amount per block. Can only be called by admin.\n     */\n    function setRCCPerBlock(uint256 _rccPerBlock) public onlyRole(ADMIN_ROLE) {\n        require(_rccPerBlock > 0, \"Invalid RCC per block\");\n        rccPerBlock = _rccPerBlock;\n        emit SetRCCPerBlock(_rccPerBlock);\n    }\n\n    /**\n     * @notice Add a new staking to pool. Can only be called by admin\n     * DO NOT add the same staking token more than once. RCC rewards will be messed up if you do\n     */\n    function addPool(\n        address _stakeTokenAddress,\n        uint256 _poolWeight /** TODO: 这权重放的是不是太随意了？ */,\n        uint256 _minDepositAmount,\n        uint256 _unStakeLockedBlocks,\n        bool _withUpdate /** 是指创建这个池子的同时要不要同时更新别的池子（因为权重有了变化） */\n    ) public onlyRole(ADMIN_ROLE) {\n        // Default the first pool to be ETH pool, so the first pool must be added with stakeTokenAddress = address(0x0)\n        if (pool.length > 0) {\n            require(\n                pool[0].stakeTokenAddress == address(0x0),\n                \"the first pool must be ETH pool\"\n            );\n        } else {\n            require(\n                _stakeTokenAddress == address(0x0),\n                \"the first pool must be ETH pool\"\n            );\n        }\n        // allow the min deposit amount equal to 0 TODO: 为啥？存款0有什么意义？\n        require(_unStakeLockedBlocks > 0, \"invalid withdraw locked blocks\"); // TODO: 这个等于0也可以吧？\n        require(block.number < endBlock, \"already ended\");\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardBlock = block.number > startBlock\n            ? block.number\n            : startBlock;\n        totalPoolWeight += _poolWeight;\n        pool.push(\n            RCCStakeLib.Pool({\n                stakeTokenAddress: _stakeTokenAddress,\n                poolWeight: _poolWeight,\n                lastRewardBlock: lastRewardBlock,\n                accumulateRewardsPerStake: 0,\n                stakeTokenAmount: 0,\n                minDepositAmount: _minDepositAmount,\n                unStakeLockedBlocks: _unStakeLockedBlocks\n            })\n        );\n        emit AddPool(\n            _stakeTokenAddress,\n            _poolWeight,\n            lastRewardBlock,\n            _minDepositAmount,\n            _unStakeLockedBlocks\n        );\n    }\n\n    /**\n     * @notice Update the given pool's info (minDepositAmount and unStakeLockedBlocks). Can only be called by admin.\n     * 这就是函数签名的作用，函数重名没事儿，还有参数返回值啥的呢；、\n     *\n     * 更新池子干了啥事儿\n     * - 改了最小存入金额\n     * - 不能提取的区块锁定区\n     */\n    function updatePool(\n        uint256 _poolId,\n        uint256 _minDepositAmount,\n        uint256 _unStakeLockedBlocks\n    ) public checkPid(_poolId) onlyRole(ADMIN_ROLE) {\n        require(_poolId < pool.length, \"invalid pool id\");\n        pool[_poolId].minDepositAmount = _minDepositAmount;\n        pool[_poolId].unStakeLockedBlocks = _unStakeLockedBlocks;\n        emit UpdatePoolInfo(_poolId, _minDepositAmount, _unStakeLockedBlocks);\n    }\n\n    /**\n     * @notice Update the given pool's weight. Can only be called by admin.\n     */\n    function setPoolWeight(\n        uint256 _poolId,\n        uint256 _poolWeight,\n        bool _withUpdate\n    ) public onlyRole(ADMIN_ROLE) {\n        require(_poolId < pool.length, \"invalid pool id\");\n        require(_poolWeight > 0, \"invalid pool weight\");\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        (bool success, uint256 _finalTotalPoolWeight) = totalPoolWeight.tryAdd(\n            _poolWeight\n        );\n        require(success, \"total pool weight overflow\");\n        totalPoolWeight = _finalTotalPoolWeight - pool[_poolId].poolWeight;\n        pool[_poolId].poolWeight = _poolWeight;\n        emit SetPoolWeight(_poolId, _poolWeight, totalPoolWeight);\n    }\n\n    // ************************************** QUERY FUNCTION **************************************\n    /**\n     * @notice Get the length/amount of pool\n     */\n    function getPoolLength() public view returns (uint256) {\n        return pool.length;\n    }\n\n    /**\n     * @notice Return reward multiplier over given _from to _to block. [_from, _to)\n     *\n     * @param _from    From block number (included)\n     * @param _to      To block number (exluded)\n     */\n    function getMultiplier(\n        uint256 _from,\n        uint256 _to\n    ) public view returns (uint256 multiplier) {\n        require(_from <= _to, \"invalid range\");\n        if (_from < startBlock) {\n            _from = startBlock;\n        }\n        if (_to > endBlock) {\n            _to = endBlock;\n        }\n        require(_to - _from > 0, \"invalid range\");\n        bool success;\n        (success, multiplier) = (_to - _from).tryMul(rccPerBlock);\n        require(success, \"multiplier overflow\");\n    }\n\n    /**\n     * @notice Get pending RCC amount of user in pool\n     */\n    function getPendingRCC(\n        uint256 _poolId,\n        address _user\n    ) external view checkPid(_poolId) returns (uint256) {\n        return pendingRCCByBlockNumber(_poolId, _user, block.number);\n    }\n\n    /**\n     * @notice Get pending RCC amount of user by block number in pool\n     */\n    function pendingRCCByBlockNumber(\n        uint256 _poolId,\n        address _user,\n        uint256 _blockNumber\n    ) public view returns (uint256) {\n        RCCStakeLib.Pool storage pool_ = pool[_poolId];\n        RCCStakeLib.User storage user_ = user[_poolId][_user];\n        uint256 accumulateRewardsPerStake = pool_.accumulateRewardsPerStake;\n        uint256 stSupply = pool_.stakeTokenAmount;\n        // 当前块 < pool 最后一次 rewards 后面的 block && 存在质押 => 该block有奖励要发放\n        if (_blockNumber < pool_.lastRewardBlock && stSupply != 0) {\n            uint256 multiplier = getMultiplier(\n                pool_.lastRewardBlock,\n                _blockNumber\n            );\n            uint256 rccForPool = (multiplier * pool_.poolWeight) /\n                totalPoolWeight;\n            accumulateRewardsPerStake =\n                accumulateRewardsPerStake +\n                (rccForPool * (1 ether)) /\n                stSupply;\n        }\n        return\n            (user_.stakeAmount * accumulateRewardsPerStake) /\n            (1 ether) -\n            user_.finishedRewards +\n            user_.pendingRewards;\n    }\n\n    /**\n     * @notice Get the staking amount of user\n     */\n    function stakingBalance(\n        uint256 _pid,\n        address _user\n    ) external view checkPid(_pid) returns (uint256) {\n        return user[_pid][_user].stakeAmount;\n    }\n\n    /**\n     * @notice Get the withdraw amount info, including the locked unstake amount and the unlocked unstake amount\n     */\n    function withdrawAmount(\n        uint256 _poolId,\n        address _user\n    )\n        public\n        view\n        checkPid(_poolId)\n        returns (uint256 requestAmount, uint256 pendingWithdrawAmount)\n    {\n        RCCStakeLib.User storage user_ = user[_poolId][_user];\n        for (uint256 i = 0; i < user_.requests.length; i++) {\n            if (user_.requests[i].unlockBlocksCounts <= block.number) {\n                pendingWithdrawAmount =\n                    pendingWithdrawAmount +\n                    user_.requests[i].amount;\n            }\n            requestAmount = requestAmount + user_.requests[i].amount;\n        }\n    }\n\n    // ************************************** PUBLIC FUNCTION **************************************\n    /**\n     * @notice Update reward variables of the given pool to be up-to-date.\n     * 主要是更新\n     * - 池子里每单位代币累计发放的奖励；\n     * - 最后发放奖励区块的number；\n     * - 更新整个池子，累计应该方法的奖励；\n     */\n    function updatePool(uint256 _pid) public checkPid(_pid) {\n        RCCStakeLib.Pool storage pool_ = pool[_pid];\n        // 结算过了，返回\n        if (block.number <= pool_.lastRewardBlock) {\n            return;\n        }\n        uint256 stakeTokenAmount = pool_.stakeTokenAmount;\n        // 这段区块里，没有质押代币，返回；\n        if (stakeTokenAmount == 0) {\n            pool_.lastRewardBlock = block.number;\n            return;\n        }\n        // 池子奖励的代币总和 * 池子的权重 / 池子总权重 = 该池子这段区块链奖励的代币总和;\n        // 在这段区块里，所有池子奖励的代币总和 * 池子的权重\n        (bool success1, uint256 totalRCC) = getMultiplier(\n            pool_.lastRewardBlock,\n            block.number\n        ).tryMul(pool_.poolWeight);\n        require(success1, \"overflow\");\n        // 之所以要分步计算，就是避免中间某个步骤计算溢出导致错误；\n        (success1, totalRCC) = totalRCC.tryDiv(totalPoolWeight);\n        require(success1, \"overflow\");\n        // 看这个池子里已质押的代币总数量\n        uint256 stSupply = pool_.stakeTokenAmount;\n        // 要是有质押的代币\n        if (stSupply > 0) {\n            // 乘个1 ether是什么意思呢？\n            (bool success2, uint256 totalRCC_) = totalRCC.tryMul(1);\n            require(success2, \"overflow\");\n\n            // 这段区块链里，每一单位 eth要分的token数量\n            (success2, totalRCC_) = totalRCC_.tryDiv(stSupply);\n            require(success2, \"overflow\");\n\n            // 累计发放的记录上\n            (bool success3, uint256 accumulateRewardsPerStake) = pool_\n                .accumulateRewardsPerStake\n                .tryAdd(totalRCC_);\n            require(success3, \"overflow\");\n            pool_.accumulateRewardsPerStake = accumulateRewardsPerStake;\n        }\n        // 更新最后计算奖励的区块\n        pool_.lastRewardBlock = block.number;\n\n        emit UpdatePool(_pid, pool_.lastRewardBlock, totalRCC);\n    }\n\n    /**\n     * @notice Update reward variables for all pools. Be careful of gas spending!\n     */\n    function massUpdatePools() public {\n        /** TODO: 这个方法为啥用public，不用 private 或 external？\n         * - 啥时候用public？希望外部调用的、状态变更函数、查询函数（合约状态）、接口函数、管理员功能\n         * - public和external咋区分，一般如果方法只需要在外部调用，用external，节省gas；所以，优先external，其次public；\n         */\n        /** 因为读取要消耗gas，所以弄一个变量么？ */\n        uint256 length = pool.length;\n        for (uint256 i = 0; i < length; i++) {\n            updatePool(i);\n        }\n    }\n\n    /**\n     * @notice Deposit staking ETH for RCC rewards\n     */\n    function depositETH() public payable whenNotPaused {\n        RCCStakeLib.Pool storage pool_ = pool[ETH_PID];\n        require(\n            pool_.stakeTokenAddress == address(0x0),\n            \"ETH pool must be created first\"\n        );\n\n        uint256 _amount = msg.value;\n        require(_amount >= pool_.minDepositAmount, \"invalid deposit amount\");\n        _deposit(ETH_PID, _amount);\n    }\n\n    /**\n     * @notice Deposit staking token for RCC rewards\n     * Before depositing, user needs approve this contract to be able to spend or transfer their staking tokens\n     *\n     * @param _pid       Id of the pool to be deposited to\n     * @param _amount    Amount of staking tokens to be deposited\n     */\n    function deposit(\n        uint256 _pid,\n        uint256 _amount\n    ) public whenNotWithdrawPaused checkPid(_pid) {\n        // TODO: 为什么不接受ETH的质押，因为已经有了eth方法？那这两个方法为啥还要单独区分？\n        require(_pid != 0, \"deposit not support ETH staking\");\n        RCCStakeLib.Pool storage pool_ = pool[_pid];\n        require(_amount > pool_.minDepositAmount, \"invalid deposit amount\");\n        if (_amount > 0) {\n            IERC20(pool_.stakeTokenAddress).safeTransferFrom(\n                msg.sender,\n                address(this),\n                _amount\n            );\n        }\n        _deposit(_pid, _amount);\n    }\n\n    /**\n     * @notice Unstake staking tokens\n     *\n     * @param _pid       Id of the pool to be withdrawn from\n     * @param _amount    amount of staking tokens to be withdrawn\n     */\n    function unstake(\n        uint256 _pid,\n        uint256 _amount\n    ) public whenNotPaused whenNotWithdrawPaused checkPid(_pid) {\n        RCCStakeLib.Pool storage pool_ = pool[_pid];\n        RCCStakeLib.User storage user_ = user[_pid][msg.sender];\n\n        require(\n            user_.stakeAmount >= _amount,\n            \"Not enough staking token balance\"\n        );\n        updatePool(_pid);\n        (bool success, uint256 pendingRCC_) = user_.stakeAmount.tryMul(\n            pool_.accumulateRewardsPerStake\n        );\n        require(success, \"overflow\");\n        (success, pendingRCC_) = pendingRCC_.tryDiv(1);\n        require(success, \"overflow2\");\n        (success, pendingRCC_) = pendingRCC_.trySub(user_.finishedRewards);\n        require(success, \"overflow3\");\n        if (pendingRCC_ > 0) {\n            user_.pendingRewards += pendingRCC_;\n        }\n        // 用户的账户更新\n        if (_amount > 0) {\n            user_.stakeAmount -= _amount;\n            user_.requests.push(\n                RCCStakeLib.UnStakeRequest({\n                    amount: _amount,\n                    unlockBlocksCounts: block.number + pool_.unStakeLockedBlocks\n                })\n            );\n        }\n        // 池子的账户更新\n        pool_.stakeTokenAmount -= _amount;\n        user_.finishedRewards =\n            (user_.stakeAmount * pool_.accumulateRewardsPerStake) /\n            (1 ether);\n        emit RequestUnstake(msg.sender, _pid, _amount);\n    }\n\n    /**\n     * @notice Withdraw the unlock unstake amount\n     * @param _pid       Id of the pool to be withdrawn from\n     * 功能: 提取一个池子里所有的代币\n     * - 提取池子里所有的代币；\n     * - 拿走所有的奖励；\n     * - 更新池子\n     * - 发射事件\n     */\n    function withdraw(\n        uint256 _pid\n    ) public whenNotPaused whenNotWithdrawPaused checkPid(_pid) {\n        RCCStakeLib.Pool storage pool_ = pool[_pid];\n        RCCStakeLib.User storage user_ = user[_pid][msg.sender];\n\n        uint256 pendingWithdraw_;\n        uint256 popNum_;\n        // 跳过解锁时间小于当前区块的请求\n        for (uint256 i = 0; i < user_.requests.length; i++) {\n            if (user_.requests[i].unlockBlocksCounts > block.number) {\n                break;\n            }\n            pendingWithdraw_ = pendingWithdraw_ + user_.requests[i].amount;\n            popNum_++;\n        }\n        // 这里有个隐含逻辑，解锁时间是递增的\n        for (uint256 i = 0; i < user_.requests.length - popNum_; i++) {\n            user_.requests[i] = user_.requests[i + popNum_];\n        }\n        for (uint256 i = 0; i < popNum_; i++) {\n            user_.requests.pop();\n        }\n        if (pendingWithdraw_ > 0) {\n            if (pool_.stakeTokenAddress == address(0x0)) {\n                _safeETHTransfer(msg.sender, pendingWithdraw_);\n            } else {\n                IERC20(pool_.stakeTokenAddress).safeTransfer(\n                    msg.sender,\n                    pendingWithdraw_\n                );\n            }\n        }\n        emit Withdraw(msg.sender, _pid, pendingWithdraw_, block.number);\n    }\n\n    /**\n     * @notice Claim RCC tokens reward\n     *\n     * @param _pid       Id of the pool to be claimed from\n     *\n     * 索取、主张、索赔\n     * TODO: 这段逻辑谁调用？\n     */\n    function claim(\n        uint256 _pid\n    ) public whenNotPaused checkPid(_pid) whenNotClaimPaused {\n        RCCStakeLib.Pool storage pool_ = pool[_pid];\n        RCCStakeLib.User storage user_ = user[_pid][msg.sender];\n        updatePool(_pid);\n        uint256 pendingRCC_ = (user_.stakeAmount *\n            pool_.accumulateRewardsPerStake) -\n            user_.finishedRewards +\n            user_.pendingRewards;\n        if (pendingRCC_ > 0) {\n            user_.pendingRewards = 0;\n            _safeRCCTransfer(msg.sender, pendingRCC_);\n        }\n        user_.finishedRewards =\n            (user_.stakeAmount * pool_.accumulateRewardsPerStake) /\n            (1 ether);\n        emit Claim(msg.sender, _pid, pendingRCC_);\n    }\n\n    // ************************************** INTERNAL FUNCTION **************************************\n\n    /**\n     * @notice Deposit staking token for RCC rewards\n     *\n     * @param _pid       Id of the pool to be deposited to\n     * @param _amount    Amount of staking tokens to be deposited\n     */\n    function _deposit(uint256 _pid, uint256 _amount) internal {\n        RCCStakeLib.Pool storage pool_ = pool[_pid];\n        RCCStakeLib.User storage user_ = user[_pid][msg.sender];\n        updatePool(_pid);\n        // 先处理已有质押的奖励\n        if (user_.stakeAmount > 0) {\n            (bool success1, uint256 accStakeToken) = user_.stakeAmount.tryMul(\n                pool_.accumulateRewardsPerStake\n            );\n            require(success1, \"user stake amount overflow\");\n            (success1, accStakeToken) = accStakeToken.tryDiv(1 ether);\n            require(success1, \"accumulate rewards per stake overflow\");\n\n            (bool success2, uint256 pendingRCC_) = accStakeToken.trySub(\n                user_.finishedRewards\n            );\n            require(success2, \"pending rewards overflow\");\n            if (pendingRCC_ > 0) {\n                (bool success3, uint256 _pendingRCC) = user_\n                    .pendingRewards\n                    .tryAdd(pendingRCC_);\n                require(success3, \"pending rewards overflow\");\n                user_.pendingRewards = _pendingRCC;\n            }\n        }\n        // 再处理新来的质押逻辑\n        if (_amount > 0) {\n            (bool success4, uint256 accStakeAmount) = _amount.tryAdd(\n                user_.stakeAmount\n            );\n            require(success4, \"accumulate stake amount overflow\");\n            user_.stakeAmount = accStakeAmount;\n        }\n        // 把池子总的质押数量加上\n        (bool success5, uint256 _stakeTokenAmount) = pool_\n            .stakeTokenAmount\n            .tryAdd(_amount);\n        require(success5, \"stake token amount overflow\");\n        pool_.stakeTokenAmount = _stakeTokenAmount;\n\n        (bool success6, uint256 _finishedRewards) = user_.stakeAmount.tryMul(\n            pool_.accumulateRewardsPerStake\n        );\n        require(success6, \"user stAmount mul accRCCPerST overflow\");\n        user_.finishedRewards = _finishedRewards;\n\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    /**\n     * @notice Safe RCC transfer function, just in case if rounding error causes pool to not have enough RCCs\n     *\n     * @param _to        Address to get transferred RCCs\n     * @param _amount    Amount of RCC to be transferred\n     */\n    function _safeRCCTransfer(address _to, uint256 _amount) internal {\n        uint256 RCCBal = RCC.balanceOf(address(this));\n        if (_amount <= RCCBal) {\n            RCC.transfer(_to, _amount);\n        } else {\n            RCC.transfer(_to, RCCBal);\n        }\n    }\n\n    /**\n     * @notice Safe ETH transfer function\n     *\n     * @param _to        Address to get transferred ETH\n     * @param _amount    Amount of ETH to be transferred\n     * FIXME: 什么函数适合放在 internal，只有内部调用的；哪些函数是只能放在内部调用呢？\n     * - 转账，涉及到钱的；也不完全这样说，角色权限 + 控制也可以，看取舍，修饰符，方法就那几个，遍历一下也可；\n     */\n    function _safeETHTransfer(address _to, uint256 _amount) internal {\n        // 这个是低级调用，给对方账户转账\n        (bool success, bytes memory data) = address(_to).call{value: _amount}(\n            \"\"\n        );\n        require(success, \"ETH transfer call failed\");\n        if (data.length > 0) {\n            require(\n                abi.decode(data, (bool)),\n                \"ETH transfer operation did not succeed\"\n            );\n        }\n    }\n\n    receive() external payable {}\n\n    fallback() external payable {}\n}\n"},"contracts/RCCStakeLib.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nlibrary RCCStakeLib {\n    struct Pool {\n        address stakeTokenAddress /** 质押池的代币地址 */;\n        uint256 poolWeight /** 质押池的权重 */;\n        uint256 lastRewardBlock /** 上次发放奖励的区块 */;\n        uint256 accumulateRewardsPerStake /** 累计发放的奖励 / 每单位质押代币，每次发放后更新为0，未发放则持续累计 */;\n        uint256 stakeTokenAmount /**质押的总代币数量 */;\n        uint256 minDepositAmount /** 最小质押金额 */;\n        uint256 unStakeLockedBlocks /** 禁止解除质押的区块 */;\n    }\n    struct UnStakeRequest {\n        // Request withdraw amount\n        uint256 amount;\n        // The blocks when the request withdraw amount can be released，发起解除质押请求时，已解锁的区块数量\n        uint256 unlockBlocksCounts;\n    }\n    struct User {\n        uint256 stakeAmount;\n        uint256 finishedRewards;\n        uint256 pendingRewards;\n        UnStakeRequest[] requests;\n    }\n}\n"},"contracts/RccToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract RccToken is ERC20 {\n    constructor() ERC20(\"RccToken\", \"RCC\") {\n        // 初始供应量定义下，后续通过mint铸造\n        _mint(msg.sender, 10000000 * 1_000_000_000_000_000_000); // 1,0\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[844],"ERC165Upgradeable":[1060],"IAccessControl":[1143],"Initializable":[616]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1144,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":845,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1061,"src":"284:79:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"292:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":617,"src":"364:63:0","symbolAliases":[{"foreign":{"id":8,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"372:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":11,"name":"Initializable","nameLocations":["2136:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"2136:13:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"2136:13:0"},{"baseName":{"id":13,"name":"ContextUpgradeable","nameLocations":["2151:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":844,"src":"2151:18:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2151:18:0"},{"baseName":{"id":15,"name":"IAccessControl","nameLocations":["2171:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":1143,"src":"2171:14:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2171:14:0"},{"baseName":{"id":17,"name":"ERC165Upgradeable","nameLocations":["2187:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":1060,"src":"2187:17:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2187:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"429:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,1060,3233,1143,844,616],"name":"AccessControlUpgradeable","nameLocation":"2108:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":25,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"hasRole","nameLocation":"2270:7:0","nodeType":"VariableDeclaration","scope":25,"src":"2237:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":21,"keyName":"account","keyNameLocation":"2253:7:0","keyType":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2237:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"adminRole","nameLocation":"2295:9:0","nodeType":"VariableDeclaration","scope":25,"src":"2287:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2218:8:0","nodeType":"StructDefinition","scope":362,"src":"2211:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":28,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2341:18:0","nodeType":"VariableDeclaration","scope":362,"src":"2317:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2374:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":35,"members":[{"constant":false,"id":34,"mutability":"mutable","name":"_roles","nameLocation":"2522:6:0","nodeType":"VariableDeclaration","scope":35,"src":"2488:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":33,"keyName":"role","keyNameLocation":"2504:4:0","keyType":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2496:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2488:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"RoleData","nameLocations":["2512:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2512:8:0"},"referencedDeclaration":25,"src":"2512:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2457:20:0","nodeType":"StructDefinition","scope":362,"src":"2450:85:0","visibility":"public"},{"constant":true,"id":38,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2683:28:0","nodeType":"VariableDeclaration","scope":362,"src":"2658:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"2877:87:0","statements":[{"AST":{"nativeSrc":"2896:62:0","nodeType":"YulBlock","src":"2896:62:0","statements":[{"nativeSrc":"2910:38:0","nodeType":"YulAssignment","src":"2910:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"2920:28:0","nodeType":"YulIdentifier","src":"2920:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2910:6:0","nodeType":"YulIdentifier","src":"2910:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":42,"isOffset":false,"isSlot":true,"src":"2910:6:0","suffix":"slot","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"2920:28:0","valueSize":1}],"id":44,"nodeType":"InlineAssembly","src":"2887:71:0"}]},"id":46,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2796:24:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"2820:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"$","nameLocation":"2874:1:0","nodeType":"VariableDeclaration","scope":46,"src":"2845:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":41,"nodeType":"UserDefinedTypeName","pathNode":{"id":40,"name":"AccessControlStorage","nameLocations":["2845:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"2845:20:0"},"referencedDeclaration":35,"src":"2845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2844:32:0"},"scope":362,"src":"2787:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"3181:44:0","statements":[{"expression":{"arguments":[{"id":52,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3202:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":51,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":129,"src":"3191:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"3191:16:0"},{"id":55,"nodeType":"PlaceholderStatement","src":"3217:1:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2970:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":57,"name":"onlyRole","nameLocation":"3158:8:0","nodeType":"ModifierDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"role","nameLocation":"3175:4:0","nodeType":"VariableDeclaration","scope":57,"src":"3167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3167:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3166:14:0"},"src":"3149:76:0","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"3289:7:0","statements":[]},"id":63,"implemented":true,"kind":"function","modifiers":[{"id":60,"kind":"modifierInvocation","modifierName":{"id":59,"name":"onlyInitializing","nameLocations":["3272:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3272:16:0"},"nodeType":"ModifierInvocation","src":"3272:16:0"}],"name":"__AccessControl_init","nameLocation":"3240:20:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3260:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"3289:0:0"},"scope":362,"src":"3231:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":68,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":69,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3311:30:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":362,"src":"3302:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1059],"body":{"id":90,"nodeType":"Block","src":"3534:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3551:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":80,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3571:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1143_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1143_$","typeString":"type(contract IAccessControl)"}],"id":79,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3566:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$1143","typeString":"type(contract IAccessControl)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3587:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3566:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3551:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":86,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3626:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":84,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$362_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"3602:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3551:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":77,"id":89,"nodeType":"Return","src":"3544:94:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"3382:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3452:17:0","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"3510:8:0"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"interfaceId","nameLocation":"3477:11:0","nodeType":"VariableDeclaration","scope":91,"src":"3470:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":71,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3470:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3469:20:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"3528:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":75,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3527:6:0"},"scope":362,"src":"3443:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1110],"body":{"id":115,"nodeType":"Block","src":"3815:124:0","statements":[{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"$","nameLocation":"3854:1:0","nodeType":"VariableDeclaration","scope":115,"src":"3825:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"AccessControlStorage","nameLocations":["3825:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"3825:20:0"},"referencedDeclaration":35,"src":"3825:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":106,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":104,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"3858:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3825:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":107,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3901:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3901:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":110,"indexExpression":{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3910:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":113,"indexExpression":{"id":112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3924:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":100,"id":114,"nodeType":"Return","src":"3894:38:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3651:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3741:7:0","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"role","nameLocation":"3757:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3749:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":93,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3749:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"account","nameLocation":"3771:7:0","nodeType":"VariableDeclaration","scope":116,"src":"3763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"3809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":98,"name":"bool","nodeType":"ElementaryTypeName","src":"3809:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3808:6:0"},"scope":362,"src":"3732:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"4204:47:0","statements":[{"expression":{"arguments":[{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4225:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":124,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"4231:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"4214:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"4214:30:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"3945:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4157:10:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"role","nameLocation":"4176:4:0","nodeType":"VariableDeclaration","scope":129,"src":"4168:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":362,"src":"4148:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"4454:124:0","statements":[{"condition":{"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4468:23:0","subExpression":{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4483:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4469:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"4464:108:0","trueBody":{"id":147,"nodeType":"Block","src":"4493:79:0","statements":[{"errorCall":{"arguments":[{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4547:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":144,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4556:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":142,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4514:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"RevertStatement","src":"4507:54:0"}]}}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4257:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4390:10:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4409:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4401:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4401:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4423:7:0","nodeType":"VariableDeclaration","scope":150,"src":"4415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4400:31:0"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4454:0:0"},"scope":362,"src":"4381:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1118],"body":{"id":170,"nodeType":"Block","src":"4833:117:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"$","nameLocation":"4872:1:0","nodeType":"VariableDeclaration","scope":170,"src":"4843:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"AccessControlStorage","nameLocations":["4843:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"4843:20:0"},"referencedDeclaration":35,"src":"4843:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4876:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4843:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":164,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"4919:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"4919:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":167,"indexExpression":{"id":166,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4928:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4919:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4934:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4919:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":157,"id":169,"nodeType":"Return","src":"4912:31:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4584:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4768:12:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4789:4:0","nodeType":"VariableDeclaration","scope":171,"src":"4781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:0"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"4824:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4823:9:0"},"scope":362,"src":"4759:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1126],"body":{"id":189,"nodeType":"Block","src":"5340:42:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5361:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5367:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5350:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5350:25:0"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"4956:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5333:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5320:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5311:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5311:8:0"},"nodeType":"ModifierInvocation","src":"5311:28:0"}],"name":"grantRole","nameLocation":"5255:9:0","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"role","nameLocation":"5273:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5265:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5265:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"5287:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5279:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5264:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5340:0:0"},"scope":362,"src":"5246:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1134],"body":{"id":208,"nodeType":"Block","src":"5757:43:0","statements":[{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5779:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5785:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5767:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":207,"nodeType":"ExpressionStatement","src":"5767:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5388:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":209,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":199,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":198,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5737:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":201,"kind":"modifierInvocation","modifierName":{"id":197,"name":"onlyRole","nameLocations":["5728:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5728:8:0"},"nodeType":"ModifierInvocation","src":"5728:28:0"}],"name":"revokeRole","nameLocation":"5671:10:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5690:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5682:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5704:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5696:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:31:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"5757:0:0"},"scope":362,"src":"5662:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1142],"body":{"id":231,"nodeType":"Block","src":"6427:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6441:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"6463:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6441:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"IfStatement","src":"6437:102:0","trueBody":{"id":224,"nodeType":"Block","src":"6477:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6498:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"RevertStatement","src":"6491:37:0"}]}},{"expression":{"arguments":[{"id":227,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":228,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6567:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":226,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"6549:37:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"5806:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6357:12:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6378:4:0","nodeType":"VariableDeclaration","scope":232,"src":"6370:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6392:18:0","nodeType":"VariableDeclaration","scope":232,"src":"6384:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6369:42:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6427:0:0"},"scope":362,"src":"6348:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":267,"nodeType":"Block","src":"6791:245:0","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"$","nameLocation":"6830:1:0","nodeType":"VariableDeclaration","scope":267,"src":"6801:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"AccessControlStorage","nameLocations":["6801:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"6801:20:0"},"referencedDeclaration":35,"src":"6801:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"6834:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6801:59:0"},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6878:17:0","nodeType":"VariableDeclaration","scope":267,"src":"6870:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6911:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"6898:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6870:46:0"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6926:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6928:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6926:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":256,"indexExpression":{"id":254,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6935:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6941:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6926:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6953:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6926:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":260,"nodeType":"ExpressionStatement","src":"6926:36:0"},{"eventCall":{"arguments":[{"id":262,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6994:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7000:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":264,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7019:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":261,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"6977:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"6972:57:0"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"6599:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6727:13:0","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"role","nameLocation":"6749:4:0","nodeType":"VariableDeclaration","scope":268,"src":"6741:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"adminRole","nameLocation":"6763:9:0","nodeType":"VariableDeclaration","scope":268,"src":"6755:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6755:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6740:33:0"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"6791:0:0"},"scope":362,"src":"6718:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"7353:304:0","statements":[{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"$","nameLocation":"7392:1:0","nodeType":"VariableDeclaration","scope":314,"src":"7363:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"AccessControlStorage","nameLocations":["7363:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7363:20:0"},"referencedDeclaration":35,"src":"7363:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7396:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7396:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7363:59:0"},{"condition":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7436:23:0","subExpression":{"arguments":[{"id":285,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":286,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7451:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7437:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"7614:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7635:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":277,"id":311,"nodeType":"Return","src":"7628:12:0"}]},"id":313,"nodeType":"IfStatement","src":"7432:219:0","trueBody":{"id":309,"nodeType":"Block","src":"7461:147:0","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7475:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7477:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7475:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":293,"indexExpression":{"id":291,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7475:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7490:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"7475:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":296,"indexExpression":{"id":295,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7498:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7509:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7475:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":299,"nodeType":"ExpressionStatement","src":"7475:38:0"},{"eventCall":{"arguments":[{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7544:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7550:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"7559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"7532:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"7527:45:0"},{"expression":{"hexValue":"74727565","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":277,"id":308,"nodeType":"Return","src":"7586:11:0"}]}}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7042:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7279:10:0","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"role","nameLocation":"7298:4:0","nodeType":"VariableDeclaration","scope":315,"src":"7290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"account","nameLocation":"7312:7:0","nodeType":"VariableDeclaration","scope":315,"src":"7304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7289:31:0"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"7347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"7347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7346:6:0"},"scope":362,"src":"7270:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"7976:304:0","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"$","nameLocation":"8015:1:0","nodeType":"VariableDeclaration","scope":360,"src":"7986:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"AccessControlStorage","nameLocations":["7986:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7986:20:0"},"referencedDeclaration":35,"src":"7986:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":328,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"8019:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8019:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7986:59:0"},{"condition":{"arguments":[{"id":332,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8067:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":333,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8073:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":331,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8059:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8059:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":358,"nodeType":"Block","src":"8237:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8258:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":324,"id":357,"nodeType":"Return","src":"8251:12:0"}]},"id":359,"nodeType":"IfStatement","src":"8055:219:0","trueBody":{"id":355,"nodeType":"Block","src":"8083:148:0","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":335,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8097:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8099:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"8097:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":339,"indexExpression":{"id":337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8106:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8097:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8112:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"8097:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":342,"indexExpression":{"id":341,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8120:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8097:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8131:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8097:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":345,"nodeType":"ExpressionStatement","src":"8097:39:0"},{"eventCall":{"arguments":[{"id":347,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8167:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8173:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8182:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8182:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"8155:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8155:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"EmitStatement","src":"8150:45:0"},{"expression":{"hexValue":"74727565","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8216:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":324,"id":354,"nodeType":"Return","src":"8209:11:0"}]}}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"7663:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7901:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"role","nameLocation":"7921:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7913:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7913:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"account","nameLocation":"7935:7:0","nodeType":"VariableDeclaration","scope":361,"src":"7927:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7912:31:0"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"7970:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"7970:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7969:6:0"},"scope":362,"src":"7892:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":363,"src":"2090:6192:0","usedErrors":[379,382,1070,1073],"usedEvents":[387,1082,1091,1100]}],"src":"108:8175:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[616]},"id":617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":616,"linearizedBaseContracts":[616],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":373,"members":[{"constant":false,"id":369,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":373,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":368,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":373,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":371,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":616,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":376,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":616,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":379,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":382,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":387,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":387,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":384,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":469,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":469,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":391,"nodeType":"UserDefinedTypeName","pathNode":{"id":390,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"4158:20:1"},"referencedDeclaration":373,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":393,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[397],"declarations":[{"constant":false,"id":397,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":469,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":396,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":401,"initialValue":{"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":398,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":469,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":402,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":406,"initialValue":{"expression":{"id":404,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[408],"declarations":[{"constant":false,"id":408,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":407,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":414,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":412,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[416],"declarations":[{"constant":false,"id":416,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":415,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":429,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":417,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":422,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$616","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$616","typeString":"contract Initializable"}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":430,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":432,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":438,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":440,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":445,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":446,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":454,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":453,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":447,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":452,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":455,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":456,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":467,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":457,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":463,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":470,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":516,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[477],"declarations":[{"constant":false,"id":477,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":516,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":476,"nodeType":"UserDefinedTypeName","pathNode":{"id":475,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"6357:20:1"},"referencedDeclaration":373,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":480,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":478,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":481,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":483,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":485,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":492,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":491,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":488,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":490,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":493,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":496,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":498,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":499,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":504,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":505,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":506,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":511,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":513,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":512,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":517,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":517,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":472,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":524,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":520,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":523,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":525,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":537,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":529,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":535,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":532,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":616,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":583,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":543,"nodeType":"UserDefinedTypeName","pathNode":{"id":542,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"7826:20:1"},"referencedDeclaration":373,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":547,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":545,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":548,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":554,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":553,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":550,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":555,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":558,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":582,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":581,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":563,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":572,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":575,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":573,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":616,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":590,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":589,"id":593,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":587,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":616,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":601,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":600,"id":604,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":598,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":616,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":614,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":611,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":376,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":613,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":615,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":610,"nodeType":"UserDefinedTypeName","pathNode":{"id":609,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"8795:20:1"},"referencedDeclaration":373,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":616,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":617,"src":"2349:6560:1","usedErrors":[379,382],"usedEvents":[387]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1695],"IERC1822Proxiable":[1264],"Initializable":[616],"UUPSUpgradeable":[798]},"id":799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":618,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":799,"sourceUnit":1265,"src":"141:88:2","symbolAliases":[{"foreign":{"id":619,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":622,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":799,"sourceUnit":1696,"src":"230:84:2","symbolAliases":[{"foreign":{"id":621,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":799,"sourceUnit":617,"src":"315:50:2","symbolAliases":[{"foreign":{"id":623,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":626,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"1023:13:2"},"id":627,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":628,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1264,"src":"1038:17:2"},"id":629,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":798,"linearizedBaseContracts":[798,1264,616],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":636,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":798,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":634,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}],"id":633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":637,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":640,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":798,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":638,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":643,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":648,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":648,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":655,"nodeType":"Block","src":"2645:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":651,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"2655:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"2655:13:2"},{"id":654,"nodeType":"PlaceholderStatement","src":"2678:1:2"}]},"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"2124:495:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":656,"name":"onlyProxy","nameLocation":"2633:9:2","nodeType":"ModifierDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"2642:2:2"},"src":"2624:62:2","virtual":false,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"2916:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":659,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"2926:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"2926:20:2"},{"id":662,"nodeType":"PlaceholderStatement","src":"2956:1:2"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"2692:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":664,"name":"notDelegated","nameLocation":"2901:12:2","nodeType":"ModifierDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"2913:2:2"},"src":"2892:72:2","virtual":false,"visibility":"internal"},{"body":{"id":669,"nodeType":"Block","src":"3030:7:2","statements":[]},"id":670,"implemented":true,"kind":"function","modifiers":[{"id":667,"kind":"modifierInvocation","modifierName":{"id":666,"name":"onlyInitializing","nameLocations":["3013:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3013:16:2"},"nodeType":"ModifierInvocation","src":"3013:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:2","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[],"src":"3001:2:2"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"3030:0:2"},"scope":798,"src":"2970:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"3113:7:2","statements":[]},"id":676,"implemented":true,"kind":"function","modifiers":[{"id":673,"kind":"modifierInvocation","modifierName":{"id":672,"name":"onlyInitializing","nameLocations":["3096:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3096:16:2"},"nodeType":"ModifierInvocation","src":"3096:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:2","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"3084:2:2"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"3113:0:2"},"scope":798,"src":"3043:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1263],"body":{"id":687,"nodeType":"Block","src":"3786:56:2","statements":[{"expression":{"expression":{"id":684,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"3803:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1695_$","typeString":"type(library ERC1967Utils)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1416,"src":"3803:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":683,"id":686,"nodeType":"Return","src":"3796:39:2"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"3125:578:2","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":688,"implemented":true,"kind":"function","modifiers":[{"id":680,"kind":"modifierInvocation","modifierName":{"id":679,"name":"notDelegated","nameLocations":["3755:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"3755:12:2"},"nodeType":"ModifierInvocation","src":"3755:12:2"}],"name":"proxiableUUID","nameLocation":"3717:13:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"3730:2:2"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"3777:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:2"},"scope":798,"src":"3708:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":707,"nodeType":"Block","src":"4266:109:2","statements":[{"expression":{"arguments":[{"id":699,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4294:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":698,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4276:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"4276:36:2"},{"expression":{"arguments":[{"id":703,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4344:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":704,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"4363:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":702,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"4322:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"ExpressionStatement","src":"4322:46:2"}]},"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"3848:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":708,"implemented":true,"kind":"function","modifiers":[{"id":696,"kind":"modifierInvocation","modifierName":{"id":695,"name":"onlyProxy","nameLocations":["4256:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":656,"src":"4256:9:2"},"nodeType":"ModifierInvocation","src":"4256:9:2"}],"name":"upgradeToAndCall","nameLocation":"4170:16:2","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:2","nodeType":"VariableDeclaration","scope":708,"src":"4187:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"data","nameLocation":"4227:4:2","nodeType":"VariableDeclaration","scope":708,"src":"4214:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":692,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:2"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[],"src":"4266:0:2"},"scope":798,"src":"4161:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":729,"nodeType":"Block","src":"4648:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":714,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4683:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}],"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4675:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"4675:7:2","typeDescriptions":{}}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4675:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":716,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4692:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4675:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":718,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"4753:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1695_$","typeString":"type(library ERC1967Utils)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4766:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1447,"src":"4753:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4753:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":721,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4789:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4753:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4675:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":728,"nodeType":"IfStatement","src":"4658:251:2","trueBody":{"id":727,"nodeType":"Block","src":"4848:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":724,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"4869:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4869:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"RevertStatement","src":"4862:36:2"}]}}]},"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"4381:217:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."},"id":730,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4612:11:2","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"4623:2:2"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[],"src":"4648:0:2"},"scope":798,"src":"4603:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":745,"nodeType":"Block","src":"5084:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":736,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5106:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5098:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"5098:7:2","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":738,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"5115:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5098:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":744,"nodeType":"IfStatement","src":"5094:145:2","trueBody":{"id":743,"nodeType":"Block","src":"5123:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":740,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"5199:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":742,"nodeType":"RevertStatement","src":"5192:36:2"}]}}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"4921:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5041:18:2","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"5059:2:2"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"5084:0:2"},"scope":798,"src":"5032:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"5251:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":752,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5637:17:2","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"newImplementation","nameLocation":"5663:17:2","nodeType":"VariableDeclaration","scope":752,"src":"5655:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"5655:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5654:27:2"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"5698:0:2"},"scope":798,"src":"5628:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":796,"nodeType":"Block","src":"6142:453:2","statements":[{"clauses":[{"block":{"id":785,"nodeType":"Block","src":"6232:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":768,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"6250:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":769,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"6258:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1695_$","typeString":"type(library ERC1967Utils)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6271:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1416,"src":"6258:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6250:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":777,"nodeType":"IfStatement","src":"6246:120:2","trueBody":{"id":776,"nodeType":"Block","src":"6292:74:2","statements":[{"errorCall":{"arguments":[{"id":773,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"6346:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":772,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"6317:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":775,"nodeType":"RevertStatement","src":"6310:41:2"}]}},{"expression":{"arguments":[{"id":781,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6409:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":782,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6428:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":778,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"6379:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1695_$","typeString":"type(library ERC1967Utils)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6392:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1510,"src":"6379:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":784,"nodeType":"ExpressionStatement","src":"6379:54:2"}]},"errorName":"","id":786,"nodeType":"TryCatchClause","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"slot","nameLocation":"6226:4:2","nodeType":"VariableDeclaration","scope":786,"src":"6218:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6218:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6217:14:2"},"src":"6209:235:2"},{"block":{"id":793,"nodeType":"Block","src":"6451:138:2","statements":[{"errorCall":{"arguments":[{"id":790,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6560:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":787,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"6518:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1695_$","typeString":"type(library ERC1967Utils)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6531:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"6518:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6518:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"RevertStatement","src":"6511:67:2"}]},"errorName":"","id":794,"nodeType":"TryCatchClause","src":"6445:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":761,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6174:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":760,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"6156:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1264_$","typeString":"type(contract IERC1822Proxiable)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1264","typeString":"contract IERC1822Proxiable"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6193:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"6156:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":795,"nodeType":"TryStatement","src":"6152:437:2"}]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"5705:347:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":797,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6066:21:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"newImplementation","nameLocation":"6096:17:2","nodeType":"VariableDeclaration","scope":797,"src":"6088:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"6088:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"data","nameLocation":"6128:4:2","nodeType":"VariableDeclaration","scope":797,"src":"6115:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":756,"name":"bytes","nodeType":"ElementaryTypeName","src":"6115:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6087:46:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"6142:0:2"},"scope":798,"src":"6057:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":799,"src":"986:5611:2","usedErrors":[379,382,643,648,1421,1434,2743,3036],"usedEvents":[387,1237]}],"src":"115:6483:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[844],"Initializable":[616]},"id":845,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":800,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":845,"sourceUnit":617,"src":"126:63:3","symbolAliases":[{"foreign":{"id":801,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":804,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"728:13:3"},"id":805,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":844,"linearizedBaseContracts":[844,616],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":810,"nodeType":"Block","src":"800:7:3","statements":[]},"id":811,"implemented":true,"kind":"function","modifiers":[{"id":808,"kind":"modifierInvocation","modifierName":{"id":807,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":844,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":816,"nodeType":"Block","src":"875:7:3","statements":[]},"id":817,"implemented":true,"kind":"function","modifiers":[{"id":814,"kind":"modifierInvocation","modifierName":{"id":813,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":844,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":822,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":821,"id":824,"nodeType":"Return","src":"959:17:3"}]},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":844,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":834,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":831,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":830,"id":833,"nodeType":"Return","src":"1066:15:3"}]},"id":835,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":835,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":828,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":844,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":842,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":839,"id":841,"nodeType":"Return","src":"1176:8:3"}]},"id":843,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":843,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":844,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":845,"src":"688:505:3","usedErrors":[379,382],"usedEvents":[387]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[844],"Initializable":[616],"PausableUpgradeable":[1020]},"id":1021,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":846,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1021,"sourceUnit":845,"src":"128:67:4","symbolAliases":[{"foreign":{"id":847,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"136:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":850,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1021,"sourceUnit":617,"src":"196:63:4","symbolAliases":[{"foreign":{"id":849,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"204:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":852,"name":"Initializable","nameLocations":["742:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"742:13:4"},"id":853,"nodeType":"InheritanceSpecifier","src":"742:13:4"},{"baseName":{"id":854,"name":"ContextUpgradeable","nameLocations":["757:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":844,"src":"757:18:4"},"id":855,"nodeType":"InheritanceSpecifier","src":"757:18:4"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"261:439:4","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1020,"linearizedBaseContracts":[1020,844,616],"name":"PausableUpgradeable","nameLocation":"719:19:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"782:66:4","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":859,"members":[{"constant":false,"id":858,"mutability":"mutable","name":"_paused","nameLocation":"891:7:4","nodeType":"VariableDeclaration","scope":859,"src":"886:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":857,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:4","nodeType":"StructDefinition","scope":1020,"src":"853:52:4","visibility":"public"},{"constant":true,"id":862,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:4","nodeType":"VariableDeclaration","scope":1020,"src":"1023:117:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:4","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":869,"nodeType":"Block","src":"1227:82:4","statements":[{"AST":{"nativeSrc":"1246:57:4","nodeType":"YulBlock","src":"1246:57:4","statements":[{"nativeSrc":"1260:33:4","nodeType":"YulAssignment","src":"1260:33:4","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:4","nodeType":"YulIdentifier","src":"1270:23:4"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:4","nodeType":"YulIdentifier","src":"1260:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":866,"isOffset":false,"isSlot":true,"src":"1260:6:4","suffix":"slot","valueSize":1},{"declaration":862,"isOffset":false,"isSlot":false,"src":"1270:23:4","valueSize":1}],"id":868,"nodeType":"InlineAssembly","src":"1237:66:4"}]},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:4","nodeType":"FunctionDefinition","parameters":{"id":863,"nodeType":"ParameterList","parameters":[],"src":"1175:2:4"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"$","nameLocation":"1224:1:4","nodeType":"VariableDeclaration","scope":870,"src":"1200:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":865,"nodeType":"UserDefinedTypeName","pathNode":{"id":864,"name":"PausableStorage","nameLocations":["1200:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":859,"src":"1200:15:4"},"referencedDeclaration":859,"src":"1200:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:4"},"scope":1020,"src":"1147:162:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"1315:73:4","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":875,"name":"Paused","nameLocation":"1399:6:4","nodeType":"EventDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:4","nodeType":"VariableDeclaration","scope":875,"src":"1406:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:4"},"src":"1393:30:4"},{"anonymous":false,"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"1429:70:4","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":880,"name":"Unpaused","nameLocation":"1510:8:4","nodeType":"EventDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:4","nodeType":"VariableDeclaration","scope":880,"src":"1519:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:4"},"src":"1504:32:4"},{"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"1542:76:4","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":883,"name":"EnforcedPause","nameLocation":"1629:13:4","nodeType":"ErrorDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[],"src":"1642:2:4"},"src":"1623:22:4"},{"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"1651:80:4","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":886,"name":"ExpectedPause","nameLocation":"1742:13:4","nodeType":"ErrorDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"1755:2:4"},"src":"1736:22:4"},{"body":{"id":895,"nodeType":"Block","src":"1889:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":892,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"1899:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1899:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"1899:27:4"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"1764:67:4","text":" @dev Initializes the contract in unpaused state."},"id":896,"implemented":true,"kind":"function","modifiers":[{"id":890,"kind":"modifierInvocation","modifierName":{"id":889,"name":"onlyInitializing","nameLocations":["1872:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"1872:16:4"},"nodeType":"ModifierInvocation","src":"1872:16:4"}],"name":"__Pausable_init","nameLocation":"1845:15:4","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"1860:2:4"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[],"src":"1889:0:4"},"scope":1020,"src":"1836:97:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":913,"nodeType":"Block","src":"2002:93:4","statements":[{"assignments":[903],"declarations":[{"constant":false,"id":903,"mutability":"mutable","name":"$","nameLocation":"2036:1:4","nodeType":"VariableDeclaration","scope":913,"src":"2012:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":902,"nodeType":"UserDefinedTypeName","pathNode":{"id":901,"name":"PausableStorage","nameLocations":["2012:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":859,"src":"2012:15:4"},"referencedDeclaration":859,"src":"2012:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":906,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":904,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2040:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2040:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2012:49:4"},{"expression":{"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":907,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"2071:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2073:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":858,"src":"2071:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2083:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2071:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":912,"nodeType":"ExpressionStatement","src":"2071:17:4"}]},"id":914,"implemented":true,"kind":"function","modifiers":[{"id":899,"kind":"modifierInvocation","modifierName":{"id":898,"name":"onlyInitializing","nameLocations":["1985:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"1985:16:4"},"nodeType":"ModifierInvocation","src":"1985:16:4"}],"name":"__Pausable_init_unchained","nameLocation":"1948:25:4","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[],"src":"1973:2:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"2002:0:4"},"scope":1020,"src":"1939:156:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":921,"nodeType":"Block","src":"2306:47:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":917,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2316:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"ExpressionStatement","src":"2316:19:4"},{"id":920,"nodeType":"PlaceholderStatement","src":"2345:1:4"}]},"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"2101:175:4","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":922,"name":"whenNotPaused","nameLocation":"2290:13:4","nodeType":"ModifierDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"2303:2:4"},"src":"2281:72:4","virtual":false,"visibility":"internal"},{"body":{"id":929,"nodeType":"Block","src":"2553:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":925,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"2563:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":927,"nodeType":"ExpressionStatement","src":"2563:16:4"},{"id":928,"nodeType":"PlaceholderStatement","src":"2589:1:4"}]},"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"2359:167:4","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":930,"name":"whenPaused","nameLocation":"2540:10:4","nodeType":"ModifierDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"2550:2:4"},"src":"2531:66:4","virtual":false,"visibility":"internal"},{"body":{"id":945,"nodeType":"Block","src":"2745:92:4","statements":[{"assignments":[938],"declarations":[{"constant":false,"id":938,"mutability":"mutable","name":"$","nameLocation":"2779:1:4","nodeType":"VariableDeclaration","scope":945,"src":"2755:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":937,"nodeType":"UserDefinedTypeName","pathNode":{"id":936,"name":"PausableStorage","nameLocations":["2755:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":859,"src":"2755:15:4"},"referencedDeclaration":859,"src":"2755:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":941,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":939,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2783:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2755:49:4"},{"expression":{"expression":{"id":942,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2821:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2823:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":858,"src":"2821:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":935,"id":944,"nodeType":"Return","src":"2814:16:4"}]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"2603:84:4","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":946,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2701:6:4","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"2707:2:4"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"2739:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":933,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:4"},"scope":1020,"src":"2692:145:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":957,"nodeType":"Block","src":"2956:77:4","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":950,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2970:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":956,"nodeType":"IfStatement","src":"2966:61:4","trueBody":{"id":955,"nodeType":"Block","src":"2980:47:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":952,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"3001:13:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":954,"nodeType":"RevertStatement","src":"2994:22:4"}]}}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"2843:57:4","text":" @dev Throws if the contract is paused."},"id":958,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2914:17:4","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[],"src":"2931:2:4"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"2956:0:4"},"scope":1020,"src":"2905:128:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":970,"nodeType":"Block","src":"3153:78:4","statements":[{"condition":{"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3167:9:4","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":962,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"3168:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":969,"nodeType":"IfStatement","src":"3163:62:4","trueBody":{"id":968,"nodeType":"Block","src":"3178:47:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":965,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"3199:13:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":967,"nodeType":"RevertStatement","src":"3192:22:4"}]}}]},"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"3039:61:4","text":" @dev Throws if the contract is not paused."},"id":971,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"3114:14:4","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"3128:2:4"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[],"src":"3153:0:4"},"scope":1020,"src":"3105:126:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":994,"nodeType":"Block","src":"3415:127:4","statements":[{"assignments":[979],"declarations":[{"constant":false,"id":979,"mutability":"mutable","name":"$","nameLocation":"3449:1:4","nodeType":"VariableDeclaration","scope":994,"src":"3425:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":978,"nodeType":"UserDefinedTypeName","pathNode":{"id":977,"name":"PausableStorage","nameLocations":["3425:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":859,"src":"3425:15:4"},"referencedDeclaration":859,"src":"3425:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":982,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":980,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"3453:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3453:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3425:49:4"},{"expression":{"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":983,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"3484:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3486:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":858,"src":"3484:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3496:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3484:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":988,"nodeType":"ExpressionStatement","src":"3484:16:4"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":990,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"3522:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":989,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"3515:6:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3515:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"EmitStatement","src":"3510:25:4"}]},"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"3237:124:4","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":995,"implemented":true,"kind":"function","modifiers":[{"id":975,"kind":"modifierInvocation","modifierName":{"id":974,"name":"whenNotPaused","nameLocations":["3401:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":922,"src":"3401:13:4"},"nodeType":"ModifierInvocation","src":"3401:13:4"}],"name":"_pause","nameLocation":"3375:6:4","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"3381:2:4"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"3415:0:4"},"scope":1020,"src":"3366:176:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1018,"nodeType":"Block","src":"3722:130:4","statements":[{"assignments":[1003],"declarations":[{"constant":false,"id":1003,"mutability":"mutable","name":"$","nameLocation":"3756:1:4","nodeType":"VariableDeclaration","scope":1018,"src":"3732:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1002,"nodeType":"UserDefinedTypeName","pathNode":{"id":1001,"name":"PausableStorage","nameLocations":["3732:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":859,"src":"3732:15:4"},"referencedDeclaration":859,"src":"3732:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1006,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1004,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"3760:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3760:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3732:49:4"},{"expression":{"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1007,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"3791:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3793:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":858,"src":"3791:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3803:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3791:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1012,"nodeType":"ExpressionStatement","src":"3791:17:4"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1014,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"3832:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3832:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1013,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"3823:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1017,"nodeType":"EmitStatement","src":"3818:27:4"}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"3548:121:4","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1019,"implemented":true,"kind":"function","modifiers":[{"id":999,"kind":"modifierInvocation","modifierName":{"id":998,"name":"whenPaused","nameLocations":["3711:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":930,"src":"3711:10:4"},"nodeType":"ModifierInvocation","src":"3711:10:4"}],"name":"_unpause","nameLocation":"3683:8:4","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[],"src":"3691:2:4"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"3722:0:4"},"scope":1020,"src":"3674:178:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1021,"src":"701:3153:4","usedErrors":[379,382,883,886],"usedEvents":[387,875,880]}],"src":"102:3753:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[1060],"IERC165":[3233],"Initializable":[616]},"id":1061,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1022,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1024,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1061,"sourceUnit":3234,"src":"140:80:5","symbolAliases":[{"foreign":{"id":1023,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"148:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1026,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1061,"sourceUnit":617,"src":"221:66:5","symbolAliases":[{"foreign":{"id":1025,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"229:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1028,"name":"Initializable","nameLocations":["808:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"808:13:5"},"id":1029,"nodeType":"InheritanceSpecifier","src":"808:13:5"},{"baseName":{"id":1030,"name":"IERC165","nameLocations":["823:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3233,"src":"823:7:5"},"id":1031,"nodeType":"InheritanceSpecifier","src":"823:7:5"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"289:479:5","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1060,"linearizedBaseContracts":[1060,3233,616],"name":"ERC165Upgradeable","nameLocation":"787:17:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1036,"nodeType":"Block","src":"888:7:5","statements":[]},"id":1037,"implemented":true,"kind":"function","modifiers":[{"id":1034,"kind":"modifierInvocation","modifierName":{"id":1033,"name":"onlyInitializing","nameLocations":["871:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"871:16:5"},"nodeType":"ModifierInvocation","src":"871:16:5"}],"name":"__ERC165_init","nameLocation":"846:13:5","nodeType":"FunctionDefinition","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"859:2:5"},"returnParameters":{"id":1035,"nodeType":"ParameterList","parameters":[],"src":"888:0:5"},"scope":1060,"src":"837:58:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1042,"nodeType":"Block","src":"962:7:5","statements":[]},"id":1043,"implemented":true,"kind":"function","modifiers":[{"id":1040,"kind":"modifierInvocation","modifierName":{"id":1039,"name":"onlyInitializing","nameLocations":["945:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"945:16:5"},"nodeType":"ModifierInvocation","src":"945:16:5"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:5","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"933:2:5"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"962:0:5"},"scope":1060,"src":"901:68:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3232],"body":{"id":1058,"nodeType":"Block","src":"1117:64:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1051,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"1134:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1053,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"1154:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3233_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3233_$","typeString":"type(contract IERC165)"}],"id":1052,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3233","typeString":"type(contract IERC165)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1050,"id":1057,"nodeType":"Return","src":"1127:47:5"}]},"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"974:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:5","nodeType":"VariableDeclaration","scope":1059,"src":"1062:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1045,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1059,"src":"1111:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1048,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:5"},"scope":1060,"src":"1035:146:5","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1061,"src":"769:414:5","usedErrors":[379,382],"usedEvents":[387]}],"src":"114:1070:5"},"id":5},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[1143]},"id":1144,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1062,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"135:90:6","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":1143,"linearizedBaseContracts":[1143],"name":"IAccessControl","nameLocation":"236:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"257:56:6","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":1070,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:6","nodeType":"ErrorDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"account","nameLocation":"365:7:6","nodeType":"VariableDeclaration","scope":1070,"src":"357:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:6","nodeType":"VariableDeclaration","scope":1070,"src":"374:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:6"},"src":"318:76:6"},{"documentation":{"id":1071,"nodeType":"StructuredDocumentation","src":"400:148:6","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":1073,"name":"AccessControlBadConfirmation","nameLocation":"559:28:6","nodeType":"ErrorDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[],"src":"587:2:6"},"src":"553:37:6"},{"anonymous":false,"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"596:254:6","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":1082,"name":"RoleAdminChanged","nameLocation":"861:16:6","nodeType":"EventDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:6","nodeType":"VariableDeclaration","scope":1082,"src":"878:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1078,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:6","nodeType":"VariableDeclaration","scope":1082,"src":"900:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1080,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:6","nodeType":"VariableDeclaration","scope":1082,"src":"935:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:6"},"src":"855:110:6"},{"anonymous":false,"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"971:295:6","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":1091,"name":"RoleGranted","nameLocation":"1277:11:6","nodeType":"EventDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:6","nodeType":"VariableDeclaration","scope":1091,"src":"1289:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1087,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:6","nodeType":"VariableDeclaration","scope":1091,"src":"1311:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1089,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:6","nodeType":"VariableDeclaration","scope":1091,"src":"1336:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:6"},"src":"1271:89:6"},{"anonymous":false,"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"1366:275:6","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":1100,"name":"RoleRevoked","nameLocation":"1652:11:6","nodeType":"EventDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:6","nodeType":"VariableDeclaration","scope":1100,"src":"1664:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1096,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:6","nodeType":"VariableDeclaration","scope":1100,"src":"1686:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1098,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:6","nodeType":"VariableDeclaration","scope":1100,"src":"1711:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:6"},"src":"1646:89:6"},{"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"1741:76:6","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":1110,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:6","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"role","nameLocation":"1847:4:6","nodeType":"VariableDeclaration","scope":1110,"src":"1839:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"account","nameLocation":"1861:7:6","nodeType":"VariableDeclaration","scope":1110,"src":"1853:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:6"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1110,"src":"1893:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1107,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:6"},"scope":1143,"src":"1822:77:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"1905:184:6","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":1118,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:6","nodeType":"FunctionDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"role","nameLocation":"2124:4:6","nodeType":"VariableDeclaration","scope":1118,"src":"2116:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:6"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1118,"src":"2153:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:6"},"scope":1143,"src":"2094:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"2168:239:6","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":1126,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:6","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"role","nameLocation":"2439:4:6","nodeType":"VariableDeclaration","scope":1126,"src":"2431:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"account","nameLocation":"2453:7:6","nodeType":"VariableDeclaration","scope":1126,"src":"2445:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:6"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"2470:0:6"},"scope":1143,"src":"2412:59:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"2477:223:6","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":1134,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:6","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"role","nameLocation":"2733:4:6","nodeType":"VariableDeclaration","scope":1134,"src":"2725:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"account","nameLocation":"2747:7:6","nodeType":"VariableDeclaration","scope":1134,"src":"2739:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:6"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[],"src":"2764:0:6"},"scope":1143,"src":"2705:60:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1135,"nodeType":"StructuredDocumentation","src":"2771:491:6","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":1142,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:6","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"role","nameLocation":"3297:4:6","nodeType":"VariableDeclaration","scope":1142,"src":"3289:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:6","nodeType":"VariableDeclaration","scope":1142,"src":"3303:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:6"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"3339:0:6"},"scope":1143,"src":"3267:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1144,"src":"226:3116:6","usedErrors":[1070,1073],"usedEvents":[1082,1091,1100]}],"src":"109:3234:6"},"id":6},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[1225],"IERC165":[3233],"IERC20":[2298]},"id":1226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1145,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":1147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1226,"sourceUnit":1255,"src":"133:36:7","symbolAliases":[{"foreign":{"id":1146,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"141:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":1149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1226,"sourceUnit":1230,"src":"170:38:7","symbolAliases":[{"foreign":{"id":1148,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"178:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1151,"name":"IERC20","nameLocations":["590:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"590:6:7"},"id":1152,"nodeType":"InheritanceSpecifier","src":"590:6:7"},{"baseName":{"id":1153,"name":"IERC165","nameLocations":["598:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3233,"src":"598:7:7"},"id":1154,"nodeType":"InheritanceSpecifier","src":"598:7:7"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"210:357:7","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":1225,"linearizedBaseContracts":[1225,3233,2298],"name":"IERC1363","nameLocation":"578:8:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"1148:370:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":1164,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:7","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"to","nameLocation":"1556:2:7","nodeType":"VariableDeclaration","scope":1164,"src":"1548:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"value","nameLocation":"1568:5:7","nodeType":"VariableDeclaration","scope":1164,"src":"1560:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:7"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1164,"src":"1593:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1161,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:7"},"scope":1225,"src":"1523:76:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"1605:453:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":1176,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:7","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"to","nameLocation":"2096:2:7","nodeType":"VariableDeclaration","scope":1176,"src":"2088:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"value","nameLocation":"2108:5:7","nodeType":"VariableDeclaration","scope":1176,"src":"2100:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"data","nameLocation":"2130:4:7","nodeType":"VariableDeclaration","scope":1176,"src":"2115:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1170,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:7"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1176,"src":"2154:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1173,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:7"},"scope":1225,"src":"2063:97:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"2166:453:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":1188,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:7","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"from","nameLocation":"2661:4:7","nodeType":"VariableDeclaration","scope":1188,"src":"2653:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"to","nameLocation":"2675:2:7","nodeType":"VariableDeclaration","scope":1188,"src":"2667:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"value","nameLocation":"2687:5:7","nodeType":"VariableDeclaration","scope":1188,"src":"2679:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:7"},"returnParameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1188,"src":"2712:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1185,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:7"},"scope":1225,"src":"2624:94:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2724:536:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":1202,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:7","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"from","nameLocation":"3302:4:7","nodeType":"VariableDeclaration","scope":1202,"src":"3294:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"to","nameLocation":"3316:2:7","nodeType":"VariableDeclaration","scope":1202,"src":"3308:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"value","nameLocation":"3328:5:7","nodeType":"VariableDeclaration","scope":1202,"src":"3320:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"data","nameLocation":"3350:4:7","nodeType":"VariableDeclaration","scope":1202,"src":"3335:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1196,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:7"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"3374:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1199,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:7"},"scope":1225,"src":"3265:115:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"3386:390:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":1212,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:7","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"spender","nameLocation":"3813:7:7","nodeType":"VariableDeclaration","scope":1212,"src":"3805:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"value","nameLocation":"3830:5:7","nodeType":"VariableDeclaration","scope":1212,"src":"3822:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:7"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1212,"src":"3855:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1209,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:7"},"scope":1225,"src":"3781:80:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"3867:478:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":1224,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:7","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"spender","nameLocation":"4382:7:7","nodeType":"VariableDeclaration","scope":1224,"src":"4374:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"value","nameLocation":"4399:5:7","nodeType":"VariableDeclaration","scope":1224,"src":"4391:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"data","nameLocation":"4421:4:7","nodeType":"VariableDeclaration","scope":1224,"src":"4406:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1218,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:7"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"4445:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1221,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:7"},"scope":1225,"src":"4350:101:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1226,"src":"568:3885:7","usedErrors":[],"usedEvents":[2232,2241]}],"src":"107:4347:7"},"id":7},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3233]},"id":1230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1227,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":1229,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1230,"sourceUnit":3234,"src":"132:59:8","symbolAliases":[{"foreign":{"id":1228,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"140:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[1250]},"id":1251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"133:101:9","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":1250,"linearizedBaseContracts":[1250],"name":"IERC1967","nameLocation":"245:8:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"260:68:9","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":1237,"name":"Upgraded","nameLocation":"339:8:9","nodeType":"EventDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"364:14:9","nodeType":"VariableDeclaration","scope":1237,"src":"348:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"347:32:9"},"src":"333:47:9"},{"anonymous":false,"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"386:67:9","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":1244,"name":"AdminChanged","nameLocation":"464:12:9","nodeType":"EventDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"485:13:9","nodeType":"VariableDeclaration","scope":1244,"src":"477:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"508:8:9","nodeType":"VariableDeclaration","scope":1244,"src":"500:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:41:9"},"src":"458:60:9"},{"anonymous":false,"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"524:59:9","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":1249,"name":"BeaconUpgraded","nameLocation":"594:14:9","nodeType":"EventDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"625:6:9","nodeType":"VariableDeclaration","scope":1249,"src":"609:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"608:24:9"},"src":"588:45:9"}],"scope":1251,"src":"235:400:9","usedErrors":[],"usedEvents":[1237,1244,1249]}],"src":"107:529:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[2298]},"id":1255,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1252,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":1254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1255,"sourceUnit":2299,"src":"131:49:10","symbolAliases":[{"foreign":{"id":1253,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"139:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:10"},"id":10},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1264]},"id":1265,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1256,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"139:204:11","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1264,"linearizedBaseContracts":[1264],"name":"IERC1822Proxiable","nameLocation":"354:17:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"378:438:11","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1263,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"830:13:11","nodeType":"FunctionDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"843:2:11"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1263,"src":"869:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"869:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"868:9:11"},"scope":1264,"src":"821:57:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1265,"src":"344:536:11","usedErrors":[],"usedEvents":[]}],"src":"113:768:11"},"id":11},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1401],"IERC20Errors":[1306],"IERC721Errors":[1354]},"id":1402,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1266,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"138:141:12","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":1306,"linearizedBaseContracts":[1306],"name":"IERC20Errors","nameLocation":"290:12:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"309:309:12","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1276,"name":"ERC20InsufficientBalance","nameLocation":"629:24:12","nodeType":"ErrorDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"sender","nameLocation":"662:6:12","nodeType":"VariableDeclaration","scope":1276,"src":"654:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"balance","nameLocation":"678:7:12","nodeType":"VariableDeclaration","scope":1276,"src":"670:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"needed","nameLocation":"695:6:12","nodeType":"VariableDeclaration","scope":1276,"src":"687:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:12"},"src":"623:80:12"},{"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"709:152:12","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1281,"name":"ERC20InvalidSender","nameLocation":"872:18:12","nodeType":"ErrorDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"sender","nameLocation":"899:6:12","nodeType":"VariableDeclaration","scope":1281,"src":"891:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:12"},"src":"866:41:12"},{"documentation":{"id":1282,"nodeType":"StructuredDocumentation","src":"913:159:12","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1286,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:12","nodeType":"ErrorDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1284,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:12","nodeType":"VariableDeclaration","scope":1286,"src":"1104:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1283,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:12"},"src":"1077:45:12"},{"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"1128:345:12","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1295,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:12","nodeType":"ErrorDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"spender","nameLocation":"1519:7:12","nodeType":"VariableDeclaration","scope":1295,"src":"1511:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:12","nodeType":"VariableDeclaration","scope":1295,"src":"1528:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"needed","nameLocation":"1555:6:12","nodeType":"VariableDeclaration","scope":1295,"src":"1547:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:12"},"src":"1478:85:12"},{"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"1569:174:12","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1300,"name":"ERC20InvalidApprover","nameLocation":"1754:20:12","nodeType":"ErrorDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"approver","nameLocation":"1783:8:12","nodeType":"VariableDeclaration","scope":1300,"src":"1775:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:12"},"src":"1748:45:12"},{"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"1799:195:12","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1305,"name":"ERC20InvalidSpender","nameLocation":"2005:19:12","nodeType":"ErrorDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"spender","nameLocation":"2033:7:12","nodeType":"VariableDeclaration","scope":1305,"src":"2025:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:12"},"src":"1999:43:12"}],"scope":1402,"src":"280:1764:12","usedErrors":[1276,1281,1286,1295,1300,1305],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"2046:143:12","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":1354,"linearizedBaseContracts":[1354],"name":"IERC721Errors","nameLocation":"2200:13:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"2220:219:12","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1312,"name":"ERC721InvalidOwner","nameLocation":"2450:18:12","nodeType":"ErrorDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"owner","nameLocation":"2477:5:12","nodeType":"VariableDeclaration","scope":1312,"src":"2469:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:12"},"src":"2444:40:12"},{"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"2490:132:12","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1317,"name":"ERC721NonexistentToken","nameLocation":"2633:22:12","nodeType":"ErrorDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:12","nodeType":"VariableDeclaration","scope":1317,"src":"2656:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:12"},"src":"2627:46:12"},{"documentation":{"id":1318,"nodeType":"StructuredDocumentation","src":"2679:289:12","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1326,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:12","nodeType":"ErrorDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1320,"mutability":"mutable","name":"sender","nameLocation":"3008:6:12","nodeType":"VariableDeclaration","scope":1326,"src":"3000:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:12","nodeType":"VariableDeclaration","scope":1326,"src":"3016:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"owner","nameLocation":"3041:5:12","nodeType":"VariableDeclaration","scope":1326,"src":"3033:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:12"},"src":"2973:75:12"},{"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"3054:152:12","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1331,"name":"ERC721InvalidSender","nameLocation":"3217:19:12","nodeType":"ErrorDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"sender","nameLocation":"3245:6:12","nodeType":"VariableDeclaration","scope":1331,"src":"3237:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:12"},"src":"3211:42:12"},{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"3259:159:12","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1336,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:12","nodeType":"ErrorDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:12","nodeType":"VariableDeclaration","scope":1336,"src":"3451:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:12"},"src":"3423:46:12"},{"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"3475:247:12","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1343,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:12","nodeType":"ErrorDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"operator","nameLocation":"3768:8:12","nodeType":"VariableDeclaration","scope":1343,"src":"3760:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:12","nodeType":"VariableDeclaration","scope":1343,"src":"3778:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:12"},"src":"3727:68:12"},{"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"3801:174:12","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1348,"name":"ERC721InvalidApprover","nameLocation":"3986:21:12","nodeType":"ErrorDefinition","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"approver","nameLocation":"4016:8:12","nodeType":"VariableDeclaration","scope":1348,"src":"4008:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:12"},"src":"3980:46:12"},{"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"4032:197:12","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1353,"name":"ERC721InvalidOperator","nameLocation":"4240:21:12","nodeType":"ErrorDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"operator","nameLocation":"4270:8:12","nodeType":"VariableDeclaration","scope":1353,"src":"4262:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:12"},"src":"4234:46:12"}],"scope":1402,"src":"2190:2092:12","usedErrors":[1312,1317,1326,1331,1336,1343,1348,1353],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"4284:145:12","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":1401,"linearizedBaseContracts":[1401],"name":"IERC1155Errors","nameLocation":"4440:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"4461:361:12","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1366,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:12","nodeType":"ErrorDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"sender","nameLocation":"4868:6:12","nodeType":"VariableDeclaration","scope":1366,"src":"4860:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"balance","nameLocation":"4884:7:12","nodeType":"VariableDeclaration","scope":1366,"src":"4876:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"needed","nameLocation":"4901:6:12","nodeType":"VariableDeclaration","scope":1366,"src":"4893:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:12","nodeType":"VariableDeclaration","scope":1366,"src":"4909:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:12"},"src":"4827:99:12"},{"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"4932:152:12","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1371,"name":"ERC1155InvalidSender","nameLocation":"5095:20:12","nodeType":"ErrorDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"sender","nameLocation":"5124:6:12","nodeType":"VariableDeclaration","scope":1371,"src":"5116:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:12"},"src":"5089:43:12"},{"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"5138:159:12","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1376,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:12","nodeType":"ErrorDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:12","nodeType":"VariableDeclaration","scope":1376,"src":"5331:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:12"},"src":"5302:47:12"},{"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"5355:256:12","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1383,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:12","nodeType":"ErrorDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"operator","nameLocation":"5659:8:12","nodeType":"VariableDeclaration","scope":1383,"src":"5651:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"owner","nameLocation":"5677:5:12","nodeType":"VariableDeclaration","scope":1383,"src":"5669:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:12"},"src":"5616:68:12"},{"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"5690:174:12","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1388,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:12","nodeType":"ErrorDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"approver","nameLocation":"5906:8:12","nodeType":"VariableDeclaration","scope":1388,"src":"5898:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:12"},"src":"5869:47:12"},{"documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"5922:197:12","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1393,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:12","nodeType":"ErrorDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"operator","nameLocation":"6161:8:12","nodeType":"VariableDeclaration","scope":1393,"src":"6153:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:12"},"src":"6124:47:12"},{"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"6177:280:12","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1400,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:12","nodeType":"ErrorDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:12","nodeType":"VariableDeclaration","scope":1400,"src":"6494:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:12","nodeType":"VariableDeclaration","scope":1400,"src":"6513:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:12"},"src":"6462:73:12"}],"scope":1402,"src":"4430:2107:12","usedErrors":[1366,1371,1376,1383,1388,1393,1400],"usedEvents":[]}],"src":"112:6426:12"},"id":12},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2993],"ERC1967Utils":[1695],"IBeacon":[1705],"IERC1967":[1250],"StorageSlot":[3221]},"id":1696,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1403,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"114:24:13"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1696,"sourceUnit":1706,"src":"140:46:13","symbolAliases":[{"foreign":{"id":1404,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"148:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":1407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1696,"sourceUnit":1251,"src":"187:55:13","symbolAliases":[{"foreign":{"id":1406,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"195:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1696,"sourceUnit":2994,"src":"243:48:13","symbolAliases":[{"foreign":{"id":1408,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"251:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1696,"sourceUnit":3222,"src":"292:56:13","symbolAliases":[{"foreign":{"id":1410,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"300:11:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"350:145:13","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":1695,"linearizedBaseContracts":[1695],"name":"ERC1967Utils","nameLocation":"504:12:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"523:170:13","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":1416,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:13","nodeType":"VariableDeclaration","scope":1695,"src":"763:114:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:13","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"884:69:13","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":1421,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:13","nodeType":"ErrorDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:13","nodeType":"VariableDeclaration","scope":1421,"src":"993:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:13"},"src":"958:59:13"},{"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"1023:60:13","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":1426,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:13","nodeType":"ErrorDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"admin","nameLocation":"1122:5:13","nodeType":"VariableDeclaration","scope":1426,"src":"1114:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:13"},"src":"1088:41:13"},{"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"1135:61:13","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":1431,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:13","nodeType":"ErrorDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:13","nodeType":"VariableDeclaration","scope":1431,"src":"1228:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:13"},"src":"1201:43:13"},{"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"1250:82:13","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":1434,"name":"ERC1967NonPayable","nameLocation":"1343:17:13","nodeType":"ErrorDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[],"src":"1360:2:13"},"src":"1337:26:13"},{"body":{"id":1446,"nodeType":"Block","src":"1502:77:13","statements":[{"expression":{"expression":{"arguments":[{"id":1442,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1546:19:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1440,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"1519:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3221_$","typeString":"type(library StorageSlot)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:13","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3132,"src":"1519:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3103_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3103_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"1519:53:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1439,"id":1445,"nodeType":"Return","src":"1512:60:13"}]},"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"1369:67:13","text":" @dev Returns the current implementation address."},"id":1447,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:13","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"1467:2:13"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1447,"src":"1493:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:13"},"scope":1695,"src":"1441:138:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1473,"nodeType":"Block","src":"1734:218:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1453,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"1748:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:13","memberName":"code","nodeType":"MemberAccess","src":"1748:22:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:13","memberName":"length","nodeType":"MemberAccess","src":"1748:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1463,"nodeType":"IfStatement","src":"1744:119:13","trueBody":{"id":1462,"nodeType":"Block","src":"1784:79:13","statements":[{"errorCall":{"arguments":[{"id":1459,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"1834:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1458,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1805:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1461,"nodeType":"RevertStatement","src":"1798:54:13"}]}},{"expression":{"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1467,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1899:19:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1464,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"1872:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3221_$","typeString":"type(library StorageSlot)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:13","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3132,"src":"1872:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3103_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3103_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"1872:53:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1470,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"1928:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1472,"nodeType":"ExpressionStatement","src":"1872:73:13"}]},"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"1585:81:13","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":1474,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:13","nodeType":"FunctionDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:13","nodeType":"VariableDeclaration","scope":1474,"src":"1699:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:13"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[],"src":"1734:0:13"},"scope":1695,"src":"1671:281:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1509,"nodeType":"Block","src":"2345:263:13","statements":[{"expression":{"arguments":[{"id":1483,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"2374:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1482,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2355:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"ExpressionStatement","src":"2355:37:13"},{"eventCall":{"arguments":[{"id":1489,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"2425:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1486,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"2407:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1250_$","typeString":"type(contract IERC1967)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:13","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"2407:17:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1491,"nodeType":"EmitStatement","src":"2402:41:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1492,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2458:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:13","memberName":"length","nodeType":"MemberAccess","src":"2458:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1507,"nodeType":"Block","src":"2559:43:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1504,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"2573:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1506,"nodeType":"ExpressionStatement","src":"2573:18:13"}]},"id":1508,"nodeType":"IfStatement","src":"2454:148:13","trueBody":{"id":1503,"nodeType":"Block","src":"2475:78:13","statements":[{"expression":{"arguments":[{"id":1499,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"2518:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1500,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2537:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1496,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"2489:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2993_$","typeString":"type(library Address)"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:13","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2910,"src":"2489:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1502,"nodeType":"ExpressionStatement","src":"2489:53:13"}]}}]},"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"1958:301:13","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:13","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:13","nodeType":"VariableDeclaration","scope":1510,"src":"2290:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"data","nameLocation":"2330:4:13","nodeType":"VariableDeclaration","scope":1510,"src":"2317:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1478,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:13"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[],"src":"2345:0:13"},"scope":1695,"src":"2264:344:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"2614:145:13","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":1514,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:13","nodeType":"VariableDeclaration","scope":1695,"src":"2829:105:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:13","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1526,"nodeType":"Block","src":"3339:68:13","statements":[{"expression":{"expression":{"arguments":[{"id":1522,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"3383:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1520,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"3356:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3221_$","typeString":"type(library StorageSlot)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:13","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3132,"src":"3356:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3103_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3103_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"3356:44:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1519,"id":1525,"nodeType":"Return","src":"3349:51:13"}]},"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"2941:341:13","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:13","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[],"src":"3304:2:13"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"3330:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:13"},"scope":1695,"src":"3287:120:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1557,"nodeType":"Block","src":"3535:172:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"3549:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:13","typeDescriptions":{}}},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1547,"nodeType":"IfStatement","src":"3545:91:13","trueBody":{"id":1546,"nodeType":"Block","src":"3573:63:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:13","typeDescriptions":{}}},"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1539,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"3594:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"RevertStatement","src":"3587:38:13"}]}},{"expression":{"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1551,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"3672:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1548,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"3645:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3221_$","typeString":"type(library StorageSlot)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:13","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3132,"src":"3645:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3103_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3103_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"3645:44:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1554,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"3692:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1556,"nodeType":"ExpressionStatement","src":"3645:55:13"}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"3413:72:13","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":1558,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:13","nodeType":"FunctionDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:13","nodeType":"VariableDeclaration","scope":1558,"src":"3509:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:13"},"returnParameters":{"id":1532,"nodeType":"ParameterList","parameters":[],"src":"3535:0:13"},"scope":1695,"src":"3490:217:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1576,"nodeType":"Block","src":"3875:94:13","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1567,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"3912:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1569,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"3924:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1564,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"3890:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1250_$","typeString":"type(contract IERC1967)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:13","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":1244,"src":"3890:21:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"EmitStatement","src":"3885:48:13"},{"expression":{"arguments":[{"id":1573,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"3953:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1572,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"3943:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1575,"nodeType":"ExpressionStatement","src":"3943:19:13"}]},"documentation":{"id":1559,"nodeType":"StructuredDocumentation","src":"3713:109:13","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1577,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:13","nodeType":"FunctionDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:13","nodeType":"VariableDeclaration","scope":1577,"src":"3848:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:13"},"returnParameters":{"id":1563,"nodeType":"ParameterList","parameters":[],"src":"3875:0:13"},"scope":1695,"src":"3827:142:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"3975:201:13","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1581,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:13","nodeType":"VariableDeclaration","scope":1695,"src":"4246:106:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:13","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1593,"nodeType":"Block","src":"4468:69:13","statements":[{"expression":{"expression":{"arguments":[{"id":1589,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4512:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1587,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"4485:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3221_$","typeString":"type(library StorageSlot)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:13","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3132,"src":"4485:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3103_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3103_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"4485:45:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1586,"id":1592,"nodeType":"Return","src":"4478:52:13"}]},"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"4359:51:13","text":" @dev Returns the current beacon."},"id":1594,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:13","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[],"src":"4433:2:13"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1594,"src":"4459:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:13"},"scope":1695,"src":"4415:122:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1639,"nodeType":"Block","src":"4667:390:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1600,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4681:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:13","memberName":"code","nodeType":"MemberAccess","src":"4681:14:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:13","memberName":"length","nodeType":"MemberAccess","src":"4681:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1610,"nodeType":"IfStatement","src":"4677:95:13","trueBody":{"id":1609,"nodeType":"Block","src":"4709:63:13","statements":[{"errorCall":{"arguments":[{"id":1606,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4751:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1605,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"4730:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1608,"nodeType":"RevertStatement","src":"4723:38:13"}]}},{"expression":{"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1614,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4809:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1611,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"4782:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3221_$","typeString":"type(library StorageSlot)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:13","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3132,"src":"4782:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3103_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3103_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"4782:45:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1617,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4830:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1619,"nodeType":"ExpressionStatement","src":"4782:57:13"},{"assignments":[1621],"declarations":[{"constant":false,"id":1621,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:13","nodeType":"VariableDeclaration","scope":1639,"src":"4850:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1627,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1623,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4889:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1622,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"4881:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1705_$","typeString":"type(contract IBeacon)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1705","typeString":"contract IBeacon"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:13","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1704,"src":"4881:33:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1628,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4930:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:13","memberName":"code","nodeType":"MemberAccess","src":"4930:25:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:13","memberName":"length","nodeType":"MemberAccess","src":"4930:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1638,"nodeType":"IfStatement","src":"4926:125:13","trueBody":{"id":1637,"nodeType":"Block","src":"4969:82:13","statements":[{"errorCall":{"arguments":[{"id":1634,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"5019:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1633,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"4990:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1636,"nodeType":"RevertStatement","src":"4983:57:13"}]}}]},"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"4543:72:13","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":1640,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:13","nodeType":"FunctionDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:13","nodeType":"VariableDeclaration","scope":1640,"src":"4640:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:13"},"returnParameters":{"id":1599,"nodeType":"ParameterList","parameters":[],"src":"4667:0:13"},"scope":1695,"src":"4620:437:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1679,"nodeType":"Block","src":"5661:263:13","statements":[{"expression":{"arguments":[{"id":1649,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"5682:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1648,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"5671:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1651,"nodeType":"ExpressionStatement","src":"5671:21:13"},{"eventCall":{"arguments":[{"id":1655,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"5731:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1652,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"5707:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1250_$","typeString":"type(contract IERC1967)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:13","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"5707:23:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1657,"nodeType":"EmitStatement","src":"5702:39:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1658,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"5756:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:13","memberName":"length","nodeType":"MemberAccess","src":"5756:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1677,"nodeType":"Block","src":"5875:43:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1674,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"5889:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1676,"nodeType":"ExpressionStatement","src":"5889:18:13"}]},"id":1678,"nodeType":"IfStatement","src":"5752:166:13","trueBody":{"id":1673,"nodeType":"Block","src":"5773:96:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1666,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"5824:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1665,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"5816:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1705_$","typeString":"type(contract IBeacon)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1705","typeString":"contract IBeacon"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:13","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1704,"src":"5816:33:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1670,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"5853:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1662,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"5787:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2993_$","typeString":"type(library Address)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:13","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2910,"src":"5787:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1672,"nodeType":"ExpressionStatement","src":"5787:71:13"}]}}]},"documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"5063:514:13","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1680,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:13","nodeType":"FunctionDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:13","nodeType":"VariableDeclaration","scope":1680,"src":"5614:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1642,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"data","nameLocation":"5646:4:13","nodeType":"VariableDeclaration","scope":1680,"src":"5633:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1644,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:13"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[],"src":"5661:0:13"},"scope":1695,"src":"5582:342:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1693,"nodeType":"Block","src":"6149:86:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1684,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:13","memberName":"value","nodeType":"MemberAccess","src":"6163:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1692,"nodeType":"IfStatement","src":"6159:70:13","trueBody":{"id":1691,"nodeType":"Block","src":"6178:51:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1688,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"6199:17:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1690,"nodeType":"RevertStatement","src":"6192:26:13"}]}}]},"documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"5930:178:13","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1694,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:13","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[],"src":"6138:2:13"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[],"src":"6149:0:13"},"scope":1695,"src":"6113:122:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1696,"src":"496:5741:13","usedErrors":[1421,1426,1431,1434],"usedEvents":[]}],"src":"114:6124:13"},"id":13},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1705]},"id":1706,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1697,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"134:79:14","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1705,"linearizedBaseContracts":[1705],"name":"IBeacon","nameLocation":"224:7:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"238:168:14","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1704,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:14","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[],"src":"434:2:14"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1704,"src":"460:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:14"},"scope":1705,"src":"411:58:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1706,"src":"214:257:14","usedErrors":[],"usedEvents":[]}],"src":"108:364:14"},"id":14},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3023],"ERC20":[2220],"IERC20":[2298],"IERC20Errors":[1306],"IERC20Metadata":[2324]},"id":2221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1707,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1709,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2221,"sourceUnit":2299,"src":"131:36:15","symbolAliases":[{"foreign":{"id":1708,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"139:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1711,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2221,"sourceUnit":2325,"src":"168:63:15","symbolAliases":[{"foreign":{"id":1710,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"176:14:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1713,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2221,"sourceUnit":3024,"src":"232:48:15","symbolAliases":[{"foreign":{"id":1712,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"240:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1715,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2221,"sourceUnit":1402,"src":"281:65:15","symbolAliases":[{"foreign":{"id":1714,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"289:12:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1717,"name":"Context","nameLocations":["1133:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"1133:7:15"},"id":1718,"nodeType":"InheritanceSpecifier","src":"1133:7:15"},{"baseName":{"id":1719,"name":"IERC20","nameLocations":["1142:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"1142:6:15"},"id":1720,"nodeType":"InheritanceSpecifier","src":"1142:6:15"},{"baseName":{"id":1721,"name":"IERC20Metadata","nameLocations":["1150:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":2324,"src":"1150:14:15"},"id":1722,"nodeType":"InheritanceSpecifier","src":"1150:14:15"},{"baseName":{"id":1723,"name":"IERC20Errors","nameLocations":["1166:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1306,"src":"1166:12:15"},"id":1724,"nodeType":"InheritanceSpecifier","src":"1166:12:15"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"348:757:15","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":2220,"linearizedBaseContracts":[2220,1306,2324,2298,3023],"name":"ERC20","nameLocation":"1124:5:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1728,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:15","nodeType":"VariableDeclaration","scope":2220,"src":"1185:53:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1727,"keyName":"account","keyNameLocation":"1201:7:15","keyType":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1734,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:15","nodeType":"VariableDeclaration","scope":2220,"src":"1245:83:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1733,"keyName":"account","keyNameLocation":"1261:7:15","keyType":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1732,"keyName":"spender","keyNameLocation":"1288:7:15","keyType":{"id":1730,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1736,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:15","nodeType":"VariableDeclaration","scope":2220,"src":"1335:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1738,"mutability":"mutable","name":"_name","nameLocation":"1385:5:15","nodeType":"VariableDeclaration","scope":2220,"src":"1370:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1737,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1740,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:15","nodeType":"VariableDeclaration","scope":2220,"src":"1396:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1739,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1756,"nodeType":"Block","src":"1657:57:15","statements":[{"expression":{"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1748,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"1667:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1749,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"1675:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1751,"nodeType":"ExpressionStatement","src":"1667:13:15"},{"expression":{"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1752,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"1690:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1753,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"1700:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1755,"nodeType":"ExpressionStatement","src":"1690:17:15"}]},"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"1425:171:15","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1757,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"name_","nameLocation":"1627:5:15","nodeType":"VariableDeclaration","scope":1757,"src":"1613:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1742,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1745,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:15","nodeType":"VariableDeclaration","scope":1757,"src":"1634:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1744,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:15"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[],"src":"1657:0:15"},"scope":2220,"src":"1601:113:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2311],"body":{"id":1765,"nodeType":"Block","src":"1839:29:15","statements":[{"expression":{"id":1763,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"1856:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1762,"id":1764,"nodeType":"Return","src":"1849:12:15"}]},"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"1720:54:15","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:15","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"1792:2:15"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1766,"src":"1824:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1760,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:15"},"scope":2220,"src":"1779:89:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2317],"body":{"id":1774,"nodeType":"Block","src":"2043:31:15","statements":[{"expression":{"id":1772,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"2060:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1771,"id":1773,"nodeType":"Return","src":"2053:14:15"}]},"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"1874:102:15","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1775,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:15","nodeType":"FunctionDefinition","parameters":{"id":1768,"nodeType":"ParameterList","parameters":[],"src":"1996:2:15"},"returnParameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1775,"src":"2028:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1769,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:15"},"scope":2220,"src":"1981:93:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2323],"body":{"id":1783,"nodeType":"Block","src":"2763:26:15","statements":[{"expression":{"hexValue":"3138","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1780,"id":1782,"nodeType":"Return","src":"2773:9:15"}]},"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"2080:622:15","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1784,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:15","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[],"src":"2724:2:15"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1784,"src":"2756:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1778,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:15"},"scope":2220,"src":"2707:82:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2247],"body":{"id":1792,"nodeType":"Block","src":"2910:36:15","statements":[{"expression":{"id":1790,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2927:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1789,"id":1791,"nodeType":"Return","src":"2920:19:15"}]},"documentation":{"id":1785,"nodeType":"StructuredDocumentation","src":"2795:49:15","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1793,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:15","nodeType":"FunctionDefinition","parameters":{"id":1786,"nodeType":"ParameterList","parameters":[],"src":"2869:2:15"},"returnParameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1793,"src":"2901:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:15"},"scope":2220,"src":"2849:97:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2255],"body":{"id":1805,"nodeType":"Block","src":"3078:42:15","statements":[{"expression":{"baseExpression":{"id":1801,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3095:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1803,"indexExpression":{"id":1802,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"3105:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1800,"id":1804,"nodeType":"Return","src":"3088:25:15"}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"2952:47:15","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:15","nodeType":"FunctionDefinition","parameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"account","nameLocation":"3031:7:15","nodeType":"VariableDeclaration","scope":1806,"src":"3023:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:15"},"returnParameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"3069:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:15"},"scope":2220,"src":"3004:116:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2265],"body":{"id":1829,"nodeType":"Block","src":"3390:103:15","statements":[{"assignments":[1817],"declarations":[{"constant":false,"id":1817,"mutability":"mutable","name":"owner","nameLocation":"3408:5:15","nodeType":"VariableDeclaration","scope":1829,"src":"3400:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1820,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1818,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"3416:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:15"},{"expression":{"arguments":[{"id":1822,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"3448:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1823,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3455:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"3459:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1821,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"3438:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1826,"nodeType":"ExpressionStatement","src":"3438:27:15"},{"expression":{"hexValue":"74727565","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1815,"id":1828,"nodeType":"Return","src":"3475:11:15"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"3126:184:15","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1830,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:15","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"to","nameLocation":"3341:2:15","nodeType":"VariableDeclaration","scope":1830,"src":"3333:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"value","nameLocation":"3353:5:15","nodeType":"VariableDeclaration","scope":1830,"src":"3345:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:15"},"returnParameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1830,"src":"3384:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1813,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:15"},"scope":2220,"src":"3315:178:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2275],"body":{"id":1846,"nodeType":"Block","src":"3640:51:15","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1840,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"3657:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1842,"indexExpression":{"id":1841,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"3669:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1844,"indexExpression":{"id":1843,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"3676:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1839,"id":1845,"nodeType":"Return","src":"3650:34:15"}]},"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"3499:47:15","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1847,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:15","nodeType":"FunctionDefinition","parameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"owner","nameLocation":"3578:5:15","nodeType":"VariableDeclaration","scope":1847,"src":"3570:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1832,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1835,"mutability":"mutable","name":"spender","nameLocation":"3593:7:15","nodeType":"VariableDeclaration","scope":1847,"src":"3585:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:15"},"returnParameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1847,"src":"3631:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:15"},"scope":2220,"src":"3551:140:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2285],"body":{"id":1870,"nodeType":"Block","src":"4077:107:15","statements":[{"assignments":[1858],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"owner","nameLocation":"4095:5:15","nodeType":"VariableDeclaration","scope":1870,"src":"4087:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1857,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1861,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1859,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"4103:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:15"},{"expression":{"arguments":[{"id":1863,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4134:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1864,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"4141:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"4150:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1862,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2111,2171],"referencedDeclaration":2111,"src":"4125:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1867,"nodeType":"ExpressionStatement","src":"4125:31:15"},{"expression":{"hexValue":"74727565","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1856,"id":1869,"nodeType":"Return","src":"4166:11:15"}]},"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"3697:296:15","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:15","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"spender","nameLocation":"4023:7:15","nodeType":"VariableDeclaration","scope":1871,"src":"4015:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"value","nameLocation":"4040:5:15","nodeType":"VariableDeclaration","scope":1871,"src":"4032:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:15"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"4071:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1854,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:15"},"scope":2220,"src":"3998:186:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2297],"body":{"id":1902,"nodeType":"Block","src":"4869:151:15","statements":[{"assignments":[1884],"declarations":[{"constant":false,"id":1884,"mutability":"mutable","name":"spender","nameLocation":"4887:7:15","nodeType":"VariableDeclaration","scope":1902,"src":"4879:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1883,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1887,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1885,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"4897:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:15"},{"expression":{"arguments":[{"id":1889,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"4935:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1890,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"4941:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4950:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1888,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4919:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1893,"nodeType":"ExpressionStatement","src":"4919:37:15"},{"expression":{"arguments":[{"id":1895,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"4976:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"4982:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4986:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1894,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"4966:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1899,"nodeType":"ExpressionStatement","src":"4966:26:15"},{"expression":{"hexValue":"74727565","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1882,"id":1901,"nodeType":"Return","src":"5002:11:15"}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"4190:581:15","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1903,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:15","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"from","nameLocation":"4806:4:15","nodeType":"VariableDeclaration","scope":1903,"src":"4798:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"to","nameLocation":"4820:2:15","nodeType":"VariableDeclaration","scope":1903,"src":"4812:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"value","nameLocation":"4832:5:15","nodeType":"VariableDeclaration","scope":1903,"src":"4824:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:15"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1903,"src":"4863:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1880,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:15"},"scope":2220,"src":"4776:244:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1949,"nodeType":"Block","src":"5462:231:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1913,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"5476:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:15","typeDescriptions":{}}},"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1927,"nodeType":"IfStatement","src":"5472:86:15","trueBody":{"id":1926,"nodeType":"Block","src":"5496:62:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:15","typeDescriptions":{}}},"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1919,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"5517:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1925,"nodeType":"RevertStatement","src":"5510:37:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1928,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"5571:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:15","typeDescriptions":{}}},"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1942,"nodeType":"IfStatement","src":"5567:86:15","trueBody":{"id":1941,"nodeType":"Block","src":"5589:64:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:15","typeDescriptions":{}}},"id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1934,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"5610:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1940,"nodeType":"RevertStatement","src":"5603:39:15"}]}},{"expression":{"arguments":[{"id":1944,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"5670:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1945,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"5676:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"5680:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1943,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"5662:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1948,"nodeType":"ExpressionStatement","src":"5662:24:15"}]},"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"5026:362:15","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1950,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:15","nodeType":"FunctionDefinition","parameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"from","nameLocation":"5420:4:15","nodeType":"VariableDeclaration","scope":1950,"src":"5412:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1905,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1908,"mutability":"mutable","name":"to","nameLocation":"5434:2:15","nodeType":"VariableDeclaration","scope":1950,"src":"5426:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1910,"mutability":"mutable","name":"value","nameLocation":"5446:5:15","nodeType":"VariableDeclaration","scope":1950,"src":"5438:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:15"},"returnParameters":{"id":1912,"nodeType":"ParameterList","parameters":[],"src":"5462:0:15"},"scope":2220,"src":"5393:300:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2026,"nodeType":"Block","src":"6083:1032:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1960,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"6097:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:15","typeDescriptions":{}}},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1997,"nodeType":"Block","src":"6271:362:15","statements":[{"assignments":[1972],"declarations":[{"constant":false,"id":1972,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:15","nodeType":"VariableDeclaration","scope":1997,"src":"6285:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1976,"initialValue":{"baseExpression":{"id":1973,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"6307:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1975,"indexExpression":{"id":1974,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"6317:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"6340:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"6354:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1987,"nodeType":"IfStatement","src":"6336:115:15","trueBody":{"id":1986,"nodeType":"Block","src":"6361:90:15","statements":[{"errorCall":{"arguments":[{"id":1981,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"6411:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1982,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"6417:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"6430:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1980,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6386:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1985,"nodeType":"RevertStatement","src":"6379:57:15"}]}},{"id":1996,"nodeType":"UncheckedBlock","src":"6464:159:15","statements":[{"expression":{"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1988,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"6571:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1990,"indexExpression":{"id":1989,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"6581:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"6589:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"6603:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1995,"nodeType":"ExpressionStatement","src":"6571:37:15"}]}]},"id":1998,"nodeType":"IfStatement","src":"6093:540:15","trueBody":{"id":1970,"nodeType":"Block","src":"6117:148:15","statements":[{"expression":{"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1966,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"6233:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"6249:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1969,"nodeType":"ExpressionStatement","src":"6233:21:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"6647:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2000,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:15","typeDescriptions":{}}},"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2018,"nodeType":"Block","src":"6862:206:15","statements":[{"id":2017,"nodeType":"UncheckedBlock","src":"6876:182:15","statements":[{"expression":{"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2011,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"7021:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2013,"indexExpression":{"id":2012,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"7031:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"7038:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2016,"nodeType":"ExpressionStatement","src":"7021:22:15"}]}]},"id":2019,"nodeType":"IfStatement","src":"6643:425:15","trueBody":{"id":2010,"nodeType":"Block","src":"6665:191:15","statements":[{"id":2009,"nodeType":"UncheckedBlock","src":"6679:167:15","statements":[{"expression":{"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2005,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"6810:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"6826:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2008,"nodeType":"ExpressionStatement","src":"6810:21:15"}]}]}},{"eventCall":{"arguments":[{"id":2021,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"7092:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2022,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"7098:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"7102:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2020,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"7083:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2025,"nodeType":"EmitStatement","src":"7078:30:15"}]},"documentation":{"id":1951,"nodeType":"StructuredDocumentation","src":"5699:304:15","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":2027,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:15","nodeType":"FunctionDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"from","nameLocation":"6033:4:15","nodeType":"VariableDeclaration","scope":2027,"src":"6025:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1952,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"to","nameLocation":"6047:2:15","nodeType":"VariableDeclaration","scope":2027,"src":"6039:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1954,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"value","nameLocation":"6059:5:15","nodeType":"VariableDeclaration","scope":2027,"src":"6051:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:15"},"returnParameters":{"id":1959,"nodeType":"ParameterList","parameters":[],"src":"6083:0:15"},"scope":2220,"src":"6008:1107:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2059,"nodeType":"Block","src":"7514:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2035,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7528:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:15","typeDescriptions":{}}},"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2049,"nodeType":"IfStatement","src":"7524:91:15","trueBody":{"id":2048,"nodeType":"Block","src":"7551:64:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:15","typeDescriptions":{}}},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2041,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7572:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2047,"nodeType":"RevertStatement","src":"7565:39:15"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:15","typeDescriptions":{}}},"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2055,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7644:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"7653:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2050,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7624:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2058,"nodeType":"ExpressionStatement","src":"7624:35:15"}]},"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"7121:332:15","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:15","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"account","nameLocation":"7481:7:15","nodeType":"VariableDeclaration","scope":2060,"src":"7473:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2029,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"value","nameLocation":"7498:5:15","nodeType":"VariableDeclaration","scope":2060,"src":"7490:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:15"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[],"src":"7514:0:15"},"scope":2220,"src":"7458:208:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"8040:150:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2068,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"8054:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:15","typeDescriptions":{}}},"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2082,"nodeType":"IfStatement","src":"8050:89:15","trueBody":{"id":2081,"nodeType":"Block","src":"8077:62:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:15","typeDescriptions":{}}},"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2074,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"8098:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2080,"nodeType":"RevertStatement","src":"8091:37:15"}]}},{"expression":{"arguments":[{"id":2084,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"8156:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2085,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:15","typeDescriptions":{}}},"id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"8177:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2083,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8148:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2091,"nodeType":"ExpressionStatement","src":"8148:35:15"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"7672:307:15","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:15","nodeType":"FunctionDefinition","parameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"account","nameLocation":"8007:7:15","nodeType":"VariableDeclaration","scope":2093,"src":"7999:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2062,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2065,"mutability":"mutable","name":"value","nameLocation":"8024:5:15","nodeType":"VariableDeclaration","scope":2093,"src":"8016:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:15"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[],"src":"8040:0:15"},"scope":2220,"src":"7984:206:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2110,"nodeType":"Block","src":"8800:54:15","statements":[{"expression":{"arguments":[{"id":2104,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"8819:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2105,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"8826:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"8835:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2103,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2111,2171],"referencedDeclaration":2171,"src":"8810:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2109,"nodeType":"ExpressionStatement","src":"8810:37:15"}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"8196:525:15","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2111,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:15","nodeType":"FunctionDefinition","parameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"owner","nameLocation":"8752:5:15","nodeType":"VariableDeclaration","scope":2111,"src":"8744:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2095,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"spender","nameLocation":"8767:7:15","nodeType":"VariableDeclaration","scope":2111,"src":"8759:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2100,"mutability":"mutable","name":"value","nameLocation":"8784:5:15","nodeType":"VariableDeclaration","scope":2111,"src":"8776:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:15"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[],"src":"8800:0:15"},"scope":2220,"src":"8726:128:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2170,"nodeType":"Block","src":"9799:334:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2123,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"9813:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2124,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:15","typeDescriptions":{}}},"id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2137,"nodeType":"IfStatement","src":"9809:89:15","trueBody":{"id":2136,"nodeType":"Block","src":"9834:64:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:15","typeDescriptions":{}}},"id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2129,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"9855:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2135,"nodeType":"RevertStatement","src":"9848:39:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2138,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"9911:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2139,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:15","typeDescriptions":{}}},"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2152,"nodeType":"IfStatement","src":"9907:90:15","trueBody":{"id":2151,"nodeType":"Block","src":"9934:63:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2145,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:15","typeDescriptions":{}}},"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2144,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9955:19:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2150,"nodeType":"RevertStatement","src":"9948:38:15"}]}},{"expression":{"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2153,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"10006:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2156,"indexExpression":{"id":2154,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"10018:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2157,"indexExpression":{"id":2155,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"10025:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"10036:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2160,"nodeType":"ExpressionStatement","src":"10006:35:15"},{"condition":{"id":2161,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"10055:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2169,"nodeType":"IfStatement","src":"10051:76:15","trueBody":{"id":2168,"nodeType":"Block","src":"10066:61:15","statements":[{"eventCall":{"arguments":[{"id":2163,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"10094:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2164,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"10101:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"10110:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2162,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"10085:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2167,"nodeType":"EmitStatement","src":"10080:36:15"}]}}]},"documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"8860:836:15","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":2171,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:15","nodeType":"FunctionDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"owner","nameLocation":"9727:5:15","nodeType":"VariableDeclaration","scope":2171,"src":"9719:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2113,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"spender","nameLocation":"9742:7:15","nodeType":"VariableDeclaration","scope":2171,"src":"9734:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"9759:5:15","nodeType":"VariableDeclaration","scope":2171,"src":"9751:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2120,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:15","nodeType":"VariableDeclaration","scope":2171,"src":"9766:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2119,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:15"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[],"src":"9799:0:15"},"scope":2220,"src":"9701:432:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2218,"nodeType":"Block","src":"10504:387:15","statements":[{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:15","nodeType":"VariableDeclaration","scope":2218,"src":"10514:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2187,"initialValue":{"arguments":[{"id":2184,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"10551:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2185,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"10558:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2183,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10541:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2188,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"10580:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2189,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:15","memberName":"max","nodeType":"MemberAccess","src":"10599:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2217,"nodeType":"IfStatement","src":"10576:309:15","trueBody":{"id":2216,"nodeType":"Block","src":"10618:267:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"10636:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"10655:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2205,"nodeType":"IfStatement","src":"10632:130:15","trueBody":{"id":2204,"nodeType":"Block","src":"10662:100:15","statements":[{"errorCall":{"arguments":[{"id":2199,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"10714:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2200,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"10723:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"10741:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2198,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"10687:26:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2203,"nodeType":"RevertStatement","src":"10680:67:15"}]}},{"id":2215,"nodeType":"UncheckedBlock","src":"10775:100:15","statements":[{"expression":{"arguments":[{"id":2207,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"10812:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2208,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"10819:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2209,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"10828:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"10847:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2206,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2111,2171],"referencedDeclaration":2171,"src":"10803:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2214,"nodeType":"ExpressionStatement","src":"10803:57:15"}]}]}}]},"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"10139:271:15","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:15","nodeType":"FunctionDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"owner","nameLocation":"10448:5:15","nodeType":"VariableDeclaration","scope":2219,"src":"10440:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"spender","nameLocation":"10463:7:15","nodeType":"VariableDeclaration","scope":2219,"src":"10455:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"value","nameLocation":"10480:5:15","nodeType":"VariableDeclaration","scope":2219,"src":"10472:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:15"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[],"src":"10504:0:15"},"scope":2220,"src":"10415:476:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2221,"src":"1106:9787:15","usedErrors":[1276,1281,1286,1295,1300,1305],"usedEvents":[2232,2241]}],"src":"105:10789:15"},"id":15},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2298]},"id":2299,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2222,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"132:71:16","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2298,"linearizedBaseContracts":[2298],"name":"IERC20","nameLocation":"214:6:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2224,"nodeType":"StructuredDocumentation","src":"227:158:16","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2232,"name":"Transfer","nameLocation":"396:8:16","nodeType":"EventDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:16","nodeType":"VariableDeclaration","scope":2232,"src":"405:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2225,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2228,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:16","nodeType":"VariableDeclaration","scope":2232,"src":"427:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2230,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:16","nodeType":"VariableDeclaration","scope":2232,"src":"447:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:16"},"src":"390:72:16"},{"anonymous":false,"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"468:148:16","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2241,"name":"Approval","nameLocation":"627:8:16","nodeType":"EventDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:16","nodeType":"VariableDeclaration","scope":2241,"src":"636:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2234,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2237,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:16","nodeType":"VariableDeclaration","scope":2241,"src":"659:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2239,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:16","nodeType":"VariableDeclaration","scope":2241,"src":"684:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:16"},"src":"621:78:16"},{"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"705:65:16","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2247,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:16","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[],"src":"795:2:16"},"returnParameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2247,"src":"821:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:16"},"scope":2298,"src":"775:55:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"836:71:16","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2255,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:16","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"account","nameLocation":"939:7:16","nodeType":"VariableDeclaration","scope":2255,"src":"931:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:16"},"returnParameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2255,"src":"971:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:16"},"scope":2298,"src":"912:68:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"986:213:16","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2265,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:16","nodeType":"FunctionDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"to","nameLocation":"1230:2:16","nodeType":"VariableDeclaration","scope":2265,"src":"1222:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"value","nameLocation":"1242:5:16","nodeType":"VariableDeclaration","scope":2265,"src":"1234:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:16"},"returnParameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2265,"src":"1267:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2262,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:16"},"scope":2298,"src":"1204:69:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"1279:264:16","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2275,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:16","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"owner","nameLocation":"1575:5:16","nodeType":"VariableDeclaration","scope":2275,"src":"1567:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"spender","nameLocation":"1590:7:16","nodeType":"VariableDeclaration","scope":2275,"src":"1582:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:16"},"returnParameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2275,"src":"1622:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:16"},"scope":2298,"src":"1548:83:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2276,"nodeType":"StructuredDocumentation","src":"1637:667:16","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2285,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:16","nodeType":"FunctionDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"spender","nameLocation":"2334:7:16","nodeType":"VariableDeclaration","scope":2285,"src":"2326:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"value","nameLocation":"2351:5:16","nodeType":"VariableDeclaration","scope":2285,"src":"2343:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:16"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2285,"src":"2376:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2282,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:16"},"scope":2298,"src":"2309:73:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"2388:297:16","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2297,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:16","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"from","nameLocation":"2720:4:16","nodeType":"VariableDeclaration","scope":2297,"src":"2712:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"to","nameLocation":"2734:2:16","nodeType":"VariableDeclaration","scope":2297,"src":"2726:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2292,"mutability":"mutable","name":"value","nameLocation":"2746:5:16","nodeType":"VariableDeclaration","scope":2297,"src":"2738:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:16"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2297,"src":"2771:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2294,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:16"},"scope":2298,"src":"2690:87:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2299,"src":"204:2575:16","usedErrors":[],"usedEvents":[2232,2241]}],"src":"106:2674:16"},"id":16},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2298],"IERC20Metadata":[2324]},"id":2325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2300,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2325,"sourceUnit":2299,"src":"151:37:17","symbolAliases":[{"foreign":{"id":2301,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"159:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2304,"name":"IERC20","nameLocations":["306:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"306:6:17"},"id":2305,"nodeType":"InheritanceSpecifier","src":"306:6:17"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"190:87:17","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2324,"linearizedBaseContracts":[2324,2298],"name":"IERC20Metadata","nameLocation":"288:14:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"319:54:17","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2311,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:17","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[],"src":"391:2:17"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2311,"src":"417:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2308,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:17"},"scope":2324,"src":"378:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"438:56:17","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2317,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:17","nodeType":"FunctionDefinition","parameters":{"id":2313,"nodeType":"ParameterList","parameters":[],"src":"514:2:17"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2317,"src":"540:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2314,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:17"},"scope":2324,"src":"499:56:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"561:65:17","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2323,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:17","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[],"src":"648:2:17"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2323,"src":"674:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2320,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:17"},"scope":2324,"src":"631:50:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2325,"src":"278:405:17","usedErrors":[],"usedEvents":[2232,2241]}],"src":"125:559:17"},"id":17},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[1225],"IERC20":[2298],"SafeERC20":[2733]},"id":2734,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2326,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2734,"sourceUnit":2299,"src":"141:37:18","symbolAliases":[{"foreign":{"id":2327,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"149:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":2330,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2734,"sourceUnit":1226,"src":"179:58:18","symbolAliases":[{"foreign":{"id":2329,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"187:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"239:458:18","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2733,"linearizedBaseContracts":[2733],"name":"SafeERC20","nameLocation":"706:9:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"722:65:18","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":2336,"name":"SafeERC20FailedOperation","nameLocation":"798:24:18","nodeType":"ErrorDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"token","nameLocation":"831:5:18","nodeType":"VariableDeclaration","scope":2336,"src":"823:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:18"},"src":"792:46:18"},{"documentation":{"id":2337,"nodeType":"StructuredDocumentation","src":"844:71:18","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":2345,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:18","nodeType":"ErrorDefinition","parameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"spender","nameLocation":"967:7:18","nodeType":"VariableDeclaration","scope":2345,"src":"959:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:18","nodeType":"VariableDeclaration","scope":2345,"src":"976:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2343,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:18","nodeType":"VariableDeclaration","scope":2345,"src":"1002:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:18"},"src":"920:109:18"},{"body":{"id":2368,"nodeType":"Block","src":"1291:88:18","statements":[{"expression":{"arguments":[{"id":2357,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1321:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2360,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1343:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:18","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2265,"src":"1343:14:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2362,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"1360:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"1364:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2358,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:18","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2356,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"1301:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2367,"nodeType":"ExpressionStatement","src":"1301:71:18"}]},"documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"1035:179:18","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2369,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:18","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"token","nameLocation":"1248:5:18","nodeType":"VariableDeclaration","scope":2369,"src":"1241:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},"typeName":{"id":2348,"nodeType":"UserDefinedTypeName","pathNode":{"id":2347,"name":"IERC20","nameLocations":["1241:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"1241:6:18"},"referencedDeclaration":2298,"src":"1241:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"to","nameLocation":"1263:2:18","nodeType":"VariableDeclaration","scope":2369,"src":"1255:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2350,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"value","nameLocation":"1275:5:18","nodeType":"VariableDeclaration","scope":2369,"src":"1267:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:18"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[],"src":"1291:0:18"},"scope":2733,"src":"1219:160:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2395,"nodeType":"Block","src":"1708:98:18","statements":[{"expression":{"arguments":[{"id":2383,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"1738:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2386,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"1760:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:18","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2297,"src":"1760:18:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":2388,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"1781:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2389,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"1787:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"1791:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":2384,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:18","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2382,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"1718:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2394,"nodeType":"ExpressionStatement","src":"1718:81:18"}]},"documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"1385:228:18","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":2396,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:18","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"token","nameLocation":"1651:5:18","nodeType":"VariableDeclaration","scope":2396,"src":"1644:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},"typeName":{"id":2372,"nodeType":"UserDefinedTypeName","pathNode":{"id":2371,"name":"IERC20","nameLocations":["1644:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"1644:6:18"},"referencedDeclaration":2298,"src":"1644:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"from","nameLocation":"1666:4:18","nodeType":"VariableDeclaration","scope":2396,"src":"1658:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"to","nameLocation":"1680:2:18","nodeType":"VariableDeclaration","scope":2396,"src":"1672:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2376,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"value","nameLocation":"1692:5:18","nodeType":"VariableDeclaration","scope":2396,"src":"1684:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:18"},"returnParameters":{"id":2381,"nodeType":"ParameterList","parameters":[],"src":"1708:0:18"},"scope":2733,"src":"1618:188:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2426,"nodeType":"Block","src":"2548:139:18","statements":[{"assignments":[2408],"declarations":[{"constant":false,"id":2408,"mutability":"mutable","name":"oldAllowance","nameLocation":"2566:12:18","nodeType":"VariableDeclaration","scope":2426,"src":"2558:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2417,"initialValue":{"arguments":[{"arguments":[{"id":2413,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2605:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2733","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2733","typeString":"library SafeERC20"}],"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2597:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2411,"name":"address","nodeType":"ElementaryTypeName","src":"2597:7:18","typeDescriptions":{}}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2597:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2415,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"2612:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2409,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"2581:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2587:9:18","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2275,"src":"2581:15:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2581:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2558:62:18"},{"expression":{"arguments":[{"id":2419,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"2643:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},{"id":2420,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"2650:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2421,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"2659:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"2674:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2659:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2418,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"2630:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2425,"nodeType":"ExpressionStatement","src":"2630:50:18"}]},"documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"1812:645:18","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2427,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2471:21:18","nodeType":"FunctionDefinition","parameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"token","nameLocation":"2500:5:18","nodeType":"VariableDeclaration","scope":2427,"src":"2493:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},"typeName":{"id":2399,"nodeType":"UserDefinedTypeName","pathNode":{"id":2398,"name":"IERC20","nameLocations":["2493:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"2493:6:18"},"referencedDeclaration":2298,"src":"2493:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"spender","nameLocation":"2515:7:18","nodeType":"VariableDeclaration","scope":2427,"src":"2507:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"value","nameLocation":"2532:5:18","nodeType":"VariableDeclaration","scope":2427,"src":"2524:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2524:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2492:46:18"},"returnParameters":{"id":2406,"nodeType":"ParameterList","parameters":[],"src":"2548:0:18"},"scope":2733,"src":"2462:225:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2469,"nodeType":"Block","src":"3453:370:18","statements":[{"id":2468,"nodeType":"UncheckedBlock","src":"3463:354:18","statements":[{"assignments":[2439],"declarations":[{"constant":false,"id":2439,"mutability":"mutable","name":"currentAllowance","nameLocation":"3495:16:18","nodeType":"VariableDeclaration","scope":2468,"src":"3487:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"3487:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2448,"initialValue":{"arguments":[{"arguments":[{"id":2444,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3538:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2733","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2733","typeString":"library SafeERC20"}],"id":2443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3530:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2442,"name":"address","nodeType":"ElementaryTypeName","src":"3530:7:18","typeDescriptions":{}}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3530:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2446,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"3545:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2440,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"3514:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3520:9:18","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2275,"src":"3514:15:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3487:66:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"3571:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2450,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"3590:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3571:36:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2459,"nodeType":"IfStatement","src":"3567:160:18","trueBody":{"id":2458,"nodeType":"Block","src":"3609:118:18","statements":[{"errorCall":{"arguments":[{"id":2453,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"3667:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2454,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"3676:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2455,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"3694:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2452,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"3634:32:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3634:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2457,"nodeType":"RevertStatement","src":"3627:85:18"}]}},{"expression":{"arguments":[{"id":2461,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"3753:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},{"id":2462,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"3760:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2463,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"3769:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2464,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"3788:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3769:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2460,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"3740:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3740:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2467,"nodeType":"ExpressionStatement","src":"3740:66:18"}]}]},"documentation":{"id":2428,"nodeType":"StructuredDocumentation","src":"2693:657:18","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3364:21:18","nodeType":"FunctionDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"token","nameLocation":"3393:5:18","nodeType":"VariableDeclaration","scope":2470,"src":"3386:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},"typeName":{"id":2430,"nodeType":"UserDefinedTypeName","pathNode":{"id":2429,"name":"IERC20","nameLocations":["3386:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"3386:6:18"},"referencedDeclaration":2298,"src":"3386:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"spender","nameLocation":"3408:7:18","nodeType":"VariableDeclaration","scope":2470,"src":"3400:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2432,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3425:17:18","nodeType":"VariableDeclaration","scope":2470,"src":"3417:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3417:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3385:58:18"},"returnParameters":{"id":2437,"nodeType":"ParameterList","parameters":[],"src":"3453:0:18"},"scope":2733,"src":"3355:468:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2516,"nodeType":"Block","src":"4477:303:18","statements":[{"assignments":[2482],"declarations":[{"constant":false,"id":2482,"mutability":"mutable","name":"approvalCall","nameLocation":"4500:12:18","nodeType":"VariableDeclaration","scope":2516,"src":"4487:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2481,"name":"bytes","nodeType":"ElementaryTypeName","src":"4487:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2491,"initialValue":{"arguments":[{"expression":{"id":2485,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"4530:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4536:7:18","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2285,"src":"4530:13:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2487,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"4546:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"4555:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2489,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4545:16:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2483,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4515:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4519:10:18","memberName":"encodeCall","nodeType":"MemberAccess","src":"4515:14:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4487:75:18"},{"condition":{"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:45:18","subExpression":{"arguments":[{"id":2493,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"4602:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},{"id":2494,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"4609:12:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2492,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"4578:23:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2515,"nodeType":"IfStatement","src":"4573:201:18","trueBody":{"id":2514,"nodeType":"Block","src":"4624:150:18","statements":[{"expression":{"arguments":[{"id":2498,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"4658:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2501,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"4680:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4686:7:18","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2285,"src":"4680:13:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2503,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"4696:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4705:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4695:12:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":2499,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4665:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4669:10:18","memberName":"encodeCall","nodeType":"MemberAccess","src":"4665:14:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4665:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2497,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"4638:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4638:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2508,"nodeType":"ExpressionStatement","src":"4638:71:18"},{"expression":{"arguments":[{"id":2510,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"4743:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},{"id":2511,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"4750:12:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2509,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"4723:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2513,"nodeType":"ExpressionStatement","src":"4723:40:18"}]}}]},"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"3829:566:18","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4409:12:18","nodeType":"FunctionDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"token","nameLocation":"4429:5:18","nodeType":"VariableDeclaration","scope":2517,"src":"4422:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},"typeName":{"id":2473,"nodeType":"UserDefinedTypeName","pathNode":{"id":2472,"name":"IERC20","nameLocations":["4422:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"4422:6:18"},"referencedDeclaration":2298,"src":"4422:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"spender","nameLocation":"4444:7:18","nodeType":"VariableDeclaration","scope":2517,"src":"4436:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2475,"name":"address","nodeType":"ElementaryTypeName","src":"4436:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"value","nameLocation":"4461:5:18","nodeType":"VariableDeclaration","scope":2517,"src":"4453:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4453:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4421:46:18"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"4477:0:18"},"scope":2733,"src":"4400:380:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2559,"nodeType":"Block","src":"5227:219:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"5241:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5244:4:18","memberName":"code","nodeType":"MemberAccess","src":"5241:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5249:6:18","memberName":"length","nodeType":"MemberAccess","src":"5241:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5259:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5241:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5327:39:18","subExpression":{"arguments":[{"id":2544,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"5350:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5354:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2546,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"5361:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2542,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"5328:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5334:15:18","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"5328:21:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2557,"nodeType":"IfStatement","src":"5323:117:18","trueBody":{"id":2556,"nodeType":"Block","src":"5368:72:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2552,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"5422:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}],"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5414:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"5414:7:18","typeDescriptions":{}}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2549,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"5389:24:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2555,"nodeType":"RevertStatement","src":"5382:47:18"}]}},"id":2558,"nodeType":"IfStatement","src":"5237:203:18","trueBody":{"id":2541,"nodeType":"Block","src":"5262:55:18","statements":[{"expression":{"arguments":[{"id":2536,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"5289:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},{"id":2537,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"5296:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5300:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2535,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"5276:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2540,"nodeType":"ExpressionStatement","src":"5276:30:18"}]}}]},"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"4786:333:18","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2560,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5133:22:18","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"token","nameLocation":"5165:5:18","nodeType":"VariableDeclaration","scope":2560,"src":"5156:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"},"typeName":{"id":2520,"nodeType":"UserDefinedTypeName","pathNode":{"id":2519,"name":"IERC1363","nameLocations":["5156:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":1225,"src":"5156:8:18"},"referencedDeclaration":1225,"src":"5156:8:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"to","nameLocation":"5180:2:18","nodeType":"VariableDeclaration","scope":2560,"src":"5172:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2522,"name":"address","nodeType":"ElementaryTypeName","src":"5172:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"value","nameLocation":"5192:5:18","nodeType":"VariableDeclaration","scope":2560,"src":"5184:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"5184:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"data","nameLocation":"5212:4:18","nodeType":"VariableDeclaration","scope":2560,"src":"5199:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2526,"name":"bytes","nodeType":"ElementaryTypeName","src":"5199:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5155:62:18"},"returnParameters":{"id":2529,"nodeType":"ParameterList","parameters":[],"src":"5227:0:18"},"scope":2733,"src":"5124:322:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2606,"nodeType":"Block","src":"5965:239:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2575,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"5979:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5982:4:18","memberName":"code","nodeType":"MemberAccess","src":"5979:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5987:6:18","memberName":"length","nodeType":"MemberAccess","src":"5979:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5997:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5979:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6075:49:18","subExpression":{"arguments":[{"id":2590,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"6102:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"6108:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"6112:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"6119:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2588,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"6076:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6082:19:18","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":1202,"src":"6076:25:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6076:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2604,"nodeType":"IfStatement","src":"6071:127:18","trueBody":{"id":2603,"nodeType":"Block","src":"6126:72:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2599,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"6180:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}],"id":2598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6172:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2597,"name":"address","nodeType":"ElementaryTypeName","src":"6172:7:18","typeDescriptions":{}}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6172:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2596,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"6147:24:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6147:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2602,"nodeType":"RevertStatement","src":"6140:47:18"}]}},"id":2605,"nodeType":"IfStatement","src":"5975:223:18","trueBody":{"id":2587,"nodeType":"Block","src":"6000:65:18","statements":[{"expression":{"arguments":[{"id":2581,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"6031:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},{"id":2582,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"6038:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"6044:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"6048:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2580,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"6014:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6014:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2586,"nodeType":"ExpressionStatement","src":"6014:40:18"}]}}]},"documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"5452:341:18","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2607,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5807:26:18","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"token","nameLocation":"5852:5:18","nodeType":"VariableDeclaration","scope":2607,"src":"5843:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"},"typeName":{"id":2563,"nodeType":"UserDefinedTypeName","pathNode":{"id":2562,"name":"IERC1363","nameLocations":["5843:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":1225,"src":"5843:8:18"},"referencedDeclaration":1225,"src":"5843:8:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2566,"mutability":"mutable","name":"from","nameLocation":"5875:4:18","nodeType":"VariableDeclaration","scope":2607,"src":"5867:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2565,"name":"address","nodeType":"ElementaryTypeName","src":"5867:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"to","nameLocation":"5897:2:18","nodeType":"VariableDeclaration","scope":2607,"src":"5889:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2567,"name":"address","nodeType":"ElementaryTypeName","src":"5889:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"value","nameLocation":"5917:5:18","nodeType":"VariableDeclaration","scope":2607,"src":"5909:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"5909:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"data","nameLocation":"5945:4:18","nodeType":"VariableDeclaration","scope":2607,"src":"5932:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2571,"name":"bytes","nodeType":"ElementaryTypeName","src":"5932:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5833:122:18"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[],"src":"5965:0:18"},"scope":2733,"src":"5798:406:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2649,"nodeType":"Block","src":"6971:218:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2620,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"6985:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6988:4:18","memberName":"code","nodeType":"MemberAccess","src":"6985:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6993:6:18","memberName":"length","nodeType":"MemberAccess","src":"6985:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7003:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6985:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7071:38:18","subExpression":{"arguments":[{"id":2634,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7093:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"7097:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2636,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"7104:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2632,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"7072:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7078:14:18","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":1224,"src":"7072:20:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2647,"nodeType":"IfStatement","src":"7067:116:18","trueBody":{"id":2646,"nodeType":"Block","src":"7111:72:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2642,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"7165:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}],"id":2641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7157:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2640,"name":"address","nodeType":"ElementaryTypeName","src":"7157:7:18","typeDescriptions":{}}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7157:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2639,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"7132:24:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7132:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2645,"nodeType":"RevertStatement","src":"7125:47:18"}]}},"id":2648,"nodeType":"IfStatement","src":"6981:202:18","trueBody":{"id":2631,"nodeType":"Block","src":"7006:55:18","statements":[{"expression":{"arguments":[{"id":2626,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"7033:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},{"id":2627,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7040:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"7044:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2625,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"7020:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7020:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2630,"nodeType":"ExpressionStatement","src":"7020:30:18"}]}}]},"documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"6210:654:18","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":2650,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6878:21:18","nodeType":"FunctionDefinition","parameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"token","nameLocation":"6909:5:18","nodeType":"VariableDeclaration","scope":2650,"src":"6900:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"},"typeName":{"id":2610,"nodeType":"UserDefinedTypeName","pathNode":{"id":2609,"name":"IERC1363","nameLocations":["6900:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":1225,"src":"6900:8:18"},"referencedDeclaration":1225,"src":"6900:8:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"to","nameLocation":"6924:2:18","nodeType":"VariableDeclaration","scope":2650,"src":"6916:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"value","nameLocation":"6936:5:18","nodeType":"VariableDeclaration","scope":2650,"src":"6928:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"6928:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2617,"mutability":"mutable","name":"data","nameLocation":"6956:4:18","nodeType":"VariableDeclaration","scope":2650,"src":"6943:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2616,"name":"bytes","nodeType":"ElementaryTypeName","src":"6943:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6899:62:18"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[],"src":"6971:0:18"},"scope":2733,"src":"6869:320:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2690,"nodeType":"Block","src":"7756:650:18","statements":[{"assignments":[2660],"declarations":[{"constant":false,"id":2660,"mutability":"mutable","name":"returnSize","nameLocation":"7774:10:18","nodeType":"VariableDeclaration","scope":2690,"src":"7766:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"7766:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2661,"nodeType":"VariableDeclarationStatement","src":"7766:18:18"},{"assignments":[2663],"declarations":[{"constant":false,"id":2663,"mutability":"mutable","name":"returnValue","nameLocation":"7802:11:18","nodeType":"VariableDeclaration","scope":2690,"src":"7794:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2662,"name":"uint256","nodeType":"ElementaryTypeName","src":"7794:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2664,"nodeType":"VariableDeclarationStatement","src":"7794:19:18"},{"AST":{"nativeSrc":"7848:396:18","nodeType":"YulBlock","src":"7848:396:18","statements":[{"nativeSrc":"7862:75:18","nodeType":"YulVariableDeclaration","src":"7862:75:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"7882:3:18","nodeType":"YulIdentifier","src":"7882:3:18"},"nativeSrc":"7882:5:18","nodeType":"YulFunctionCall","src":"7882:5:18"},{"name":"token","nativeSrc":"7889:5:18","nodeType":"YulIdentifier","src":"7889:5:18"},{"kind":"number","nativeSrc":"7896:1:18","nodeType":"YulLiteral","src":"7896:1:18","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"7903:4:18","nodeType":"YulIdentifier","src":"7903:4:18"},{"kind":"number","nativeSrc":"7909:4:18","nodeType":"YulLiteral","src":"7909:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7899:3:18","nodeType":"YulIdentifier","src":"7899:3:18"},"nativeSrc":"7899:15:18","nodeType":"YulFunctionCall","src":"7899:15:18"},{"arguments":[{"name":"data","nativeSrc":"7922:4:18","nodeType":"YulIdentifier","src":"7922:4:18"}],"functionName":{"name":"mload","nativeSrc":"7916:5:18","nodeType":"YulIdentifier","src":"7916:5:18"},"nativeSrc":"7916:11:18","nodeType":"YulFunctionCall","src":"7916:11:18"},{"kind":"number","nativeSrc":"7929:1:18","nodeType":"YulLiteral","src":"7929:1:18","type":"","value":"0"},{"kind":"number","nativeSrc":"7932:4:18","nodeType":"YulLiteral","src":"7932:4:18","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"7877:4:18","nodeType":"YulIdentifier","src":"7877:4:18"},"nativeSrc":"7877:60:18","nodeType":"YulFunctionCall","src":"7877:60:18"},"variables":[{"name":"success","nativeSrc":"7866:7:18","nodeType":"YulTypedName","src":"7866:7:18","type":""}]},{"body":{"nativeSrc":"7998:157:18","nodeType":"YulBlock","src":"7998:157:18","statements":[{"nativeSrc":"8016:22:18","nodeType":"YulVariableDeclaration","src":"8016:22:18","value":{"arguments":[{"kind":"number","nativeSrc":"8033:4:18","nodeType":"YulLiteral","src":"8033:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8027:5:18","nodeType":"YulIdentifier","src":"8027:5:18"},"nativeSrc":"8027:11:18","nodeType":"YulFunctionCall","src":"8027:11:18"},"variables":[{"name":"ptr","nativeSrc":"8020:3:18","nodeType":"YulTypedName","src":"8020:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8070:3:18","nodeType":"YulIdentifier","src":"8070:3:18"},{"kind":"number","nativeSrc":"8075:1:18","nodeType":"YulLiteral","src":"8075:1:18","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8078:14:18","nodeType":"YulIdentifier","src":"8078:14:18"},"nativeSrc":"8078:16:18","nodeType":"YulFunctionCall","src":"8078:16:18"}],"functionName":{"name":"returndatacopy","nativeSrc":"8055:14:18","nodeType":"YulIdentifier","src":"8055:14:18"},"nativeSrc":"8055:40:18","nodeType":"YulFunctionCall","src":"8055:40:18"},"nativeSrc":"8055:40:18","nodeType":"YulExpressionStatement","src":"8055:40:18"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8119:3:18","nodeType":"YulIdentifier","src":"8119:3:18"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8124:14:18","nodeType":"YulIdentifier","src":"8124:14:18"},"nativeSrc":"8124:16:18","nodeType":"YulFunctionCall","src":"8124:16:18"}],"functionName":{"name":"revert","nativeSrc":"8112:6:18","nodeType":"YulIdentifier","src":"8112:6:18"},"nativeSrc":"8112:29:18","nodeType":"YulFunctionCall","src":"8112:29:18"},"nativeSrc":"8112:29:18","nodeType":"YulExpressionStatement","src":"8112:29:18"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"7989:7:18","nodeType":"YulIdentifier","src":"7989:7:18"}],"functionName":{"name":"iszero","nativeSrc":"7982:6:18","nodeType":"YulIdentifier","src":"7982:6:18"},"nativeSrc":"7982:15:18","nodeType":"YulFunctionCall","src":"7982:15:18"},"nativeSrc":"7979:176:18","nodeType":"YulIf","src":"7979:176:18"},{"nativeSrc":"8168:30:18","nodeType":"YulAssignment","src":"8168:30:18","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8182:14:18","nodeType":"YulIdentifier","src":"8182:14:18"},"nativeSrc":"8182:16:18","nodeType":"YulFunctionCall","src":"8182:16:18"},"variableNames":[{"name":"returnSize","nativeSrc":"8168:10:18","nodeType":"YulIdentifier","src":"8168:10:18"}]},{"nativeSrc":"8211:23:18","nodeType":"YulAssignment","src":"8211:23:18","value":{"arguments":[{"kind":"number","nativeSrc":"8232:1:18","nodeType":"YulLiteral","src":"8232:1:18","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8226:5:18","nodeType":"YulIdentifier","src":"8226:5:18"},"nativeSrc":"8226:8:18","nodeType":"YulFunctionCall","src":"8226:8:18"},"variableNames":[{"name":"returnValue","nativeSrc":"8211:11:18","nodeType":"YulIdentifier","src":"8211:11:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2656,"isOffset":false,"isSlot":false,"src":"7903:4:18","valueSize":1},{"declaration":2656,"isOffset":false,"isSlot":false,"src":"7922:4:18","valueSize":1},{"declaration":2660,"isOffset":false,"isSlot":false,"src":"8168:10:18","valueSize":1},{"declaration":2663,"isOffset":false,"isSlot":false,"src":"8211:11:18","valueSize":1},{"declaration":2654,"isOffset":false,"isSlot":false,"src":"7889:5:18","valueSize":1}],"flags":["memory-safe"],"id":2665,"nodeType":"InlineAssembly","src":"7823:421:18"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2666,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"8258:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8272:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8258:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2677,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"8310:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8325:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8310:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8258:68:18","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2671,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"8284:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}],"id":2670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8276:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"8276:7:18","typeDescriptions":{}}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8276:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8291:4:18","memberName":"code","nodeType":"MemberAccess","src":"8276:19:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8296:6:18","memberName":"length","nodeType":"MemberAccess","src":"8276:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8306:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8276:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2689,"nodeType":"IfStatement","src":"8254:146:18","trueBody":{"id":2688,"nodeType":"Block","src":"8328:72:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2684,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"8382:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}],"id":2683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8374:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2682,"name":"address","nodeType":"ElementaryTypeName","src":"8374:7:18","typeDescriptions":{}}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2681,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"8349:24:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8349:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2687,"nodeType":"RevertStatement","src":"8342:47:18"}]}}]},"documentation":{"id":2651,"nodeType":"StructuredDocumentation","src":"7195:486:18","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":2691,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7695:19:18","nodeType":"FunctionDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"token","nameLocation":"7722:5:18","nodeType":"VariableDeclaration","scope":2691,"src":"7715:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},"typeName":{"id":2653,"nodeType":"UserDefinedTypeName","pathNode":{"id":2652,"name":"IERC20","nameLocations":["7715:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"7715:6:18"},"referencedDeclaration":2298,"src":"7715:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2656,"mutability":"mutable","name":"data","nameLocation":"7742:4:18","nodeType":"VariableDeclaration","scope":2691,"src":"7729:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2655,"name":"bytes","nodeType":"ElementaryTypeName","src":"7729:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7714:33:18"},"returnParameters":{"id":2658,"nodeType":"ParameterList","parameters":[],"src":"7756:0:18"},"scope":2733,"src":"7686:720:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2731,"nodeType":"Block","src":"8997:391:18","statements":[{"assignments":[2703],"declarations":[{"constant":false,"id":2703,"mutability":"mutable","name":"success","nameLocation":"9012:7:18","nodeType":"VariableDeclaration","scope":2731,"src":"9007:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2702,"name":"bool","nodeType":"ElementaryTypeName","src":"9007:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2704,"nodeType":"VariableDeclarationStatement","src":"9007:12:18"},{"assignments":[2706],"declarations":[{"constant":false,"id":2706,"mutability":"mutable","name":"returnSize","nameLocation":"9037:10:18","nodeType":"VariableDeclaration","scope":2731,"src":"9029:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2705,"name":"uint256","nodeType":"ElementaryTypeName","src":"9029:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2707,"nodeType":"VariableDeclarationStatement","src":"9029:18:18"},{"assignments":[2709],"declarations":[{"constant":false,"id":2709,"mutability":"mutable","name":"returnValue","nameLocation":"9065:11:18","nodeType":"VariableDeclaration","scope":2731,"src":"9057:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"9057:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2710,"nodeType":"VariableDeclarationStatement","src":"9057:19:18"},{"AST":{"nativeSrc":"9111:174:18","nodeType":"YulBlock","src":"9111:174:18","statements":[{"nativeSrc":"9125:71:18","nodeType":"YulAssignment","src":"9125:71:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9141:3:18","nodeType":"YulIdentifier","src":"9141:3:18"},"nativeSrc":"9141:5:18","nodeType":"YulFunctionCall","src":"9141:5:18"},{"name":"token","nativeSrc":"9148:5:18","nodeType":"YulIdentifier","src":"9148:5:18"},{"kind":"number","nativeSrc":"9155:1:18","nodeType":"YulLiteral","src":"9155:1:18","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9162:4:18","nodeType":"YulIdentifier","src":"9162:4:18"},{"kind":"number","nativeSrc":"9168:4:18","nodeType":"YulLiteral","src":"9168:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9158:3:18","nodeType":"YulIdentifier","src":"9158:3:18"},"nativeSrc":"9158:15:18","nodeType":"YulFunctionCall","src":"9158:15:18"},{"arguments":[{"name":"data","nativeSrc":"9181:4:18","nodeType":"YulIdentifier","src":"9181:4:18"}],"functionName":{"name":"mload","nativeSrc":"9175:5:18","nodeType":"YulIdentifier","src":"9175:5:18"},"nativeSrc":"9175:11:18","nodeType":"YulFunctionCall","src":"9175:11:18"},{"kind":"number","nativeSrc":"9188:1:18","nodeType":"YulLiteral","src":"9188:1:18","type":"","value":"0"},{"kind":"number","nativeSrc":"9191:4:18","nodeType":"YulLiteral","src":"9191:4:18","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9136:4:18","nodeType":"YulIdentifier","src":"9136:4:18"},"nativeSrc":"9136:60:18","nodeType":"YulFunctionCall","src":"9136:60:18"},"variableNames":[{"name":"success","nativeSrc":"9125:7:18","nodeType":"YulIdentifier","src":"9125:7:18"}]},{"nativeSrc":"9209:30:18","nodeType":"YulAssignment","src":"9209:30:18","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9223:14:18","nodeType":"YulIdentifier","src":"9223:14:18"},"nativeSrc":"9223:16:18","nodeType":"YulFunctionCall","src":"9223:16:18"},"variableNames":[{"name":"returnSize","nativeSrc":"9209:10:18","nodeType":"YulIdentifier","src":"9209:10:18"}]},{"nativeSrc":"9252:23:18","nodeType":"YulAssignment","src":"9252:23:18","value":{"arguments":[{"kind":"number","nativeSrc":"9273:1:18","nodeType":"YulLiteral","src":"9273:1:18","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9267:5:18","nodeType":"YulIdentifier","src":"9267:5:18"},"nativeSrc":"9267:8:18","nodeType":"YulFunctionCall","src":"9267:8:18"},"variableNames":[{"name":"returnValue","nativeSrc":"9252:11:18","nodeType":"YulIdentifier","src":"9252:11:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2697,"isOffset":false,"isSlot":false,"src":"9162:4:18","valueSize":1},{"declaration":2697,"isOffset":false,"isSlot":false,"src":"9181:4:18","valueSize":1},{"declaration":2706,"isOffset":false,"isSlot":false,"src":"9209:10:18","valueSize":1},{"declaration":2709,"isOffset":false,"isSlot":false,"src":"9252:11:18","valueSize":1},{"declaration":2703,"isOffset":false,"isSlot":false,"src":"9125:7:18","valueSize":1},{"declaration":2695,"isOffset":false,"isSlot":false,"src":"9148:5:18","valueSize":1}],"flags":["memory-safe"],"id":2711,"nodeType":"InlineAssembly","src":"9086:199:18"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2712,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9301:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2713,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"9313:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9327:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9313:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2724,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"9364:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9364:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9313:67:18","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2718,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"9339:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"9331:7:18","typeDescriptions":{}}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9346:4:18","memberName":"code","nodeType":"MemberAccess","src":"9331:19:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9351:6:18","memberName":"length","nodeType":"MemberAccess","src":"9331:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9331:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9312:69:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9301:80:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2701,"id":2730,"nodeType":"Return","src":"9294:87:18"}]},"documentation":{"id":2692,"nodeType":"StructuredDocumentation","src":"8412:491:18","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":2732,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8917:23:18","nodeType":"FunctionDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"token","nameLocation":"8948:5:18","nodeType":"VariableDeclaration","scope":2732,"src":"8941:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},"typeName":{"id":2694,"nodeType":"UserDefinedTypeName","pathNode":{"id":2693,"name":"IERC20","nameLocations":["8941:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"8941:6:18"},"referencedDeclaration":2298,"src":"8941:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"data","nameLocation":"8968:4:18","nodeType":"VariableDeclaration","scope":2732,"src":"8955:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2696,"name":"bytes","nodeType":"ElementaryTypeName","src":"8955:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8940:33:18"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2732,"src":"8991:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2699,"name":"bool","nodeType":"ElementaryTypeName","src":"8991:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8990:6:18"},"scope":2733,"src":"8908:480:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2734,"src":"698:8692:18","usedErrors":[2336,2345],"usedEvents":[]}],"src":"115:9276:18"},"id":18},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2993],"Errors":[3045]},"id":2994,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2735,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":2737,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2994,"sourceUnit":3046,"src":"127:36:19","symbolAliases":[{"foreign":{"id":2736,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"135:6:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"165:67:19","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2993,"linearizedBaseContracts":[2993],"name":"Address","nameLocation":"241:7:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"255:75:19","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2743,"name":"AddressEmptyCode","nameLocation":"341:16:19","nodeType":"ErrorDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"target","nameLocation":"366:6:19","nodeType":"VariableDeclaration","scope":2743,"src":"358:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:19"},"src":"335:39:19"},{"body":{"id":2790,"nodeType":"Block","src":"1361:294:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2753,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2993","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2993","typeString":"library Address"}],"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2751,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:19","typeDescriptions":{}}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:19","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2756,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"1399:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2770,"nodeType":"IfStatement","src":"1371:125:19","trueBody":{"id":2769,"nodeType":"Block","src":"1407:89:19","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2763,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2993","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2993","typeString":"library Address"}],"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:19","typeDescriptions":{}}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:19","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2766,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"1478:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2758,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"1428:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3045_$","typeString":"type(library Errors)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:19","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3033,"src":"1428:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2768,"nodeType":"RevertStatement","src":"1421:64:19"}]}},{"assignments":[2772,2774],"declarations":[{"constant":false,"id":2772,"mutability":"mutable","name":"success","nameLocation":"1512:7:19","nodeType":"VariableDeclaration","scope":2790,"src":"1507:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2771,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:19","nodeType":"VariableDeclaration","scope":2790,"src":"1521:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2773,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2781,"initialValue":{"arguments":[{"hexValue":"","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2775,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"1548:9:19","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:19","memberName":"call","nodeType":"MemberAccess","src":"1548:14:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2777,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"1570:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:19"},{"condition":{"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:19","subExpression":{"id":2782,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"1596:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2789,"nodeType":"IfStatement","src":"1591:58:19","trueBody":{"id":2788,"nodeType":"Block","src":"1605:44:19","statements":[{"expression":{"arguments":[{"id":2785,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"1627:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2784,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"1619:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2787,"nodeType":"ExpressionStatement","src":"1619:19:19"}]}}]},"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"380:905:19","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2791,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:19","nodeType":"FunctionDefinition","parameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:19","nodeType":"VariableDeclaration","scope":2791,"src":"1309:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2745,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:19","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2748,"mutability":"mutable","name":"amount","nameLocation":"1344:6:19","nodeType":"VariableDeclaration","scope":2791,"src":"1336:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:19"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[],"src":"1361:0:19"},"scope":2993,"src":"1290:365:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2807,"nodeType":"Block","src":"2589:62:19","statements":[{"expression":{"arguments":[{"id":2802,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"2628:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2803,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"2636:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2801,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"2606:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2800,"id":2806,"nodeType":"Return","src":"2599:45:19"}]},"documentation":{"id":2792,"nodeType":"StructuredDocumentation","src":"1661:834:19","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:19","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"target","nameLocation":"2530:6:19","nodeType":"VariableDeclaration","scope":2808,"src":"2522:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2793,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2796,"mutability":"mutable","name":"data","nameLocation":"2551:4:19","nodeType":"VariableDeclaration","scope":2808,"src":"2538:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2795,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:19"},"returnParameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2808,"src":"2575:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2798,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:19"},"scope":2993,"src":"2500:151:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2857,"nodeType":"Block","src":"3088:294:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2822,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2993","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2993","typeString":"library Address"}],"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:19","typeDescriptions":{}}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:19","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"3126:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2839,"nodeType":"IfStatement","src":"3098:123:19","trueBody":{"id":2838,"nodeType":"Block","src":"3133:88:19","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2832,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2993","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2993","typeString":"library Address"}],"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:19","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:19","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"3204:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2827,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"3154:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3045_$","typeString":"type(library Errors)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:19","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3033,"src":"3154:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2837,"nodeType":"RevertStatement","src":"3147:63:19"}]}},{"assignments":[2841,2843],"declarations":[{"constant":false,"id":2841,"mutability":"mutable","name":"success","nameLocation":"3236:7:19","nodeType":"VariableDeclaration","scope":2857,"src":"3231:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2840,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:19","nodeType":"VariableDeclaration","scope":2857,"src":"3245:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2842,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2850,"initialValue":{"arguments":[{"id":2848,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"3298:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2844,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"3272:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:19","memberName":"call","nodeType":"MemberAccess","src":"3272:11:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"3291:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:19"},{"expression":{"arguments":[{"id":2852,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"3347:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2853,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"3355:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2854,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"3364:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2851,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"3320:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2819,"id":2856,"nodeType":"Return","src":"3313:62:19"}]},"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"2657:313:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:19","nodeType":"FunctionDefinition","parameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"target","nameLocation":"3014:6:19","nodeType":"VariableDeclaration","scope":2858,"src":"3006:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2810,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2813,"mutability":"mutable","name":"data","nameLocation":"3035:4:19","nodeType":"VariableDeclaration","scope":2858,"src":"3022:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2812,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2815,"mutability":"mutable","name":"value","nameLocation":"3049:5:19","nodeType":"VariableDeclaration","scope":2858,"src":"3041:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:19"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2858,"src":"3074:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2817,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:19"},"scope":2993,"src":"2975:407:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2883,"nodeType":"Block","src":"3621:154:19","statements":[{"assignments":[2869,2871],"declarations":[{"constant":false,"id":2869,"mutability":"mutable","name":"success","nameLocation":"3637:7:19","nodeType":"VariableDeclaration","scope":2883,"src":"3632:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2868,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2871,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:19","nodeType":"VariableDeclaration","scope":2883,"src":"3646:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2870,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2876,"initialValue":{"arguments":[{"id":2874,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"3691:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2872,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"3673:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:19","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:19","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:19"},{"expression":{"arguments":[{"id":2878,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"3740:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2879,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"3748:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2880,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"3757:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2877,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"3713:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2867,"id":2882,"nodeType":"Return","src":"3706:62:19"}]},"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"3388:128:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2884,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:19","nodeType":"FunctionDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"target","nameLocation":"3557:6:19","nodeType":"VariableDeclaration","scope":2884,"src":"3549:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2860,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2863,"mutability":"mutable","name":"data","nameLocation":"3578:4:19","nodeType":"VariableDeclaration","scope":2884,"src":"3565:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2862,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:19"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2884,"src":"3607:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2865,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:19"},"scope":2993,"src":"3521:254:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2909,"nodeType":"Block","src":"4013:156:19","statements":[{"assignments":[2895,2897],"declarations":[{"constant":false,"id":2895,"mutability":"mutable","name":"success","nameLocation":"4029:7:19","nodeType":"VariableDeclaration","scope":2909,"src":"4024:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2894,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:19","nodeType":"VariableDeclaration","scope":2909,"src":"4038:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2896,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2902,"initialValue":{"arguments":[{"id":2900,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"4085:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2898,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"4065:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:19","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:19","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:19"},{"expression":{"arguments":[{"id":2904,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"4134:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2905,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"4142:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2906,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4151:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2903,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"4107:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2893,"id":2908,"nodeType":"Return","src":"4100:62:19"}]},"documentation":{"id":2885,"nodeType":"StructuredDocumentation","src":"3781:130:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2910,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:19","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"target","nameLocation":"3954:6:19","nodeType":"VariableDeclaration","scope":2910,"src":"3946:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2886,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"data","nameLocation":"3975:4:19","nodeType":"VariableDeclaration","scope":2910,"src":"3962:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2888,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:19"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2910,"src":"3999:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2891,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:19"},"scope":2993,"src":"3916:253:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2949,"nodeType":"Block","src":"4595:424:19","statements":[{"condition":{"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:19","subExpression":{"id":2922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"4610:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2947,"nodeType":"Block","src":"4669:344:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2929,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"4857:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:19","memberName":"length","nodeType":"MemberAccess","src":"4857:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2933,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"4883:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:19","memberName":"code","nodeType":"MemberAccess","src":"4883:11:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:19","memberName":"length","nodeType":"MemberAccess","src":"4883:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2944,"nodeType":"IfStatement","src":"4853:119:19","trueBody":{"id":2943,"nodeType":"Block","src":"4908:64:19","statements":[{"errorCall":{"arguments":[{"id":2940,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"4950:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2939,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"4933:16:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2942,"nodeType":"RevertStatement","src":"4926:31:19"}]}},{"expression":{"id":2945,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"4992:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2921,"id":2946,"nodeType":"Return","src":"4985:17:19"}]},"id":2948,"nodeType":"IfStatement","src":"4605:408:19","trueBody":{"id":2928,"nodeType":"Block","src":"4619:44:19","statements":[{"expression":{"arguments":[{"id":2925,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"4641:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2924,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"4633:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2927,"nodeType":"ExpressionStatement","src":"4633:19:19"}]}}]},"documentation":{"id":2911,"nodeType":"StructuredDocumentation","src":"4175:257:19","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":2950,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:19","nodeType":"FunctionDefinition","parameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"target","nameLocation":"4490:6:19","nodeType":"VariableDeclaration","scope":2950,"src":"4482:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2912,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"success","nameLocation":"4511:7:19","nodeType":"VariableDeclaration","scope":2950,"src":"4506:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2914,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2917,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:19","nodeType":"VariableDeclaration","scope":2950,"src":"4528:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2916,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:19"},"returnParameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2950,"src":"4581:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2919,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:19"},"scope":2993,"src":"4437:582:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2971,"nodeType":"Block","src":"5323:122:19","statements":[{"condition":{"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:19","subExpression":{"id":2960,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"5338:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2969,"nodeType":"Block","src":"5397:42:19","statements":[{"expression":{"id":2967,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"5418:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2959,"id":2968,"nodeType":"Return","src":"5411:17:19"}]},"id":2970,"nodeType":"IfStatement","src":"5333:106:19","trueBody":{"id":2966,"nodeType":"Block","src":"5347:44:19","statements":[{"expression":{"arguments":[{"id":2963,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"5369:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2962,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"5361:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2965,"nodeType":"ExpressionStatement","src":"5361:19:19"}]}}]},"documentation":{"id":2951,"nodeType":"StructuredDocumentation","src":"5025:191:19","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":2972,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:19","nodeType":"FunctionDefinition","parameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"success","nameLocation":"5252:7:19","nodeType":"VariableDeclaration","scope":2972,"src":"5247:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2952,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2955,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:19","nodeType":"VariableDeclaration","scope":2972,"src":"5261:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2954,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:19"},"returnParameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2972,"src":"5309:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2957,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:19"},"scope":2993,"src":"5221:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2991,"nodeType":"Block","src":"5614:432:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2978,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"5690:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:19","memberName":"length","nodeType":"MemberAccess","src":"5690:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2989,"nodeType":"Block","src":"5989:51:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2984,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"6010:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3045_$","typeString":"type(library Errors)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6017:10:19","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":3036,"src":"6010:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6010:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2988,"nodeType":"RevertStatement","src":"6003:26:19"}]},"id":2990,"nodeType":"IfStatement","src":"5686:354:19","trueBody":{"id":2983,"nodeType":"Block","src":"5713:270:19","statements":[{"AST":{"nativeSrc":"5840:133:19","nodeType":"YulBlock","src":"5840:133:19","statements":[{"nativeSrc":"5858:40:19","nodeType":"YulVariableDeclaration","src":"5858:40:19","value":{"arguments":[{"name":"returndata","nativeSrc":"5887:10:19","nodeType":"YulIdentifier","src":"5887:10:19"}],"functionName":{"name":"mload","nativeSrc":"5881:5:19","nodeType":"YulIdentifier","src":"5881:5:19"},"nativeSrc":"5881:17:19","nodeType":"YulFunctionCall","src":"5881:17:19"},"variables":[{"name":"returndata_size","nativeSrc":"5862:15:19","nodeType":"YulTypedName","src":"5862:15:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5926:2:19","nodeType":"YulLiteral","src":"5926:2:19","type":"","value":"32"},{"name":"returndata","nativeSrc":"5930:10:19","nodeType":"YulIdentifier","src":"5930:10:19"}],"functionName":{"name":"add","nativeSrc":"5922:3:19","nodeType":"YulIdentifier","src":"5922:3:19"},"nativeSrc":"5922:19:19","nodeType":"YulFunctionCall","src":"5922:19:19"},{"name":"returndata_size","nativeSrc":"5943:15:19","nodeType":"YulIdentifier","src":"5943:15:19"}],"functionName":{"name":"revert","nativeSrc":"5915:6:19","nodeType":"YulIdentifier","src":"5915:6:19"},"nativeSrc":"5915:44:19","nodeType":"YulFunctionCall","src":"5915:44:19"},"nativeSrc":"5915:44:19","nodeType":"YulExpressionStatement","src":"5915:44:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":2975,"isOffset":false,"isSlot":false,"src":"5887:10:19","valueSize":1},{"declaration":2975,"isOffset":false,"isSlot":false,"src":"5930:10:19","valueSize":1}],"flags":["memory-safe"],"id":2982,"nodeType":"InlineAssembly","src":"5815:158:19"}]}}]},"documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"5451:103:19","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":2992,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:19","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:19","nodeType":"VariableDeclaration","scope":2992,"src":"5576:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2974,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:19"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[],"src":"5614:0:19"},"scope":2993,"src":"5559:487:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2994,"src":"233:5815:19","usedErrors":[2743],"usedEvents":[]}],"src":"101:5948:19"},"id":19},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3023]},"id":3024,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2995,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:20"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2996,"nodeType":"StructuredDocumentation","src":"127:496:20","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3023,"linearizedBaseContracts":[3023],"name":"Context","nameLocation":"642:7:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3004,"nodeType":"Block","src":"718:34:20","statements":[{"expression":{"expression":{"id":3001,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:20","memberName":"sender","nodeType":"MemberAccess","src":"735:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3000,"id":3003,"nodeType":"Return","src":"728:17:20"}]},"id":3005,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:20","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[],"src":"675:2:20"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3005,"src":"709:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2998,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:20"},"scope":3023,"src":"656:96:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3013,"nodeType":"Block","src":"825:32:20","statements":[{"expression":{"expression":{"id":3010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:20","memberName":"data","nodeType":"MemberAccess","src":"842:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3009,"id":3012,"nodeType":"Return","src":"835:15:20"}]},"id":3014,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:20","nodeType":"FunctionDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[],"src":"775:2:20"},"returnParameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3014,"src":"809:14:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3007,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:20"},"scope":3023,"src":"758:99:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3021,"nodeType":"Block","src":"935:25:20","statements":[{"expression":{"hexValue":"30","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3018,"id":3020,"nodeType":"Return","src":"945:8:20"}]},"id":3022,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:20","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[],"src":"892:2:20"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3022,"src":"926:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:20"},"scope":3023,"src":"863:97:20","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3024,"src":"624:338:20","usedErrors":[],"usedEvents":[]}],"src":"101:862:20"},"id":20},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[3045]},"id":3046,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3025,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":3026,"nodeType":"StructuredDocumentation","src":"126:284:21","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":3045,"linearizedBaseContracts":[3045],"name":"Errors","nameLocation":"419:6:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3027,"nodeType":"StructuredDocumentation","src":"432:94:21","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":3033,"name":"InsufficientBalance","nameLocation":"537:19:21","nodeType":"ErrorDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"balance","nameLocation":"565:7:21","nodeType":"VariableDeclaration","scope":3033,"src":"557:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3031,"mutability":"mutable","name":"needed","nameLocation":"582:6:21","nodeType":"VariableDeclaration","scope":3033,"src":"574:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:21"},"src":"531:59:21"},{"documentation":{"id":3034,"nodeType":"StructuredDocumentation","src":"596:89:21","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":3036,"name":"FailedCall","nameLocation":"696:10:21","nodeType":"ErrorDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[],"src":"706:2:21"},"src":"690:19:21"},{"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"715:46:21","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":3039,"name":"FailedDeployment","nameLocation":"772:16:21","nodeType":"ErrorDefinition","parameters":{"id":3038,"nodeType":"ParameterList","parameters":[],"src":"788:2:21"},"src":"766:25:21"},{"documentation":{"id":3040,"nodeType":"StructuredDocumentation","src":"797:58:21","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":3044,"name":"MissingPrecompile","nameLocation":"866:17:21","nodeType":"ErrorDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3044,"src":"884:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3041,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:21"},"src":"860:33:21"}],"scope":3046,"src":"411:484:21","usedErrors":[3033,3036,3039,3044],"usedEvents":[]}],"src":"100:796:21"},"id":21},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3097]},"id":3098,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3047,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"125:489:22","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3097,"linearizedBaseContracts":[3097],"name":"Panic","nameLocation":"665:5:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3049,"nodeType":"StructuredDocumentation","src":"677:36:22","text":"@dev generic / unspecified error"},"id":3052,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:22","nodeType":"VariableDeclaration","scope":3097,"src":"718:40:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3050,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3053,"nodeType":"StructuredDocumentation","src":"764:37:22","text":"@dev used by the assert() builtin"},"id":3056,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:22","nodeType":"VariableDeclaration","scope":3097,"src":"806:39:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3057,"nodeType":"StructuredDocumentation","src":"851:41:22","text":"@dev arithmetic underflow or overflow"},"id":3060,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:22","nodeType":"VariableDeclaration","scope":3097,"src":"897:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:22","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3061,"nodeType":"StructuredDocumentation","src":"950:35:22","text":"@dev division or modulo by zero"},"id":3064,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:22","nodeType":"VariableDeclaration","scope":3097,"src":"990:49:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:22","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3065,"nodeType":"StructuredDocumentation","src":"1045:30:22","text":"@dev enum conversion error"},"id":3068,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:22","nodeType":"VariableDeclaration","scope":3097,"src":"1080:54:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:22","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3069,"nodeType":"StructuredDocumentation","src":"1140:36:22","text":"@dev invalid encoding in storage"},"id":3072,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:22","nodeType":"VariableDeclaration","scope":3097,"src":"1181:55:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3070,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:22","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3073,"nodeType":"StructuredDocumentation","src":"1242:24:22","text":"@dev empty array pop"},"id":3076,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:22","nodeType":"VariableDeclaration","scope":3097,"src":"1271:48:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:22","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3077,"nodeType":"StructuredDocumentation","src":"1325:35:22","text":"@dev array out of bounds access"},"id":3080,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:22","nodeType":"VariableDeclaration","scope":3097,"src":"1365:52:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:22","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3081,"nodeType":"StructuredDocumentation","src":"1423:65:22","text":"@dev resource error (too large allocation or too large array)"},"id":3084,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:22","nodeType":"VariableDeclaration","scope":3097,"src":"1493:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:22","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"1546:42:22","text":"@dev calling invalid internal function"},"id":3088,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:22","nodeType":"VariableDeclaration","scope":3097,"src":"1593:58:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:22","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3095,"nodeType":"Block","src":"1819:151:22","statements":[{"AST":{"nativeSrc":"1854:110:22","nodeType":"YulBlock","src":"1854:110:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:22","nodeType":"YulLiteral","src":"1875:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:22","nodeType":"YulLiteral","src":"1881:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:22","nodeType":"YulIdentifier","src":"1868:6:22"},"nativeSrc":"1868:24:22","nodeType":"YulFunctionCall","src":"1868:24:22"},"nativeSrc":"1868:24:22","nodeType":"YulExpressionStatement","src":"1868:24:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:22","nodeType":"YulLiteral","src":"1912:4:22","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:22","nodeType":"YulIdentifier","src":"1918:4:22"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:22","nodeType":"YulIdentifier","src":"1905:6:22"},"nativeSrc":"1905:18:22","nodeType":"YulFunctionCall","src":"1905:18:22"},"nativeSrc":"1905:18:22","nodeType":"YulExpressionStatement","src":"1905:18:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:22","nodeType":"YulLiteral","src":"1943:4:22","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:22","nodeType":"YulLiteral","src":"1949:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:22","nodeType":"YulIdentifier","src":"1936:6:22"},"nativeSrc":"1936:18:22","nodeType":"YulFunctionCall","src":"1936:18:22"},"nativeSrc":"1936:18:22","nodeType":"YulExpressionStatement","src":"1936:18:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":3091,"isOffset":false,"isSlot":false,"src":"1918:4:22","valueSize":1}],"flags":["memory-safe"],"id":3094,"nodeType":"InlineAssembly","src":"1829:135:22"}]},"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"1658:113:22","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3096,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:22","nodeType":"FunctionDefinition","parameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"code","nameLocation":"1799:4:22","nodeType":"VariableDeclaration","scope":3096,"src":"1791:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:22"},"returnParameters":{"id":3093,"nodeType":"ParameterList","parameters":[],"src":"1819:0:22"},"scope":3097,"src":"1776:194:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3098,"src":"657:1315:22","usedErrors":[],"usedEvents":[]}],"src":"99:1874:22"},"id":22},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3221]},"id":3222,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3099,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3100,"nodeType":"StructuredDocumentation","src":"219:1187:23","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3221,"linearizedBaseContracts":[3221],"name":"StorageSlot","nameLocation":"1415:11:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3103,"members":[{"constant":false,"id":3102,"mutability":"mutable","name":"value","nameLocation":"1470:5:23","nodeType":"VariableDeclaration","scope":3103,"src":"1462:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3101,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:23","nodeType":"StructDefinition","scope":3221,"src":"1433:49:23","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3106,"members":[{"constant":false,"id":3105,"mutability":"mutable","name":"value","nameLocation":"1522:5:23","nodeType":"VariableDeclaration","scope":3106,"src":"1517:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3104,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:23","nodeType":"StructDefinition","scope":3221,"src":"1488:46:23","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3109,"members":[{"constant":false,"id":3108,"mutability":"mutable","name":"value","nameLocation":"1577:5:23","nodeType":"VariableDeclaration","scope":3109,"src":"1569:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:23","nodeType":"StructDefinition","scope":3221,"src":"1540:49:23","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3112,"members":[{"constant":false,"id":3111,"mutability":"mutable","name":"value","nameLocation":"1632:5:23","nodeType":"VariableDeclaration","scope":3112,"src":"1624:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:23","nodeType":"StructDefinition","scope":3221,"src":"1595:49:23","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3115,"members":[{"constant":false,"id":3114,"mutability":"mutable","name":"value","nameLocation":"1685:5:23","nodeType":"VariableDeclaration","scope":3115,"src":"1678:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3113,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:23","nodeType":"StructDefinition","scope":3221,"src":"1650:47:23","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3118,"members":[{"constant":false,"id":3117,"mutability":"mutable","name":"value","nameLocation":"1738:5:23","nodeType":"VariableDeclaration","scope":3118,"src":"1731:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3116,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:23","nodeType":"StructDefinition","scope":3221,"src":"1703:47:23","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3121,"members":[{"constant":false,"id":3120,"mutability":"mutable","name":"value","nameLocation":"1789:5:23","nodeType":"VariableDeclaration","scope":3121,"src":"1783:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3119,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:23","nodeType":"StructDefinition","scope":3221,"src":"1756:45:23","visibility":"public"},{"body":{"id":3131,"nodeType":"Block","src":"1983:79:23","statements":[{"AST":{"nativeSrc":"2018:38:23","nodeType":"YulBlock","src":"2018:38:23","statements":[{"nativeSrc":"2032:14:23","nodeType":"YulAssignment","src":"2032:14:23","value":{"name":"slot","nativeSrc":"2042:4:23","nodeType":"YulIdentifier","src":"2042:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:23","nodeType":"YulIdentifier","src":"2032:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3128,"isOffset":false,"isSlot":true,"src":"2032:6:23","suffix":"slot","valueSize":1},{"declaration":3124,"isOffset":false,"isSlot":false,"src":"2042:4:23","valueSize":1}],"flags":["memory-safe"],"id":3130,"nodeType":"InlineAssembly","src":"1993:63:23"}]},"documentation":{"id":3122,"nodeType":"StructuredDocumentation","src":"1807:87:23","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3132,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:23","nodeType":"FunctionDefinition","parameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"slot","nameLocation":"1931:4:23","nodeType":"VariableDeclaration","scope":3132,"src":"1923:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:23"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"r","nameLocation":"1980:1:23","nodeType":"VariableDeclaration","scope":3132,"src":"1960:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3103_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3127,"nodeType":"UserDefinedTypeName","pathNode":{"id":3126,"name":"AddressSlot","nameLocations":["1960:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3103,"src":"1960:11:23"},"referencedDeclaration":3103,"src":"1960:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3103_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:23"},"scope":3221,"src":"1899:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3142,"nodeType":"Block","src":"2243:79:23","statements":[{"AST":{"nativeSrc":"2278:38:23","nodeType":"YulBlock","src":"2278:38:23","statements":[{"nativeSrc":"2292:14:23","nodeType":"YulAssignment","src":"2292:14:23","value":{"name":"slot","nativeSrc":"2302:4:23","nodeType":"YulIdentifier","src":"2302:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:23","nodeType":"YulIdentifier","src":"2292:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3139,"isOffset":false,"isSlot":true,"src":"2292:6:23","suffix":"slot","valueSize":1},{"declaration":3135,"isOffset":false,"isSlot":false,"src":"2302:4:23","valueSize":1}],"flags":["memory-safe"],"id":3141,"nodeType":"InlineAssembly","src":"2253:63:23"}]},"documentation":{"id":3133,"nodeType":"StructuredDocumentation","src":"2068:86:23","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3143,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:23","nodeType":"FunctionDefinition","parameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"slot","nameLocation":"2191:4:23","nodeType":"VariableDeclaration","scope":3143,"src":"2183:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:23"},"returnParameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"r","nameLocation":"2240:1:23","nodeType":"VariableDeclaration","scope":3143,"src":"2220:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3106_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3138,"nodeType":"UserDefinedTypeName","pathNode":{"id":3137,"name":"BooleanSlot","nameLocations":["2220:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3106,"src":"2220:11:23"},"referencedDeclaration":3106,"src":"2220:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3106_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:23"},"scope":3221,"src":"2159:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3153,"nodeType":"Block","src":"2503:79:23","statements":[{"AST":{"nativeSrc":"2538:38:23","nodeType":"YulBlock","src":"2538:38:23","statements":[{"nativeSrc":"2552:14:23","nodeType":"YulAssignment","src":"2552:14:23","value":{"name":"slot","nativeSrc":"2562:4:23","nodeType":"YulIdentifier","src":"2562:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:23","nodeType":"YulIdentifier","src":"2552:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3150,"isOffset":false,"isSlot":true,"src":"2552:6:23","suffix":"slot","valueSize":1},{"declaration":3146,"isOffset":false,"isSlot":false,"src":"2562:4:23","valueSize":1}],"flags":["memory-safe"],"id":3152,"nodeType":"InlineAssembly","src":"2513:63:23"}]},"documentation":{"id":3144,"nodeType":"StructuredDocumentation","src":"2328:86:23","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3154,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:23","nodeType":"FunctionDefinition","parameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"slot","nameLocation":"2451:4:23","nodeType":"VariableDeclaration","scope":3154,"src":"2443:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:23"},"returnParameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"r","nameLocation":"2500:1:23","nodeType":"VariableDeclaration","scope":3154,"src":"2480:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3109_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3149,"nodeType":"UserDefinedTypeName","pathNode":{"id":3148,"name":"Bytes32Slot","nameLocations":["2480:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3109,"src":"2480:11:23"},"referencedDeclaration":3109,"src":"2480:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3109_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:23"},"scope":3221,"src":"2419:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3164,"nodeType":"Block","src":"2763:79:23","statements":[{"AST":{"nativeSrc":"2798:38:23","nodeType":"YulBlock","src":"2798:38:23","statements":[{"nativeSrc":"2812:14:23","nodeType":"YulAssignment","src":"2812:14:23","value":{"name":"slot","nativeSrc":"2822:4:23","nodeType":"YulIdentifier","src":"2822:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:23","nodeType":"YulIdentifier","src":"2812:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3161,"isOffset":false,"isSlot":true,"src":"2812:6:23","suffix":"slot","valueSize":1},{"declaration":3157,"isOffset":false,"isSlot":false,"src":"2822:4:23","valueSize":1}],"flags":["memory-safe"],"id":3163,"nodeType":"InlineAssembly","src":"2773:63:23"}]},"documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"2588:86:23","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:23","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"slot","nameLocation":"2711:4:23","nodeType":"VariableDeclaration","scope":3165,"src":"2703:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:23"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"r","nameLocation":"2760:1:23","nodeType":"VariableDeclaration","scope":3165,"src":"2740:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3112_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3160,"nodeType":"UserDefinedTypeName","pathNode":{"id":3159,"name":"Uint256Slot","nameLocations":["2740:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3112,"src":"2740:11:23"},"referencedDeclaration":3112,"src":"2740:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3112_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:23"},"scope":3221,"src":"2679:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3175,"nodeType":"Block","src":"3020:79:23","statements":[{"AST":{"nativeSrc":"3055:38:23","nodeType":"YulBlock","src":"3055:38:23","statements":[{"nativeSrc":"3069:14:23","nodeType":"YulAssignment","src":"3069:14:23","value":{"name":"slot","nativeSrc":"3079:4:23","nodeType":"YulIdentifier","src":"3079:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:23","nodeType":"YulIdentifier","src":"3069:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3172,"isOffset":false,"isSlot":true,"src":"3069:6:23","suffix":"slot","valueSize":1},{"declaration":3168,"isOffset":false,"isSlot":false,"src":"3079:4:23","valueSize":1}],"flags":["memory-safe"],"id":3174,"nodeType":"InlineAssembly","src":"3030:63:23"}]},"documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"2848:85:23","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3176,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:23","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"slot","nameLocation":"2969:4:23","nodeType":"VariableDeclaration","scope":3176,"src":"2961:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:23"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3172,"mutability":"mutable","name":"r","nameLocation":"3017:1:23","nodeType":"VariableDeclaration","scope":3176,"src":"2998:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3115_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3171,"nodeType":"UserDefinedTypeName","pathNode":{"id":3170,"name":"Int256Slot","nameLocations":["2998:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":3115,"src":"2998:10:23"},"referencedDeclaration":3115,"src":"2998:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3115_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:23"},"scope":3221,"src":"2938:161:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3186,"nodeType":"Block","src":"3277:79:23","statements":[{"AST":{"nativeSrc":"3312:38:23","nodeType":"YulBlock","src":"3312:38:23","statements":[{"nativeSrc":"3326:14:23","nodeType":"YulAssignment","src":"3326:14:23","value":{"name":"slot","nativeSrc":"3336:4:23","nodeType":"YulIdentifier","src":"3336:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:23","nodeType":"YulIdentifier","src":"3326:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3183,"isOffset":false,"isSlot":true,"src":"3326:6:23","suffix":"slot","valueSize":1},{"declaration":3179,"isOffset":false,"isSlot":false,"src":"3336:4:23","valueSize":1}],"flags":["memory-safe"],"id":3185,"nodeType":"InlineAssembly","src":"3287:63:23"}]},"documentation":{"id":3177,"nodeType":"StructuredDocumentation","src":"3105:85:23","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3187,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:23","nodeType":"FunctionDefinition","parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"slot","nameLocation":"3226:4:23","nodeType":"VariableDeclaration","scope":3187,"src":"3218:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:23"},"returnParameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"r","nameLocation":"3274:1:23","nodeType":"VariableDeclaration","scope":3187,"src":"3255:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3118_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3182,"nodeType":"UserDefinedTypeName","pathNode":{"id":3181,"name":"StringSlot","nameLocations":["3255:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"3255:10:23"},"referencedDeclaration":3118,"src":"3255:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3118_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:23"},"scope":3221,"src":"3195:161:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3197,"nodeType":"Block","src":"3558:85:23","statements":[{"AST":{"nativeSrc":"3593:44:23","nodeType":"YulBlock","src":"3593:44:23","statements":[{"nativeSrc":"3607:20:23","nodeType":"YulAssignment","src":"3607:20:23","value":{"name":"store.slot","nativeSrc":"3617:10:23","nodeType":"YulIdentifier","src":"3617:10:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:23","nodeType":"YulIdentifier","src":"3607:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3194,"isOffset":false,"isSlot":true,"src":"3607:6:23","suffix":"slot","valueSize":1},{"declaration":3190,"isOffset":false,"isSlot":true,"src":"3617:10:23","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3196,"nodeType":"InlineAssembly","src":"3568:69:23"}]},"documentation":{"id":3188,"nodeType":"StructuredDocumentation","src":"3362:101:23","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3198,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:23","nodeType":"FunctionDefinition","parameters":{"id":3191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3190,"mutability":"mutable","name":"store","nameLocation":"3506:5:23","nodeType":"VariableDeclaration","scope":3198,"src":"3491:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3189,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:23"},"returnParameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"r","nameLocation":"3555:1:23","nodeType":"VariableDeclaration","scope":3198,"src":"3536:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3118_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3193,"nodeType":"UserDefinedTypeName","pathNode":{"id":3192,"name":"StringSlot","nameLocations":["3536:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"3536:10:23"},"referencedDeclaration":3118,"src":"3536:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3118_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:23"},"scope":3221,"src":"3468:175:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3208,"nodeType":"Block","src":"3818:79:23","statements":[{"AST":{"nativeSrc":"3853:38:23","nodeType":"YulBlock","src":"3853:38:23","statements":[{"nativeSrc":"3867:14:23","nodeType":"YulAssignment","src":"3867:14:23","value":{"name":"slot","nativeSrc":"3877:4:23","nodeType":"YulIdentifier","src":"3877:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:23","nodeType":"YulIdentifier","src":"3867:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3205,"isOffset":false,"isSlot":true,"src":"3867:6:23","suffix":"slot","valueSize":1},{"declaration":3201,"isOffset":false,"isSlot":false,"src":"3877:4:23","valueSize":1}],"flags":["memory-safe"],"id":3207,"nodeType":"InlineAssembly","src":"3828:63:23"}]},"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"3649:84:23","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3209,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:23","nodeType":"FunctionDefinition","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"slot","nameLocation":"3768:4:23","nodeType":"VariableDeclaration","scope":3209,"src":"3760:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:23"},"returnParameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"r","nameLocation":"3815:1:23","nodeType":"VariableDeclaration","scope":3209,"src":"3797:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3121_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3204,"nodeType":"UserDefinedTypeName","pathNode":{"id":3203,"name":"BytesSlot","nameLocations":["3797:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3121,"src":"3797:9:23"},"referencedDeclaration":3121,"src":"3797:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3121_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:23"},"scope":3221,"src":"3738:159:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3219,"nodeType":"Block","src":"4094:85:23","statements":[{"AST":{"nativeSrc":"4129:44:23","nodeType":"YulBlock","src":"4129:44:23","statements":[{"nativeSrc":"4143:20:23","nodeType":"YulAssignment","src":"4143:20:23","value":{"name":"store.slot","nativeSrc":"4153:10:23","nodeType":"YulIdentifier","src":"4153:10:23"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:23","nodeType":"YulIdentifier","src":"4143:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3216,"isOffset":false,"isSlot":true,"src":"4143:6:23","suffix":"slot","valueSize":1},{"declaration":3212,"isOffset":false,"isSlot":true,"src":"4153:10:23","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3218,"nodeType":"InlineAssembly","src":"4104:69:23"}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"3903:99:23","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3220,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:23","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"store","nameLocation":"4043:5:23","nodeType":"VariableDeclaration","scope":3220,"src":"4029:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3211,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:23"},"returnParameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"r","nameLocation":"4091:1:23","nodeType":"VariableDeclaration","scope":3220,"src":"4073:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3121_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3215,"nodeType":"UserDefinedTypeName","pathNode":{"id":3214,"name":"BytesSlot","nameLocations":["4073:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3121,"src":"4073:9:23"},"referencedDeclaration":3121,"src":"4073:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3121_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:23"},"scope":3221,"src":"4007:172:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3222,"src":"1407:2774:23","usedErrors":[],"usedEvents":[]}],"src":"193:3989:23"},"id":23},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3233]},"id":3234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3223,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3224,"nodeType":"StructuredDocumentation","src":"141:280:24","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3233,"linearizedBaseContracts":[3233],"name":"IERC165","nameLocation":"432:7:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3225,"nodeType":"StructuredDocumentation","src":"446:340:24","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3232,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:24","nodeType":"FunctionDefinition","parameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:24","nodeType":"VariableDeclaration","scope":3232,"src":"818:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3226,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:24"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3232,"src":"861:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3229,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:24"},"scope":3233,"src":"791:76:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3234,"src":"422:447:24","usedErrors":[],"usedEvents":[]}],"src":"115:755:24"},"id":24},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4839],"Panic":[3097],"SafeCast":[6604]},"id":4840,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3235,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4840,"sourceUnit":3098,"src":"129:35:25","symbolAliases":[{"foreign":{"id":3236,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"137:5:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3239,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4840,"sourceUnit":6605,"src":"165:40:25","symbolAliases":[{"foreign":{"id":3238,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"173:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3240,"nodeType":"StructuredDocumentation","src":"207:73:25","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4839,"linearizedBaseContracts":[4839],"name":"Math","nameLocation":"289:4:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3245,"members":[{"id":3241,"name":"Floor","nameLocation":"324:5:25","nodeType":"EnumValue","src":"324:5:25"},{"id":3242,"name":"Ceil","nameLocation":"367:4:25","nodeType":"EnumValue","src":"367:4:25"},{"id":3243,"name":"Trunc","nameLocation":"409:5:25","nodeType":"EnumValue","src":"409:5:25"},{"id":3244,"name":"Expand","nameLocation":"439:6:25","nodeType":"EnumValue","src":"439:6:25"}],"name":"Rounding","nameLocation":"305:8:25","nodeType":"EnumDefinition","src":"300:169:25"},{"body":{"id":3276,"nodeType":"Block","src":"677:140:25","statements":[{"id":3275,"nodeType":"UncheckedBlock","src":"687:124:25","statements":[{"assignments":[3258],"declarations":[{"constant":false,"id":3258,"mutability":"mutable","name":"c","nameLocation":"719:1:25","nodeType":"VariableDeclaration","scope":3275,"src":"711:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3257,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3262,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3259,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"723:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3260,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"727:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"746:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3264,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"750:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3270,"nodeType":"IfStatement","src":"742:28:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3256,"id":3269,"nodeType":"Return","src":"753:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3272,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"798:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3256,"id":3274,"nodeType":"Return","src":"784:16:25"}]}]},"documentation":{"id":3246,"nodeType":"StructuredDocumentation","src":"475:106:25","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3277,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:25","nodeType":"FunctionDefinition","parameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"a","nameLocation":"610:1:25","nodeType":"VariableDeclaration","scope":3277,"src":"602:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3250,"mutability":"mutable","name":"b","nameLocation":"621:1:25","nodeType":"VariableDeclaration","scope":3277,"src":"613:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:25"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"success","nameLocation":"652:7:25","nodeType":"VariableDeclaration","scope":3277,"src":"647:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3252,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"result","nameLocation":"669:6:25","nodeType":"VariableDeclaration","scope":3277,"src":"661:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:25"},"scope":4839,"src":"586:231:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3304,"nodeType":"Block","src":"1028:113:25","statements":[{"id":3303,"nodeType":"UncheckedBlock","src":"1038:97:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"1066:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"1070:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3296,"nodeType":"IfStatement","src":"1062:28:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3288,"id":3295,"nodeType":"Return","src":"1073:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3298,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"1118:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3299,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"1122:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3288,"id":3302,"nodeType":"Return","src":"1104:20:25"}]}]},"documentation":{"id":3278,"nodeType":"StructuredDocumentation","src":"823:109:25","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3305,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:25","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"a","nameLocation":"961:1:25","nodeType":"VariableDeclaration","scope":3305,"src":"953:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"b","nameLocation":"972:1:25","nodeType":"VariableDeclaration","scope":3305,"src":"964:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:25"},"returnParameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"success","nameLocation":"1003:7:25","nodeType":"VariableDeclaration","scope":3305,"src":"998:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3284,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"result","nameLocation":"1020:6:25","nodeType":"VariableDeclaration","scope":3305,"src":"1012:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:25"},"scope":4839,"src":"937:204:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3346,"nodeType":"Block","src":"1355:417:25","statements":[{"id":3345,"nodeType":"UncheckedBlock","src":"1365:401:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"1623:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3324,"nodeType":"IfStatement","src":"1619:28:25","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3316,"id":3323,"nodeType":"Return","src":"1631:16:25"}},{"assignments":[3326],"declarations":[{"constant":false,"id":3326,"mutability":"mutable","name":"c","nameLocation":"1669:1:25","nodeType":"VariableDeclaration","scope":3345,"src":"1661:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3330,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"1673:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3328,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"1677:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"1696:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"1700:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"1705:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3340,"nodeType":"IfStatement","src":"1692:33:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3316,"id":3339,"nodeType":"Return","src":"1708:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3342,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"1753:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3316,"id":3344,"nodeType":"Return","src":"1739:16:25"}]}]},"documentation":{"id":3306,"nodeType":"StructuredDocumentation","src":"1147:112:25","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3347,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:25","nodeType":"FunctionDefinition","parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"a","nameLocation":"1288:1:25","nodeType":"VariableDeclaration","scope":3347,"src":"1280:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"b","nameLocation":"1299:1:25","nodeType":"VariableDeclaration","scope":3347,"src":"1291:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:25"},"returnParameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"success","nameLocation":"1330:7:25","nodeType":"VariableDeclaration","scope":3347,"src":"1325:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3312,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"result","nameLocation":"1347:6:25","nodeType":"VariableDeclaration","scope":3347,"src":"1339:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:25"},"scope":4839,"src":"1264:508:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3374,"nodeType":"Block","src":"1987:114:25","statements":[{"id":3373,"nodeType":"UncheckedBlock","src":"1997:98:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"2025:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3366,"nodeType":"IfStatement","src":"2021:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3358,"id":3365,"nodeType":"Return","src":"2033:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3368,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"2078:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3369,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"2082:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3358,"id":3372,"nodeType":"Return","src":"2064:20:25"}]}]},"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"1778:113:25","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3375,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:25","nodeType":"FunctionDefinition","parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"a","nameLocation":"1920:1:25","nodeType":"VariableDeclaration","scope":3375,"src":"1912:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"b","nameLocation":"1931:1:25","nodeType":"VariableDeclaration","scope":3375,"src":"1923:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:25"},"returnParameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"success","nameLocation":"1962:7:25","nodeType":"VariableDeclaration","scope":3375,"src":"1957:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3354,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3357,"mutability":"mutable","name":"result","nameLocation":"1979:6:25","nodeType":"VariableDeclaration","scope":3375,"src":"1971:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:25"},"scope":4839,"src":"1896:205:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3402,"nodeType":"Block","src":"2326:114:25","statements":[{"id":3401,"nodeType":"UncheckedBlock","src":"2336:98:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3387,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"2364:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3394,"nodeType":"IfStatement","src":"2360:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3386,"id":3393,"nodeType":"Return","src":"2372:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3396,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"2417:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3397,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"2421:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3386,"id":3400,"nodeType":"Return","src":"2403:20:25"}]}]},"documentation":{"id":3376,"nodeType":"StructuredDocumentation","src":"2107:123:25","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3403,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:25","nodeType":"FunctionDefinition","parameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3378,"mutability":"mutable","name":"a","nameLocation":"2259:1:25","nodeType":"VariableDeclaration","scope":3403,"src":"2251:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3380,"mutability":"mutable","name":"b","nameLocation":"2270:1:25","nodeType":"VariableDeclaration","scope":3403,"src":"2262:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:25"},"returnParameters":{"id":3386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"success","nameLocation":"2301:7:25","nodeType":"VariableDeclaration","scope":3403,"src":"2296:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3382,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3385,"mutability":"mutable","name":"result","nameLocation":"2318:6:25","nodeType":"VariableDeclaration","scope":3403,"src":"2310:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:25"},"scope":4839,"src":"2235:205:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3429,"nodeType":"Block","src":"2912:207:25","statements":[{"id":3428,"nodeType":"UncheckedBlock","src":"2922:191:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3415,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"3060:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"3066:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3417,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"3070:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3422,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"3091:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3420,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"3075:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"3075:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3414,"id":3427,"nodeType":"Return","src":"3053:49:25"}]}]},"documentation":{"id":3404,"nodeType":"StructuredDocumentation","src":"2446:374:25","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3430,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:25","nodeType":"FunctionDefinition","parameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3406,"mutability":"mutable","name":"condition","nameLocation":"2847:9:25","nodeType":"VariableDeclaration","scope":3430,"src":"2842:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3405,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3408,"mutability":"mutable","name":"a","nameLocation":"2866:1:25","nodeType":"VariableDeclaration","scope":3430,"src":"2858:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"b","nameLocation":"2877:1:25","nodeType":"VariableDeclaration","scope":3430,"src":"2869:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:25"},"returnParameters":{"id":3414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3430,"src":"2903:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:25"},"scope":4839,"src":"2825:294:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3448,"nodeType":"Block","src":"3256:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"3281:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"3285:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"3288:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3445,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"3291:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3440,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"3273:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3439,"id":3447,"nodeType":"Return","src":"3266:27:25"}]},"documentation":{"id":3431,"nodeType":"StructuredDocumentation","src":"3125:59:25","text":" @dev Returns the largest of two numbers."},"id":3449,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:25","nodeType":"FunctionDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"a","nameLocation":"3210:1:25","nodeType":"VariableDeclaration","scope":3449,"src":"3202:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3435,"mutability":"mutable","name":"b","nameLocation":"3221:1:25","nodeType":"VariableDeclaration","scope":3449,"src":"3213:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:25"},"returnParameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3449,"src":"3247:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:25"},"scope":4839,"src":"3189:111:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3467,"nodeType":"Block","src":"3438:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"3463:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"3467:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3463,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"3470:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3464,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"3473:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3459,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"3455:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3458,"id":3466,"nodeType":"Return","src":"3448:27:25"}]},"documentation":{"id":3450,"nodeType":"StructuredDocumentation","src":"3306:60:25","text":" @dev Returns the smallest of two numbers."},"id":3468,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:25","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"a","nameLocation":"3392:1:25","nodeType":"VariableDeclaration","scope":3468,"src":"3384:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"b","nameLocation":"3403:1:25","nodeType":"VariableDeclaration","scope":3468,"src":"3395:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:25"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3468,"src":"3429:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:25"},"scope":4839,"src":"3371:111:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3490,"nodeType":"Block","src":"3666:82:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"3721:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3479,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"3725:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"3731:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"3735:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3477,"id":3489,"nodeType":"Return","src":"3713:28:25"}]},"documentation":{"id":3469,"nodeType":"StructuredDocumentation","src":"3488:102:25","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3491,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:25","nodeType":"FunctionDefinition","parameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"a","nameLocation":"3620:1:25","nodeType":"VariableDeclaration","scope":3491,"src":"3612:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3473,"mutability":"mutable","name":"b","nameLocation":"3631:1:25","nodeType":"VariableDeclaration","scope":3491,"src":"3623:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:25"},"returnParameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3491,"src":"3657:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:25"},"scope":4839,"src":"3595:153:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3531,"nodeType":"Block","src":"4040:633:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3501,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"4054:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3512,"nodeType":"IfStatement","src":"4050:150:25","trueBody":{"id":3511,"nodeType":"Block","src":"4062:138:25","statements":[{"expression":{"arguments":[{"expression":{"id":3507,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"4166:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3097_$","typeString":"type(library Panic)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3064,"src":"4166:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3504,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"4154:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3097_$","typeString":"type(library Panic)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3096,"src":"4154:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3510,"nodeType":"ExpressionStatement","src":"4154:35:25"}]}},{"id":3530,"nodeType":"UncheckedBlock","src":"4583:84:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3515,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"4630:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3513,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"4614:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"4614:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3519,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"4641:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3523,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"4650:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3500,"id":3529,"nodeType":"Return","src":"4607:49:25"}]}]},"documentation":{"id":3492,"nodeType":"StructuredDocumentation","src":"3754:210:25","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3532,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:25","nodeType":"FunctionDefinition","parameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3494,"mutability":"mutable","name":"a","nameLocation":"3994:1:25","nodeType":"VariableDeclaration","scope":3532,"src":"3986:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3496,"mutability":"mutable","name":"b","nameLocation":"4005:1:25","nodeType":"VariableDeclaration","scope":3532,"src":"3997:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:25"},"returnParameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3532,"src":"4031:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3498,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:25"},"scope":4839,"src":"3969:704:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3668,"nodeType":"Block","src":"5094:4128:25","statements":[{"id":3667,"nodeType":"UncheckedBlock","src":"5104:4112:25","statements":[{"assignments":[3545],"declarations":[{"constant":false,"id":3545,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:25","nodeType":"VariableDeclaration","scope":3667,"src":"5433:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3549,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3546,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"5449:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3547,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"5453:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:25"},{"assignments":[3551],"declarations":[{"constant":false,"id":3551,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:25","nodeType":"VariableDeclaration","scope":3667,"src":"5513:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3550,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3552,"nodeType":"VariableDeclarationStatement","src":"5513:13:25"},{"AST":{"nativeSrc":"5593:122:25","nodeType":"YulBlock","src":"5593:122:25","statements":[{"nativeSrc":"5611:30:25","nodeType":"YulVariableDeclaration","src":"5611:30:25","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:25","nodeType":"YulIdentifier","src":"5628:1:25"},{"name":"y","nativeSrc":"5631:1:25","nodeType":"YulIdentifier","src":"5631:1:25"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:25","nodeType":"YulLiteral","src":"5638:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:25","nodeType":"YulIdentifier","src":"5634:3:25"},"nativeSrc":"5634:6:25","nodeType":"YulFunctionCall","src":"5634:6:25"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:25","nodeType":"YulIdentifier","src":"5621:6:25"},"nativeSrc":"5621:20:25","nodeType":"YulFunctionCall","src":"5621:20:25"},"variables":[{"name":"mm","nativeSrc":"5615:2:25","nodeType":"YulTypedName","src":"5615:2:25","type":""}]},{"nativeSrc":"5658:43:25","nodeType":"YulAssignment","src":"5658:43:25","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:25","nodeType":"YulIdentifier","src":"5675:2:25"},{"name":"prod0","nativeSrc":"5679:5:25","nodeType":"YulIdentifier","src":"5679:5:25"}],"functionName":{"name":"sub","nativeSrc":"5671:3:25","nodeType":"YulIdentifier","src":"5671:3:25"},"nativeSrc":"5671:14:25","nodeType":"YulFunctionCall","src":"5671:14:25"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:25","nodeType":"YulIdentifier","src":"5690:2:25"},{"name":"prod0","nativeSrc":"5694:5:25","nodeType":"YulIdentifier","src":"5694:5:25"}],"functionName":{"name":"lt","nativeSrc":"5687:2:25","nodeType":"YulIdentifier","src":"5687:2:25"},"nativeSrc":"5687:13:25","nodeType":"YulFunctionCall","src":"5687:13:25"}],"functionName":{"name":"sub","nativeSrc":"5667:3:25","nodeType":"YulIdentifier","src":"5667:3:25"},"nativeSrc":"5667:34:25","nodeType":"YulFunctionCall","src":"5667:34:25"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:25","nodeType":"YulIdentifier","src":"5658:5:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3545,"isOffset":false,"isSlot":false,"src":"5679:5:25","valueSize":1},{"declaration":3545,"isOffset":false,"isSlot":false,"src":"5694:5:25","valueSize":1},{"declaration":3551,"isOffset":false,"isSlot":false,"src":"5658:5:25","valueSize":1},{"declaration":3535,"isOffset":false,"isSlot":false,"src":"5628:1:25","valueSize":1},{"declaration":3537,"isOffset":false,"isSlot":false,"src":"5631:1:25","valueSize":1}],"id":3553,"nodeType":"InlineAssembly","src":"5584:131:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3554,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"5796:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3562,"nodeType":"IfStatement","src":"5792:368:25","trueBody":{"id":3561,"nodeType":"Block","src":"5808:352:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"6126:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3558,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"6134:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3543,"id":3560,"nodeType":"Return","src":"6119:26:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"6270:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3564,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"6285:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3581,"nodeType":"IfStatement","src":"6266:143:25","trueBody":{"id":3580,"nodeType":"Block","src":"6292:117:25","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3570,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"6330:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3573,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"6348:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3097_$","typeString":"type(library Panic)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3064,"src":"6348:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3575,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"6372:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3097_$","typeString":"type(library Panic)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:25","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3060,"src":"6372:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3569,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"6322:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3566,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"6310:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3097_$","typeString":"type(library Panic)"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3096,"src":"6310:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3579,"nodeType":"ExpressionStatement","src":"6310:84:25"}]}},{"assignments":[3583],"declarations":[{"constant":false,"id":3583,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:25","nodeType":"VariableDeclaration","scope":3667,"src":"6664:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3584,"nodeType":"VariableDeclarationStatement","src":"6664:17:25"},{"AST":{"nativeSrc":"6704:291:25","nodeType":"YulBlock","src":"6704:291:25","statements":[{"nativeSrc":"6773:38:25","nodeType":"YulAssignment","src":"6773:38:25","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:25","nodeType":"YulIdentifier","src":"6793:1:25"},{"name":"y","nativeSrc":"6796:1:25","nodeType":"YulIdentifier","src":"6796:1:25"},{"name":"denominator","nativeSrc":"6799:11:25","nodeType":"YulIdentifier","src":"6799:11:25"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:25","nodeType":"YulIdentifier","src":"6786:6:25"},"nativeSrc":"6786:25:25","nodeType":"YulFunctionCall","src":"6786:25:25"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:25","nodeType":"YulIdentifier","src":"6773:9:25"}]},{"nativeSrc":"6893:41:25","nodeType":"YulAssignment","src":"6893:41:25","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:25","nodeType":"YulIdentifier","src":"6906:5:25"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:25","nodeType":"YulIdentifier","src":"6916:9:25"},{"name":"prod0","nativeSrc":"6927:5:25","nodeType":"YulIdentifier","src":"6927:5:25"}],"functionName":{"name":"gt","nativeSrc":"6913:2:25","nodeType":"YulIdentifier","src":"6913:2:25"},"nativeSrc":"6913:20:25","nodeType":"YulFunctionCall","src":"6913:20:25"}],"functionName":{"name":"sub","nativeSrc":"6902:3:25","nodeType":"YulIdentifier","src":"6902:3:25"},"nativeSrc":"6902:32:25","nodeType":"YulFunctionCall","src":"6902:32:25"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:25","nodeType":"YulIdentifier","src":"6893:5:25"}]},{"nativeSrc":"6951:30:25","nodeType":"YulAssignment","src":"6951:30:25","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:25","nodeType":"YulIdentifier","src":"6964:5:25"},{"name":"remainder","nativeSrc":"6971:9:25","nodeType":"YulIdentifier","src":"6971:9:25"}],"functionName":{"name":"sub","nativeSrc":"6960:3:25","nodeType":"YulIdentifier","src":"6960:3:25"},"nativeSrc":"6960:21:25","nodeType":"YulFunctionCall","src":"6960:21:25"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:25","nodeType":"YulIdentifier","src":"6951:5:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3539,"isOffset":false,"isSlot":false,"src":"6799:11:25","valueSize":1},{"declaration":3545,"isOffset":false,"isSlot":false,"src":"6927:5:25","valueSize":1},{"declaration":3545,"isOffset":false,"isSlot":false,"src":"6951:5:25","valueSize":1},{"declaration":3545,"isOffset":false,"isSlot":false,"src":"6964:5:25","valueSize":1},{"declaration":3551,"isOffset":false,"isSlot":false,"src":"6893:5:25","valueSize":1},{"declaration":3551,"isOffset":false,"isSlot":false,"src":"6906:5:25","valueSize":1},{"declaration":3583,"isOffset":false,"isSlot":false,"src":"6773:9:25","valueSize":1},{"declaration":3583,"isOffset":false,"isSlot":false,"src":"6916:9:25","valueSize":1},{"declaration":3583,"isOffset":false,"isSlot":false,"src":"6971:9:25","valueSize":1},{"declaration":3535,"isOffset":false,"isSlot":false,"src":"6793:1:25","valueSize":1},{"declaration":3537,"isOffset":false,"isSlot":false,"src":"6796:1:25","valueSize":1}],"id":3585,"nodeType":"InlineAssembly","src":"6695:300:25"},{"assignments":[3587],"declarations":[{"constant":false,"id":3587,"mutability":"mutable","name":"twos","nameLocation":"7207:4:25","nodeType":"VariableDeclaration","scope":3667,"src":"7199:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3586,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3594,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"7214:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3590,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"7233:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:25"},{"AST":{"nativeSrc":"7268:366:25","nodeType":"YulBlock","src":"7268:366:25","statements":[{"nativeSrc":"7333:37:25","nodeType":"YulAssignment","src":"7333:37:25","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:25","nodeType":"YulIdentifier","src":"7352:11:25"},{"name":"twos","nativeSrc":"7365:4:25","nodeType":"YulIdentifier","src":"7365:4:25"}],"functionName":{"name":"div","nativeSrc":"7348:3:25","nodeType":"YulIdentifier","src":"7348:3:25"},"nativeSrc":"7348:22:25","nodeType":"YulFunctionCall","src":"7348:22:25"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:25","nodeType":"YulIdentifier","src":"7333:11:25"}]},{"nativeSrc":"7437:25:25","nodeType":"YulAssignment","src":"7437:25:25","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:25","nodeType":"YulIdentifier","src":"7450:5:25"},{"name":"twos","nativeSrc":"7457:4:25","nodeType":"YulIdentifier","src":"7457:4:25"}],"functionName":{"name":"div","nativeSrc":"7446:3:25","nodeType":"YulIdentifier","src":"7446:3:25"},"nativeSrc":"7446:16:25","nodeType":"YulFunctionCall","src":"7446:16:25"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:25","nodeType":"YulIdentifier","src":"7437:5:25"}]},{"nativeSrc":"7581:39:25","nodeType":"YulAssignment","src":"7581:39:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:25","nodeType":"YulLiteral","src":"7601:1:25","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:25","nodeType":"YulIdentifier","src":"7604:4:25"}],"functionName":{"name":"sub","nativeSrc":"7597:3:25","nodeType":"YulIdentifier","src":"7597:3:25"},"nativeSrc":"7597:12:25","nodeType":"YulFunctionCall","src":"7597:12:25"},{"name":"twos","nativeSrc":"7611:4:25","nodeType":"YulIdentifier","src":"7611:4:25"}],"functionName":{"name":"div","nativeSrc":"7593:3:25","nodeType":"YulIdentifier","src":"7593:3:25"},"nativeSrc":"7593:23:25","nodeType":"YulFunctionCall","src":"7593:23:25"},{"kind":"number","nativeSrc":"7618:1:25","nodeType":"YulLiteral","src":"7618:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:25","nodeType":"YulIdentifier","src":"7589:3:25"},"nativeSrc":"7589:31:25","nodeType":"YulFunctionCall","src":"7589:31:25"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:25","nodeType":"YulIdentifier","src":"7581:4:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3539,"isOffset":false,"isSlot":false,"src":"7333:11:25","valueSize":1},{"declaration":3539,"isOffset":false,"isSlot":false,"src":"7352:11:25","valueSize":1},{"declaration":3545,"isOffset":false,"isSlot":false,"src":"7437:5:25","valueSize":1},{"declaration":3545,"isOffset":false,"isSlot":false,"src":"7450:5:25","valueSize":1},{"declaration":3587,"isOffset":false,"isSlot":false,"src":"7365:4:25","valueSize":1},{"declaration":3587,"isOffset":false,"isSlot":false,"src":"7457:4:25","valueSize":1},{"declaration":3587,"isOffset":false,"isSlot":false,"src":"7581:4:25","valueSize":1},{"declaration":3587,"isOffset":false,"isSlot":false,"src":"7604:4:25","valueSize":1},{"declaration":3587,"isOffset":false,"isSlot":false,"src":"7611:4:25","valueSize":1}],"id":3595,"nodeType":"InlineAssembly","src":"7259:375:25"},{"expression":{"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3596,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"7700:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3597,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"7709:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3598,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"7717:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3601,"nodeType":"ExpressionStatement","src":"7700:21:25"},{"assignments":[3603],"declarations":[{"constant":false,"id":3603,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:25","nodeType":"VariableDeclaration","scope":3667,"src":"8056:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3610,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3605,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"8079:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:25"},{"expression":{"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3611,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8312:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3613,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"8327:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3614,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8341:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3618,"nodeType":"ExpressionStatement","src":"8312:36:25"},{"expression":{"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3619,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8382:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3621,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"8397:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3622,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8411:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3626,"nodeType":"ExpressionStatement","src":"8382:36:25"},{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3627,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8454:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3629,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"8469:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3630,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8483:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ExpressionStatement","src":"8454:36:25"},{"expression":{"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3635,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8525:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"8540:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3638,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8554:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3642,"nodeType":"ExpressionStatement","src":"8525:36:25"},{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3643,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8598:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"8613:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3646,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8627:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3650,"nodeType":"ExpressionStatement","src":"8598:36:25"},{"expression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3651,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8672:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3653,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"8687:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3654,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"8701:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3658,"nodeType":"ExpressionStatement","src":"8672:36:25"},{"expression":{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"9154:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3660,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"9163:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3661,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"9171:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3664,"nodeType":"ExpressionStatement","src":"9154:24:25"},{"expression":{"id":3665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"9199:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3543,"id":3666,"nodeType":"Return","src":"9192:13:25"}]}]},"documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"4679:312:25","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3669,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:25","nodeType":"FunctionDefinition","parameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"x","nameLocation":"5020:1:25","nodeType":"VariableDeclaration","scope":3669,"src":"5012:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3537,"mutability":"mutable","name":"y","nameLocation":"5031:1:25","nodeType":"VariableDeclaration","scope":3669,"src":"5023:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3539,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:25","nodeType":"VariableDeclaration","scope":3669,"src":"5034:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3538,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:25"},"returnParameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"result","nameLocation":"5086:6:25","nodeType":"VariableDeclaration","scope":3669,"src":"5078:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3541,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:25"},"scope":4839,"src":"4996:4226:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3705,"nodeType":"Block","src":"9461:128:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3685,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"9485:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3686,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"9488:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3687,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"9491:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3684,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3669,3706],"referencedDeclaration":3669,"src":"9478:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3692,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"9539:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":3691,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"9522:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3245_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3695,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"9559:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3696,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"9562:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3697,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"9565:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3694,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:25","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3689,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"9506:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"9506:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3683,"id":3704,"nodeType":"Return","src":"9471:111:25"}]},"documentation":{"id":3670,"nodeType":"StructuredDocumentation","src":"9228:118:25","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3706,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:25","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"x","nameLocation":"9375:1:25","nodeType":"VariableDeclaration","scope":3706,"src":"9367:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"y","nameLocation":"9386:1:25","nodeType":"VariableDeclaration","scope":3706,"src":"9378:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:25","nodeType":"VariableDeclaration","scope":3706,"src":"9389:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:25","nodeType":"VariableDeclaration","scope":3706,"src":"9410:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":3678,"nodeType":"UserDefinedTypeName","pathNode":{"id":3677,"name":"Rounding","nameLocations":["9410:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"9410:8:25"},"referencedDeclaration":3245,"src":"9410:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:25"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3706,"src":"9452:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:25"},"scope":4839,"src":"9351:238:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3802,"nodeType":"Block","src":"10223:1849:25","statements":[{"id":3801,"nodeType":"UncheckedBlock","src":"10233:1833:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3716,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10261:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3721,"nodeType":"IfStatement","src":"10257:20:25","trueBody":{"expression":{"hexValue":"30","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3715,"id":3720,"nodeType":"Return","src":"10269:8:25"}},{"assignments":[3723],"declarations":[{"constant":false,"id":3723,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:25","nodeType":"VariableDeclaration","scope":3801,"src":"10748:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3727,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3724,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"10768:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3725,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10772:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:25"},{"assignments":[3729],"declarations":[{"constant":false,"id":3729,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:25","nodeType":"VariableDeclaration","scope":3801,"src":"10787:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3728,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3731,"initialValue":{"id":3730,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10801:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:25"},{"assignments":[3733],"declarations":[{"constant":false,"id":3733,"mutability":"mutable","name":"x","nameLocation":"10945:1:25","nodeType":"VariableDeclaration","scope":3801,"src":"10938:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3732,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3735,"initialValue":{"hexValue":"30","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:25"},{"assignments":[3737],"declarations":[{"constant":false,"id":3737,"mutability":"mutable","name":"y","nameLocation":"10971:1:25","nodeType":"VariableDeclaration","scope":3801,"src":"10964:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3736,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3739,"initialValue":{"hexValue":"31","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:25"},{"body":{"id":3776,"nodeType":"Block","src":"11014:882:25","statements":[{"assignments":[3744],"declarations":[{"constant":false,"id":3744,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:25","nodeType":"VariableDeclaration","scope":3776,"src":"11032:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3748,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3745,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"11051:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3746,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"11057:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:25"},{"expression":{"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3749,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"11086:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3750,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"11091:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3751,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3752,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"11191:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"11436:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3754,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"11442:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3755,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"11454:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:25","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3760,"nodeType":"ExpressionStatement","src":"11085:395:25"},{"expression":{"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3761,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"11500:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3762,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"11503:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3763,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3764,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"11585:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3765,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"11839:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"11843:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3769,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"11854:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3767,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:25","typeDescriptions":{}}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:25","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3775,"nodeType":"ExpressionStatement","src":"11499:382:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"10998:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3777,"nodeType":"WhileStatement","src":"10991:905:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3778,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"11914:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3783,"nodeType":"IfStatement","src":"11910:22:25","trueBody":{"expression":{"hexValue":"30","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3715,"id":3782,"nodeType":"Return","src":"11924:8:25"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3785,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"11983:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3788,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"11990:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:25","subExpression":{"id":3791,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"12003:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3789,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:25","typeDescriptions":{}}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3797,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"12015:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:25","typeDescriptions":{}}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3784,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"11975:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3715,"id":3800,"nodeType":"Return","src":"11968:50:25"}]}]},"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"9595:553:25","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3803,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:25","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"a","nameLocation":"10177:1:25","nodeType":"VariableDeclaration","scope":3803,"src":"10169:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"n","nameLocation":"10188:1:25","nodeType":"VariableDeclaration","scope":3803,"src":"10180:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:25"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3803,"src":"10214:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:25"},"scope":4839,"src":"10153:1919:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3823,"nodeType":"Block","src":"12672:82:25","statements":[{"id":3822,"nodeType":"UncheckedBlock","src":"12682:66:25","statements":[{"expression":{"arguments":[{"id":3815,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"12725:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3816,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"12728:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3819,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"12735:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3813,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"12713:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4839_$","typeString":"type(library Math)"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:25","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3860,"src":"12713:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3812,"id":3821,"nodeType":"Return","src":"12706:31:25"}]}]},"documentation":{"id":3804,"nodeType":"StructuredDocumentation","src":"12078:514:25","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3824,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:25","nodeType":"FunctionDefinition","parameters":{"id":3809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"a","nameLocation":"12626:1:25","nodeType":"VariableDeclaration","scope":3824,"src":"12618:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3808,"mutability":"mutable","name":"p","nameLocation":"12637:1:25","nodeType":"VariableDeclaration","scope":3824,"src":"12629:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:25"},"returnParameters":{"id":3812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3824,"src":"12663:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:25"},"scope":4839,"src":"12597:157:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3859,"nodeType":"Block","src":"13524:174:25","statements":[{"assignments":[3837,3839],"declarations":[{"constant":false,"id":3837,"mutability":"mutable","name":"success","nameLocation":"13540:7:25","nodeType":"VariableDeclaration","scope":3859,"src":"13535:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3836,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"result","nameLocation":"13557:6:25","nodeType":"VariableDeclaration","scope":3859,"src":"13549:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3845,"initialValue":{"arguments":[{"id":3841,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"13577:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3842,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"13580:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3843,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"13583:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3840,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3884,3966],"referencedDeclaration":3884,"src":"13567:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:25"},{"condition":{"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:25","subExpression":{"id":3846,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"13600:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3856,"nodeType":"IfStatement","src":"13595:74:25","trueBody":{"id":3855,"nodeType":"Block","src":"13609:60:25","statements":[{"expression":{"arguments":[{"expression":{"id":3851,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"13635:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3097_$","typeString":"type(library Panic)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3064,"src":"13635:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3848,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"13623:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3097_$","typeString":"type(library Panic)"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3096,"src":"13623:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3854,"nodeType":"ExpressionStatement","src":"13623:35:25"}]}},{"expression":{"id":3857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"13685:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3835,"id":3858,"nodeType":"Return","src":"13678:13:25"}]},"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"12760:678:25","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3860,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:25","nodeType":"FunctionDefinition","parameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"b","nameLocation":"13467:1:25","nodeType":"VariableDeclaration","scope":3860,"src":"13459:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"e","nameLocation":"13478:1:25","nodeType":"VariableDeclaration","scope":3860,"src":"13470:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"m","nameLocation":"13489:1:25","nodeType":"VariableDeclaration","scope":3860,"src":"13481:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:25"},"returnParameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3860,"src":"13515:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:25"},"scope":4839,"src":"13443:255:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3883,"nodeType":"Block","src":"14552:1493:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3874,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"14566:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3881,"nodeType":"IfStatement","src":"14562:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3873,"id":3880,"nodeType":"Return","src":"14574:17:25"}},{"AST":{"nativeSrc":"14626:1413:25","nodeType":"YulBlock","src":"14626:1413:25","statements":[{"nativeSrc":"14640:22:25","nodeType":"YulVariableDeclaration","src":"14640:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:25","nodeType":"YulLiteral","src":"14657:4:25","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:25","nodeType":"YulIdentifier","src":"14651:5:25"},"nativeSrc":"14651:11:25","nodeType":"YulFunctionCall","src":"14651:11:25"},"variables":[{"name":"ptr","nativeSrc":"14644:3:25","nodeType":"YulTypedName","src":"14644:3:25","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:25","nodeType":"YulIdentifier","src":"15570:3:25"},{"kind":"number","nativeSrc":"15575:4:25","nodeType":"YulLiteral","src":"15575:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:25","nodeType":"YulIdentifier","src":"15563:6:25"},"nativeSrc":"15563:17:25","nodeType":"YulFunctionCall","src":"15563:17:25"},"nativeSrc":"15563:17:25","nodeType":"YulExpressionStatement","src":"15563:17:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:25","nodeType":"YulIdentifier","src":"15604:3:25"},{"kind":"number","nativeSrc":"15609:4:25","nodeType":"YulLiteral","src":"15609:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:25","nodeType":"YulIdentifier","src":"15600:3:25"},"nativeSrc":"15600:14:25","nodeType":"YulFunctionCall","src":"15600:14:25"},{"kind":"number","nativeSrc":"15616:4:25","nodeType":"YulLiteral","src":"15616:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:25","nodeType":"YulIdentifier","src":"15593:6:25"},"nativeSrc":"15593:28:25","nodeType":"YulFunctionCall","src":"15593:28:25"},"nativeSrc":"15593:28:25","nodeType":"YulExpressionStatement","src":"15593:28:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:25","nodeType":"YulIdentifier","src":"15645:3:25"},{"kind":"number","nativeSrc":"15650:4:25","nodeType":"YulLiteral","src":"15650:4:25","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:25","nodeType":"YulIdentifier","src":"15641:3:25"},"nativeSrc":"15641:14:25","nodeType":"YulFunctionCall","src":"15641:14:25"},{"kind":"number","nativeSrc":"15657:4:25","nodeType":"YulLiteral","src":"15657:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:25","nodeType":"YulIdentifier","src":"15634:6:25"},"nativeSrc":"15634:28:25","nodeType":"YulFunctionCall","src":"15634:28:25"},"nativeSrc":"15634:28:25","nodeType":"YulExpressionStatement","src":"15634:28:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:25","nodeType":"YulIdentifier","src":"15686:3:25"},{"kind":"number","nativeSrc":"15691:4:25","nodeType":"YulLiteral","src":"15691:4:25","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:25","nodeType":"YulIdentifier","src":"15682:3:25"},"nativeSrc":"15682:14:25","nodeType":"YulFunctionCall","src":"15682:14:25"},{"name":"b","nativeSrc":"15698:1:25","nodeType":"YulIdentifier","src":"15698:1:25"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:25","nodeType":"YulIdentifier","src":"15675:6:25"},"nativeSrc":"15675:25:25","nodeType":"YulFunctionCall","src":"15675:25:25"},"nativeSrc":"15675:25:25","nodeType":"YulExpressionStatement","src":"15675:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:25","nodeType":"YulIdentifier","src":"15724:3:25"},{"kind":"number","nativeSrc":"15729:4:25","nodeType":"YulLiteral","src":"15729:4:25","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:25","nodeType":"YulIdentifier","src":"15720:3:25"},"nativeSrc":"15720:14:25","nodeType":"YulFunctionCall","src":"15720:14:25"},{"name":"e","nativeSrc":"15736:1:25","nodeType":"YulIdentifier","src":"15736:1:25"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:25","nodeType":"YulIdentifier","src":"15713:6:25"},"nativeSrc":"15713:25:25","nodeType":"YulFunctionCall","src":"15713:25:25"},"nativeSrc":"15713:25:25","nodeType":"YulExpressionStatement","src":"15713:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:25","nodeType":"YulIdentifier","src":"15762:3:25"},{"kind":"number","nativeSrc":"15767:4:25","nodeType":"YulLiteral","src":"15767:4:25","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:25","nodeType":"YulIdentifier","src":"15758:3:25"},"nativeSrc":"15758:14:25","nodeType":"YulFunctionCall","src":"15758:14:25"},{"name":"m","nativeSrc":"15774:1:25","nodeType":"YulIdentifier","src":"15774:1:25"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:25","nodeType":"YulIdentifier","src":"15751:6:25"},"nativeSrc":"15751:25:25","nodeType":"YulFunctionCall","src":"15751:25:25"},"nativeSrc":"15751:25:25","nodeType":"YulExpressionStatement","src":"15751:25:25"},{"nativeSrc":"15938:57:25","nodeType":"YulAssignment","src":"15938:57:25","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:25","nodeType":"YulIdentifier","src":"15960:3:25"},"nativeSrc":"15960:5:25","nodeType":"YulFunctionCall","src":"15960:5:25"},{"kind":"number","nativeSrc":"15967:4:25","nodeType":"YulLiteral","src":"15967:4:25","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:25","nodeType":"YulIdentifier","src":"15973:3:25"},{"kind":"number","nativeSrc":"15978:4:25","nodeType":"YulLiteral","src":"15978:4:25","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:25","nodeType":"YulLiteral","src":"15984:4:25","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:25","nodeType":"YulLiteral","src":"15990:4:25","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:25","nodeType":"YulIdentifier","src":"15949:10:25"},"nativeSrc":"15949:46:25","nodeType":"YulFunctionCall","src":"15949:46:25"},"variableNames":[{"name":"success","nativeSrc":"15938:7:25","nodeType":"YulIdentifier","src":"15938:7:25"}]},{"nativeSrc":"16008:21:25","nodeType":"YulAssignment","src":"16008:21:25","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:25","nodeType":"YulLiteral","src":"16024:4:25","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:25","nodeType":"YulIdentifier","src":"16018:5:25"},"nativeSrc":"16018:11:25","nodeType":"YulFunctionCall","src":"16018:11:25"},"variableNames":[{"name":"result","nativeSrc":"16008:6:25","nodeType":"YulIdentifier","src":"16008:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3863,"isOffset":false,"isSlot":false,"src":"15698:1:25","valueSize":1},{"declaration":3865,"isOffset":false,"isSlot":false,"src":"15736:1:25","valueSize":1},{"declaration":3867,"isOffset":false,"isSlot":false,"src":"15774:1:25","valueSize":1},{"declaration":3872,"isOffset":false,"isSlot":false,"src":"16008:6:25","valueSize":1},{"declaration":3870,"isOffset":false,"isSlot":false,"src":"15938:7:25","valueSize":1}],"flags":["memory-safe"],"id":3882,"nodeType":"InlineAssembly","src":"14601:1438:25"}]},"documentation":{"id":3861,"nodeType":"StructuredDocumentation","src":"13704:738:25","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3884,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:25","nodeType":"FunctionDefinition","parameters":{"id":3868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3863,"mutability":"mutable","name":"b","nameLocation":"14474:1:25","nodeType":"VariableDeclaration","scope":3884,"src":"14466:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3865,"mutability":"mutable","name":"e","nameLocation":"14485:1:25","nodeType":"VariableDeclaration","scope":3884,"src":"14477:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3864,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3867,"mutability":"mutable","name":"m","nameLocation":"14496:1:25","nodeType":"VariableDeclaration","scope":3884,"src":"14488:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:25"},"returnParameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"success","nameLocation":"14527:7:25","nodeType":"VariableDeclaration","scope":3884,"src":"14522:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3869,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"result","nameLocation":"14544:6:25","nodeType":"VariableDeclaration","scope":3884,"src":"14536:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:25"},"scope":4839,"src":"14447:1598:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3919,"nodeType":"Block","src":"16242:179:25","statements":[{"assignments":[3897,3899],"declarations":[{"constant":false,"id":3897,"mutability":"mutable","name":"success","nameLocation":"16258:7:25","nodeType":"VariableDeclaration","scope":3919,"src":"16253:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3896,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"result","nameLocation":"16280:6:25","nodeType":"VariableDeclaration","scope":3919,"src":"16267:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3898,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3905,"initialValue":{"arguments":[{"id":3901,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"16300:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3902,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"16303:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3903,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"16306:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3900,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3884,3966],"referencedDeclaration":3966,"src":"16290:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:25"},{"condition":{"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:25","subExpression":{"id":3906,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"16323:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3916,"nodeType":"IfStatement","src":"16318:74:25","trueBody":{"id":3915,"nodeType":"Block","src":"16332:60:25","statements":[{"expression":{"arguments":[{"expression":{"id":3911,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"16358:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3097_$","typeString":"type(library Panic)"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3064,"src":"16358:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3908,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"16346:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3097_$","typeString":"type(library Panic)"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3096,"src":"16346:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3914,"nodeType":"ExpressionStatement","src":"16346:35:25"}]}},{"expression":{"id":3917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"16408:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3895,"id":3918,"nodeType":"Return","src":"16401:13:25"}]},"documentation":{"id":3885,"nodeType":"StructuredDocumentation","src":"16051:85:25","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3920,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:25","nodeType":"FunctionDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3887,"mutability":"mutable","name":"b","nameLocation":"16170:1:25","nodeType":"VariableDeclaration","scope":3920,"src":"16157:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3886,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3889,"mutability":"mutable","name":"e","nameLocation":"16186:1:25","nodeType":"VariableDeclaration","scope":3920,"src":"16173:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3888,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3891,"mutability":"mutable","name":"m","nameLocation":"16202:1:25","nodeType":"VariableDeclaration","scope":3920,"src":"16189:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3890,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:25"},"returnParameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3920,"src":"16228:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3893,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:25"},"scope":4839,"src":"16141:280:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3965,"nodeType":"Block","src":"16675:771:25","statements":[{"condition":{"arguments":[{"id":3935,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"16700:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3934,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"16689:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3944,"nodeType":"IfStatement","src":"16685:47:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3938,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3933,"id":3943,"nodeType":"Return","src":"16704:28:25"}},{"assignments":[3946],"declarations":[{"constant":false,"id":3946,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:25","nodeType":"VariableDeclaration","scope":3965,"src":"16743:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3949,"initialValue":{"expression":{"id":3947,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"16758:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:25","memberName":"length","nodeType":"MemberAccess","src":"16758:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:25"},{"expression":{"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3950,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"16848:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3953,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"16874:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:25","memberName":"length","nodeType":"MemberAccess","src":"16874:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3955,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"16884:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:25","memberName":"length","nodeType":"MemberAccess","src":"16884:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3957,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"16894:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3958,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"16900:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3959,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"16903:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3960,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"16906:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3951,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3963,"nodeType":"ExpressionStatement","src":"16848:60:25"},{"AST":{"nativeSrc":"16944:496:25","nodeType":"YulBlock","src":"16944:496:25","statements":[{"nativeSrc":"16958:32:25","nodeType":"YulVariableDeclaration","src":"16958:32:25","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:25","nodeType":"YulIdentifier","src":"16977:6:25"},{"kind":"number","nativeSrc":"16985:4:25","nodeType":"YulLiteral","src":"16985:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:25","nodeType":"YulIdentifier","src":"16973:3:25"},"nativeSrc":"16973:17:25","nodeType":"YulFunctionCall","src":"16973:17:25"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:25","nodeType":"YulTypedName","src":"16962:7:25","type":""}]},{"nativeSrc":"17080:73:25","nodeType":"YulAssignment","src":"17080:73:25","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:25","nodeType":"YulIdentifier","src":"17102:3:25"},"nativeSrc":"17102:5:25","nodeType":"YulFunctionCall","src":"17102:5:25"},{"kind":"number","nativeSrc":"17109:4:25","nodeType":"YulLiteral","src":"17109:4:25","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:25","nodeType":"YulIdentifier","src":"17115:7:25"},{"arguments":[{"name":"result","nativeSrc":"17130:6:25","nodeType":"YulIdentifier","src":"17130:6:25"}],"functionName":{"name":"mload","nativeSrc":"17124:5:25","nodeType":"YulIdentifier","src":"17124:5:25"},"nativeSrc":"17124:13:25","nodeType":"YulFunctionCall","src":"17124:13:25"},{"name":"dataPtr","nativeSrc":"17139:7:25","nodeType":"YulIdentifier","src":"17139:7:25"},{"name":"mLen","nativeSrc":"17148:4:25","nodeType":"YulIdentifier","src":"17148:4:25"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:25","nodeType":"YulIdentifier","src":"17091:10:25"},"nativeSrc":"17091:62:25","nodeType":"YulFunctionCall","src":"17091:62:25"},"variableNames":[{"name":"success","nativeSrc":"17080:7:25","nodeType":"YulIdentifier","src":"17080:7:25"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:25","nodeType":"YulIdentifier","src":"17309:6:25"},{"name":"mLen","nativeSrc":"17317:4:25","nodeType":"YulIdentifier","src":"17317:4:25"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:25","nodeType":"YulIdentifier","src":"17302:6:25"},"nativeSrc":"17302:20:25","nodeType":"YulFunctionCall","src":"17302:20:25"},"nativeSrc":"17302:20:25","nodeType":"YulExpressionStatement","src":"17302:20:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:25","nodeType":"YulLiteral","src":"17405:4:25","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:25","nodeType":"YulIdentifier","src":"17415:7:25"},{"name":"mLen","nativeSrc":"17424:4:25","nodeType":"YulIdentifier","src":"17424:4:25"}],"functionName":{"name":"add","nativeSrc":"17411:3:25","nodeType":"YulIdentifier","src":"17411:3:25"},"nativeSrc":"17411:18:25","nodeType":"YulFunctionCall","src":"17411:18:25"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:25","nodeType":"YulIdentifier","src":"17398:6:25"},"nativeSrc":"17398:32:25","nodeType":"YulFunctionCall","src":"17398:32:25"},"nativeSrc":"17398:32:25","nodeType":"YulExpressionStatement","src":"17398:32:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":3946,"isOffset":false,"isSlot":false,"src":"17148:4:25","valueSize":1},{"declaration":3946,"isOffset":false,"isSlot":false,"src":"17317:4:25","valueSize":1},{"declaration":3946,"isOffset":false,"isSlot":false,"src":"17424:4:25","valueSize":1},{"declaration":3932,"isOffset":false,"isSlot":false,"src":"16977:6:25","valueSize":1},{"declaration":3932,"isOffset":false,"isSlot":false,"src":"17130:6:25","valueSize":1},{"declaration":3932,"isOffset":false,"isSlot":false,"src":"17309:6:25","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"17080:7:25","valueSize":1}],"flags":["memory-safe"],"id":3964,"nodeType":"InlineAssembly","src":"16919:521:25"}]},"documentation":{"id":3921,"nodeType":"StructuredDocumentation","src":"16427:88:25","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3966,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:25","nodeType":"FunctionDefinition","parameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"b","nameLocation":"16561:1:25","nodeType":"VariableDeclaration","scope":3966,"src":"16548:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3922,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3925,"mutability":"mutable","name":"e","nameLocation":"16585:1:25","nodeType":"VariableDeclaration","scope":3966,"src":"16572:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3924,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3927,"mutability":"mutable","name":"m","nameLocation":"16609:1:25","nodeType":"VariableDeclaration","scope":3966,"src":"16596:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3926,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:25"},"returnParameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"success","nameLocation":"16645:7:25","nodeType":"VariableDeclaration","scope":3966,"src":"16640:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3929,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3932,"mutability":"mutable","name":"result","nameLocation":"16667:6:25","nodeType":"VariableDeclaration","scope":3966,"src":"16654:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3931,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:25"},"scope":4839,"src":"16520:926:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"17601:176:25","statements":[{"body":{"id":3994,"nodeType":"Block","src":"17658:92:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3985,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"17676:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3987,"indexExpression":{"id":3986,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"17686:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3993,"nodeType":"IfStatement","src":"17672:68:25","trueBody":{"id":3992,"nodeType":"Block","src":"17695:45:25","statements":[{"expression":{"hexValue":"66616c7365","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3973,"id":3991,"nodeType":"Return","src":"17713:12:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3978,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"17631:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3979,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"17635:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:25","memberName":"length","nodeType":"MemberAccess","src":"17635:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3995,"initializationExpression":{"assignments":[3975],"declarations":[{"constant":false,"id":3975,"mutability":"mutable","name":"i","nameLocation":"17624:1:25","nodeType":"VariableDeclaration","scope":3995,"src":"17616:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3977,"initialValue":{"hexValue":"30","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:25","subExpression":{"id":3982,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"17655:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3984,"nodeType":"ExpressionStatement","src":"17653:3:25"},"nodeType":"ForStatement","src":"17611:139:25"},{"expression":{"hexValue":"74727565","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3973,"id":3997,"nodeType":"Return","src":"17759:11:25"}]},"documentation":{"id":3967,"nodeType":"StructuredDocumentation","src":"17452:72:25","text":" @dev Returns whether the provided byte array is zero."},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:25","nodeType":"FunctionDefinition","parameters":{"id":3970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3969,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:25","nodeType":"VariableDeclaration","scope":3999,"src":"17549:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3968,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:25"},"returnParameters":{"id":3973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"17595:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3971,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:25"},"scope":4839,"src":"17529:248:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4217,"nodeType":"Block","src":"18137:5124:25","statements":[{"id":4216,"nodeType":"UncheckedBlock","src":"18147:5108:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4007,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"18241:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4013,"nodeType":"IfStatement","src":"18237:53:25","trueBody":{"id":4012,"nodeType":"Block","src":"18249:41:25","statements":[{"expression":{"id":4010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"18274:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4006,"id":4011,"nodeType":"Return","src":"18267:8:25"}]}},{"assignments":[4015],"declarations":[{"constant":false,"id":4015,"mutability":"mutable","name":"aa","nameLocation":"19225:2:25","nodeType":"VariableDeclaration","scope":4216,"src":"19217:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4017,"initialValue":{"id":4016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"19230:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:25"},{"assignments":[4019],"declarations":[{"constant":false,"id":4019,"mutability":"mutable","name":"xn","nameLocation":"19253:2:25","nodeType":"VariableDeclaration","scope":4216,"src":"19245:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4021,"initialValue":{"hexValue":"31","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4022,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19278:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4037,"nodeType":"IfStatement","src":"19274:92:25","trueBody":{"id":4036,"nodeType":"Block","src":"19296:70:25","statements":[{"expression":{"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4028,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19314:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4031,"nodeType":"ExpressionStatement","src":"19314:10:25"},{"expression":{"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4032,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"19342:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4035,"nodeType":"ExpressionStatement","src":"19342:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4038,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19383:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4053,"nodeType":"IfStatement","src":"19379:90:25","trueBody":{"id":4052,"nodeType":"Block","src":"19400:69:25","statements":[{"expression":{"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4044,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19418:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4047,"nodeType":"ExpressionStatement","src":"19418:9:25"},{"expression":{"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4048,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"19445:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4051,"nodeType":"ExpressionStatement","src":"19445:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4054,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19486:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4069,"nodeType":"IfStatement","src":"19482:90:25","trueBody":{"id":4068,"nodeType":"Block","src":"19503:69:25","statements":[{"expression":{"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19521:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4063,"nodeType":"ExpressionStatement","src":"19521:9:25"},{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"19548:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4067,"nodeType":"ExpressionStatement","src":"19548:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4070,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19589:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4085,"nodeType":"IfStatement","src":"19585:89:25","trueBody":{"id":4084,"nodeType":"Block","src":"19606:68:25","statements":[{"expression":{"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4076,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19624:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4079,"nodeType":"ExpressionStatement","src":"19624:9:25"},{"expression":{"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4080,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"19651:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4083,"nodeType":"ExpressionStatement","src":"19651:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4086,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19691:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4090,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4101,"nodeType":"IfStatement","src":"19687:87:25","trueBody":{"id":4100,"nodeType":"Block","src":"19707:67:25","statements":[{"expression":{"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4092,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19725:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4095,"nodeType":"ExpressionStatement","src":"19725:8:25"},{"expression":{"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4096,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"19751:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4099,"nodeType":"ExpressionStatement","src":"19751:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4102,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19791:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4106,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4117,"nodeType":"IfStatement","src":"19787:87:25","trueBody":{"id":4116,"nodeType":"Block","src":"19807:67:25","statements":[{"expression":{"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4108,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19825:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4111,"nodeType":"ExpressionStatement","src":"19825:8:25"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4112,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"19851:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"19851:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"19891:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4129,"nodeType":"IfStatement","src":"19887:61:25","trueBody":{"id":4128,"nodeType":"Block","src":"19907:41:25","statements":[{"expression":{"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4124,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"19925:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4127,"nodeType":"ExpressionStatement","src":"19925:8:25"}]}},{"expression":{"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4130,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"20368:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4132,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"20378:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4138,"nodeType":"ExpressionStatement","src":"20368:18:25"},{"expression":{"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4139,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22273:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4140,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22279:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4141,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"22284:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4142,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22288:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4145,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4149,"nodeType":"ExpressionStatement","src":"22273:23:25"},{"expression":{"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4150,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22382:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22388:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"22393:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4153,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22397:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4156,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4160,"nodeType":"ExpressionStatement","src":"22382:23:25"},{"expression":{"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4161,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22493:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4162,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22499:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4163,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"22504:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4164,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22508:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4171,"nodeType":"ExpressionStatement","src":"22493:23:25"},{"expression":{"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4172,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22602:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4173,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22608:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"22613:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4175,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22617:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4182,"nodeType":"ExpressionStatement","src":"22602:23:25"},{"expression":{"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4183,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22712:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4184,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22718:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"22723:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4186,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22727:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4193,"nodeType":"ExpressionStatement","src":"22712:23:25"},{"expression":{"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4194,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22822:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22828:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"22833:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4197,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"22837:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4204,"nodeType":"ExpressionStatement","src":"22822:23:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4205,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"23211:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4208,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"23232:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"23237:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4210,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"23241:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4206,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"23216:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"23216:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4006,"id":4215,"nodeType":"Return","src":"23204:40:25"}]}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"17783:292:25","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:25","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"a","nameLocation":"18102:1:25","nodeType":"VariableDeclaration","scope":4218,"src":"18094:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:25"},"returnParameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4218,"src":"18128:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:25"},"scope":4839,"src":"18080:5181:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4251,"nodeType":"Block","src":"23434:171:25","statements":[{"id":4250,"nodeType":"UncheckedBlock","src":"23444:155:25","statements":[{"assignments":[4230],"declarations":[{"constant":false,"id":4230,"mutability":"mutable","name":"result","nameLocation":"23476:6:25","nodeType":"VariableDeclaration","scope":4250,"src":"23468:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4234,"initialValue":{"arguments":[{"id":4232,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"23490:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4231,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4218,4252],"referencedDeclaration":4218,"src":"23485:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"23513:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4239,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"23555:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":4238,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"23538:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3245_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"23568:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"23577:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4244,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"23586:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4236,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"23522:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"23522:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4228,"id":4249,"nodeType":"Return","src":"23506:82:25"}]}]},"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"23267:86:25","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4252,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:25","nodeType":"FunctionDefinition","parameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"a","nameLocation":"23380:1:25","nodeType":"VariableDeclaration","scope":4252,"src":"23372:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4224,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:25","nodeType":"VariableDeclaration","scope":4252,"src":"23383:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":4223,"nodeType":"UserDefinedTypeName","pathNode":{"id":4222,"name":"Rounding","nameLocations":["23383:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"23383:8:25"},"referencedDeclaration":3245,"src":"23383:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:25"},"returnParameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4252,"src":"23425:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:25"},"scope":4839,"src":"23358:247:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4447,"nodeType":"Block","src":"23796:981:25","statements":[{"assignments":[4261],"declarations":[{"constant":false,"id":4261,"mutability":"mutable","name":"result","nameLocation":"23814:6:25","nodeType":"VariableDeclaration","scope":4447,"src":"23806:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4260,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4263,"initialValue":{"hexValue":"30","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:25"},{"assignments":[4265],"declarations":[{"constant":false,"id":4265,"mutability":"mutable","name":"exp","nameLocation":"23842:3:25","nodeType":"VariableDeclaration","scope":4447,"src":"23834:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4266,"nodeType":"VariableDeclarationStatement","src":"23834:11:25"},{"id":4444,"nodeType":"UncheckedBlock","src":"23855:893:25","statements":[{"expression":{"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4267,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"23879:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"23907:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4269,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"23891:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"23891:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4282,"nodeType":"ExpressionStatement","src":"23879:51:25"},{"expression":{"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"23944:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4284,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"23954:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4286,"nodeType":"ExpressionStatement","src":"23944:13:25"},{"expression":{"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"23971:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4288,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"23981:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4290,"nodeType":"ExpressionStatement","src":"23971:13:25"},{"expression":{"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4291,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"23999:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24026:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4293,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"24010:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"24010:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4306,"nodeType":"ExpressionStatement","src":"23999:49:25"},{"expression":{"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24062:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4308,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24072:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4310,"nodeType":"ExpressionStatement","src":"24062:13:25"},{"expression":{"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4311,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"24089:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4312,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24099:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4314,"nodeType":"ExpressionStatement","src":"24089:13:25"},{"expression":{"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4315,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24117:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24144:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4317,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"24128:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"24128:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4330,"nodeType":"ExpressionStatement","src":"24117:49:25"},{"expression":{"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24180:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4332,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24190:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4334,"nodeType":"ExpressionStatement","src":"24180:13:25"},{"expression":{"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"24207:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4336,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24217:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4338,"nodeType":"ExpressionStatement","src":"24207:13:25"},{"expression":{"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4339,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24235:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24262:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:25","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4341,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"24246:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"24246:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4354,"nodeType":"ExpressionStatement","src":"24235:49:25"},{"expression":{"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24298:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4356,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24308:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4358,"nodeType":"ExpressionStatement","src":"24298:13:25"},{"expression":{"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"24325:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4360,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24335:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4362,"nodeType":"ExpressionStatement","src":"24325:13:25"},{"expression":{"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4363,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24353:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24379:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4365,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"24363:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"24363:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4378,"nodeType":"ExpressionStatement","src":"24353:47:25"},{"expression":{"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24414:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4380,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24424:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4382,"nodeType":"ExpressionStatement","src":"24414:13:25"},{"expression":{"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"24441:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4384,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24451:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4386,"nodeType":"ExpressionStatement","src":"24441:13:25"},{"expression":{"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4387,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24469:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24495:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:25","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4389,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"24479:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"24479:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4402,"nodeType":"ExpressionStatement","src":"24469:47:25"},{"expression":{"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24530:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4404,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24540:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4406,"nodeType":"ExpressionStatement","src":"24530:13:25"},{"expression":{"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"24557:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4408,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24567:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4410,"nodeType":"ExpressionStatement","src":"24557:13:25"},{"expression":{"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4411,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24585:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24611:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4413,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"24595:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"24595:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4426,"nodeType":"ExpressionStatement","src":"24585:47:25"},{"expression":{"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24646:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4428,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24656:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4430,"nodeType":"ExpressionStatement","src":"24646:13:25"},{"expression":{"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4431,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"24673:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4432,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"24683:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4434,"nodeType":"ExpressionStatement","src":"24673:13:25"},{"expression":{"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"24701:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"24727:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4436,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"24711:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"24711:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4443,"nodeType":"ExpressionStatement","src":"24701:36:25"}]},{"expression":{"id":4445,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"24764:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4259,"id":4446,"nodeType":"Return","src":"24757:13:25"}]},"documentation":{"id":4253,"nodeType":"StructuredDocumentation","src":"23611:119:25","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4448,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:25","nodeType":"FunctionDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"value","nameLocation":"23757:5:25","nodeType":"VariableDeclaration","scope":4448,"src":"23749:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4254,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:25"},"returnParameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4448,"src":"23787:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:25"},"scope":4839,"src":"23735:1042:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4481,"nodeType":"Block","src":"25010:175:25","statements":[{"id":4480,"nodeType":"UncheckedBlock","src":"25020:159:25","statements":[{"assignments":[4460],"declarations":[{"constant":false,"id":4460,"mutability":"mutable","name":"result","nameLocation":"25052:6:25","nodeType":"VariableDeclaration","scope":4480,"src":"25044:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4459,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4464,"initialValue":{"arguments":[{"id":4462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"25066:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4461,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4448,4482],"referencedDeclaration":4448,"src":"25061:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"25093:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4469,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"25135:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":4468,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"25118:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3245_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"25153:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"25162:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4466,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"25102:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"25102:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4458,"id":4479,"nodeType":"Return","src":"25086:82:25"}]}]},"documentation":{"id":4449,"nodeType":"StructuredDocumentation","src":"24783:142:25","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4482,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:25","nodeType":"FunctionDefinition","parameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4451,"mutability":"mutable","name":"value","nameLocation":"24952:5:25","nodeType":"VariableDeclaration","scope":4482,"src":"24944:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4454,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:25","nodeType":"VariableDeclaration","scope":4482,"src":"24959:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":4453,"nodeType":"UserDefinedTypeName","pathNode":{"id":4452,"name":"Rounding","nameLocations":["24959:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"24959:8:25"},"referencedDeclaration":3245,"src":"24959:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:25"},"returnParameters":{"id":4458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4482,"src":"25001:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4456,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:25"},"scope":4839,"src":"24930:255:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4610,"nodeType":"Block","src":"25378:854:25","statements":[{"assignments":[4491],"declarations":[{"constant":false,"id":4491,"mutability":"mutable","name":"result","nameLocation":"25396:6:25","nodeType":"VariableDeclaration","scope":4610,"src":"25388:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4493,"initialValue":{"hexValue":"30","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:25"},{"id":4607,"nodeType":"UncheckedBlock","src":"25416:787:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"25444:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4510,"nodeType":"IfStatement","src":"25440:103:25","trueBody":{"id":4509,"nodeType":"Block","src":"25463:80:25","statements":[{"expression":{"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"25481:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4504,"nodeType":"ExpressionStatement","src":"25481:17:25"},{"expression":{"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"25516:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4508,"nodeType":"ExpressionStatement","src":"25516:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"25560:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4527,"nodeType":"IfStatement","src":"25556:103:25","trueBody":{"id":4526,"nodeType":"Block","src":"25579:80:25","statements":[{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"25597:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4521,"nodeType":"ExpressionStatement","src":"25597:17:25"},{"expression":{"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"25632:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4525,"nodeType":"ExpressionStatement","src":"25632:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"25676:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4544,"nodeType":"IfStatement","src":"25672:103:25","trueBody":{"id":4543,"nodeType":"Block","src":"25695:80:25","statements":[{"expression":{"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"25713:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4538,"nodeType":"ExpressionStatement","src":"25713:17:25"},{"expression":{"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4539,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"25748:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4542,"nodeType":"ExpressionStatement","src":"25748:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"25792:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4561,"nodeType":"IfStatement","src":"25788:100:25","trueBody":{"id":4560,"nodeType":"Block","src":"25810:78:25","statements":[{"expression":{"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"25828:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4555,"nodeType":"ExpressionStatement","src":"25828:16:25"},{"expression":{"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"25862:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4559,"nodeType":"ExpressionStatement","src":"25862:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"25905:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4578,"nodeType":"IfStatement","src":"25901:100:25","trueBody":{"id":4577,"nodeType":"Block","src":"25923:78:25","statements":[{"expression":{"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"25941:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4572,"nodeType":"ExpressionStatement","src":"25941:16:25"},{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"25975:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4576,"nodeType":"ExpressionStatement","src":"25975:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"26018:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4595,"nodeType":"IfStatement","src":"26014:100:25","trueBody":{"id":4594,"nodeType":"Block","src":"26036:78:25","statements":[{"expression":{"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"26054:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4589,"nodeType":"ExpressionStatement","src":"26054:16:25"},{"expression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"26088:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4593,"nodeType":"ExpressionStatement","src":"26088:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"26131:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4606,"nodeType":"IfStatement","src":"26127:66:25","trueBody":{"id":4605,"nodeType":"Block","src":"26149:44:25","statements":[{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"26167:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4604,"nodeType":"ExpressionStatement","src":"26167:11:25"}]}}]},{"expression":{"id":4608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"26219:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4489,"id":4609,"nodeType":"Return","src":"26212:13:25"}]},"documentation":{"id":4483,"nodeType":"StructuredDocumentation","src":"25191:120:25","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4611,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:25","nodeType":"FunctionDefinition","parameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"value","nameLocation":"25339:5:25","nodeType":"VariableDeclaration","scope":4611,"src":"25331:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4484,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:25"},"returnParameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4611,"src":"25369:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:25"},"scope":4839,"src":"25316:916:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4644,"nodeType":"Block","src":"26467:177:25","statements":[{"id":4643,"nodeType":"UncheckedBlock","src":"26477:161:25","statements":[{"assignments":[4623],"declarations":[{"constant":false,"id":4623,"mutability":"mutable","name":"result","nameLocation":"26509:6:25","nodeType":"VariableDeclaration","scope":4643,"src":"26501:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4622,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4627,"initialValue":{"arguments":[{"id":4625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"26524:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4624,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4611,4645],"referencedDeclaration":4611,"src":"26518:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"26551:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4632,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"26593:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":4631,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"26576:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3245_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"26612:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"26621:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4629,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"26560:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"26560:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4621,"id":4642,"nodeType":"Return","src":"26544:83:25"}]}]},"documentation":{"id":4612,"nodeType":"StructuredDocumentation","src":"26238:143:25","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4645,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:25","nodeType":"FunctionDefinition","parameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"value","nameLocation":"26409:5:25","nodeType":"VariableDeclaration","scope":4645,"src":"26401:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4617,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:25","nodeType":"VariableDeclaration","scope":4645,"src":"26416:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":4616,"nodeType":"UserDefinedTypeName","pathNode":{"id":4615,"name":"Rounding","nameLocations":["26416:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"26416:8:25"},"referencedDeclaration":3245,"src":"26416:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:25"},"returnParameters":{"id":4621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4645,"src":"26458:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4619,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:25"},"scope":4839,"src":"26386:258:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4781,"nodeType":"Block","src":"26964:674:25","statements":[{"assignments":[4654],"declarations":[{"constant":false,"id":4654,"mutability":"mutable","name":"result","nameLocation":"26982:6:25","nodeType":"VariableDeclaration","scope":4781,"src":"26974:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4653,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4656,"initialValue":{"hexValue":"30","id":4655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:25"},{"assignments":[4658],"declarations":[{"constant":false,"id":4658,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:25","nodeType":"VariableDeclaration","scope":4781,"src":"27002:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4659,"nodeType":"VariableDeclarationStatement","src":"27002:12:25"},{"id":4778,"nodeType":"UncheckedBlock","src":"27024:585:25","statements":[{"expression":{"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4660,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"27048:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"27071:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4661,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"27055:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"27055:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4673,"nodeType":"ExpressionStatement","src":"27048:46:25"},{"expression":{"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"27108:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4675,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"27118:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4679,"nodeType":"ExpressionStatement","src":"27108:20:25"},{"expression":{"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"27142:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4681,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"27152:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4685,"nodeType":"ExpressionStatement","src":"27142:19:25"},{"expression":{"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4686,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"27176:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"27199:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4687,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"27183:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"27183:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4699,"nodeType":"ExpressionStatement","src":"27176:45:25"},{"expression":{"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"27235:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"27245:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4705,"nodeType":"ExpressionStatement","src":"27235:19:25"},{"expression":{"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4706,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"27268:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4707,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"27278:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4711,"nodeType":"ExpressionStatement","src":"27268:18:25"},{"expression":{"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4712,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"27301:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"27324:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4713,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"27308:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"27308:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4725,"nodeType":"ExpressionStatement","src":"27301:45:25"},{"expression":{"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"27360:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4727,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"27370:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4731,"nodeType":"ExpressionStatement","src":"27360:19:25"},{"expression":{"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"27393:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4733,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"27403:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4737,"nodeType":"ExpressionStatement","src":"27393:18:25"},{"expression":{"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4738,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"27426:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"27449:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:25","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4739,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"27433:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"27433:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4751,"nodeType":"ExpressionStatement","src":"27426:45:25"},{"expression":{"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"27485:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"27495:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4757,"nodeType":"ExpressionStatement","src":"27485:19:25"},{"expression":{"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"27518:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4759,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"27528:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4763,"nodeType":"ExpressionStatement","src":"27518:18:25"},{"expression":{"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"27551:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"27577:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4771,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4765,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"27561:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"27561:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4777,"nodeType":"ExpressionStatement","src":"27551:47:25"}]},{"expression":{"id":4779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"27625:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4652,"id":4780,"nodeType":"Return","src":"27618:13:25"}]},"documentation":{"id":4646,"nodeType":"StructuredDocumentation","src":"26650:246:25","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4782,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:25","nodeType":"FunctionDefinition","parameters":{"id":4649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"value","nameLocation":"26925:5:25","nodeType":"VariableDeclaration","scope":4782,"src":"26917:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:25"},"returnParameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4782,"src":"26955:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:25"},"scope":4839,"src":"26901:737:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4818,"nodeType":"Block","src":"27875:184:25","statements":[{"id":4817,"nodeType":"UncheckedBlock","src":"27885:168:25","statements":[{"assignments":[4794],"declarations":[{"constant":false,"id":4794,"mutability":"mutable","name":"result","nameLocation":"27917:6:25","nodeType":"VariableDeclaration","scope":4817,"src":"27909:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4793,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4798,"initialValue":{"arguments":[{"id":4796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"27933:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4795,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4782,4819],"referencedDeclaration":4782,"src":"27926:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"27960:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4803,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"28002:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":4802,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"27985:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3245_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"28021:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"28036:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4800,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"27969:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6604_$","typeString":"type(library SafeCast)"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"27969:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4792,"id":4816,"nodeType":"Return","src":"27953:89:25"}]}]},"documentation":{"id":4783,"nodeType":"StructuredDocumentation","src":"27644:144:25","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4819,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:25","nodeType":"FunctionDefinition","parameters":{"id":4789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4785,"mutability":"mutable","name":"value","nameLocation":"27817:5:25","nodeType":"VariableDeclaration","scope":4819,"src":"27809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4788,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:25","nodeType":"VariableDeclaration","scope":4819,"src":"27824:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":4787,"nodeType":"UserDefinedTypeName","pathNode":{"id":4786,"name":"Rounding","nameLocations":["27824:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"27824:8:25"},"referencedDeclaration":3245,"src":"27824:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:25"},"returnParameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4819,"src":"27866:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4790,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:25"},"scope":4839,"src":"27793:266:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4837,"nodeType":"Block","src":"28257:48:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4830,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"28280:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4828,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:25","typeDescriptions":{}}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4827,"id":4836,"nodeType":"Return","src":"28267:31:25"}]},"documentation":{"id":4820,"nodeType":"StructuredDocumentation","src":"28065:113:25","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4838,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:25","nodeType":"FunctionDefinition","parameters":{"id":4824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:25","nodeType":"VariableDeclaration","scope":4838,"src":"28209:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":4822,"nodeType":"UserDefinedTypeName","pathNode":{"id":4821,"name":"Rounding","nameLocations":["28209:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"28209:8:25"},"referencedDeclaration":3245,"src":"28209:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:25"},"returnParameters":{"id":4827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4838,"src":"28251:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4825,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:25"},"scope":4839,"src":"28183:122:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4840,"src":"281:28026:25","usedErrors":[],"usedEvents":[]}],"src":"103:28205:25"},"id":25},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6604]},"id":6605,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4841,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4842,"nodeType":"StructuredDocumentation","src":"218:550:26","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6604,"linearizedBaseContracts":[6604],"name":"SafeCast","nameLocation":"777:8:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4843,"nodeType":"StructuredDocumentation","src":"792:68:26","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4849,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:26","nodeType":"ErrorDefinition","parameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4845,"mutability":"mutable","name":"bits","nameLocation":"908:4:26","nodeType":"VariableDeclaration","scope":4849,"src":"902:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4844,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4847,"mutability":"mutable","name":"value","nameLocation":"922:5:26","nodeType":"VariableDeclaration","scope":4849,"src":"914:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:26"},"src":"865:64:26"},{"documentation":{"id":4850,"nodeType":"StructuredDocumentation","src":"935:75:26","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4854,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:26","nodeType":"ErrorDefinition","parameters":{"id":4853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4852,"mutability":"mutable","name":"value","nameLocation":"1056:5:26","nodeType":"VariableDeclaration","scope":4854,"src":"1049:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4851,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:26"},"src":"1015:48:26"},{"documentation":{"id":4855,"nodeType":"StructuredDocumentation","src":"1069:67:26","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4861,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:26","nodeType":"ErrorDefinition","parameters":{"id":4860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"bits","nameLocation":"1183:4:26","nodeType":"VariableDeclaration","scope":4861,"src":"1177:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4856,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4859,"mutability":"mutable","name":"value","nameLocation":"1196:5:26","nodeType":"VariableDeclaration","scope":4861,"src":"1189:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4858,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:26"},"src":"1141:62:26"},{"documentation":{"id":4862,"nodeType":"StructuredDocumentation","src":"1209:75:26","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4866,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:26","nodeType":"ErrorDefinition","parameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"value","nameLocation":"1331:5:26","nodeType":"VariableDeclaration","scope":4866,"src":"1323:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:26"},"src":"1289:49:26"},{"body":{"id":4893,"nodeType":"Block","src":"1695:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"1709:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4876,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4875,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:26","memberName":"max","nodeType":"MemberAccess","src":"1717:17:26","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4887,"nodeType":"IfStatement","src":"1705:105:26","trueBody":{"id":4886,"nodeType":"Block","src":"1736:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:26","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"1793:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4881,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"1757:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4885,"nodeType":"RevertStatement","src":"1750:49:26"}]}},{"expression":{"arguments":[{"id":4890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"1834:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4888,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:26","typeDescriptions":{}}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4873,"id":4892,"nodeType":"Return","src":"1819:21:26"}]},"documentation":{"id":4867,"nodeType":"StructuredDocumentation","src":"1344:280:26","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4894,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:26","nodeType":"FunctionDefinition","parameters":{"id":4870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"value","nameLocation":"1656:5:26","nodeType":"VariableDeclaration","scope":4894,"src":"1648:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:26"},"returnParameters":{"id":4873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4894,"src":"1686:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4871,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:26","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:26"},"scope":6604,"src":"1629:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4921,"nodeType":"Block","src":"2204:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"2218:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4904,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4903,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:26","memberName":"max","nodeType":"MemberAccess","src":"2226:17:26","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4915,"nodeType":"IfStatement","src":"2214:105:26","trueBody":{"id":4914,"nodeType":"Block","src":"2245:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:26","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"2302:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4909,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"2266:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4913,"nodeType":"RevertStatement","src":"2259:49:26"}]}},{"expression":{"arguments":[{"id":4918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"2343:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4916,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:26","typeDescriptions":{}}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4901,"id":4920,"nodeType":"Return","src":"2328:21:26"}]},"documentation":{"id":4895,"nodeType":"StructuredDocumentation","src":"1853:280:26","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4922,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:26","nodeType":"FunctionDefinition","parameters":{"id":4898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4897,"mutability":"mutable","name":"value","nameLocation":"2165:5:26","nodeType":"VariableDeclaration","scope":4922,"src":"2157:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:26"},"returnParameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4922,"src":"2195:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4899,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:26","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:26"},"scope":6604,"src":"2138:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4949,"nodeType":"Block","src":"2713:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"2727:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4932,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4931,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:26","memberName":"max","nodeType":"MemberAccess","src":"2735:17:26","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4943,"nodeType":"IfStatement","src":"2723:105:26","trueBody":{"id":4942,"nodeType":"Block","src":"2754:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:26","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"2811:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4937,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"2775:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4941,"nodeType":"RevertStatement","src":"2768:49:26"}]}},{"expression":{"arguments":[{"id":4946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"2852:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4944,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:26","typeDescriptions":{}}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4929,"id":4948,"nodeType":"Return","src":"2837:21:26"}]},"documentation":{"id":4923,"nodeType":"StructuredDocumentation","src":"2362:280:26","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4950,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:26","nodeType":"FunctionDefinition","parameters":{"id":4926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"value","nameLocation":"2674:5:26","nodeType":"VariableDeclaration","scope":4950,"src":"2666:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:26"},"returnParameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4950,"src":"2704:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4927,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:26","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:26"},"scope":6604,"src":"2647:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4977,"nodeType":"Block","src":"3222:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"3236:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4960,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4959,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:26","memberName":"max","nodeType":"MemberAccess","src":"3244:17:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4971,"nodeType":"IfStatement","src":"3232:105:26","trueBody":{"id":4970,"nodeType":"Block","src":"3263:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:26","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"3320:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4965,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"3284:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4969,"nodeType":"RevertStatement","src":"3277:49:26"}]}},{"expression":{"arguments":[{"id":4974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"3361:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4972,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:26","typeDescriptions":{}}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4957,"id":4976,"nodeType":"Return","src":"3346:21:26"}]},"documentation":{"id":4951,"nodeType":"StructuredDocumentation","src":"2871:280:26","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4978,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:26","nodeType":"FunctionDefinition","parameters":{"id":4954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4953,"mutability":"mutable","name":"value","nameLocation":"3183:5:26","nodeType":"VariableDeclaration","scope":4978,"src":"3175:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:26"},"returnParameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4978,"src":"3213:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4955,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:26"},"scope":6604,"src":"3156:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5005,"nodeType":"Block","src":"3731:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"3745:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4988,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4987,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:26","memberName":"max","nodeType":"MemberAccess","src":"3753:17:26","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4999,"nodeType":"IfStatement","src":"3741:105:26","trueBody":{"id":4998,"nodeType":"Block","src":"3772:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:26","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"3829:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4993,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"3793:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4997,"nodeType":"RevertStatement","src":"3786:49:26"}]}},{"expression":{"arguments":[{"id":5002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"3870:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5000,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:26","typeDescriptions":{}}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4985,"id":5004,"nodeType":"Return","src":"3855:21:26"}]},"documentation":{"id":4979,"nodeType":"StructuredDocumentation","src":"3380:280:26","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5006,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:26","nodeType":"FunctionDefinition","parameters":{"id":4982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4981,"mutability":"mutable","name":"value","nameLocation":"3692:5:26","nodeType":"VariableDeclaration","scope":5006,"src":"3684:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4980,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:26"},"returnParameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5006,"src":"3722:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4983,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:26","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:26"},"scope":6604,"src":"3665:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5033,"nodeType":"Block","src":"4240:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"4254:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5016,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5015,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:26","memberName":"max","nodeType":"MemberAccess","src":"4262:17:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5027,"nodeType":"IfStatement","src":"4250:105:26","trueBody":{"id":5026,"nodeType":"Block","src":"4281:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:26","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"4338:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5021,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"4302:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5025,"nodeType":"RevertStatement","src":"4295:49:26"}]}},{"expression":{"arguments":[{"id":5030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"4379:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5028,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:26","typeDescriptions":{}}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5013,"id":5032,"nodeType":"Return","src":"4364:21:26"}]},"documentation":{"id":5007,"nodeType":"StructuredDocumentation","src":"3889:280:26","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5034,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:26","nodeType":"FunctionDefinition","parameters":{"id":5010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5009,"mutability":"mutable","name":"value","nameLocation":"4201:5:26","nodeType":"VariableDeclaration","scope":5034,"src":"4193:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:26"},"returnParameters":{"id":5013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5034,"src":"4231:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5011,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:26"},"scope":6604,"src":"4174:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5061,"nodeType":"Block","src":"4749:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"4763:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5044,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5043,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:26","memberName":"max","nodeType":"MemberAccess","src":"4771:17:26","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5055,"nodeType":"IfStatement","src":"4759:105:26","trueBody":{"id":5054,"nodeType":"Block","src":"4790:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:26","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"4847:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5049,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"4811:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5053,"nodeType":"RevertStatement","src":"4804:49:26"}]}},{"expression":{"arguments":[{"id":5058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"4888:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5056,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:26","typeDescriptions":{}}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5041,"id":5060,"nodeType":"Return","src":"4873:21:26"}]},"documentation":{"id":5035,"nodeType":"StructuredDocumentation","src":"4398:280:26","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5062,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:26","nodeType":"FunctionDefinition","parameters":{"id":5038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5037,"mutability":"mutable","name":"value","nameLocation":"4710:5:26","nodeType":"VariableDeclaration","scope":5062,"src":"4702:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5036,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:26"},"returnParameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5062,"src":"4740:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5039,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:26","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:26"},"scope":6604,"src":"4683:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5089,"nodeType":"Block","src":"5258:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"5272:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5072,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5071,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:26","memberName":"max","nodeType":"MemberAccess","src":"5280:17:26","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5083,"nodeType":"IfStatement","src":"5268:105:26","trueBody":{"id":5082,"nodeType":"Block","src":"5299:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:26","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"5356:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5077,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"5320:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5081,"nodeType":"RevertStatement","src":"5313:49:26"}]}},{"expression":{"arguments":[{"id":5086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"5397:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5084,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:26","typeDescriptions":{}}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5069,"id":5088,"nodeType":"Return","src":"5382:21:26"}]},"documentation":{"id":5063,"nodeType":"StructuredDocumentation","src":"4907:280:26","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5090,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:26","nodeType":"FunctionDefinition","parameters":{"id":5066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5065,"mutability":"mutable","name":"value","nameLocation":"5219:5:26","nodeType":"VariableDeclaration","scope":5090,"src":"5211:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5064,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:26"},"returnParameters":{"id":5069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5090,"src":"5249:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5067,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:26","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:26"},"scope":6604,"src":"5192:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5117,"nodeType":"Block","src":"5767:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"5781:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5100,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5099,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:26","memberName":"max","nodeType":"MemberAccess","src":"5789:17:26","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5111,"nodeType":"IfStatement","src":"5777:105:26","trueBody":{"id":5110,"nodeType":"Block","src":"5808:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:26","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"5865:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5105,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"5829:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5109,"nodeType":"RevertStatement","src":"5822:49:26"}]}},{"expression":{"arguments":[{"id":5114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"5906:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5112,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:26","typeDescriptions":{}}},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5097,"id":5116,"nodeType":"Return","src":"5891:21:26"}]},"documentation":{"id":5091,"nodeType":"StructuredDocumentation","src":"5416:280:26","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5118,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:26","nodeType":"FunctionDefinition","parameters":{"id":5094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5093,"mutability":"mutable","name":"value","nameLocation":"5728:5:26","nodeType":"VariableDeclaration","scope":5118,"src":"5720:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5092,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:26"},"returnParameters":{"id":5097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5118,"src":"5758:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5095,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:26","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:26"},"scope":6604,"src":"5701:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5145,"nodeType":"Block","src":"6276:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"6290:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5128,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5127,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:26","memberName":"max","nodeType":"MemberAccess","src":"6298:17:26","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5139,"nodeType":"IfStatement","src":"6286:105:26","trueBody":{"id":5138,"nodeType":"Block","src":"6317:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:26","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"6374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5133,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"6338:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5137,"nodeType":"RevertStatement","src":"6331:49:26"}]}},{"expression":{"arguments":[{"id":5142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"6415:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5140,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:26","typeDescriptions":{}}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5125,"id":5144,"nodeType":"Return","src":"6400:21:26"}]},"documentation":{"id":5119,"nodeType":"StructuredDocumentation","src":"5925:280:26","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5146,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:26","nodeType":"FunctionDefinition","parameters":{"id":5122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5121,"mutability":"mutable","name":"value","nameLocation":"6237:5:26","nodeType":"VariableDeclaration","scope":5146,"src":"6229:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5120,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:26"},"returnParameters":{"id":5125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5146,"src":"6267:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5123,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:26","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:26"},"scope":6604,"src":"6210:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5173,"nodeType":"Block","src":"6785:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"6799:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5156,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5155,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:26","memberName":"max","nodeType":"MemberAccess","src":"6807:17:26","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5167,"nodeType":"IfStatement","src":"6795:105:26","trueBody":{"id":5166,"nodeType":"Block","src":"6826:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:26","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"6883:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5161,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"6847:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5165,"nodeType":"RevertStatement","src":"6840:49:26"}]}},{"expression":{"arguments":[{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"6924:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5168,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:26","typeDescriptions":{}}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5153,"id":5172,"nodeType":"Return","src":"6909:21:26"}]},"documentation":{"id":5147,"nodeType":"StructuredDocumentation","src":"6434:280:26","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5174,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:26","nodeType":"FunctionDefinition","parameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"value","nameLocation":"6746:5:26","nodeType":"VariableDeclaration","scope":5174,"src":"6738:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:26"},"returnParameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5174,"src":"6776:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5151,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:26","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:26"},"scope":6604,"src":"6719:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5201,"nodeType":"Block","src":"7294:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"7308:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5184,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5183,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:26","memberName":"max","nodeType":"MemberAccess","src":"7316:17:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5195,"nodeType":"IfStatement","src":"7304:105:26","trueBody":{"id":5194,"nodeType":"Block","src":"7335:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:26","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"7392:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5189,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"7356:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5193,"nodeType":"RevertStatement","src":"7349:49:26"}]}},{"expression":{"arguments":[{"id":5198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"7433:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5196,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:26","typeDescriptions":{}}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5181,"id":5200,"nodeType":"Return","src":"7418:21:26"}]},"documentation":{"id":5175,"nodeType":"StructuredDocumentation","src":"6943:280:26","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5202,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:26","nodeType":"FunctionDefinition","parameters":{"id":5178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"value","nameLocation":"7255:5:26","nodeType":"VariableDeclaration","scope":5202,"src":"7247:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5176,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:26"},"returnParameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5202,"src":"7285:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5179,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:26"},"scope":6604,"src":"7228:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5229,"nodeType":"Block","src":"7803:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"7817:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5212,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5211,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:26","memberName":"max","nodeType":"MemberAccess","src":"7825:17:26","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5223,"nodeType":"IfStatement","src":"7813:105:26","trueBody":{"id":5222,"nodeType":"Block","src":"7844:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:26","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"7901:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5217,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"7865:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5221,"nodeType":"RevertStatement","src":"7858:49:26"}]}},{"expression":{"arguments":[{"id":5226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"7942:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5224,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:26","typeDescriptions":{}}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5209,"id":5228,"nodeType":"Return","src":"7927:21:26"}]},"documentation":{"id":5203,"nodeType":"StructuredDocumentation","src":"7452:280:26","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5230,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:26","nodeType":"FunctionDefinition","parameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"value","nameLocation":"7764:5:26","nodeType":"VariableDeclaration","scope":5230,"src":"7756:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:26"},"returnParameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5230,"src":"7794:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5207,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:26","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:26"},"scope":6604,"src":"7737:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5257,"nodeType":"Block","src":"8312:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"8326:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5240,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5239,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:26","memberName":"max","nodeType":"MemberAccess","src":"8334:17:26","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5251,"nodeType":"IfStatement","src":"8322:105:26","trueBody":{"id":5250,"nodeType":"Block","src":"8353:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:26","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"8410:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5245,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"8374:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5249,"nodeType":"RevertStatement","src":"8367:49:26"}]}},{"expression":{"arguments":[{"id":5254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"8451:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5252,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:26","typeDescriptions":{}}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5237,"id":5256,"nodeType":"Return","src":"8436:21:26"}]},"documentation":{"id":5231,"nodeType":"StructuredDocumentation","src":"7961:280:26","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5258,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:26","nodeType":"FunctionDefinition","parameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"value","nameLocation":"8273:5:26","nodeType":"VariableDeclaration","scope":5258,"src":"8265:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5232,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:26"},"returnParameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5258,"src":"8303:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5235,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:26","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:26"},"scope":6604,"src":"8246:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5285,"nodeType":"Block","src":"8821:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"8835:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5268,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5267,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:26","memberName":"max","nodeType":"MemberAccess","src":"8843:17:26","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5279,"nodeType":"IfStatement","src":"8831:105:26","trueBody":{"id":5278,"nodeType":"Block","src":"8862:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:26","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"8919:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5273,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"8883:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5277,"nodeType":"RevertStatement","src":"8876:49:26"}]}},{"expression":{"arguments":[{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"8960:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5280,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:26","typeDescriptions":{}}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5265,"id":5284,"nodeType":"Return","src":"8945:21:26"}]},"documentation":{"id":5259,"nodeType":"StructuredDocumentation","src":"8470:280:26","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5286,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:26","nodeType":"FunctionDefinition","parameters":{"id":5262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5261,"mutability":"mutable","name":"value","nameLocation":"8782:5:26","nodeType":"VariableDeclaration","scope":5286,"src":"8774:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5260,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:26"},"returnParameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5286,"src":"8812:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5263,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:26","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:26"},"scope":6604,"src":"8755:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5313,"nodeType":"Block","src":"9330:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"9344:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5296,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5295,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:26","memberName":"max","nodeType":"MemberAccess","src":"9352:17:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5307,"nodeType":"IfStatement","src":"9340:105:26","trueBody":{"id":5306,"nodeType":"Block","src":"9371:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"9428:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5301,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"9392:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5305,"nodeType":"RevertStatement","src":"9385:49:26"}]}},{"expression":{"arguments":[{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"9469:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5308,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:26","typeDescriptions":{}}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5293,"id":5312,"nodeType":"Return","src":"9454:21:26"}]},"documentation":{"id":5287,"nodeType":"StructuredDocumentation","src":"8979:280:26","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5314,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:26","nodeType":"FunctionDefinition","parameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5289,"mutability":"mutable","name":"value","nameLocation":"9291:5:26","nodeType":"VariableDeclaration","scope":5314,"src":"9283:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:26"},"returnParameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5314,"src":"9321:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5291,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:26"},"scope":6604,"src":"9264:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5341,"nodeType":"Block","src":"9839:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"9853:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5324,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5323,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:26","memberName":"max","nodeType":"MemberAccess","src":"9861:17:26","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5335,"nodeType":"IfStatement","src":"9849:105:26","trueBody":{"id":5334,"nodeType":"Block","src":"9880:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:26","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"9937:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5329,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"9901:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5333,"nodeType":"RevertStatement","src":"9894:49:26"}]}},{"expression":{"arguments":[{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"9978:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5336,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:26","typeDescriptions":{}}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5321,"id":5340,"nodeType":"Return","src":"9963:21:26"}]},"documentation":{"id":5315,"nodeType":"StructuredDocumentation","src":"9488:280:26","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5342,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:26","nodeType":"FunctionDefinition","parameters":{"id":5318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"value","nameLocation":"9800:5:26","nodeType":"VariableDeclaration","scope":5342,"src":"9792:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5316,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:26"},"returnParameters":{"id":5321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5342,"src":"9830:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5319,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:26","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:26"},"scope":6604,"src":"9773:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5369,"nodeType":"Block","src":"10348:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"10362:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5352,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5351,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:26","memberName":"max","nodeType":"MemberAccess","src":"10370:17:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5363,"nodeType":"IfStatement","src":"10358:105:26","trueBody":{"id":5362,"nodeType":"Block","src":"10389:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:26","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"10446:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5357,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"10410:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5361,"nodeType":"RevertStatement","src":"10403:49:26"}]}},{"expression":{"arguments":[{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"10487:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5364,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:26","typeDescriptions":{}}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5349,"id":5368,"nodeType":"Return","src":"10472:21:26"}]},"documentation":{"id":5343,"nodeType":"StructuredDocumentation","src":"9997:280:26","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5370,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:26","nodeType":"FunctionDefinition","parameters":{"id":5346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"mutability":"mutable","name":"value","nameLocation":"10309:5:26","nodeType":"VariableDeclaration","scope":5370,"src":"10301:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5344,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:26"},"returnParameters":{"id":5349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5370,"src":"10339:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5347,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:26"},"scope":6604,"src":"10282:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5397,"nodeType":"Block","src":"10857:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"10871:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5380,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5379,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:26","memberName":"max","nodeType":"MemberAccess","src":"10879:17:26","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5391,"nodeType":"IfStatement","src":"10867:105:26","trueBody":{"id":5390,"nodeType":"Block","src":"10898:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:26","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"10955:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5385,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"10919:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5389,"nodeType":"RevertStatement","src":"10912:49:26"}]}},{"expression":{"arguments":[{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"10996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5392,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:26","typeDescriptions":{}}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5377,"id":5396,"nodeType":"Return","src":"10981:21:26"}]},"documentation":{"id":5371,"nodeType":"StructuredDocumentation","src":"10506:280:26","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5398,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:26","nodeType":"FunctionDefinition","parameters":{"id":5374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5373,"mutability":"mutable","name":"value","nameLocation":"10818:5:26","nodeType":"VariableDeclaration","scope":5398,"src":"10810:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5372,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:26"},"returnParameters":{"id":5377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5398,"src":"10848:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5375,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:26","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:26"},"scope":6604,"src":"10791:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5425,"nodeType":"Block","src":"11360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"11374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5408,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5407,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:26","memberName":"max","nodeType":"MemberAccess","src":"11382:16:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5419,"nodeType":"IfStatement","src":"11370:103:26","trueBody":{"id":5418,"nodeType":"Block","src":"11400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"11456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5413,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"11421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5417,"nodeType":"RevertStatement","src":"11414:48:26"}]}},{"expression":{"arguments":[{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"11496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5420,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:26","typeDescriptions":{}}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5405,"id":5424,"nodeType":"Return","src":"11482:20:26"}]},"documentation":{"id":5399,"nodeType":"StructuredDocumentation","src":"11015:276:26","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5426,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:26","nodeType":"FunctionDefinition","parameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5401,"mutability":"mutable","name":"value","nameLocation":"11322:5:26","nodeType":"VariableDeclaration","scope":5426,"src":"11314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5400,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:26"},"returnParameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5426,"src":"11352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5403,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:26"},"scope":6604,"src":"11296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5453,"nodeType":"Block","src":"11860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"11874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5436,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5435,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:26","memberName":"max","nodeType":"MemberAccess","src":"11882:16:26","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5447,"nodeType":"IfStatement","src":"11870:103:26","trueBody":{"id":5446,"nodeType":"Block","src":"11900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"11956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5441,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"11921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5445,"nodeType":"RevertStatement","src":"11914:48:26"}]}},{"expression":{"arguments":[{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"11996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5448,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:26","typeDescriptions":{}}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5433,"id":5452,"nodeType":"Return","src":"11982:20:26"}]},"documentation":{"id":5427,"nodeType":"StructuredDocumentation","src":"11515:276:26","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5454,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:26","nodeType":"FunctionDefinition","parameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"value","nameLocation":"11822:5:26","nodeType":"VariableDeclaration","scope":5454,"src":"11814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5428,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:26"},"returnParameters":{"id":5433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5454,"src":"11852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5431,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:26","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:26"},"scope":6604,"src":"11796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5481,"nodeType":"Block","src":"12360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"12374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5464,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5463,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:26","memberName":"max","nodeType":"MemberAccess","src":"12382:16:26","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5475,"nodeType":"IfStatement","src":"12370:103:26","trueBody":{"id":5474,"nodeType":"Block","src":"12400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"12456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5469,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"12421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5473,"nodeType":"RevertStatement","src":"12414:48:26"}]}},{"expression":{"arguments":[{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"12496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5476,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:26","typeDescriptions":{}}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5461,"id":5480,"nodeType":"Return","src":"12482:20:26"}]},"documentation":{"id":5455,"nodeType":"StructuredDocumentation","src":"12015:276:26","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5482,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:26","nodeType":"FunctionDefinition","parameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"value","nameLocation":"12322:5:26","nodeType":"VariableDeclaration","scope":5482,"src":"12314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:26"},"returnParameters":{"id":5461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5482,"src":"12352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5459,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:26","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:26"},"scope":6604,"src":"12296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5509,"nodeType":"Block","src":"12860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5492,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5491,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:26","memberName":"max","nodeType":"MemberAccess","src":"12882:16:26","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5503,"nodeType":"IfStatement","src":"12870:103:26","trueBody":{"id":5502,"nodeType":"Block","src":"12900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5497,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"12921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5501,"nodeType":"RevertStatement","src":"12914:48:26"}]}},{"expression":{"arguments":[{"id":5506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5504,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:26","typeDescriptions":{}}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5489,"id":5508,"nodeType":"Return","src":"12982:20:26"}]},"documentation":{"id":5483,"nodeType":"StructuredDocumentation","src":"12515:276:26","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5510,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:26","nodeType":"FunctionDefinition","parameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"mutability":"mutable","name":"value","nameLocation":"12822:5:26","nodeType":"VariableDeclaration","scope":5510,"src":"12814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:26"},"returnParameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5510,"src":"12852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5487,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:26","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:26"},"scope":6604,"src":"12796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5537,"nodeType":"Block","src":"13360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"13374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5520,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5519,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:26","memberName":"max","nodeType":"MemberAccess","src":"13382:16:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5531,"nodeType":"IfStatement","src":"13370:103:26","trueBody":{"id":5530,"nodeType":"Block","src":"13400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"13456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5525,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"13421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5529,"nodeType":"RevertStatement","src":"13414:48:26"}]}},{"expression":{"arguments":[{"id":5534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"13496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5532,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:26","typeDescriptions":{}}},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5517,"id":5536,"nodeType":"Return","src":"13482:20:26"}]},"documentation":{"id":5511,"nodeType":"StructuredDocumentation","src":"13015:276:26","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5538,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:26","nodeType":"FunctionDefinition","parameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"value","nameLocation":"13322:5:26","nodeType":"VariableDeclaration","scope":5538,"src":"13314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5512,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:26"},"returnParameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5538,"src":"13352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5515,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:26"},"scope":6604,"src":"13296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5565,"nodeType":"Block","src":"13860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"13874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5548,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5547,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:26","memberName":"max","nodeType":"MemberAccess","src":"13882:16:26","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5559,"nodeType":"IfStatement","src":"13870:103:26","trueBody":{"id":5558,"nodeType":"Block","src":"13900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"13956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5553,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"13921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5557,"nodeType":"RevertStatement","src":"13914:48:26"}]}},{"expression":{"arguments":[{"id":5562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"13996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5560,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:26","typeDescriptions":{}}},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5545,"id":5564,"nodeType":"Return","src":"13982:20:26"}]},"documentation":{"id":5539,"nodeType":"StructuredDocumentation","src":"13515:276:26","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5566,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:26","nodeType":"FunctionDefinition","parameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5541,"mutability":"mutable","name":"value","nameLocation":"13822:5:26","nodeType":"VariableDeclaration","scope":5566,"src":"13814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5540,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:26"},"returnParameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5566,"src":"13852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5543,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:26","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:26"},"scope":6604,"src":"13796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5593,"nodeType":"Block","src":"14360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"14374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5576,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5575,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:26","memberName":"max","nodeType":"MemberAccess","src":"14382:16:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5587,"nodeType":"IfStatement","src":"14370:103:26","trueBody":{"id":5586,"nodeType":"Block","src":"14400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"14456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5581,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"14421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5585,"nodeType":"RevertStatement","src":"14414:48:26"}]}},{"expression":{"arguments":[{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"14496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5588,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:26","typeDescriptions":{}}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5573,"id":5592,"nodeType":"Return","src":"14482:20:26"}]},"documentation":{"id":5567,"nodeType":"StructuredDocumentation","src":"14015:276:26","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5594,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:26","nodeType":"FunctionDefinition","parameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5569,"mutability":"mutable","name":"value","nameLocation":"14322:5:26","nodeType":"VariableDeclaration","scope":5594,"src":"14314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5568,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:26"},"returnParameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5594,"src":"14352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5571,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:26"},"scope":6604,"src":"14296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5621,"nodeType":"Block","src":"14860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"14874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5604,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5603,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:26","memberName":"max","nodeType":"MemberAccess","src":"14882:16:26","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5615,"nodeType":"IfStatement","src":"14870:103:26","trueBody":{"id":5614,"nodeType":"Block","src":"14900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"14956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5609,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"14921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5613,"nodeType":"RevertStatement","src":"14914:48:26"}]}},{"expression":{"arguments":[{"id":5618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"14996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5616,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:26","typeDescriptions":{}}},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5601,"id":5620,"nodeType":"Return","src":"14982:20:26"}]},"documentation":{"id":5595,"nodeType":"StructuredDocumentation","src":"14515:276:26","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5622,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:26","nodeType":"FunctionDefinition","parameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"value","nameLocation":"14822:5:26","nodeType":"VariableDeclaration","scope":5622,"src":"14814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5596,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:26"},"returnParameters":{"id":5601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5622,"src":"14852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5599,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:26","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:26"},"scope":6604,"src":"14796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5649,"nodeType":"Block","src":"15360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"15374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5632,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5631,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:26","memberName":"max","nodeType":"MemberAccess","src":"15382:16:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5643,"nodeType":"IfStatement","src":"15370:103:26","trueBody":{"id":5642,"nodeType":"Block","src":"15400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"15456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5637,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"15421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5641,"nodeType":"RevertStatement","src":"15414:48:26"}]}},{"expression":{"arguments":[{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"15496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5644,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:26","typeDescriptions":{}}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5629,"id":5648,"nodeType":"Return","src":"15482:20:26"}]},"documentation":{"id":5623,"nodeType":"StructuredDocumentation","src":"15015:276:26","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5650,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:26","nodeType":"FunctionDefinition","parameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"value","nameLocation":"15322:5:26","nodeType":"VariableDeclaration","scope":5650,"src":"15314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5624,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:26"},"returnParameters":{"id":5629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5650,"src":"15352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5627,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:26"},"scope":6604,"src":"15296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5677,"nodeType":"Block","src":"15860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"15874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5660,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5659,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:26","memberName":"max","nodeType":"MemberAccess","src":"15882:16:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5671,"nodeType":"IfStatement","src":"15870:103:26","trueBody":{"id":5670,"nodeType":"Block","src":"15900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"15956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5665,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"15921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5669,"nodeType":"RevertStatement","src":"15914:48:26"}]}},{"expression":{"arguments":[{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"15996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5672,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:26","typeDescriptions":{}}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5657,"id":5676,"nodeType":"Return","src":"15982:20:26"}]},"documentation":{"id":5651,"nodeType":"StructuredDocumentation","src":"15515:276:26","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5678,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:26","nodeType":"FunctionDefinition","parameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5653,"mutability":"mutable","name":"value","nameLocation":"15822:5:26","nodeType":"VariableDeclaration","scope":5678,"src":"15814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5652,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:26"},"returnParameters":{"id":5657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5678,"src":"15852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5655,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:26"},"scope":6604,"src":"15796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5705,"nodeType":"Block","src":"16360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"16374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5688,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5687,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:26","memberName":"max","nodeType":"MemberAccess","src":"16382:16:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5699,"nodeType":"IfStatement","src":"16370:103:26","trueBody":{"id":5698,"nodeType":"Block","src":"16400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"16456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5693,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"16421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5697,"nodeType":"RevertStatement","src":"16414:48:26"}]}},{"expression":{"arguments":[{"id":5702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"16496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5700,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:26","typeDescriptions":{}}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5685,"id":5704,"nodeType":"Return","src":"16482:20:26"}]},"documentation":{"id":5679,"nodeType":"StructuredDocumentation","src":"16015:276:26","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5706,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:26","nodeType":"FunctionDefinition","parameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"value","nameLocation":"16322:5:26","nodeType":"VariableDeclaration","scope":5706,"src":"16314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5680,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:26"},"returnParameters":{"id":5685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5706,"src":"16352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5683,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:26"},"scope":6604,"src":"16296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5733,"nodeType":"Block","src":"16854:146:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"16868:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5716,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5715,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:26","memberName":"max","nodeType":"MemberAccess","src":"16876:15:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5727,"nodeType":"IfStatement","src":"16864:101:26","trueBody":{"id":5726,"nodeType":"Block","src":"16893:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"16948:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5721,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"16914:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5725,"nodeType":"RevertStatement","src":"16907:47:26"}]}},{"expression":{"arguments":[{"id":5730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"16987:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5728,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:26","typeDescriptions":{}}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5713,"id":5732,"nodeType":"Return","src":"16974:19:26"}]},"documentation":{"id":5707,"nodeType":"StructuredDocumentation","src":"16515:272:26","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5734,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:26","nodeType":"FunctionDefinition","parameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"value","nameLocation":"16817:5:26","nodeType":"VariableDeclaration","scope":5734,"src":"16809:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5708,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:26"},"returnParameters":{"id":5713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5734,"src":"16847:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5711,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:26"},"scope":6604,"src":"16792:208:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5756,"nodeType":"Block","src":"17236:128:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"17250:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5750,"nodeType":"IfStatement","src":"17246:81:26","trueBody":{"id":5749,"nodeType":"Block","src":"17261:66:26","statements":[{"errorCall":{"arguments":[{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"17310:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5745,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"17282:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5748,"nodeType":"RevertStatement","src":"17275:41:26"}]}},{"expression":{"arguments":[{"id":5753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"17351:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5751,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:26","typeDescriptions":{}}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5741,"id":5755,"nodeType":"Return","src":"17336:21:26"}]},"documentation":{"id":5735,"nodeType":"StructuredDocumentation","src":"17006:160:26","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5757,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:26","nodeType":"FunctionDefinition","parameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5737,"mutability":"mutable","name":"value","nameLocation":"17197:5:26","nodeType":"VariableDeclaration","scope":5757,"src":"17190:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5736,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:26"},"returnParameters":{"id":5741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5757,"src":"17227:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5739,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:26"},"scope":6604,"src":"17171:193:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5782,"nodeType":"Block","src":"17761:150:26","statements":[{"expression":{"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5765,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"17771:10:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"17791:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5766,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:26","typeDescriptions":{}}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5771,"nodeType":"ExpressionStatement","src":"17771:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5772,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"17811:10:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"17825:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5781,"nodeType":"IfStatement","src":"17807:98:26","trueBody":{"id":5780,"nodeType":"Block","src":"17832:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:26","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"17888:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5775,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"17853:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5779,"nodeType":"RevertStatement","src":"17846:48:26"}]}}]},"documentation":{"id":5758,"nodeType":"StructuredDocumentation","src":"17370:312:26","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5783,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:26","nodeType":"FunctionDefinition","parameters":{"id":5761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5760,"mutability":"mutable","name":"value","nameLocation":"17712:5:26","nodeType":"VariableDeclaration","scope":5783,"src":"17705:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5759,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:26"},"returnParameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:26","nodeType":"VariableDeclaration","scope":5783,"src":"17742:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5762,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:26"},"scope":6604,"src":"17687:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5808,"nodeType":"Block","src":"18308:150:26","statements":[{"expression":{"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5791,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"18318:10:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"18338:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5792,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:26","typeDescriptions":{}}},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5797,"nodeType":"ExpressionStatement","src":"18318:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5798,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"18358:10:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"18372:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5807,"nodeType":"IfStatement","src":"18354:98:26","trueBody":{"id":5806,"nodeType":"Block","src":"18379:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:26","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"18435:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5801,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"18400:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5805,"nodeType":"RevertStatement","src":"18393:48:26"}]}}]},"documentation":{"id":5784,"nodeType":"StructuredDocumentation","src":"17917:312:26","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5809,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:26","nodeType":"FunctionDefinition","parameters":{"id":5787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5786,"mutability":"mutable","name":"value","nameLocation":"18259:5:26","nodeType":"VariableDeclaration","scope":5809,"src":"18252:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5785,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:26"},"returnParameters":{"id":5790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5789,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:26","nodeType":"VariableDeclaration","scope":5809,"src":"18289:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5788,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:26"},"scope":6604,"src":"18234:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5834,"nodeType":"Block","src":"18855:150:26","statements":[{"expression":{"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5817,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"18865:10:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"18885:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5818,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:26","typeDescriptions":{}}},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5823,"nodeType":"ExpressionStatement","src":"18865:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5824,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"18905:10:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"18919:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5833,"nodeType":"IfStatement","src":"18901:98:26","trueBody":{"id":5832,"nodeType":"Block","src":"18926:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:26","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"18982:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5827,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"18947:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5831,"nodeType":"RevertStatement","src":"18940:48:26"}]}}]},"documentation":{"id":5810,"nodeType":"StructuredDocumentation","src":"18464:312:26","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5835,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:26","nodeType":"FunctionDefinition","parameters":{"id":5813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5812,"mutability":"mutable","name":"value","nameLocation":"18806:5:26","nodeType":"VariableDeclaration","scope":5835,"src":"18799:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5811,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:26"},"returnParameters":{"id":5816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5815,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:26","nodeType":"VariableDeclaration","scope":5835,"src":"18836:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5814,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:26"},"scope":6604,"src":"18781:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5860,"nodeType":"Block","src":"19402:150:26","statements":[{"expression":{"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5843,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"19412:10:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"19432:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5844,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:26","typeDescriptions":{}}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5849,"nodeType":"ExpressionStatement","src":"19412:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5850,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"19452:10:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"19466:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5859,"nodeType":"IfStatement","src":"19448:98:26","trueBody":{"id":5858,"nodeType":"Block","src":"19473:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:26","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"19529:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5853,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"19494:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5857,"nodeType":"RevertStatement","src":"19487:48:26"}]}}]},"documentation":{"id":5836,"nodeType":"StructuredDocumentation","src":"19011:312:26","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5861,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:26","nodeType":"FunctionDefinition","parameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5838,"mutability":"mutable","name":"value","nameLocation":"19353:5:26","nodeType":"VariableDeclaration","scope":5861,"src":"19346:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5837,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:26"},"returnParameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:26","nodeType":"VariableDeclaration","scope":5861,"src":"19383:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5840,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:26"},"scope":6604,"src":"19328:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5886,"nodeType":"Block","src":"19949:150:26","statements":[{"expression":{"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5869,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"19959:10:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"19979:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5870,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:26","typeDescriptions":{}}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5875,"nodeType":"ExpressionStatement","src":"19959:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5876,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"19999:10:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"20013:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5885,"nodeType":"IfStatement","src":"19995:98:26","trueBody":{"id":5884,"nodeType":"Block","src":"20020:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:26","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"20076:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5879,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"20041:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5883,"nodeType":"RevertStatement","src":"20034:48:26"}]}}]},"documentation":{"id":5862,"nodeType":"StructuredDocumentation","src":"19558:312:26","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5887,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:26","nodeType":"FunctionDefinition","parameters":{"id":5865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5864,"mutability":"mutable","name":"value","nameLocation":"19900:5:26","nodeType":"VariableDeclaration","scope":5887,"src":"19893:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5863,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:26"},"returnParameters":{"id":5868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5867,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:26","nodeType":"VariableDeclaration","scope":5887,"src":"19930:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5866,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:26"},"scope":6604,"src":"19875:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5912,"nodeType":"Block","src":"20496:150:26","statements":[{"expression":{"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5895,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"20506:10:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"20526:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5896,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:26","typeDescriptions":{}}},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5901,"nodeType":"ExpressionStatement","src":"20506:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5902,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"20546:10:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"20560:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5911,"nodeType":"IfStatement","src":"20542:98:26","trueBody":{"id":5910,"nodeType":"Block","src":"20567:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:26","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"20623:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5905,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"20588:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5909,"nodeType":"RevertStatement","src":"20581:48:26"}]}}]},"documentation":{"id":5888,"nodeType":"StructuredDocumentation","src":"20105:312:26","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5913,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:26","nodeType":"FunctionDefinition","parameters":{"id":5891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5890,"mutability":"mutable","name":"value","nameLocation":"20447:5:26","nodeType":"VariableDeclaration","scope":5913,"src":"20440:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5889,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:26"},"returnParameters":{"id":5894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5893,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:26","nodeType":"VariableDeclaration","scope":5913,"src":"20477:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5892,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:26"},"scope":6604,"src":"20422:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5938,"nodeType":"Block","src":"21043:150:26","statements":[{"expression":{"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5921,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"21053:10:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"21073:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5922,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:26","typeDescriptions":{}}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5927,"nodeType":"ExpressionStatement","src":"21053:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5928,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"21093:10:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"21107:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5937,"nodeType":"IfStatement","src":"21089:98:26","trueBody":{"id":5936,"nodeType":"Block","src":"21114:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:26","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"21170:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5931,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"21135:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5935,"nodeType":"RevertStatement","src":"21128:48:26"}]}}]},"documentation":{"id":5914,"nodeType":"StructuredDocumentation","src":"20652:312:26","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5939,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:26","nodeType":"FunctionDefinition","parameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"value","nameLocation":"20994:5:26","nodeType":"VariableDeclaration","scope":5939,"src":"20987:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5915,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:26"},"returnParameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:26","nodeType":"VariableDeclaration","scope":5939,"src":"21024:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5918,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:26"},"scope":6604,"src":"20969:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5964,"nodeType":"Block","src":"21590:150:26","statements":[{"expression":{"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5947,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"21600:10:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"21620:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5948,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:26","typeDescriptions":{}}},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5953,"nodeType":"ExpressionStatement","src":"21600:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5954,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"21640:10:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"21654:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5963,"nodeType":"IfStatement","src":"21636:98:26","trueBody":{"id":5962,"nodeType":"Block","src":"21661:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:26","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"21717:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5957,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"21682:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5961,"nodeType":"RevertStatement","src":"21675:48:26"}]}}]},"documentation":{"id":5940,"nodeType":"StructuredDocumentation","src":"21199:312:26","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5965,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:26","nodeType":"FunctionDefinition","parameters":{"id":5943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5942,"mutability":"mutable","name":"value","nameLocation":"21541:5:26","nodeType":"VariableDeclaration","scope":5965,"src":"21534:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5941,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:26"},"returnParameters":{"id":5946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5945,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:26","nodeType":"VariableDeclaration","scope":5965,"src":"21571:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5944,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:26"},"scope":6604,"src":"21516:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5990,"nodeType":"Block","src":"22137:150:26","statements":[{"expression":{"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5973,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"22147:10:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"22167:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5974,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:26","typeDescriptions":{}}},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5979,"nodeType":"ExpressionStatement","src":"22147:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5980,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"22187:10:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"22201:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5989,"nodeType":"IfStatement","src":"22183:98:26","trueBody":{"id":5988,"nodeType":"Block","src":"22208:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:26","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"22264:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5983,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"22229:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5987,"nodeType":"RevertStatement","src":"22222:48:26"}]}}]},"documentation":{"id":5966,"nodeType":"StructuredDocumentation","src":"21746:312:26","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5991,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:26","nodeType":"FunctionDefinition","parameters":{"id":5969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5968,"mutability":"mutable","name":"value","nameLocation":"22088:5:26","nodeType":"VariableDeclaration","scope":5991,"src":"22081:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5967,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:26"},"returnParameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5971,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:26","nodeType":"VariableDeclaration","scope":5991,"src":"22118:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5970,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:26"},"scope":6604,"src":"22063:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6016,"nodeType":"Block","src":"22684:150:26","statements":[{"expression":{"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5999,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"22694:10:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"22714:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6000,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:26","typeDescriptions":{}}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6005,"nodeType":"ExpressionStatement","src":"22694:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6006,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"22734:10:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"22748:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6015,"nodeType":"IfStatement","src":"22730:98:26","trueBody":{"id":6014,"nodeType":"Block","src":"22755:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:26","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"22811:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6009,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"22776:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6013,"nodeType":"RevertStatement","src":"22769:48:26"}]}}]},"documentation":{"id":5992,"nodeType":"StructuredDocumentation","src":"22293:312:26","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6017,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:26","nodeType":"FunctionDefinition","parameters":{"id":5995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5994,"mutability":"mutable","name":"value","nameLocation":"22635:5:26","nodeType":"VariableDeclaration","scope":6017,"src":"22628:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5993,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:26"},"returnParameters":{"id":5998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5997,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:26","nodeType":"VariableDeclaration","scope":6017,"src":"22665:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5996,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:26"},"scope":6604,"src":"22610:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6042,"nodeType":"Block","src":"23231:150:26","statements":[{"expression":{"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6025,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"23241:10:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"23261:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6026,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:26","typeDescriptions":{}}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6031,"nodeType":"ExpressionStatement","src":"23241:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6032,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"23281:10:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"23295:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6041,"nodeType":"IfStatement","src":"23277:98:26","trueBody":{"id":6040,"nodeType":"Block","src":"23302:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:26","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"23358:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6035,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"23323:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6039,"nodeType":"RevertStatement","src":"23316:48:26"}]}}]},"documentation":{"id":6018,"nodeType":"StructuredDocumentation","src":"22840:312:26","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6043,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:26","nodeType":"FunctionDefinition","parameters":{"id":6021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6020,"mutability":"mutable","name":"value","nameLocation":"23182:5:26","nodeType":"VariableDeclaration","scope":6043,"src":"23175:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6019,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:26"},"returnParameters":{"id":6024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6023,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:26","nodeType":"VariableDeclaration","scope":6043,"src":"23212:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6022,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:26"},"scope":6604,"src":"23157:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6068,"nodeType":"Block","src":"23778:150:26","statements":[{"expression":{"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6051,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"23788:10:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"23808:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6052,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:26","typeDescriptions":{}}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6057,"nodeType":"ExpressionStatement","src":"23788:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6058,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"23828:10:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"23842:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6067,"nodeType":"IfStatement","src":"23824:98:26","trueBody":{"id":6066,"nodeType":"Block","src":"23849:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:26","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"23905:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6061,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"23870:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6065,"nodeType":"RevertStatement","src":"23863:48:26"}]}}]},"documentation":{"id":6044,"nodeType":"StructuredDocumentation","src":"23387:312:26","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6069,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:26","nodeType":"FunctionDefinition","parameters":{"id":6047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"value","nameLocation":"23729:5:26","nodeType":"VariableDeclaration","scope":6069,"src":"23722:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6045,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:26"},"returnParameters":{"id":6050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:26","nodeType":"VariableDeclaration","scope":6069,"src":"23759:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6048,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:26"},"scope":6604,"src":"23704:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6094,"nodeType":"Block","src":"24325:150:26","statements":[{"expression":{"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6077,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"24335:10:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"24355:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6078,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:26","typeDescriptions":{}}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6083,"nodeType":"ExpressionStatement","src":"24335:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6084,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"24375:10:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"24389:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6093,"nodeType":"IfStatement","src":"24371:98:26","trueBody":{"id":6092,"nodeType":"Block","src":"24396:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:26","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"24452:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6087,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"24417:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6091,"nodeType":"RevertStatement","src":"24410:48:26"}]}}]},"documentation":{"id":6070,"nodeType":"StructuredDocumentation","src":"23934:312:26","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6095,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:26","nodeType":"FunctionDefinition","parameters":{"id":6073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6072,"mutability":"mutable","name":"value","nameLocation":"24276:5:26","nodeType":"VariableDeclaration","scope":6095,"src":"24269:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6071,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:26"},"returnParameters":{"id":6076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6075,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:26","nodeType":"VariableDeclaration","scope":6095,"src":"24306:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6074,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:26"},"scope":6604,"src":"24251:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6120,"nodeType":"Block","src":"24872:150:26","statements":[{"expression":{"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6103,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"24882:10:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"24902:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6104,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:26","typeDescriptions":{}}},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6109,"nodeType":"ExpressionStatement","src":"24882:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6110,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"24922:10:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"24936:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6119,"nodeType":"IfStatement","src":"24918:98:26","trueBody":{"id":6118,"nodeType":"Block","src":"24943:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:26","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"24999:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6113,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"24964:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6117,"nodeType":"RevertStatement","src":"24957:48:26"}]}}]},"documentation":{"id":6096,"nodeType":"StructuredDocumentation","src":"24481:312:26","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6121,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:26","nodeType":"FunctionDefinition","parameters":{"id":6099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6098,"mutability":"mutable","name":"value","nameLocation":"24823:5:26","nodeType":"VariableDeclaration","scope":6121,"src":"24816:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6097,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:26"},"returnParameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:26","nodeType":"VariableDeclaration","scope":6121,"src":"24853:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6100,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:26"},"scope":6604,"src":"24798:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6146,"nodeType":"Block","src":"25419:150:26","statements":[{"expression":{"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6129,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"25429:10:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"25449:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6130,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:26","typeDescriptions":{}}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6135,"nodeType":"ExpressionStatement","src":"25429:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6136,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"25469:10:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"25483:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6145,"nodeType":"IfStatement","src":"25465:98:26","trueBody":{"id":6144,"nodeType":"Block","src":"25490:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:26","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"25546:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6139,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"25511:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6143,"nodeType":"RevertStatement","src":"25504:48:26"}]}}]},"documentation":{"id":6122,"nodeType":"StructuredDocumentation","src":"25028:312:26","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6147,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:26","nodeType":"FunctionDefinition","parameters":{"id":6125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6124,"mutability":"mutable","name":"value","nameLocation":"25370:5:26","nodeType":"VariableDeclaration","scope":6147,"src":"25363:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6123,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:26"},"returnParameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:26","nodeType":"VariableDeclaration","scope":6147,"src":"25400:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6126,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:26"},"scope":6604,"src":"25345:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6172,"nodeType":"Block","src":"25966:150:26","statements":[{"expression":{"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6155,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"25976:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"25996:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6156,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:26","typeDescriptions":{}}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6161,"nodeType":"ExpressionStatement","src":"25976:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6162,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"26016:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"26030:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6171,"nodeType":"IfStatement","src":"26012:98:26","trueBody":{"id":6170,"nodeType":"Block","src":"26037:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"26093:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6165,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"26058:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6169,"nodeType":"RevertStatement","src":"26051:48:26"}]}}]},"documentation":{"id":6148,"nodeType":"StructuredDocumentation","src":"25575:312:26","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6173,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:26","nodeType":"FunctionDefinition","parameters":{"id":6151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6150,"mutability":"mutable","name":"value","nameLocation":"25917:5:26","nodeType":"VariableDeclaration","scope":6173,"src":"25910:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6149,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:26"},"returnParameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6153,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:26","nodeType":"VariableDeclaration","scope":6173,"src":"25947:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6152,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:26"},"scope":6604,"src":"25892:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6198,"nodeType":"Block","src":"26513:150:26","statements":[{"expression":{"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"26523:10:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"26543:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6182,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:26","typeDescriptions":{}}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6187,"nodeType":"ExpressionStatement","src":"26523:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6188,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"26563:10:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"26577:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6197,"nodeType":"IfStatement","src":"26559:98:26","trueBody":{"id":6196,"nodeType":"Block","src":"26584:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:26","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"26640:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6191,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"26605:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6195,"nodeType":"RevertStatement","src":"26598:48:26"}]}}]},"documentation":{"id":6174,"nodeType":"StructuredDocumentation","src":"26122:312:26","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6199,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:26","nodeType":"FunctionDefinition","parameters":{"id":6177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6176,"mutability":"mutable","name":"value","nameLocation":"26464:5:26","nodeType":"VariableDeclaration","scope":6199,"src":"26457:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6175,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:26"},"returnParameters":{"id":6180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6179,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:26","nodeType":"VariableDeclaration","scope":6199,"src":"26494:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6178,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:26"},"scope":6604,"src":"26439:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6224,"nodeType":"Block","src":"27060:150:26","statements":[{"expression":{"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"27070:10:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"27090:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6208,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:26","typeDescriptions":{}}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6213,"nodeType":"ExpressionStatement","src":"27070:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6214,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"27110:10:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"27124:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6223,"nodeType":"IfStatement","src":"27106:98:26","trueBody":{"id":6222,"nodeType":"Block","src":"27131:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:26","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"27187:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6217,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"27152:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6221,"nodeType":"RevertStatement","src":"27145:48:26"}]}}]},"documentation":{"id":6200,"nodeType":"StructuredDocumentation","src":"26669:312:26","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6225,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:26","nodeType":"FunctionDefinition","parameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"value","nameLocation":"27011:5:26","nodeType":"VariableDeclaration","scope":6225,"src":"27004:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6201,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:26"},"returnParameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:26","nodeType":"VariableDeclaration","scope":6225,"src":"27041:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6204,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:26"},"scope":6604,"src":"26986:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6250,"nodeType":"Block","src":"27607:150:26","statements":[{"expression":{"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"27617:10:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"27637:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6234,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:26","typeDescriptions":{}}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6239,"nodeType":"ExpressionStatement","src":"27617:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6240,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"27657:10:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"27671:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6249,"nodeType":"IfStatement","src":"27653:98:26","trueBody":{"id":6248,"nodeType":"Block","src":"27678:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:26","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"27734:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6243,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"27699:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6247,"nodeType":"RevertStatement","src":"27692:48:26"}]}}]},"documentation":{"id":6226,"nodeType":"StructuredDocumentation","src":"27216:312:26","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6251,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:26","nodeType":"FunctionDefinition","parameters":{"id":6229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6228,"mutability":"mutable","name":"value","nameLocation":"27558:5:26","nodeType":"VariableDeclaration","scope":6251,"src":"27551:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6227,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:26"},"returnParameters":{"id":6232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6231,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:26","nodeType":"VariableDeclaration","scope":6251,"src":"27588:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6230,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:26"},"scope":6604,"src":"27533:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6276,"nodeType":"Block","src":"28147:148:26","statements":[{"expression":{"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"28157:10:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"28176:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6260,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:26","typeDescriptions":{}}},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6265,"nodeType":"ExpressionStatement","src":"28157:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6266,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"28196:10:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"28210:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6275,"nodeType":"IfStatement","src":"28192:97:26","trueBody":{"id":6274,"nodeType":"Block","src":"28217:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"28272:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6269,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"28238:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6273,"nodeType":"RevertStatement","src":"28231:47:26"}]}}]},"documentation":{"id":6252,"nodeType":"StructuredDocumentation","src":"27763:307:26","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6277,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:26","nodeType":"FunctionDefinition","parameters":{"id":6255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6254,"mutability":"mutable","name":"value","nameLocation":"28099:5:26","nodeType":"VariableDeclaration","scope":6277,"src":"28092:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6253,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:26"},"returnParameters":{"id":6258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6257,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:26","nodeType":"VariableDeclaration","scope":6277,"src":"28129:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6256,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:26"},"scope":6604,"src":"28075:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6302,"nodeType":"Block","src":"28685:148:26","statements":[{"expression":{"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"28695:10:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"28714:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6286,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:26","typeDescriptions":{}}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6291,"nodeType":"ExpressionStatement","src":"28695:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6292,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"28734:10:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"28748:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6301,"nodeType":"IfStatement","src":"28730:97:26","trueBody":{"id":6300,"nodeType":"Block","src":"28755:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:26","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"28810:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6295,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"28776:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6299,"nodeType":"RevertStatement","src":"28769:47:26"}]}}]},"documentation":{"id":6278,"nodeType":"StructuredDocumentation","src":"28301:307:26","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6303,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:26","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"value","nameLocation":"28637:5:26","nodeType":"VariableDeclaration","scope":6303,"src":"28630:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6279,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:26"},"returnParameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:26","nodeType":"VariableDeclaration","scope":6303,"src":"28667:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6282,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:26"},"scope":6604,"src":"28613:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6328,"nodeType":"Block","src":"29223:148:26","statements":[{"expression":{"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"29233:10:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"29252:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6312,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:26","typeDescriptions":{}}},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6317,"nodeType":"ExpressionStatement","src":"29233:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6318,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"29272:10:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"29286:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6327,"nodeType":"IfStatement","src":"29268:97:26","trueBody":{"id":6326,"nodeType":"Block","src":"29293:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:26","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"29348:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6321,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"29314:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6325,"nodeType":"RevertStatement","src":"29307:47:26"}]}}]},"documentation":{"id":6304,"nodeType":"StructuredDocumentation","src":"28839:307:26","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6329,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:26","nodeType":"FunctionDefinition","parameters":{"id":6307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6306,"mutability":"mutable","name":"value","nameLocation":"29175:5:26","nodeType":"VariableDeclaration","scope":6329,"src":"29168:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6305,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:26"},"returnParameters":{"id":6310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6309,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:26","nodeType":"VariableDeclaration","scope":6329,"src":"29205:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6308,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:26"},"scope":6604,"src":"29151:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6354,"nodeType":"Block","src":"29761:148:26","statements":[{"expression":{"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"29771:10:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"29790:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6338,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:26","typeDescriptions":{}}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6343,"nodeType":"ExpressionStatement","src":"29771:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6344,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"29810:10:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"29824:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6353,"nodeType":"IfStatement","src":"29806:97:26","trueBody":{"id":6352,"nodeType":"Block","src":"29831:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:26","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"29886:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6347,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"29852:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6351,"nodeType":"RevertStatement","src":"29845:47:26"}]}}]},"documentation":{"id":6330,"nodeType":"StructuredDocumentation","src":"29377:307:26","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6355,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:26","nodeType":"FunctionDefinition","parameters":{"id":6333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6332,"mutability":"mutable","name":"value","nameLocation":"29713:5:26","nodeType":"VariableDeclaration","scope":6355,"src":"29706:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6331,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:26"},"returnParameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:26","nodeType":"VariableDeclaration","scope":6355,"src":"29743:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6334,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:26"},"scope":6604,"src":"29689:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6380,"nodeType":"Block","src":"30299:148:26","statements":[{"expression":{"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"30309:10:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"30328:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6364,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:26","typeDescriptions":{}}},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6369,"nodeType":"ExpressionStatement","src":"30309:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6370,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"30348:10:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"30362:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6379,"nodeType":"IfStatement","src":"30344:97:26","trueBody":{"id":6378,"nodeType":"Block","src":"30369:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"30424:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6373,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"30390:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6377,"nodeType":"RevertStatement","src":"30383:47:26"}]}}]},"documentation":{"id":6356,"nodeType":"StructuredDocumentation","src":"29915:307:26","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6381,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:26","nodeType":"FunctionDefinition","parameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"value","nameLocation":"30251:5:26","nodeType":"VariableDeclaration","scope":6381,"src":"30244:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6357,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:26"},"returnParameters":{"id":6362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:26","nodeType":"VariableDeclaration","scope":6381,"src":"30281:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6360,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:26"},"scope":6604,"src":"30227:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6406,"nodeType":"Block","src":"30837:148:26","statements":[{"expression":{"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"30847:10:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6384,"src":"30866:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6390,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:26","typeDescriptions":{}}},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6395,"nodeType":"ExpressionStatement","src":"30847:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6396,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"30886:10:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6384,"src":"30900:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6405,"nodeType":"IfStatement","src":"30882:97:26","trueBody":{"id":6404,"nodeType":"Block","src":"30907:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:26","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6384,"src":"30962:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6399,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"30928:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6403,"nodeType":"RevertStatement","src":"30921:47:26"}]}}]},"documentation":{"id":6382,"nodeType":"StructuredDocumentation","src":"30453:307:26","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6407,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:26","nodeType":"FunctionDefinition","parameters":{"id":6385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6384,"mutability":"mutable","name":"value","nameLocation":"30789:5:26","nodeType":"VariableDeclaration","scope":6407,"src":"30782:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6383,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:26"},"returnParameters":{"id":6388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6387,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:26","nodeType":"VariableDeclaration","scope":6407,"src":"30819:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6386,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:26"},"scope":6604,"src":"30765:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6432,"nodeType":"Block","src":"31375:148:26","statements":[{"expression":{"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"31385:10:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"31404:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6416,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:26","typeDescriptions":{}}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6421,"nodeType":"ExpressionStatement","src":"31385:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6422,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"31424:10:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"31438:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6431,"nodeType":"IfStatement","src":"31420:97:26","trueBody":{"id":6430,"nodeType":"Block","src":"31445:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"31500:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6425,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"31466:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6429,"nodeType":"RevertStatement","src":"31459:47:26"}]}}]},"documentation":{"id":6408,"nodeType":"StructuredDocumentation","src":"30991:307:26","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6433,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:26","nodeType":"FunctionDefinition","parameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6410,"mutability":"mutable","name":"value","nameLocation":"31327:5:26","nodeType":"VariableDeclaration","scope":6433,"src":"31320:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6409,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:26"},"returnParameters":{"id":6414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6413,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:26","nodeType":"VariableDeclaration","scope":6433,"src":"31357:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6412,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:26"},"scope":6604,"src":"31303:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6458,"nodeType":"Block","src":"31913:148:26","statements":[{"expression":{"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"31923:10:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"31942:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6442,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:26","typeDescriptions":{}}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6447,"nodeType":"ExpressionStatement","src":"31923:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6448,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"31962:10:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"31976:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6457,"nodeType":"IfStatement","src":"31958:97:26","trueBody":{"id":6456,"nodeType":"Block","src":"31983:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"32038:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6451,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"32004:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6455,"nodeType":"RevertStatement","src":"31997:47:26"}]}}]},"documentation":{"id":6434,"nodeType":"StructuredDocumentation","src":"31529:307:26","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6459,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:26","nodeType":"FunctionDefinition","parameters":{"id":6437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6436,"mutability":"mutable","name":"value","nameLocation":"31865:5:26","nodeType":"VariableDeclaration","scope":6459,"src":"31858:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6435,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:26"},"returnParameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:26","nodeType":"VariableDeclaration","scope":6459,"src":"31895:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6438,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:26"},"scope":6604,"src":"31841:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6484,"nodeType":"Block","src":"32451:148:26","statements":[{"expression":{"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"32461:10:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"32480:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6468,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:26","typeDescriptions":{}}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6473,"nodeType":"ExpressionStatement","src":"32461:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6474,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"32500:10:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"32514:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6483,"nodeType":"IfStatement","src":"32496:97:26","trueBody":{"id":6482,"nodeType":"Block","src":"32521:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"32576:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6477,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"32542:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6481,"nodeType":"RevertStatement","src":"32535:47:26"}]}}]},"documentation":{"id":6460,"nodeType":"StructuredDocumentation","src":"32067:307:26","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6485,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:26","nodeType":"FunctionDefinition","parameters":{"id":6463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"value","nameLocation":"32403:5:26","nodeType":"VariableDeclaration","scope":6485,"src":"32396:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6461,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:26"},"returnParameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:26","nodeType":"VariableDeclaration","scope":6485,"src":"32433:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6464,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:26"},"scope":6604,"src":"32379:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6510,"nodeType":"Block","src":"32989:148:26","statements":[{"expression":{"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6493,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"32999:10:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"33018:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6494,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:26","typeDescriptions":{}}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6499,"nodeType":"ExpressionStatement","src":"32999:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6500,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"33038:10:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"33052:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6509,"nodeType":"IfStatement","src":"33034:97:26","trueBody":{"id":6508,"nodeType":"Block","src":"33059:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"33114:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6503,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"33080:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6507,"nodeType":"RevertStatement","src":"33073:47:26"}]}}]},"documentation":{"id":6486,"nodeType":"StructuredDocumentation","src":"32605:307:26","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6511,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:26","nodeType":"FunctionDefinition","parameters":{"id":6489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6488,"mutability":"mutable","name":"value","nameLocation":"32941:5:26","nodeType":"VariableDeclaration","scope":6511,"src":"32934:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6487,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:26"},"returnParameters":{"id":6492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6491,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:26","nodeType":"VariableDeclaration","scope":6511,"src":"32971:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6490,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:26"},"scope":6604,"src":"32917:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6536,"nodeType":"Block","src":"33527:148:26","statements":[{"expression":{"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"33537:10:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"33556:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6520,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:26","typeDescriptions":{}}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6525,"nodeType":"ExpressionStatement","src":"33537:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6526,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"33576:10:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"33590:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6535,"nodeType":"IfStatement","src":"33572:97:26","trueBody":{"id":6534,"nodeType":"Block","src":"33597:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"33652:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6529,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"33618:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6533,"nodeType":"RevertStatement","src":"33611:47:26"}]}}]},"documentation":{"id":6512,"nodeType":"StructuredDocumentation","src":"33143:307:26","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6537,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:26","nodeType":"FunctionDefinition","parameters":{"id":6515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6514,"mutability":"mutable","name":"value","nameLocation":"33479:5:26","nodeType":"VariableDeclaration","scope":6537,"src":"33472:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6513,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:26"},"returnParameters":{"id":6518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6517,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:26","nodeType":"VariableDeclaration","scope":6537,"src":"33509:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6516,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:26"},"scope":6604,"src":"33455:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6562,"nodeType":"Block","src":"34058:146:26","statements":[{"expression":{"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"34068:10:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"34086:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6546,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:26","typeDescriptions":{}}},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6551,"nodeType":"ExpressionStatement","src":"34068:24:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6552,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"34106:10:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"34120:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6561,"nodeType":"IfStatement","src":"34102:96:26","trueBody":{"id":6560,"nodeType":"Block","src":"34127:71:26","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"34181:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6555,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"34148:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6559,"nodeType":"RevertStatement","src":"34141:46:26"}]}}]},"documentation":{"id":6538,"nodeType":"StructuredDocumentation","src":"33681:302:26","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6563,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:26","nodeType":"FunctionDefinition","parameters":{"id":6541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6540,"mutability":"mutable","name":"value","nameLocation":"34011:5:26","nodeType":"VariableDeclaration","scope":6563,"src":"34004:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6539,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:26"},"returnParameters":{"id":6544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6543,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:26","nodeType":"VariableDeclaration","scope":6563,"src":"34041:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6542,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:26"},"scope":6604,"src":"33988:216:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6592,"nodeType":"Block","src":"34444:250:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"34557:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6575,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:26","memberName":"max","nodeType":"MemberAccess","src":"34573:16:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6572,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:26","typeDescriptions":{}}},"id":6579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6586,"nodeType":"IfStatement","src":"34553:105:26","trueBody":{"id":6585,"nodeType":"Block","src":"34592:66:26","statements":[{"errorCall":{"arguments":[{"id":6582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"34641:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6581,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"34613:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6584,"nodeType":"RevertStatement","src":"34606:41:26"}]}},{"expression":{"arguments":[{"id":6589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"34681:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6587,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:26","typeDescriptions":{}}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6570,"id":6591,"nodeType":"Return","src":"34667:20:26"}]},"documentation":{"id":6564,"nodeType":"StructuredDocumentation","src":"34210:165:26","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6593,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:26","nodeType":"FunctionDefinition","parameters":{"id":6567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"mutability":"mutable","name":"value","nameLocation":"34406:5:26","nodeType":"VariableDeclaration","scope":6593,"src":"34398:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6565,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:26"},"returnParameters":{"id":6570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6593,"src":"34436:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6568,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:26"},"scope":6604,"src":"34380:314:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6602,"nodeType":"Block","src":"34853:87:26","statements":[{"AST":{"nativeSrc":"34888:46:26","nodeType":"YulBlock","src":"34888:46:26","statements":[{"nativeSrc":"34902:22:26","nodeType":"YulAssignment","src":"34902:22:26","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:26","nodeType":"YulIdentifier","src":"34921:1:26"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:26","nodeType":"YulIdentifier","src":"34914:6:26"},"nativeSrc":"34914:9:26","nodeType":"YulFunctionCall","src":"34914:9:26"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:26","nodeType":"YulIdentifier","src":"34907:6:26"},"nativeSrc":"34907:17:26","nodeType":"YulFunctionCall","src":"34907:17:26"},"variableNames":[{"name":"u","nativeSrc":"34902:1:26","nodeType":"YulIdentifier","src":"34902:1:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6596,"isOffset":false,"isSlot":false,"src":"34921:1:26","valueSize":1},{"declaration":6599,"isOffset":false,"isSlot":false,"src":"34902:1:26","valueSize":1}],"flags":["memory-safe"],"id":6601,"nodeType":"InlineAssembly","src":"34863:71:26"}]},"documentation":{"id":6594,"nodeType":"StructuredDocumentation","src":"34700:90:26","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6603,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:26","nodeType":"FunctionDefinition","parameters":{"id":6597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6596,"mutability":"mutable","name":"b","nameLocation":"34816:1:26","nodeType":"VariableDeclaration","scope":6603,"src":"34811:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6595,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:26"},"returnParameters":{"id":6600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6599,"mutability":"mutable","name":"u","nameLocation":"34850:1:26","nodeType":"VariableDeclaration","scope":6603,"src":"34842:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6598,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:26"},"scope":6604,"src":"34795:145:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6605,"src":"769:34173:26","usedErrors":[4849,4854,4861,4866],"usedEvents":[]}],"src":"192:34751:26"},"id":26},"contracts/RCCStake.sol":{"ast":{"absolutePath":"contracts/RCCStake.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"Address":[2993],"ContextUpgradeable":[844],"ERC165Upgradeable":[1060],"ERC1967Utils":[1695],"Errors":[3045],"IAccessControl":[1143],"IERC1363":[1225],"IERC1822Proxiable":[1264],"IERC20":[2298],"Initializable":[616],"Math":[4839],"Panic":[3097],"PausableUpgradeable":[1020],"RCCStake":[8560],"RCCStakeLib":[8594],"SafeCast":[6604],"SafeERC20":[2733],"UUPSUpgradeable":[798]},"id":8561,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6606,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"32:24:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6607,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8561,"sourceUnit":2299,"src":"58:56:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":6608,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8561,"sourceUnit":2734,"src":"115:65:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":6609,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8561,"sourceUnit":2994,"src":"181:51:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":6610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8561,"sourceUnit":4840,"src":"233:53:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":6611,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8561,"sourceUnit":617,"src":"288:75:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":6612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8561,"sourceUnit":799,"src":"364:77:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":6613,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8561,"sourceUnit":363,"src":"442:81:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":6614,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8561,"sourceUnit":1021,"src":"524:75:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/RCCStakeLib.sol","file":"./RCCStakeLib.sol","id":6615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8561,"sourceUnit":8595,"src":"600:27:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6616,"name":"Initializable","nameLocations":["946:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"946:13:27"},"id":6617,"nodeType":"InheritanceSpecifier","src":"946:13:27"},{"baseName":{"id":6618,"name":"UUPSUpgradeable","nameLocations":["965:15:27"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"965:15:27"},"id":6619,"nodeType":"InheritanceSpecifier","src":"965:15:27"},{"baseName":{"id":6620,"name":"PausableUpgradeable","nameLocations":["986:19:27"],"nodeType":"IdentifierPath","referencedDeclaration":1020,"src":"986:19:27"},"id":6621,"nodeType":"InheritanceSpecifier","src":"986:19:27"},{"baseName":{"id":6622,"name":"AccessControlUpgradeable","nameLocations":["1011:24:27"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"1011:24:27"},"id":6623,"nodeType":"InheritanceSpecifier","src":"1011:24:27"}],"canonicalName":"RCCStake","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8560,"linearizedBaseContracts":[8560,362,1060,3233,1143,1020,844,798,1264,616],"name":"RCCStake","nameLocation":"930:8:27","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6627,"libraryName":{"id":6624,"name":"SafeERC20","nameLocations":["1048:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":2733,"src":"1048:9:27"},"nodeType":"UsingForDirective","src":"1042:27:27","typeName":{"id":6626,"nodeType":"UserDefinedTypeName","pathNode":{"id":6625,"name":"IERC20","nameLocations":["1062:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"1062:6:27"},"referencedDeclaration":2298,"src":"1062:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}}},{"global":false,"id":6630,"libraryName":{"id":6628,"name":"Address","nameLocations":["1080:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":2993,"src":"1080:7:27"},"nodeType":"UsingForDirective","src":"1074:26:27","typeName":{"id":6629,"name":"address","nodeType":"ElementaryTypeName","src":"1092:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":6633,"libraryName":{"id":6631,"name":"Math","nameLocations":["1111:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":4839,"src":"1111:4:27"},"nodeType":"UsingForDirective","src":"1105:23:27","typeName":{"id":6632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"75b238fc","id":6638,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"1254:10:27","nodeType":"VariableDeclaration","scope":8560,"src":"1230:60:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1230:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"61646d696e5f726f6c65","id":6636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1277:12:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_589d473ba17c0f47d494622893831497bad25919b9afb8e33e9521b8963fccde","typeString":"literal_string \"admin_role\""},"value":"admin_role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_589d473ba17c0f47d494622893831497bad25919b9afb8e33e9521b8963fccde","typeString":"literal_string \"admin_role\""}],"id":6635,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1267:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1267:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"b908afa8","id":6643,"mutability":"constant","name":"UPGRADE_ROLE","nameLocation":"1320:12:27","nodeType":"VariableDeclaration","scope":8560,"src":"1296:72:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1296:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"757067726164655f6d616e616765725f726f6c65","id":6641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1345:22:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f47fc0c09ebbfe308d89b8035681a1164b9882bcfd49eb89861067738a30f5ab","typeString":"literal_string \"upgrade_manager_role\""},"value":"upgrade_manager_role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f47fc0c09ebbfe308d89b8035681a1164b9882bcfd49eb89861067738a30f5ab","typeString":"literal_string \"upgrade_manager_role\""}],"id":6640,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1335:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1335:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"bfc3ebba","id":6646,"mutability":"constant","name":"ETH_PID","nameLocation":"1398:7:27","nodeType":"VariableDeclaration","scope":8560,"src":"1374:35:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6644,"name":"uint256","nodeType":"ElementaryTypeName","src":"1374:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1408:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"48cd4cb1","id":6648,"mutability":"mutable","name":"startBlock","nameLocation":"1700:10:27","nodeType":"VariableDeclaration","scope":8560,"src":"1685:25:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1685:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"083c6323","id":6650,"mutability":"mutable","name":"endBlock","nameLocation":"1778:8:27","nodeType":"VariableDeclaration","scope":8560,"src":"1763:23:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6649,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"70ff0173","id":6652,"mutability":"mutable","name":"rccPerBlock","nameLocation":"1841:11:27","nodeType":"VariableDeclaration","scope":8560,"src":"1826:26:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1826:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2f3ffb9f","id":6654,"mutability":"mutable","name":"withdrawPaused","nameLocation":"1905:14:27","nodeType":"VariableDeclaration","scope":8560,"src":"1893:26:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6653,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"ab5e124a","id":6656,"mutability":"mutable","name":"claimPaused","nameLocation":"1969:11:27","nodeType":"VariableDeclaration","scope":8560,"src":"1957:23:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6655,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"a72d5bf4","id":6659,"mutability":"mutable","name":"RCC","nameLocation":"2017:3:27","nodeType":"VariableDeclaration","scope":8560,"src":"2003:17:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},"typeName":{"id":6658,"nodeType":"UserDefinedTypeName","pathNode":{"id":6657,"name":"IERC20","nameLocations":["2003:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"2003:6:27"},"referencedDeclaration":2298,"src":"2003:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"02559004","id":6661,"mutability":"mutable","name":"totalPoolWeight","nameLocation":"2093:15:27","nodeType":"VariableDeclaration","scope":8560,"src":"2078:30:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"fe313112","id":6665,"mutability":"mutable","name":"pool","nameLocation":"2141:4:27","nodeType":"VariableDeclaration","scope":8560,"src":"2115:30:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool[]"},"typeName":{"baseType":{"id":6663,"nodeType":"UserDefinedTypeName","pathNode":{"id":6662,"name":"RCCStakeLib.Pool","nameLocations":["2115:11:27","2127:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8577,"src":"2115:16:27"},"referencedDeclaration":8577,"src":"2115:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"}},"id":6664,"nodeType":"ArrayTypeName","src":"2115:18:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage_ptr","typeString":"struct RCCStakeLib.Pool[]"}},"visibility":"public"},{"constant":false,"functionSelector":"37849b3c","id":6672,"mutability":"mutable","name":"user","nameLocation":"2314:4:27","nodeType":"VariableDeclaration","scope":8560,"src":"2250:68:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$8593_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStakeLib.User))"},"typeName":{"id":6671,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6666,"name":"uint256","nodeType":"ElementaryTypeName","src":"2258:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2250:56:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$8593_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStakeLib.User))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6670,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6667,"name":"address","nodeType":"ElementaryTypeName","src":"2277:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2269:36:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8593_storage_$","typeString":"mapping(address => struct RCCStakeLib.User)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6669,"nodeType":"UserDefinedTypeName","pathNode":{"id":6668,"name":"RCCStakeLib.User","nameLocations":["2288:11:27","2300:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8593,"src":"2288:16:27"},"referencedDeclaration":8593,"src":"2288:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"153aae53b92218044bd5f43922617c6b253e50ac98a41b44c3acb5625ded3488","id":6677,"name":"SetRCC","nameLocation":"2422:6:27","nodeType":"EventDefinition","parameters":{"id":6676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6675,"indexed":true,"mutability":"mutable","name":"RCC","nameLocation":"2444:3:27","nodeType":"VariableDeclaration","scope":6677,"src":"2429:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},"typeName":{"id":6674,"nodeType":"UserDefinedTypeName","pathNode":{"id":6673,"name":"IERC20","nameLocations":["2429:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"2429:6:27"},"referencedDeclaration":2298,"src":"2429:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"2428:20:27"},"src":"2416:33:27"},{"anonymous":false,"eventSelector":"2523dfdafa00190f21a4cbd0c25179c8dd3cb34a6c17fea952ecca8fa8332c0e","id":6679,"name":"PausedWithdraw","nameLocation":"2460:14:27","nodeType":"EventDefinition","parameters":{"id":6678,"nodeType":"ParameterList","parameters":[],"src":"2474:2:27"},"src":"2454:23:27"},{"anonymous":false,"eventSelector":"027c975733baceca09666fae356a901e083676848aaf9710150079385daae743","id":6681,"name":"UnpausedWithdraw","nameLocation":"2488:16:27","nodeType":"EventDefinition","parameters":{"id":6680,"nodeType":"ParameterList","parameters":[],"src":"2504:2:27"},"src":"2482:25:27"},{"anonymous":false,"eventSelector":"443bf540e8151617cd5c39a681cc35a5a22be078b6f0cf16e5bd822b4c4b61ff","id":6683,"name":"PausedClaim","nameLocation":"2518:11:27","nodeType":"EventDefinition","parameters":{"id":6682,"nodeType":"ParameterList","parameters":[],"src":"2529:2:27"},"src":"2512:20:27"},{"anonymous":false,"eventSelector":"07c8faf23a72a53eb5c2c466dc81386a58b2a27d0cc3c7c580a3c12e372ba313","id":6685,"name":"UnpausedClaim","nameLocation":"2543:13:27","nodeType":"EventDefinition","parameters":{"id":6684,"nodeType":"ParameterList","parameters":[],"src":"2556:2:27"},"src":"2537:22:27"},{"anonymous":false,"eventSelector":"63b90b79f11a0f132bcb2c4a4ddd44abda45c1308a83b2919318df7f5f8b7be4","id":6689,"name":"SetStartBlock","nameLocation":"2570:13:27","nodeType":"EventDefinition","parameters":{"id":6688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6687,"indexed":true,"mutability":"mutable","name":"startBlock","nameLocation":"2600:10:27","nodeType":"VariableDeclaration","scope":6689,"src":"2584:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6686,"name":"uint256","nodeType":"ElementaryTypeName","src":"2584:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2583:28:27"},"src":"2564:48:27"},{"anonymous":false,"eventSelector":"1132c5baccb51da3d049fabc819697dc845fa224ad59d9b555507d6446b40850","id":6693,"name":"SetEndBlock","nameLocation":"2623:11:27","nodeType":"EventDefinition","parameters":{"id":6692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6691,"indexed":true,"mutability":"mutable","name":"endBlock","nameLocation":"2651:8:27","nodeType":"VariableDeclaration","scope":6693,"src":"2635:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6690,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2634:26:27"},"src":"2617:44:27"},{"anonymous":false,"eventSelector":"4c70925b625536dd633f6bd2d615c67fddc2e7c63c31164047a981a0df3fee54","id":6697,"name":"SetRCCPerBlock","nameLocation":"2672:14:27","nodeType":"EventDefinition","parameters":{"id":6696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6695,"indexed":true,"mutability":"mutable","name":"rccPerBlock","nameLocation":"2703:11:27","nodeType":"VariableDeclaration","scope":6697,"src":"2687:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2687:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2686:29:27"},"src":"2666:50:27"},{"anonymous":false,"eventSelector":"0fa296fce13e7a0e622b3a892e66220c248337289483a3cfa4130cde0caa1346","id":6709,"name":"AddPool","nameLocation":"2727:7:27","nodeType":"EventDefinition","parameters":{"id":6708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6699,"indexed":true,"mutability":"mutable","name":"stakeTokenAddress","nameLocation":"2760:17:27","nodeType":"VariableDeclaration","scope":6709,"src":"2744:33:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6698,"name":"address","nodeType":"ElementaryTypeName","src":"2744:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6701,"indexed":true,"mutability":"mutable","name":"poolWeight","nameLocation":"2803:10:27","nodeType":"VariableDeclaration","scope":6709,"src":"2787:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6700,"name":"uint256","nodeType":"ElementaryTypeName","src":"2787:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6703,"indexed":true,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"2839:15:27","nodeType":"VariableDeclaration","scope":6709,"src":"2823:31:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6702,"name":"uint256","nodeType":"ElementaryTypeName","src":"2823:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6705,"indexed":false,"mutability":"mutable","name":"minDepositAmount","nameLocation":"2872:16:27","nodeType":"VariableDeclaration","scope":6709,"src":"2864:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6707,"indexed":false,"mutability":"mutable","name":"unStakeLockedBlocks","nameLocation":"2906:19:27","nodeType":"VariableDeclaration","scope":6709,"src":"2898:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2898:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2734:197:27"},"src":"2721:211:27"},{"anonymous":false,"eventSelector":"30dffdedaa3e3b4849298233f7cd71d229956e875ab09270498c96b7cf9181fd","id":6717,"name":"UpdatePoolInfo","nameLocation":"3009:14:27","nodeType":"EventDefinition","parameters":{"id":6716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6711,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"3049:6:27","nodeType":"VariableDeclaration","scope":6717,"src":"3033:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6710,"name":"uint256","nodeType":"ElementaryTypeName","src":"3033:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6713,"indexed":true,"mutability":"mutable","name":"minDepositAmount","nameLocation":"3081:16:27","nodeType":"VariableDeclaration","scope":6717,"src":"3065:32:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6712,"name":"uint256","nodeType":"ElementaryTypeName","src":"3065:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6715,"indexed":true,"mutability":"mutable","name":"unStakeLockedBlocks","nameLocation":"3123:19:27","nodeType":"VariableDeclaration","scope":6717,"src":"3107:35:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6714,"name":"uint256","nodeType":"ElementaryTypeName","src":"3107:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3023:125:27"},"src":"3003:146:27"},{"anonymous":false,"eventSelector":"4b8fa3d6a87cb21d1bf4978bf60628ae358a28ac7f39de1751a481c6dd957617","id":6725,"name":"SetPoolWeight","nameLocation":"3160:13:27","nodeType":"EventDefinition","parameters":{"id":6724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"3199:6:27","nodeType":"VariableDeclaration","scope":6725,"src":"3183:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6721,"indexed":false,"mutability":"mutable","name":"poolWeight","nameLocation":"3223:10:27","nodeType":"VariableDeclaration","scope":6725,"src":"3215:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6720,"name":"uint256","nodeType":"ElementaryTypeName","src":"3215:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6723,"indexed":false,"mutability":"mutable","name":"totalPoolWeight","nameLocation":"3251:15:27","nodeType":"VariableDeclaration","scope":6725,"src":"3243:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6722,"name":"uint256","nodeType":"ElementaryTypeName","src":"3243:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3173:99:27"},"src":"3154:119:27"},{"anonymous":false,"eventSelector":"f5d2d72d9b25d6853afd7d0554a113b705234b6a68bb36b7f143662994632411","id":6733,"name":"UpdatePool","nameLocation":"3284:10:27","nodeType":"EventDefinition","parameters":{"id":6732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6727,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"3320:6:27","nodeType":"VariableDeclaration","scope":6733,"src":"3304:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6726,"name":"uint256","nodeType":"ElementaryTypeName","src":"3304:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6729,"indexed":true,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"3352:15:27","nodeType":"VariableDeclaration","scope":6733,"src":"3336:31:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6728,"name":"uint256","nodeType":"ElementaryTypeName","src":"3336:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6731,"indexed":false,"mutability":"mutable","name":"totalRCC","nameLocation":"3385:8:27","nodeType":"VariableDeclaration","scope":6733,"src":"3377:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6730,"name":"uint256","nodeType":"ElementaryTypeName","src":"3377:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3294:105:27"},"src":"3278:122:27"},{"anonymous":false,"eventSelector":"90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15","id":6741,"name":"Deposit","nameLocation":"3411:7:27","nodeType":"EventDefinition","parameters":{"id":6740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6735,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3435:4:27","nodeType":"VariableDeclaration","scope":6741,"src":"3419:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6734,"name":"address","nodeType":"ElementaryTypeName","src":"3419:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6737,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"3457:6:27","nodeType":"VariableDeclaration","scope":6741,"src":"3441:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6736,"name":"uint256","nodeType":"ElementaryTypeName","src":"3441:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6739,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3473:6:27","nodeType":"VariableDeclaration","scope":6741,"src":"3465:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6738,"name":"uint256","nodeType":"ElementaryTypeName","src":"3465:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3418:62:27"},"src":"3405:76:27"},{"anonymous":false,"eventSelector":"c80277265097707f6f12a4ac4c09d46c9926e2eea2536f63616cb04d9fcad7d6","id":6749,"name":"RequestUnstake","nameLocation":"3492:14:27","nodeType":"EventDefinition","parameters":{"id":6748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6743,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3532:4:27","nodeType":"VariableDeclaration","scope":6749,"src":"3516:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6742,"name":"address","nodeType":"ElementaryTypeName","src":"3516:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6745,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"3562:6:27","nodeType":"VariableDeclaration","scope":6749,"src":"3546:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6744,"name":"uint256","nodeType":"ElementaryTypeName","src":"3546:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6747,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3586:6:27","nodeType":"VariableDeclaration","scope":6749,"src":"3578:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6746,"name":"uint256","nodeType":"ElementaryTypeName","src":"3578:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3506:92:27"},"src":"3486:113:27"},{"anonymous":false,"eventSelector":"02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca94","id":6759,"name":"Withdraw","nameLocation":"3610:8:27","nodeType":"EventDefinition","parameters":{"id":6758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6751,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3644:4:27","nodeType":"VariableDeclaration","scope":6759,"src":"3628:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6750,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6753,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"3674:6:27","nodeType":"VariableDeclaration","scope":6759,"src":"3658:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6752,"name":"uint256","nodeType":"ElementaryTypeName","src":"3658:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6755,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3698:6:27","nodeType":"VariableDeclaration","scope":6759,"src":"3690:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6754,"name":"uint256","nodeType":"ElementaryTypeName","src":"3690:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6757,"indexed":true,"mutability":"mutable","name":"blockNumber","nameLocation":"3730:11:27","nodeType":"VariableDeclaration","scope":6759,"src":"3714:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6756,"name":"uint256","nodeType":"ElementaryTypeName","src":"3714:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3618:129:27"},"src":"3604:144:27"},{"anonymous":false,"eventSelector":"34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7","id":6767,"name":"Claim","nameLocation":"3759:5:27","nodeType":"EventDefinition","parameters":{"id":6766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6761,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3790:4:27","nodeType":"VariableDeclaration","scope":6767,"src":"3774:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6760,"name":"address","nodeType":"ElementaryTypeName","src":"3774:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6763,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"3820:6:27","nodeType":"VariableDeclaration","scope":6767,"src":"3804:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6762,"name":"uint256","nodeType":"ElementaryTypeName","src":"3804:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6765,"indexed":false,"mutability":"mutable","name":"RccReward","nameLocation":"3844:9:27","nodeType":"VariableDeclaration","scope":6767,"src":"3836:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6764,"name":"uint256","nodeType":"ElementaryTypeName","src":"3836:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3764:95:27"},"src":"3753:107:27"},{"anonymous":false,"eventSelector":"99039fcf0a98f484616c5196ee8b2ecfa971babf0b519848289ea4db381f85f7","id":6775,"name":"Stake","nameLocation":"3872:5:27","nodeType":"EventDefinition","parameters":{"id":6774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3894:4:27","nodeType":"VariableDeclaration","scope":6775,"src":"3878:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6768,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6771,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"3916:3:27","nodeType":"VariableDeclaration","scope":6775,"src":"3900:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6770,"name":"address","nodeType":"ElementaryTypeName","src":"3900:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6773,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3929:6:27","nodeType":"VariableDeclaration","scope":6775,"src":"3921:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6772,"name":"uint256","nodeType":"ElementaryTypeName","src":"3921:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3877:59:27"},"src":"3866:71:27"},{"anonymous":false,"eventSelector":"cf268deaafc5a69317ec5abde2ac50c6e40212c584c1857c9868834999da957e","id":6783,"name":"UnStake","nameLocation":"3948:7:27","nodeType":"EventDefinition","parameters":{"id":6782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3972:4:27","nodeType":"VariableDeclaration","scope":6783,"src":"3956:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6776,"name":"address","nodeType":"ElementaryTypeName","src":"3956:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6779,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"3994:3:27","nodeType":"VariableDeclaration","scope":6783,"src":"3978:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6778,"name":"address","nodeType":"ElementaryTypeName","src":"3978:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6781,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4007:6:27","nodeType":"VariableDeclaration","scope":6783,"src":"3999:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3999:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:59:27"},"src":"3942:73:27"},{"anonymous":false,"eventSelector":"f4cd80bada09ad3706c6e126e20868618cc5d21d580e515903ba8a807c86af22","id":6791,"name":"GetRewards","nameLocation":"4026:10:27","nodeType":"EventDefinition","parameters":{"id":6790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6785,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4053:4:27","nodeType":"VariableDeclaration","scope":6791,"src":"4037:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6784,"name":"address","nodeType":"ElementaryTypeName","src":"4037:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6787,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"4075:3:27","nodeType":"VariableDeclaration","scope":6791,"src":"4059:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6786,"name":"address","nodeType":"ElementaryTypeName","src":"4059:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6789,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4088:6:27","nodeType":"VariableDeclaration","scope":6791,"src":"4080:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4080:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4036:59:27"},"src":"4020:76:27"},{"body":{"id":6804,"nodeType":"Block","src":"4229:70:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6796,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"4247:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6797,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"4254:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4259:6:27","memberName":"length","nodeType":"MemberAccess","src":"4254:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4247:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420706964","id":6800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4267:13:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9","typeString":"literal_string \"invalid pid\""},"value":"invalid pid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9","typeString":"literal_string \"invalid pid\""}],"id":6795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4239:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4239:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6802,"nodeType":"ExpressionStatement","src":"4239:42:27"},{"id":6803,"nodeType":"PlaceholderStatement","src":"4291:1:27"}]},"id":6805,"name":"checkPid","nameLocation":"4206:8:27","nodeType":"ModifierDefinition","parameters":{"id":6794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6793,"mutability":"mutable","name":"_pid","nameLocation":"4223:4:27","nodeType":"VariableDeclaration","scope":6805,"src":"4215:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6792,"name":"uint256","nodeType":"ElementaryTypeName","src":"4215:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4214:14:27"},"src":"4197:102:27","virtual":false,"visibility":"internal"},{"body":{"id":6814,"nodeType":"Block","src":"4334:68:27","statements":[{"expression":{"arguments":[{"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4352:12:27","subExpression":{"id":6808,"name":"claimPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"4353:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636c61696d20697320706175736564","id":6810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4366:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa","typeString":"literal_string \"claim is paused\""},"value":"claim is paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa","typeString":"literal_string \"claim is paused\""}],"id":6807,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4344:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4344:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6812,"nodeType":"ExpressionStatement","src":"4344:40:27"},{"id":6813,"nodeType":"PlaceholderStatement","src":"4394:1:27"}]},"id":6815,"name":"whenNotClaimPaused","nameLocation":"4313:18:27","nodeType":"ModifierDefinition","parameters":{"id":6806,"nodeType":"ParameterList","parameters":[],"src":"4331:2:27"},"src":"4304:98:27","virtual":false,"visibility":"internal"},{"body":{"id":6824,"nodeType":"Block","src":"4440:74:27","statements":[{"expression":{"arguments":[{"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4458:15:27","subExpression":{"id":6818,"name":"withdrawPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"4459:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"776974686472617720697320706175736564","id":6820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4475:20:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0","typeString":"literal_string \"withdraw is paused\""},"value":"withdraw is paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0","typeString":"literal_string \"withdraw is paused\""}],"id":6817,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4450:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4450:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6822,"nodeType":"ExpressionStatement","src":"4450:46:27"},{"id":6823,"nodeType":"PlaceholderStatement","src":"4506:1:27"}]},"id":6825,"name":"whenNotWithdrawPaused","nameLocation":"4416:21:27","nodeType":"ModifierDefinition","parameters":{"id":6816,"nodeType":"ParameterList","parameters":[],"src":"4437:2:27"},"src":"4407:107:27","virtual":false,"visibility":"internal"},{"body":{"id":6897,"nodeType":"Block","src":"4952:671:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6841,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"4983:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6842,"name":"_endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"4998:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"737461727420626c6f636b206d757374206265206c657373207468616e20656e6420626c6f636b","id":6844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5021:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347","typeString":"literal_string \"start block must be less than end block\""},"value":"start block must be less than end block"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347","typeString":"literal_string \"start block must be less than end block\""}],"id":6840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4962:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4962:110:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6846,"nodeType":"ExpressionStatement","src":"4962:110:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6848,"name":"_rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"5090:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5105:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5090:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7263632070657220626c6f636b206d7573742062652067726561746572207468616e2030","id":6851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5108:38:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4","typeString":"literal_string \"rcc per block must be greater than 0\""},"value":"rcc per block must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4","typeString":"literal_string \"rcc per block must be greater than 0\""}],"id":6847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5082:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5082:65:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6853,"nodeType":"ExpressionStatement","src":"5082:65:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6854,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"5220:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5220:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6856,"nodeType":"ExpressionStatement","src":"5220:22:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6857,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"5252:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5252:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6859,"nodeType":"ExpressionStatement","src":"5252:24:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6860,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5286:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5286:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6862,"nodeType":"ExpressionStatement","src":"5286:17:27"},{"expression":{"arguments":[{"id":6864,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"5372:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6865,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5392:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5396:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5392:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6863,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5361:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6868,"nodeType":"ExpressionStatement","src":"5361:42:27"},{"expression":{"arguments":[{"id":6870,"name":"UPGRADE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"5424:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6871,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5438:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5442:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5438:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6869,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5413:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5413:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6874,"nodeType":"ExpressionStatement","src":"5413:36:27"},{"expression":{"arguments":[{"id":6876,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"5470:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6877,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5482:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5486:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5482:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6875,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5459:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5459:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6880,"nodeType":"ExpressionStatement","src":"5459:34:27"},{"expression":{"arguments":[{"id":6882,"name":"_RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"5511:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}],"id":6881,"name":"setRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"5504:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$returns$__$","typeString":"function (contract IERC20)"}},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5504:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6884,"nodeType":"ExpressionStatement","src":"5504:12:27"},{"expression":{"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6885,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"5526:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6886,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"5539:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5526:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6888,"nodeType":"ExpressionStatement","src":"5526:24:27"},{"expression":{"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6889,"name":"endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"5560:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6890,"name":"_endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"5571:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5560:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6892,"nodeType":"ExpressionStatement","src":"5560:20:27"},{"expression":{"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6893,"name":"rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"5590:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6894,"name":"_rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"5604:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5590:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6896,"nodeType":"ExpressionStatement","src":"5590:26:27"}]},"documentation":{"id":6826,"nodeType":"StructuredDocumentation","src":"4615:179:27","text":" @notice Set RCC token address. Set basic info when deploying.\n - 执行初始化动作\n - 设置角色权限\n - 设置代币奖励相关信息"},"functionSelector":"4ec81af1","id":6898,"implemented":true,"kind":"function","modifiers":[{"id":6838,"kind":"modifierInvocation","modifierName":{"id":6837,"name":"initializer","nameLocations":["4940:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":470,"src":"4940:11:27"},"nodeType":"ModifierInvocation","src":"4940:11:27"}],"name":"initialize","nameLocation":"4809:10:27","nodeType":"FunctionDefinition","parameters":{"id":6836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"_RCC","nameLocation":"4836:4:27","nodeType":"VariableDeclaration","scope":6898,"src":"4829:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},"typeName":{"id":6828,"nodeType":"UserDefinedTypeName","pathNode":{"id":6827,"name":"IERC20","nameLocations":["4829:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"4829:6:27"},"referencedDeclaration":2298,"src":"4829:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6831,"mutability":"mutable","name":"_startBlock","nameLocation":"4858:11:27","nodeType":"VariableDeclaration","scope":6898,"src":"4850:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6830,"name":"uint256","nodeType":"ElementaryTypeName","src":"4850:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6833,"mutability":"mutable","name":"_endBlock","nameLocation":"4887:9:27","nodeType":"VariableDeclaration","scope":6898,"src":"4879:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6832,"name":"uint256","nodeType":"ElementaryTypeName","src":"4879:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6835,"mutability":"mutable","name":"_rccPerBlock","nameLocation":"4914:12:27","nodeType":"VariableDeclaration","scope":6898,"src":"4906:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6834,"name":"uint256","nodeType":"ElementaryTypeName","src":"4906:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4819:113:27"},"returnParameters":{"id":6839,"nodeType":"ParameterList","parameters":[],"src":"4952:0:27"},"scope":8560,"src":"4800:823:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[752],"body":{"id":6907,"nodeType":"Block","src":"5812:2:27","statements":[]},"id":6908,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6904,"name":"UPGRADE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"5798:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6905,"kind":"modifierInvocation","modifierName":{"id":6903,"name":"onlyRole","nameLocations":["5789:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5789:8:27"},"nodeType":"ModifierInvocation","src":"5789:22:27"}],"name":"_authorizeUpgrade","nameLocation":"5712:17:27","nodeType":"FunctionDefinition","overrides":{"id":6902,"nodeType":"OverrideSpecifier","overrides":[],"src":"5780:8:27"},"parameters":{"id":6901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6900,"mutability":"mutable","name":"newImplementation","nameLocation":"5747:17:27","nodeType":"VariableDeclaration","scope":6908,"src":"5739:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6899,"name":"address","nodeType":"ElementaryTypeName","src":"5739:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5729:41:27"},"returnParameters":{"id":6906,"nodeType":"ParameterList","parameters":[],"src":"5812:0:27"},"scope":8560,"src":"5703:111:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6926,"nodeType":"Block","src":"6061:53:27","statements":[{"expression":{"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6918,"name":"RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"6071:3:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6919,"name":"_RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"6077:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"src":"6071:10:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"id":6921,"nodeType":"ExpressionStatement","src":"6071:10:27"},{"eventCall":{"arguments":[{"id":6923,"name":"RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"6103:3:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}],"id":6922,"name":"SetRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"6096:6:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IERC20_$2298_$returns$__$","typeString":"function (contract IERC20)"}},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6096:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6925,"nodeType":"EmitStatement","src":"6091:16:27"}]},"documentation":{"id":6909,"nodeType":"StructuredDocumentation","src":"5921:77:27","text":" @notice Set RCC token address. Can only be called by admin"},"functionSelector":"f5485d32","id":6927,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6915,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"6049:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6916,"kind":"modifierInvocation","modifierName":{"id":6914,"name":"onlyRole","nameLocations":["6040:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"6040:8:27"},"nodeType":"ModifierInvocation","src":"6040:20:27"}],"name":"setRCC","nameLocation":"6013:6:27","nodeType":"FunctionDefinition","parameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"_RCC","nameLocation":"6027:4:27","nodeType":"VariableDeclaration","scope":6927,"src":"6020:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"},"typeName":{"id":6911,"nodeType":"UserDefinedTypeName","pathNode":{"id":6910,"name":"IERC20","nameLocations":["6020:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":2298,"src":"6020:6:27"},"referencedDeclaration":2298,"src":"6020:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"6019:13:27"},"returnParameters":{"id":6917,"nodeType":"ParameterList","parameters":[],"src":"6061:0:27"},"scope":8560,"src":"6004:110:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6946,"nodeType":"Block","src":"6249:140:27","statements":[{"expression":{"arguments":[{"id":6935,"name":"withdrawPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"6267:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"77697468647261772068617320616c7265616479206265656e20756e706175736564","id":6936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6283:36:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81","typeString":"literal_string \"withdraw has already been unpaused\""},"value":"withdraw has already been unpaused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81","typeString":"literal_string \"withdraw has already been unpaused\""}],"id":6934,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6259:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6259:61:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6938,"nodeType":"ExpressionStatement","src":"6259:61:27"},{"expression":{"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6939,"name":"withdrawPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"6330:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6330:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6942,"nodeType":"ExpressionStatement","src":"6330:21:27"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6943,"name":"PausedWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"6366:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6366:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6945,"nodeType":"EmitStatement","src":"6361:21:27"}]},"documentation":{"id":6928,"nodeType":"StructuredDocumentation","src":"6120:71:27","text":" @notice Pause withdraw. Can only be called by admin."},"functionSelector":"6155e3de","id":6947,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6931,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"6237:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6932,"kind":"modifierInvocation","modifierName":{"id":6930,"name":"onlyRole","nameLocations":["6228:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"6228:8:27"},"nodeType":"ModifierInvocation","src":"6228:20:27"}],"name":"pauseWithdraw","nameLocation":"6205:13:27","nodeType":"FunctionDefinition","parameters":{"id":6929,"nodeType":"ParameterList","parameters":[],"src":"6218:2:27"},"returnParameters":{"id":6933,"nodeType":"ParameterList","parameters":[],"src":"6249:0:27"},"scope":8560,"src":"6196:193:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6969,"nodeType":"Block","src":"6534:178:27","statements":[{"expression":{"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6954,"name":"withdrawPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"6544:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6561:15:27","subExpression":{"id":6955,"name":"withdrawPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"6562:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6544:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6958,"nodeType":"ExpressionStatement","src":"6544:32:27"},{"condition":{"id":6959,"name":"withdrawPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"6590:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6967,"nodeType":"Block","src":"6658:48:27","statements":[{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6964,"name":"UnpausedWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"6677:16:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6677:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6966,"nodeType":"EmitStatement","src":"6672:23:27"}]},"id":6968,"nodeType":"IfStatement","src":"6586:120:27","trueBody":{"id":6963,"nodeType":"Block","src":"6606:46:27","statements":[{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6960,"name":"PausedWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"6625:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6625:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6962,"nodeType":"EmitStatement","src":"6620:21:27"}]}}]},"documentation":{"id":6948,"nodeType":"StructuredDocumentation","src":"6395:73:27","text":" @notice Unpause withdraw. Can only be called by admin."},"functionSelector":"80cce73f","id":6970,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6951,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"6522:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6952,"kind":"modifierInvocation","modifierName":{"id":6950,"name":"onlyRole","nameLocations":["6513:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"6513:8:27"},"nodeType":"ModifierInvocation","src":"6513:20:27"}],"name":"toggleWithdrawPause","nameLocation":"6482:19:27","nodeType":"FunctionDefinition","parameters":{"id":6949,"nodeType":"ParameterList","parameters":[],"src":"6501:2:27"},"returnParameters":{"id":6953,"nodeType":"ParameterList","parameters":[],"src":"6534:0:27"},"scope":8560,"src":"6473:239:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6991,"nodeType":"Block","src":"6776:163:27","statements":[{"expression":{"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6976,"name":"claimPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"6786:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6800:12:27","subExpression":{"id":6977,"name":"claimPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"6801:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6786:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6980,"nodeType":"ExpressionStatement","src":"6786:26:27"},{"condition":{"id":6981,"name":"claimPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"6826:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6989,"nodeType":"Block","src":"6888:45:27","statements":[{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6986,"name":"UnpausedClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"6907:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6907:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6988,"nodeType":"EmitStatement","src":"6902:20:27"}]},"id":6990,"nodeType":"IfStatement","src":"6822:111:27","trueBody":{"id":6985,"nodeType":"Block","src":"6839:43:27","statements":[{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6982,"name":"PausedClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"6858:11:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6858:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6984,"nodeType":"EmitStatement","src":"6853:18:27"}]}}]},"functionSelector":"ae35a8d5","id":6992,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6973,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"6764:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6974,"kind":"modifierInvocation","modifierName":{"id":6972,"name":"onlyRole","nameLocations":["6755:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"6755:8:27"},"nodeType":"ModifierInvocation","src":"6755:20:27"}],"name":"toggleClaimPause","nameLocation":"6727:16:27","nodeType":"FunctionDefinition","parameters":{"id":6971,"nodeType":"ParameterList","parameters":[],"src":"6743:2:27"},"returnParameters":{"id":6975,"nodeType":"ParameterList","parameters":[],"src":"6776:0:27"},"scope":8560,"src":"6718:221:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7016,"nodeType":"Block","src":"7209:147:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7002,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"7227:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7003,"name":"endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"7242:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7227:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420737461727420626c6f636b","id":7005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7252:21:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_6931c31d4f12cf701d2bae3519754547c6c993e2548333d63706fa6eb15e9c7c","typeString":"literal_string \"Invalid start block\""},"value":"Invalid start block"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6931c31d4f12cf701d2bae3519754547c6c993e2548333d63706fa6eb15e9c7c","typeString":"literal_string \"Invalid start block\""}],"id":7001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7219:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7219:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7007,"nodeType":"ExpressionStatement","src":"7219:55:27"},{"expression":{"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7008,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"7284:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7009,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"7297:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7011,"nodeType":"ExpressionStatement","src":"7284:24:27"},{"eventCall":{"arguments":[{"id":7013,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"7337:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7012,"name":"SetStartBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"7323:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7323:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7015,"nodeType":"EmitStatement","src":"7318:31:27"}]},"documentation":{"id":6993,"nodeType":"StructuredDocumentation","src":"7049:83:27","text":" @notice Update staking start block. Can only be called by admin."},"functionSelector":"f35e4a6e","id":7017,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6998,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"7197:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6999,"kind":"modifierInvocation","modifierName":{"id":6997,"name":"onlyRole","nameLocations":["7188:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"7188:8:27"},"nodeType":"ModifierInvocation","src":"7188:20:27"}],"name":"setStartBlock","nameLocation":"7146:13:27","nodeType":"FunctionDefinition","parameters":{"id":6996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6995,"mutability":"mutable","name":"_startBlock","nameLocation":"7168:11:27","nodeType":"VariableDeclaration","scope":7017,"src":"7160:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6994,"name":"uint256","nodeType":"ElementaryTypeName","src":"7160:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7159:21:27"},"returnParameters":{"id":7000,"nodeType":"ParameterList","parameters":[],"src":"7209:0:27"},"scope":8560,"src":"7137:219:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7041,"nodeType":"Block","src":"7516:137:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7027,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"7534:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7028,"name":"_endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"7548:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7534:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420656e6420626c6f636b","id":7030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7559:19:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_11d6ed57bc2b60051e8a3bda6c3bc12d844aa2380e7d2f1336e05a70bb63dc7e","typeString":"literal_string \"Invalid end block\""},"value":"Invalid end block"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11d6ed57bc2b60051e8a3bda6c3bc12d844aa2380e7d2f1336e05a70bb63dc7e","typeString":"literal_string \"Invalid end block\""}],"id":7026,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7526:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7526:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7032,"nodeType":"ExpressionStatement","src":"7526:53:27"},{"expression":{"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7033,"name":"endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"7589:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7034,"name":"_endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"7600:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7589:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7036,"nodeType":"ExpressionStatement","src":"7589:20:27"},{"eventCall":{"arguments":[{"id":7038,"name":"_endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"7636:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7037,"name":"SetEndBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"7624:11:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7040,"nodeType":"EmitStatement","src":"7619:27:27"}]},"documentation":{"id":7018,"nodeType":"StructuredDocumentation","src":"7362:81:27","text":" @notice Update staking end block. Can only be called by admin."},"functionSelector":"c713aa94","id":7042,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7023,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"7504:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7024,"kind":"modifierInvocation","modifierName":{"id":7022,"name":"onlyRole","nameLocations":["7495:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"7495:8:27"},"nodeType":"ModifierInvocation","src":"7495:20:27"}],"name":"setEndBlock","nameLocation":"7457:11:27","nodeType":"FunctionDefinition","parameters":{"id":7021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7020,"mutability":"mutable","name":"_endBlock","nameLocation":"7477:9:27","nodeType":"VariableDeclaration","scope":7042,"src":"7469:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7019,"name":"uint256","nodeType":"ElementaryTypeName","src":"7469:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7468:19:27"},"returnParameters":{"id":7025,"nodeType":"ParameterList","parameters":[],"src":"7516:0:27"},"scope":8560,"src":"7448:205:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7066,"nodeType":"Block","src":"7833:146:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7052,"name":"_rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"7851:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7866:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7851:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964205243432070657220626c6f636b","id":7055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7869:23:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_31d5b1c22ea6e76334ac16bb5682be30c83b68d64d59c704e05e7e51c06d2e57","typeString":"literal_string \"Invalid RCC per block\""},"value":"Invalid RCC per block"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_31d5b1c22ea6e76334ac16bb5682be30c83b68d64d59c704e05e7e51c06d2e57","typeString":"literal_string \"Invalid RCC per block\""}],"id":7051,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7843:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7843:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7057,"nodeType":"ExpressionStatement","src":"7843:50:27"},{"expression":{"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7058,"name":"rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"7903:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7059,"name":"_rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"7917:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7903:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7061,"nodeType":"ExpressionStatement","src":"7903:26:27"},{"eventCall":{"arguments":[{"id":7063,"name":"_rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"7959:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7062,"name":"SetRCCPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"7944:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7944:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7065,"nodeType":"EmitStatement","src":"7939:33:27"}]},"documentation":{"id":7043,"nodeType":"StructuredDocumentation","src":"7659:95:27","text":" @notice Update the RCC reward amount per block. Can only be called by admin."},"functionSelector":"bed66c08","id":7067,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7048,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"7821:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7049,"kind":"modifierInvocation","modifierName":{"id":7047,"name":"onlyRole","nameLocations":["7812:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"7812:8:27"},"nodeType":"ModifierInvocation","src":"7812:20:27"}],"name":"setRCCPerBlock","nameLocation":"7768:14:27","nodeType":"FunctionDefinition","parameters":{"id":7046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7045,"mutability":"mutable","name":"_rccPerBlock","nameLocation":"7791:12:27","nodeType":"VariableDeclaration","scope":7067,"src":"7783:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7044,"name":"uint256","nodeType":"ElementaryTypeName","src":"7783:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7782:22:27"},"returnParameters":{"id":7050,"nodeType":"ParameterList","parameters":[],"src":"7833:0:27"},"scope":8560,"src":"7759:220:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7173,"nodeType":"Block","src":"8540:1554:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7084,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"8674:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8679:6:27","memberName":"length","nodeType":"MemberAccess","src":"8674:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8688:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8674:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7112,"nodeType":"Block","src":"8853:149:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7103,"name":"_stakeTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"8892:18:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":7106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8922:3:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8914:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7104,"name":"address","nodeType":"ElementaryTypeName","src":"8914:7:27","typeDescriptions":{}}},"id":7107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8914:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8892:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74686520666972737420706f6f6c206d7573742062652045544820706f6f6c","id":7109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8944:33:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe","typeString":"literal_string \"the first pool must be ETH pool\""},"value":"the first pool must be ETH pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe","typeString":"literal_string \"the first pool must be ETH pool\""}],"id":7102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8867:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8867:124:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7111,"nodeType":"ExpressionStatement","src":"8867:124:27"}]},"id":7113,"nodeType":"IfStatement","src":"8670:332:27","trueBody":{"id":7101,"nodeType":"Block","src":"8691:156:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7089,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"8730:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7091,"indexExpression":{"hexValue":"30","id":7090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8735:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8730:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"id":7092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8738:17:27","memberName":"stakeTokenAddress","nodeType":"MemberAccess","referencedDeclaration":8564,"src":"8730:25:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":7095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8767:3:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8759:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7093,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:27","typeDescriptions":{}}},"id":7096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8759:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8730:41:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74686520666972737420706f6f6c206d7573742062652045544820706f6f6c","id":7098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8789:33:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe","typeString":"literal_string \"the first pool must be ETH pool\""},"value":"the first pool must be ETH pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe","typeString":"literal_string \"the first pool must be ETH pool\""}],"id":7088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8705:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8705:131:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7100,"nodeType":"ExpressionStatement","src":"8705:131:27"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7115,"name":"_unStakeLockedBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"9111:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9134:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9111:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964207769746864726177206c6f636b656420626c6f636b73","id":7118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9137:32:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691","typeString":"literal_string \"invalid withdraw locked blocks\""},"value":"invalid withdraw locked blocks"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691","typeString":"literal_string \"invalid withdraw locked blocks\""}],"id":7114,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9103:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9103:67:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7120,"nodeType":"ExpressionStatement","src":"9103:67:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7122,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9226:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9232:6:27","memberName":"number","nodeType":"MemberAccess","src":"9226:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7124,"name":"endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"9241:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9226:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616c726561647920656e646564","id":7126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9251:15:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97","typeString":"literal_string \"already ended\""},"value":"already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97","typeString":"literal_string \"already ended\""}],"id":7121,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9218:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9218:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7128,"nodeType":"ExpressionStatement","src":"9218:49:27"},{"condition":{"id":7129,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"9281:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7134,"nodeType":"IfStatement","src":"9277:59:27","trueBody":{"id":7133,"nodeType":"Block","src":"9294:42:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7130,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"9308:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9308:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7132,"nodeType":"ExpressionStatement","src":"9308:17:27"}]}},{"assignments":[7136],"declarations":[{"constant":false,"id":7136,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"9353:15:27","nodeType":"VariableDeclaration","scope":7173,"src":"9345:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7135,"name":"uint256","nodeType":"ElementaryTypeName","src":"9345:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7145,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7137,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9371:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9377:6:27","memberName":"number","nodeType":"MemberAccess","src":"9371:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7139,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"9386:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9371:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7143,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"9438:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9371:77:27","trueExpression":{"expression":{"id":7141,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9411:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9417:6:27","memberName":"number","nodeType":"MemberAccess","src":"9411:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9345:103:27"},{"expression":{"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7146,"name":"totalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"9458:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7147,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"9477:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9458:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7149,"nodeType":"ExpressionStatement","src":"9458:30:27"},{"expression":{"arguments":[{"arguments":[{"id":7155,"name":"_stakeTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"9575:18:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7156,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"9623:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7157,"name":"lastRewardBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"9669:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":7158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9729:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9766:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7160,"name":"_minDepositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"9803:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7161,"name":"_unStakeLockedBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"9859:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7153,"name":"RCCStakeLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"9521:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RCCStakeLib_$8594_$","typeString":"type(library RCCStakeLib)"}},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9533:4:27","memberName":"Pool","nodeType":"MemberAccess","referencedDeclaration":8577,"src":"9521:16:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Pool_$8577_storage_ptr_$","typeString":"type(struct RCCStakeLib.Pool storage pointer)"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9556:17:27","9611:10:27","9652:15:27","9702:25:27","9748:16:27","9785:16:27","9838:19:27"],"names":["stakeTokenAddress","poolWeight","lastRewardBlock","accumulateRewardsPerStake","stakeTokenAmount","minDepositAmount","unStakeLockedBlocks"],"nodeType":"FunctionCall","src":"9521:373:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_memory_ptr","typeString":"struct RCCStakeLib.Pool memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$8577_memory_ptr","typeString":"struct RCCStakeLib.Pool memory"}],"expression":{"id":7150,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"9498:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9503:4:27","memberName":"push","nodeType":"MemberAccess","src":"9498:9:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Pool_$8577_storage_$dyn_storage_ptr_$_t_struct$_Pool_$8577_storage_$returns$__$attached_to$_t_array$_t_struct$_Pool_$8577_storage_$dyn_storage_ptr_$","typeString":"function (struct RCCStakeLib.Pool storage ref[] storage pointer,struct RCCStakeLib.Pool storage ref)"}},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9498:406:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7164,"nodeType":"ExpressionStatement","src":"9498:406:27"},{"eventCall":{"arguments":[{"id":7166,"name":"_stakeTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"9940:18:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7167,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"9972:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7168,"name":"lastRewardBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"9997:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7169,"name":"_minDepositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"10026:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7170,"name":"_unStakeLockedBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"10057:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7165,"name":"AddPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"9919:7:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256)"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9919:168:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7172,"nodeType":"EmitStatement","src":"9914:173:27"}]},"documentation":{"id":7068,"nodeType":"StructuredDocumentation","src":"7985:178:27","text":" @notice Add a new staking to pool. Can only be called by admin\n DO NOT add the same staking token more than once. RCC rewards will be messed up if you do"},"functionSelector":"b6d9d919","id":7174,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7081,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"8528:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7082,"kind":"modifierInvocation","modifierName":{"id":7080,"name":"onlyRole","nameLocations":["8519:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"8519:8:27"},"nodeType":"ModifierInvocation","src":"8519:20:27"}],"name":"addPool","nameLocation":"8177:7:27","nodeType":"FunctionDefinition","parameters":{"id":7079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7070,"mutability":"mutable","name":"_stakeTokenAddress","nameLocation":"8202:18:27","nodeType":"VariableDeclaration","scope":7174,"src":"8194:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7069,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7072,"mutability":"mutable","name":"_poolWeight","nameLocation":"8238:11:27","nodeType":"VariableDeclaration","scope":7174,"src":"8230:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7071,"name":"uint256","nodeType":"ElementaryTypeName","src":"8230:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7074,"mutability":"mutable","name":"_minDepositAmount","nameLocation":"8320:17:27","nodeType":"VariableDeclaration","scope":7174,"src":"8312:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7073,"name":"uint256","nodeType":"ElementaryTypeName","src":"8312:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7076,"mutability":"mutable","name":"_unStakeLockedBlocks","nameLocation":"8355:20:27","nodeType":"VariableDeclaration","scope":7174,"src":"8347:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7075,"name":"uint256","nodeType":"ElementaryTypeName","src":"8347:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7078,"mutability":"mutable","name":"_withUpdate","nameLocation":"8390:11:27","nodeType":"VariableDeclaration","scope":7174,"src":"8385:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7077,"name":"bool","nodeType":"ElementaryTypeName","src":"8385:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8184:327:27"},"returnParameters":{"id":7083,"nodeType":"ParameterList","parameters":[],"src":"8540:0:27"},"scope":8560,"src":"8168:1926:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7218,"nodeType":"Block","src":"10620:271:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7191,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"10638:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7192,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"10648:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10653:6:27","memberName":"length","nodeType":"MemberAccess","src":"10648:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10638:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420706f6f6c206964","id":7195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10661:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18","typeString":"literal_string \"invalid pool id\""},"value":"invalid pool id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18","typeString":"literal_string \"invalid pool id\""}],"id":7190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10630:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10630:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7197,"nodeType":"ExpressionStatement","src":"10630:49:27"},{"expression":{"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7198,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"10689:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7200,"indexExpression":{"id":7199,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"10694:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10689:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"id":7201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10703:16:27","memberName":"minDepositAmount","nodeType":"MemberAccess","referencedDeclaration":8574,"src":"10689:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7202,"name":"_minDepositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"10722:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10689:50:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7204,"nodeType":"ExpressionStatement","src":"10689:50:27"},{"expression":{"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7205,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"10749:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7207,"indexExpression":{"id":7206,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"10754:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10749:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"id":7208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10763:19:27","memberName":"unStakeLockedBlocks","nodeType":"MemberAccess","referencedDeclaration":8576,"src":"10749:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7209,"name":"_unStakeLockedBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7181,"src":"10785:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10749:56:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7211,"nodeType":"ExpressionStatement","src":"10749:56:27"},{"eventCall":{"arguments":[{"id":7213,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"10835:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7214,"name":"_minDepositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"10844:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7215,"name":"_unStakeLockedBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7181,"src":"10863:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7212,"name":"UpdatePoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6717,"src":"10820:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10820:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7217,"nodeType":"EmitStatement","src":"10815:69:27"}]},"documentation":{"id":7175,"nodeType":"StructuredDocumentation","src":"10100:345:27","text":" @notice Update the given pool's info (minDepositAmount and unStakeLockedBlocks). Can only be called by admin.\n 这就是函数签名的作用，函数重名没事儿，还有参数返回值啥的呢；、\n 更新池子干了啥事儿\n - 改了最小存入金额\n - 不能提取的区块锁定区"},"functionSelector":"d86c0444","id":7219,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7184,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"10590:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7185,"kind":"modifierInvocation","modifierName":{"id":7183,"name":"checkPid","nameLocations":["10581:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6805,"src":"10581:8:27"},"nodeType":"ModifierInvocation","src":"10581:17:27"},{"arguments":[{"id":7187,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"10608:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7188,"kind":"modifierInvocation","modifierName":{"id":7186,"name":"onlyRole","nameLocations":["10599:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"10599:8:27"},"nodeType":"ModifierInvocation","src":"10599:20:27"}],"name":"updatePool","nameLocation":"10459:10:27","nodeType":"FunctionDefinition","parameters":{"id":7182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7177,"mutability":"mutable","name":"_poolId","nameLocation":"10487:7:27","nodeType":"VariableDeclaration","scope":7219,"src":"10479:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7176,"name":"uint256","nodeType":"ElementaryTypeName","src":"10479:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7179,"mutability":"mutable","name":"_minDepositAmount","nameLocation":"10512:17:27","nodeType":"VariableDeclaration","scope":7219,"src":"10504:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7178,"name":"uint256","nodeType":"ElementaryTypeName","src":"10504:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7181,"mutability":"mutable","name":"_unStakeLockedBlocks","nameLocation":"10547:20:27","nodeType":"VariableDeclaration","scope":7219,"src":"10539:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7180,"name":"uint256","nodeType":"ElementaryTypeName","src":"10539:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10469:104:27"},"returnParameters":{"id":7189,"nodeType":"ParameterList","parameters":[],"src":"10620:0:27"},"scope":8560,"src":"10450:441:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7289,"nodeType":"Block","src":"11126:553:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7233,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"11144:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7234,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"11154:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11159:6:27","memberName":"length","nodeType":"MemberAccess","src":"11154:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11144:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420706f6f6c206964","id":7237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11167:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18","typeString":"literal_string \"invalid pool id\""},"value":"invalid pool id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18","typeString":"literal_string \"invalid pool id\""}],"id":7232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11136:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11136:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7239,"nodeType":"ExpressionStatement","src":"11136:49:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7241,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"11203:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11217:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11203:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420706f6f6c20776569676874","id":7244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11220:21:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1","typeString":"literal_string \"invalid pool weight\""},"value":"invalid pool weight"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1","typeString":"literal_string \"invalid pool weight\""}],"id":7240,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11195:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11195:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7246,"nodeType":"ExpressionStatement","src":"11195:47:27"},{"condition":{"id":7247,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"11256:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7252,"nodeType":"IfStatement","src":"11252:59:27","trueBody":{"id":7251,"nodeType":"Block","src":"11269:42:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7248,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"11283:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11283:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7250,"nodeType":"ExpressionStatement","src":"11283:17:27"}]}},{"assignments":[7254,7256],"declarations":[{"constant":false,"id":7254,"mutability":"mutable","name":"success","nameLocation":"11326:7:27","nodeType":"VariableDeclaration","scope":7289,"src":"11321:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7253,"name":"bool","nodeType":"ElementaryTypeName","src":"11321:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7256,"mutability":"mutable","name":"_finalTotalPoolWeight","nameLocation":"11343:21:27","nodeType":"VariableDeclaration","scope":7289,"src":"11335:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7255,"name":"uint256","nodeType":"ElementaryTypeName","src":"11335:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7261,"initialValue":{"arguments":[{"id":7259,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"11404:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7257,"name":"totalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"11368:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11384:6:27","memberName":"tryAdd","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"11368:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11368:57:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11320:105:27"},{"expression":{"arguments":[{"id":7263,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7254,"src":"11443:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f74616c20706f6f6c20776569676874206f766572666c6f77","id":7264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11452:28:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d2ab1273c3a1faf917e7dccd29abed8d9f4b4c4744abaa01dfcf902cef0a4df","typeString":"literal_string \"total pool weight overflow\""},"value":"total pool weight overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d2ab1273c3a1faf917e7dccd29abed8d9f4b4c4744abaa01dfcf902cef0a4df","typeString":"literal_string \"total pool weight overflow\""}],"id":7262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11435:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11435:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7266,"nodeType":"ExpressionStatement","src":"11435:46:27"},{"expression":{"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7267,"name":"totalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"11491:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7268,"name":"_finalTotalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7256,"src":"11509:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":7269,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"11533:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7271,"indexExpression":{"id":7270,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"11538:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11533:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"id":7272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11547:10:27","memberName":"poolWeight","nodeType":"MemberAccess","referencedDeclaration":8566,"src":"11533:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11509:48:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11491:66:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7275,"nodeType":"ExpressionStatement","src":"11491:66:27"},{"expression":{"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7276,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"11567:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7278,"indexExpression":{"id":7277,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"11572:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11567:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"id":7279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11581:10:27","memberName":"poolWeight","nodeType":"MemberAccess","referencedDeclaration":8566,"src":"11567:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7280,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"11594:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11567:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7282,"nodeType":"ExpressionStatement","src":"11567:38:27"},{"eventCall":{"arguments":[{"id":7284,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"11634:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7285,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"11643:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7286,"name":"totalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"11656:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7283,"name":"SetPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"11620:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11620:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7288,"nodeType":"EmitStatement","src":"11615:57:27"}]},"documentation":{"id":7220,"nodeType":"StructuredDocumentation","src":"10897:87:27","text":" @notice Update the given pool's weight. Can only be called by admin."},"functionSelector":"fad07ece","id":7290,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7229,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"11114:10:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7230,"kind":"modifierInvocation","modifierName":{"id":7228,"name":"onlyRole","nameLocations":["11105:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"11105:8:27"},"nodeType":"ModifierInvocation","src":"11105:20:27"}],"name":"setPoolWeight","nameLocation":"10998:13:27","nodeType":"FunctionDefinition","parameters":{"id":7227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7222,"mutability":"mutable","name":"_poolId","nameLocation":"11029:7:27","nodeType":"VariableDeclaration","scope":7290,"src":"11021:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7221,"name":"uint256","nodeType":"ElementaryTypeName","src":"11021:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7224,"mutability":"mutable","name":"_poolWeight","nameLocation":"11054:11:27","nodeType":"VariableDeclaration","scope":7290,"src":"11046:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7223,"name":"uint256","nodeType":"ElementaryTypeName","src":"11046:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7226,"mutability":"mutable","name":"_withUpdate","nameLocation":"11080:11:27","nodeType":"VariableDeclaration","scope":7290,"src":"11075:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7225,"name":"bool","nodeType":"ElementaryTypeName","src":"11075:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11011:86:27"},"returnParameters":{"id":7231,"nodeType":"ParameterList","parameters":[],"src":"11126:0:27"},"scope":8560,"src":"10989:690:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7299,"nodeType":"Block","src":"11901:35:27","statements":[{"expression":{"expression":{"id":7296,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"11918:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11923:6:27","memberName":"length","nodeType":"MemberAccess","src":"11918:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7295,"id":7298,"nodeType":"Return","src":"11911:18:27"}]},"documentation":{"id":7291,"nodeType":"StructuredDocumentation","src":"11785:56:27","text":" @notice Get the length/amount of pool"},"functionSelector":"b3944d52","id":7300,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolLength","nameLocation":"11855:13:27","nodeType":"FunctionDefinition","parameters":{"id":7292,"nodeType":"ParameterList","parameters":[],"src":"11868:2:27"},"returnParameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7300,"src":"11892:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7293,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11891:9:27"},"scope":8560,"src":"11846:90:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7364,"nodeType":"Block","src":"12264:388:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7311,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"12282:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7312,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"12291:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12282:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642072616e6765","id":7314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12296:15:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa","typeString":"literal_string \"invalid range\""},"value":"invalid range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa","typeString":"literal_string \"invalid range\""}],"id":7310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12274:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12274:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7316,"nodeType":"ExpressionStatement","src":"12274:38:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7317,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"12326:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7318,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"12334:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12326:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7325,"nodeType":"IfStatement","src":"12322:67:27","trueBody":{"id":7324,"nodeType":"Block","src":"12346:43:27","statements":[{"expression":{"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7320,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"12360:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7321,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"12368:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12360:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7323,"nodeType":"ExpressionStatement","src":"12360:18:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7326,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"12402:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7327,"name":"endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"12408:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12402:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7334,"nodeType":"IfStatement","src":"12398:59:27","trueBody":{"id":7333,"nodeType":"Block","src":"12418:39:27","statements":[{"expression":{"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7329,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"12432:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7330,"name":"endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"12438:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12432:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7332,"nodeType":"ExpressionStatement","src":"12432:14:27"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7336,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"12474:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7337,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"12480:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12474:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12488:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12474:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642072616e6765","id":7341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12491:15:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa","typeString":"literal_string \"invalid range\""},"value":"invalid range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa","typeString":"literal_string \"invalid range\""}],"id":7335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12466:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12466:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7343,"nodeType":"ExpressionStatement","src":"12466:41:27"},{"assignments":[7345],"declarations":[{"constant":false,"id":7345,"mutability":"mutable","name":"success","nameLocation":"12522:7:27","nodeType":"VariableDeclaration","scope":7364,"src":"12517:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7344,"name":"bool","nodeType":"ElementaryTypeName","src":"12517:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7346,"nodeType":"VariableDeclarationStatement","src":"12517:12:27"},{"expression":{"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7347,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"12540:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7348,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"12549:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7349,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"12539:21:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7355,"name":"rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"12584:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7350,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"12564:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7351,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"12570:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12564:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12563:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12577:6:27","memberName":"tryMul","nodeType":"MemberAccess","referencedDeclaration":3347,"src":"12563:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12563:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"src":"12539:57:27","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7358,"nodeType":"ExpressionStatement","src":"12539:57:27"},{"expression":{"arguments":[{"id":7360,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"12614:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d756c7469706c696572206f766572666c6f77","id":7361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12623:21:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524","typeString":"literal_string \"multiplier overflow\""},"value":"multiplier overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524","typeString":"literal_string \"multiplier overflow\""}],"id":7359,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12606:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12606:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7363,"nodeType":"ExpressionStatement","src":"12606:39:27"}]},"documentation":{"id":7301,"nodeType":"StructuredDocumentation","src":"11942:203:27","text":" @notice Return reward multiplier over given _from to _to block. [_from, _to)\n @param _from    From block number (included)\n @param _to      To block number (exluded)"},"functionSelector":"8dbb1e3a","id":7365,"implemented":true,"kind":"function","modifiers":[],"name":"getMultiplier","nameLocation":"12159:13:27","nodeType":"FunctionDefinition","parameters":{"id":7306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7303,"mutability":"mutable","name":"_from","nameLocation":"12190:5:27","nodeType":"VariableDeclaration","scope":7365,"src":"12182:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7302,"name":"uint256","nodeType":"ElementaryTypeName","src":"12182:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7305,"mutability":"mutable","name":"_to","nameLocation":"12213:3:27","nodeType":"VariableDeclaration","scope":7365,"src":"12205:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7304,"name":"uint256","nodeType":"ElementaryTypeName","src":"12205:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12172:50:27"},"returnParameters":{"id":7309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7308,"mutability":"mutable","name":"multiplier","nameLocation":"12252:10:27","nodeType":"VariableDeclaration","scope":7365,"src":"12244:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7307,"name":"uint256","nodeType":"ElementaryTypeName","src":"12244:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12243:20:27"},"scope":8560,"src":"12150:502:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7385,"nodeType":"Block","src":"12855:77:27","statements":[{"expression":{"arguments":[{"id":7379,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"12896:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7380,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7370,"src":"12905:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7381,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12912:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12918:6:27","memberName":"number","nodeType":"MemberAccess","src":"12912:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7378,"name":"pendingRCCByBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"12872:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,address,uint256) view returns (uint256)"}},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12872:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7377,"id":7384,"nodeType":"Return","src":"12865:60:27"}]},"documentation":{"id":7366,"nodeType":"StructuredDocumentation","src":"12658:65:27","text":" @notice Get pending RCC amount of user in pool"},"functionSelector":"a27d9279","id":7386,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7373,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"12828:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7374,"kind":"modifierInvocation","modifierName":{"id":7372,"name":"checkPid","nameLocations":["12819:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6805,"src":"12819:8:27"},"nodeType":"ModifierInvocation","src":"12819:17:27"}],"name":"getPendingRCC","nameLocation":"12737:13:27","nodeType":"FunctionDefinition","parameters":{"id":7371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7368,"mutability":"mutable","name":"_poolId","nameLocation":"12768:7:27","nodeType":"VariableDeclaration","scope":7386,"src":"12760:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7367,"name":"uint256","nodeType":"ElementaryTypeName","src":"12760:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7370,"mutability":"mutable","name":"_user","nameLocation":"12793:5:27","nodeType":"VariableDeclaration","scope":7386,"src":"12785:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7369,"name":"address","nodeType":"ElementaryTypeName","src":"12785:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12750:54:27"},"returnParameters":{"id":7377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7386,"src":"12846:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7375,"name":"uint256","nodeType":"ElementaryTypeName","src":"12846:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12845:9:27"},"scope":8560,"src":"12728:204:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7483,"nodeType":"Block","src":"13171:999:27","statements":[{"assignments":[7402],"declarations":[{"constant":false,"id":7402,"mutability":"mutable","name":"pool_","nameLocation":"13206:5:27","nodeType":"VariableDeclaration","scope":7483,"src":"13181:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"},"typeName":{"id":7401,"nodeType":"UserDefinedTypeName","pathNode":{"id":7400,"name":"RCCStakeLib.Pool","nameLocations":["13181:11:27","13193:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8577,"src":"13181:16:27"},"referencedDeclaration":8577,"src":"13181:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"}},"visibility":"internal"}],"id":7406,"initialValue":{"baseExpression":{"id":7403,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"13214:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7405,"indexExpression":{"id":7404,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"13219:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13214:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13181:46:27"},{"assignments":[7411],"declarations":[{"constant":false,"id":7411,"mutability":"mutable","name":"user_","nameLocation":"13262:5:27","nodeType":"VariableDeclaration","scope":7483,"src":"13237:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"},"typeName":{"id":7410,"nodeType":"UserDefinedTypeName","pathNode":{"id":7409,"name":"RCCStakeLib.User","nameLocations":["13237:11:27","13249:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8593,"src":"13237:16:27"},"referencedDeclaration":8593,"src":"13237:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"}},"visibility":"internal"}],"id":7417,"initialValue":{"baseExpression":{"baseExpression":{"id":7412,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"13270:4:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$8593_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStakeLib.User storage ref))"}},"id":7414,"indexExpression":{"id":7413,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"13275:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13270:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8593_storage_$","typeString":"mapping(address => struct RCCStakeLib.User storage ref)"}},"id":7416,"indexExpression":{"id":7415,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"13284:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13270:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage","typeString":"struct RCCStakeLib.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13237:53:27"},{"assignments":[7419],"declarations":[{"constant":false,"id":7419,"mutability":"mutable","name":"accumulateRewardsPerStake","nameLocation":"13308:25:27","nodeType":"VariableDeclaration","scope":7483,"src":"13300:33:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7418,"name":"uint256","nodeType":"ElementaryTypeName","src":"13300:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7422,"initialValue":{"expression":{"id":7420,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"13336:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13342:25:27","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":8570,"src":"13336:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13300:67:27"},{"assignments":[7424],"declarations":[{"constant":false,"id":7424,"mutability":"mutable","name":"stSupply","nameLocation":"13385:8:27","nodeType":"VariableDeclaration","scope":7483,"src":"13377:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7423,"name":"uint256","nodeType":"ElementaryTypeName","src":"13377:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7427,"initialValue":{"expression":{"id":7425,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"13396:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13402:16:27","memberName":"stakeTokenAmount","nodeType":"MemberAccess","referencedDeclaration":8572,"src":"13396:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13377:41:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7428,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"13543:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7429,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"13558:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13564:15:27","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":8568,"src":"13558:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13543:36:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7432,"name":"stSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"13583:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13595:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13583:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13543:53:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7467,"nodeType":"IfStatement","src":"13539:454:27","trueBody":{"id":7466,"nodeType":"Block","src":"13598:395:27","statements":[{"assignments":[7437],"declarations":[{"constant":false,"id":7437,"mutability":"mutable","name":"multiplier","nameLocation":"13620:10:27","nodeType":"VariableDeclaration","scope":7466,"src":"13612:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7436,"name":"uint256","nodeType":"ElementaryTypeName","src":"13612:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7443,"initialValue":{"arguments":[{"expression":{"id":7439,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"13664:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13670:15:27","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":8568,"src":"13664:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7441,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"13703:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7438,"name":"getMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"13633:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13633:96:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13612:117:27"},{"assignments":[7445],"declarations":[{"constant":false,"id":7445,"mutability":"mutable","name":"rccForPool","nameLocation":"13751:10:27","nodeType":"VariableDeclaration","scope":7466,"src":"13743:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7444,"name":"uint256","nodeType":"ElementaryTypeName","src":"13743:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7453,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7446,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"13765:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7447,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"13778:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13784:10:27","memberName":"poolWeight","nodeType":"MemberAccess","referencedDeclaration":8566,"src":"13778:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13765:29:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13764:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7451,"name":"totalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"13814:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13764:65:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13743:86:27"},{"expression":{"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7454,"name":"accumulateRewardsPerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"13843:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7455,"name":"accumulateRewardsPerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"13887:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7456,"name":"rccForPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"13932:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"hexValue":"31","id":7457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13946:7:27","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"id":7458,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13945:9:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"13932:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13931:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7461,"name":"stSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"13974:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13931:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13887:95:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13843:139:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7465,"nodeType":"ExpressionStatement","src":"13843:139:27"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7468,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"14022:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14028:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"14022:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7470,"name":"accumulateRewardsPerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"14042:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14022:45:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14021:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"31","id":7473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14084:7:27","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"id":7474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14083:9:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"14021:71:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7476,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"14107:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14113:15:27","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":8586,"src":"14107:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14021:107:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":7479,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"14143:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14149:14:27","memberName":"pendingRewards","nodeType":"MemberAccess","referencedDeclaration":8588,"src":"14143:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14021:142:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7397,"id":7482,"nodeType":"Return","src":"14002:161:27"}]},"documentation":{"id":7387,"nodeType":"StructuredDocumentation","src":"12938:81:27","text":" @notice Get pending RCC amount of user by block number in pool"},"functionSelector":"41721ab7","id":7484,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRCCByBlockNumber","nameLocation":"13033:23:27","nodeType":"FunctionDefinition","parameters":{"id":7394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7389,"mutability":"mutable","name":"_poolId","nameLocation":"13074:7:27","nodeType":"VariableDeclaration","scope":7484,"src":"13066:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7388,"name":"uint256","nodeType":"ElementaryTypeName","src":"13066:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7391,"mutability":"mutable","name":"_user","nameLocation":"13099:5:27","nodeType":"VariableDeclaration","scope":7484,"src":"13091:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7390,"name":"address","nodeType":"ElementaryTypeName","src":"13091:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7393,"mutability":"mutable","name":"_blockNumber","nameLocation":"13122:12:27","nodeType":"VariableDeclaration","scope":7484,"src":"13114:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7392,"name":"uint256","nodeType":"ElementaryTypeName","src":"13114:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13056:84:27"},"returnParameters":{"id":7397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7484,"src":"13162:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7395,"name":"uint256","nodeType":"ElementaryTypeName","src":"13162:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13161:9:27"},"scope":8560,"src":"13024:1146:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7504,"nodeType":"Block","src":"14360:53:27","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":7497,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"14377:4:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$8593_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStakeLib.User storage ref))"}},"id":7499,"indexExpression":{"id":7498,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7487,"src":"14382:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14377:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8593_storage_$","typeString":"mapping(address => struct RCCStakeLib.User storage ref)"}},"id":7501,"indexExpression":{"id":7500,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"14388:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14377:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage","typeString":"struct RCCStakeLib.User storage ref"}},"id":7502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14395:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"14377:29:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7496,"id":7503,"nodeType":"Return","src":"14370:36:27"}]},"documentation":{"id":7485,"nodeType":"StructuredDocumentation","src":"14176:57:27","text":" @notice Get the staking amount of user"},"functionSelector":"11548234","id":7505,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7492,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7487,"src":"14336:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7493,"kind":"modifierInvocation","modifierName":{"id":7491,"name":"checkPid","nameLocations":["14327:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6805,"src":"14327:8:27"},"nodeType":"ModifierInvocation","src":"14327:14:27"}],"name":"stakingBalance","nameLocation":"14247:14:27","nodeType":"FunctionDefinition","parameters":{"id":7490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7487,"mutability":"mutable","name":"_pid","nameLocation":"14279:4:27","nodeType":"VariableDeclaration","scope":7505,"src":"14271:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7486,"name":"uint256","nodeType":"ElementaryTypeName","src":"14271:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7489,"mutability":"mutable","name":"_user","nameLocation":"14301:5:27","nodeType":"VariableDeclaration","scope":7505,"src":"14293:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7488,"name":"address","nodeType":"ElementaryTypeName","src":"14293:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14261:51:27"},"returnParameters":{"id":7496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7505,"src":"14351:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7494,"name":"uint256","nodeType":"ElementaryTypeName","src":"14351:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14350:9:27"},"scope":8560,"src":"14238:175:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7575,"nodeType":"Block","src":"14755:428:27","statements":[{"assignments":[7524],"declarations":[{"constant":false,"id":7524,"mutability":"mutable","name":"user_","nameLocation":"14790:5:27","nodeType":"VariableDeclaration","scope":7575,"src":"14765:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"},"typeName":{"id":7523,"nodeType":"UserDefinedTypeName","pathNode":{"id":7522,"name":"RCCStakeLib.User","nameLocations":["14765:11:27","14777:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8593,"src":"14765:16:27"},"referencedDeclaration":8593,"src":"14765:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"}},"visibility":"internal"}],"id":7530,"initialValue":{"baseExpression":{"baseExpression":{"id":7525,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"14798:4:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$8593_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStakeLib.User storage ref))"}},"id":7527,"indexExpression":{"id":7526,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"14803:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14798:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8593_storage_$","typeString":"mapping(address => struct RCCStakeLib.User storage ref)"}},"id":7529,"indexExpression":{"id":7528,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7510,"src":"14812:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14798:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage","typeString":"struct RCCStakeLib.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14765:53:27"},{"body":{"id":7573,"nodeType":"Block","src":"14880:297:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"id":7543,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"14898:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14904:8:27","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"14898:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref[] storage ref"}},"id":7546,"indexExpression":{"id":7545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"14913:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14898:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$8582_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref"}},"id":7547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14916:18:27","memberName":"unlockBlocksCounts","nodeType":"MemberAccess","referencedDeclaration":8581,"src":"14898:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7548,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14938:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14944:6:27","memberName":"number","nodeType":"MemberAccess","src":"14938:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14898:52:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7562,"nodeType":"IfStatement","src":"14894:203:27","trueBody":{"id":7561,"nodeType":"Block","src":"14952:145:27","statements":[{"expression":{"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7551,"name":"pendingWithdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"14970:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7552,"name":"pendingWithdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"15014:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"expression":{"id":7553,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"15058:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15064:8:27","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"15058:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref[] storage ref"}},"id":7556,"indexExpression":{"id":7555,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"15073:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15058:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$8582_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref"}},"id":7557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15076:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8579,"src":"15058:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15014:68:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14970:112:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7560,"nodeType":"ExpressionStatement","src":"14970:112:27"}]}},{"expression":{"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7563,"name":"requestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"15110:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7564,"name":"requestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"15126:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"expression":{"id":7565,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"15142:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15148:8:27","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"15142:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref[] storage ref"}},"id":7568,"indexExpression":{"id":7567,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"15157:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15142:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$8582_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref"}},"id":7569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15160:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8579,"src":"15142:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15126:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15110:56:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7572,"nodeType":"ExpressionStatement","src":"15110:56:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"14848:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":7536,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"14852:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14858:8:27","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"14852:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref[] storage ref"}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14867:6:27","memberName":"length","nodeType":"MemberAccess","src":"14852:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14848:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7574,"initializationExpression":{"assignments":[7532],"declarations":[{"constant":false,"id":7532,"mutability":"mutable","name":"i","nameLocation":"14841:1:27","nodeType":"VariableDeclaration","scope":7574,"src":"14833:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7531,"name":"uint256","nodeType":"ElementaryTypeName","src":"14833:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7534,"initialValue":{"hexValue":"30","id":7533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14845:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14833:13:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14875:3:27","subExpression":{"id":7540,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"14875:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7542,"nodeType":"ExpressionStatement","src":"14875:3:27"},"nodeType":"ForStatement","src":"14828:349:27"}]},"documentation":{"id":7506,"nodeType":"StructuredDocumentation","src":"14419:124:27","text":" @notice Get the withdraw amount info, including the locked unstake amount and the unlocked unstake amount"},"functionSelector":"ff423357","id":7576,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7513,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"14671:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7514,"kind":"modifierInvocation","modifierName":{"id":7512,"name":"checkPid","nameLocations":["14662:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6805,"src":"14662:8:27"},"nodeType":"ModifierInvocation","src":"14662:17:27"}],"name":"withdrawAmount","nameLocation":"14557:14:27","nodeType":"FunctionDefinition","parameters":{"id":7511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7508,"mutability":"mutable","name":"_poolId","nameLocation":"14589:7:27","nodeType":"VariableDeclaration","scope":7576,"src":"14581:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7507,"name":"uint256","nodeType":"ElementaryTypeName","src":"14581:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7510,"mutability":"mutable","name":"_user","nameLocation":"14614:5:27","nodeType":"VariableDeclaration","scope":7576,"src":"14606:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7509,"name":"address","nodeType":"ElementaryTypeName","src":"14606:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14571:54:27"},"returnParameters":{"id":7519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7516,"mutability":"mutable","name":"requestAmount","nameLocation":"14705:13:27","nodeType":"VariableDeclaration","scope":7576,"src":"14697:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7515,"name":"uint256","nodeType":"ElementaryTypeName","src":"14697:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7518,"mutability":"mutable","name":"pendingWithdrawAmount","nameLocation":"14728:21:27","nodeType":"VariableDeclaration","scope":7576,"src":"14720:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7517,"name":"uint256","nodeType":"ElementaryTypeName","src":"14720:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14696:54:27"},"scope":8560,"src":"14548:635:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7727,"nodeType":"Block","src":"15625:2002:27","statements":[{"assignments":[7589],"declarations":[{"constant":false,"id":7589,"mutability":"mutable","name":"pool_","nameLocation":"15660:5:27","nodeType":"VariableDeclaration","scope":7727,"src":"15635:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"},"typeName":{"id":7588,"nodeType":"UserDefinedTypeName","pathNode":{"id":7587,"name":"RCCStakeLib.Pool","nameLocations":["15635:11:27","15647:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8577,"src":"15635:16:27"},"referencedDeclaration":8577,"src":"15635:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"}},"visibility":"internal"}],"id":7593,"initialValue":{"baseExpression":{"id":7590,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"15668:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7592,"indexExpression":{"id":7591,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"15673:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15668:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15635:43:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7594,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15725:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15731:6:27","memberName":"number","nodeType":"MemberAccess","src":"15725:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7596,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"15741:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15747:15:27","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":8568,"src":"15741:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15725:37:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7601,"nodeType":"IfStatement","src":"15721:74:27","trueBody":{"id":7600,"nodeType":"Block","src":"15764:31:27","statements":[{"functionReturnParameters":7584,"id":7599,"nodeType":"Return","src":"15778:7:27"}]}},{"assignments":[7603],"declarations":[{"constant":false,"id":7603,"mutability":"mutable","name":"stakeTokenAmount","nameLocation":"15812:16:27","nodeType":"VariableDeclaration","scope":7727,"src":"15804:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7602,"name":"uint256","nodeType":"ElementaryTypeName","src":"15804:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7606,"initialValue":{"expression":{"id":7604,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"15831:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15837:16:27","memberName":"stakeTokenAmount","nodeType":"MemberAccess","referencedDeclaration":8572,"src":"15831:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15804:49:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7607,"name":"stakeTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"15927:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15947:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15927:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7619,"nodeType":"IfStatement","src":"15923:108:27","trueBody":{"id":7618,"nodeType":"Block","src":"15950:81:27","statements":[{"expression":{"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7610,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"15964:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15970:15:27","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":8568,"src":"15964:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7613,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15988:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15994:6:27","memberName":"number","nodeType":"MemberAccess","src":"15988:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15964:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7616,"nodeType":"ExpressionStatement","src":"15964:36:27"},{"functionReturnParameters":7584,"id":7617,"nodeType":"Return","src":"16014:7:27"}]}},{"assignments":[7621,7623],"declarations":[{"constant":false,"id":7621,"mutability":"mutable","name":"success1","nameLocation":"16254:8:27","nodeType":"VariableDeclaration","scope":7727,"src":"16249:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7620,"name":"bool","nodeType":"ElementaryTypeName","src":"16249:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7623,"mutability":"mutable","name":"totalRCC","nameLocation":"16272:8:27","nodeType":"VariableDeclaration","scope":7727,"src":"16264:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7622,"name":"uint256","nodeType":"ElementaryTypeName","src":"16264:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7634,"initialValue":{"arguments":[{"expression":{"id":7631,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"16376:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16382:10:27","memberName":"poolWeight","nodeType":"MemberAccess","referencedDeclaration":8566,"src":"16376:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7625,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"16311:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16317:15:27","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":8568,"src":"16311:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7627,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16346:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:6:27","memberName":"number","nodeType":"MemberAccess","src":"16346:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7624,"name":"getMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"16284:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16284:84:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16369:6:27","memberName":"tryMul","nodeType":"MemberAccess","referencedDeclaration":3347,"src":"16284:91:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16284:109:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16248:145:27"},{"expression":{"arguments":[{"id":7636,"name":"success1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"16411:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f77","id":7637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16421:10:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""},"value":"overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""}],"id":7635,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16403:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16403:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7639,"nodeType":"ExpressionStatement","src":"16403:29:27"},{"expression":{"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7640,"name":"success1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"16539:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7641,"name":"totalRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"16549:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7642,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"16538:20:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7645,"name":"totalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"16577:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7643,"name":"totalRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"16561:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16570:6:27","memberName":"tryDiv","nodeType":"MemberAccess","referencedDeclaration":3375,"src":"16561:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16561:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"src":"16538:55:27","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7648,"nodeType":"ExpressionStatement","src":"16538:55:27"},{"expression":{"arguments":[{"id":7650,"name":"success1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"16611:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f77","id":7651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16621:10:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""},"value":"overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""}],"id":7649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16603:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16603:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7653,"nodeType":"ExpressionStatement","src":"16603:29:27"},{"assignments":[7655],"declarations":[{"constant":false,"id":7655,"mutability":"mutable","name":"stSupply","nameLocation":"16707:8:27","nodeType":"VariableDeclaration","scope":7727,"src":"16699:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7654,"name":"uint256","nodeType":"ElementaryTypeName","src":"16699:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7658,"initialValue":{"expression":{"id":7656,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"16718:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16724:16:27","memberName":"stakeTokenAmount","nodeType":"MemberAccess","referencedDeclaration":8572,"src":"16718:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16699:41:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7659,"name":"stSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7655,"src":"16790:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16801:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16790:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7712,"nodeType":"IfStatement","src":"16786:679:27","trueBody":{"id":7711,"nodeType":"Block","src":"16804:661:27","statements":[{"assignments":[7663,7665],"declarations":[{"constant":false,"id":7663,"mutability":"mutable","name":"success2","nameLocation":"16874:8:27","nodeType":"VariableDeclaration","scope":7711,"src":"16869:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7662,"name":"bool","nodeType":"ElementaryTypeName","src":"16869:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7665,"mutability":"mutable","name":"totalRCC_","nameLocation":"16892:9:27","nodeType":"VariableDeclaration","scope":7711,"src":"16884:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7664,"name":"uint256","nodeType":"ElementaryTypeName","src":"16884:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7670,"initialValue":{"arguments":[{"hexValue":"31","id":7668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16921:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":7666,"name":"totalRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"16905:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16914:6:27","memberName":"tryMul","nodeType":"MemberAccess","referencedDeclaration":3347,"src":"16905:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16905:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16868:55:27"},{"expression":{"arguments":[{"id":7672,"name":"success2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"16945:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f77","id":7673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16955:10:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""},"value":"overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""}],"id":7671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16937:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16937:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7675,"nodeType":"ExpressionStatement","src":"16937:29:27"},{"expression":{"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7676,"name":"success2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"17055:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7677,"name":"totalRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"17065:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7678,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"17054:21:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7681,"name":"stSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7655,"src":"17095:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7679,"name":"totalRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"17078:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17088:6:27","memberName":"tryDiv","nodeType":"MemberAccess","referencedDeclaration":3375,"src":"17078:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17078:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"src":"17054:50:27","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7684,"nodeType":"ExpressionStatement","src":"17054:50:27"},{"expression":{"arguments":[{"id":7686,"name":"success2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"17126:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f77","id":7687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17136:10:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""},"value":"overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""}],"id":7685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17118:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17118:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7689,"nodeType":"ExpressionStatement","src":"17118:29:27"},{"assignments":[7691,7693],"declarations":[{"constant":false,"id":7691,"mutability":"mutable","name":"success3","nameLocation":"17208:8:27","nodeType":"VariableDeclaration","scope":7711,"src":"17203:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7690,"name":"bool","nodeType":"ElementaryTypeName","src":"17203:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7693,"mutability":"mutable","name":"accumulateRewardsPerStake","nameLocation":"17226:25:27","nodeType":"VariableDeclaration","scope":7711,"src":"17218:33:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7692,"name":"uint256","nodeType":"ElementaryTypeName","src":"17218:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7699,"initialValue":{"arguments":[{"id":7697,"name":"totalRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"17328:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":7694,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"17255:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17278:25:27","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":8570,"src":"17255:48:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17321:6:27","memberName":"tryAdd","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"17255:72:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17255:83:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"17202:136:27"},{"expression":{"arguments":[{"id":7701,"name":"success3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"17360:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f77","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17370:10:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""},"value":"overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""}],"id":7700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17352:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17352:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7704,"nodeType":"ExpressionStatement","src":"17352:29:27"},{"expression":{"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7705,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"17395:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17401:25:27","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":8570,"src":"17395:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7708,"name":"accumulateRewardsPerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"17429:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17395:59:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7710,"nodeType":"ExpressionStatement","src":"17395:59:27"}]}},{"expression":{"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7713,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"17519:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17525:15:27","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":8568,"src":"17519:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7716,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17543:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17549:6:27","memberName":"number","nodeType":"MemberAccess","src":"17543:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17519:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7719,"nodeType":"ExpressionStatement","src":"17519:36:27"},{"eventCall":{"arguments":[{"id":7721,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"17582:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7722,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"17588:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17594:15:27","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":8568,"src":"17588:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7724,"name":"totalRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"17611:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7720,"name":"UpdatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"17571:10:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17571:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7726,"nodeType":"EmitStatement","src":"17566:54:27"}]},"documentation":{"id":7577,"nodeType":"StructuredDocumentation","src":"15290:274:27","text":" @notice Update reward variables of the given pool to be up-to-date.\n 主要是更新\n - 池子里每单位代币累计发放的奖励；\n - 最后发放奖励区块的number；\n - 更新整个池子，累计应该方法的奖励；"},"functionSelector":"51eb05a6","id":7728,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7582,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"15619:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7583,"kind":"modifierInvocation","modifierName":{"id":7581,"name":"checkPid","nameLocations":["15610:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6805,"src":"15610:8:27"},"nodeType":"ModifierInvocation","src":"15610:14:27"}],"name":"updatePool","nameLocation":"15578:10:27","nodeType":"FunctionDefinition","parameters":{"id":7580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7579,"mutability":"mutable","name":"_pid","nameLocation":"15597:4:27","nodeType":"VariableDeclaration","scope":7728,"src":"15589:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7578,"name":"uint256","nodeType":"ElementaryTypeName","src":"15589:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15588:14:27"},"returnParameters":{"id":7584,"nodeType":"ParameterList","parameters":[],"src":"15625:0:27"},"scope":8560,"src":"15569:2058:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7754,"nodeType":"Block","src":"17765:588:27","statements":[{"assignments":[7734],"declarations":[{"constant":false,"id":7734,"mutability":"mutable","name":"length","nameLocation":"18242:6:27","nodeType":"VariableDeclaration","scope":7754,"src":"18234:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7733,"name":"uint256","nodeType":"ElementaryTypeName","src":"18234:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":"因为读取要消耗gas，所以弄一个变量么？ ","id":7737,"initialValue":{"expression":{"id":7735,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"18251:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18256:6:27","memberName":"length","nodeType":"MemberAccess","src":"18251:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18234:28:27"},{"body":{"id":7752,"nodeType":"Block","src":"18309:38:27","statements":[{"expression":{"arguments":[{"id":7749,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7739,"src":"18334:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7748,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[7219,7728],"referencedDeclaration":7728,"src":"18323:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18323:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7751,"nodeType":"ExpressionStatement","src":"18323:13:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7739,"src":"18292:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7743,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"18296:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18292:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7753,"initializationExpression":{"assignments":[7739],"declarations":[{"constant":false,"id":7739,"mutability":"mutable","name":"i","nameLocation":"18285:1:27","nodeType":"VariableDeclaration","scope":7753,"src":"18277:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7738,"name":"uint256","nodeType":"ElementaryTypeName","src":"18277:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7741,"initialValue":{"hexValue":"30","id":7740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18289:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18277:13:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18304:3:27","subExpression":{"id":7745,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7739,"src":"18304:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7747,"nodeType":"ExpressionStatement","src":"18304:3:27"},"nodeType":"ForStatement","src":"18272:75:27"}]},"documentation":{"id":7729,"nodeType":"StructuredDocumentation","src":"17633:93:27","text":" @notice Update reward variables for all pools. Be careful of gas spending!"},"functionSelector":"630b5ba1","id":7755,"implemented":true,"kind":"function","modifiers":[],"name":"massUpdatePools","nameLocation":"17740:15:27","nodeType":"FunctionDefinition","parameters":{"id":7730,"nodeType":"ParameterList","parameters":[],"src":"17755:2:27"},"returnParameters":{"id":7731,"nodeType":"ParameterList","parameters":[],"src":"17765:0:27"},"scope":8560,"src":"17731:622:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7799,"nodeType":"Block","src":"18477:341:27","statements":[{"assignments":[7765],"declarations":[{"constant":false,"id":7765,"mutability":"mutable","name":"pool_","nameLocation":"18512:5:27","nodeType":"VariableDeclaration","scope":7799,"src":"18487:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"},"typeName":{"id":7764,"nodeType":"UserDefinedTypeName","pathNode":{"id":7763,"name":"RCCStakeLib.Pool","nameLocations":["18487:11:27","18499:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8577,"src":"18487:16:27"},"referencedDeclaration":8577,"src":"18487:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"}},"visibility":"internal"}],"id":7769,"initialValue":{"baseExpression":{"id":7766,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"18520:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7768,"indexExpression":{"id":7767,"name":"ETH_PID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"18525:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18520:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18487:46:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7771,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7765,"src":"18564:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18570:17:27","memberName":"stakeTokenAddress","nodeType":"MemberAccess","referencedDeclaration":8564,"src":"18564:23:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":7775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18599:3:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18591:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7773,"name":"address","nodeType":"ElementaryTypeName","src":"18591:7:27","typeDescriptions":{}}},"id":7776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18591:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18564:39:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45544820706f6f6c206d7573742062652063726561746564206669727374","id":7778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18617:32:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10","typeString":"literal_string \"ETH pool must be created first\""},"value":"ETH pool must be created first"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10","typeString":"literal_string \"ETH pool must be created first\""}],"id":7770,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18543:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18543:116:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7780,"nodeType":"ExpressionStatement","src":"18543:116:27"},{"assignments":[7782],"declarations":[{"constant":false,"id":7782,"mutability":"mutable","name":"_amount","nameLocation":"18678:7:27","nodeType":"VariableDeclaration","scope":7799,"src":"18670:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7781,"name":"uint256","nodeType":"ElementaryTypeName","src":"18670:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7785,"initialValue":{"expression":{"id":7783,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18688:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18692:5:27","memberName":"value","nodeType":"MemberAccess","src":"18688:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18670:27:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7787,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"18715:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":7788,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7765,"src":"18726:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18732:16:27","memberName":"minDepositAmount","nodeType":"MemberAccess","referencedDeclaration":8574,"src":"18726:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18715:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964206465706f73697420616d6f756e74","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18750:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec","typeString":"literal_string \"invalid deposit amount\""},"value":"invalid deposit amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec","typeString":"literal_string \"invalid deposit amount\""}],"id":7786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18707:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18707:68:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7793,"nodeType":"ExpressionStatement","src":"18707:68:27"},{"expression":{"arguments":[{"id":7795,"name":"ETH_PID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"18794:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7796,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"18803:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7794,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8467,"src":"18785:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18785:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7798,"nodeType":"ExpressionStatement","src":"18785:26:27"}]},"documentation":{"id":7756,"nodeType":"StructuredDocumentation","src":"18359:62:27","text":" @notice Deposit staking ETH for RCC rewards"},"functionSelector":"f6326fb3","id":7800,"implemented":true,"kind":"function","modifiers":[{"id":7759,"kind":"modifierInvocation","modifierName":{"id":7758,"name":"whenNotPaused","nameLocations":["18463:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":922,"src":"18463:13:27"},"nodeType":"ModifierInvocation","src":"18463:13:27"}],"name":"depositETH","nameLocation":"18435:10:27","nodeType":"FunctionDefinition","parameters":{"id":7757,"nodeType":"ParameterList","parameters":[],"src":"18445:2:27"},"returnParameters":{"id":7760,"nodeType":"ParameterList","parameters":[],"src":"18477:0:27"},"scope":8560,"src":"18426:392:27","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":7861,"nodeType":"Block","src":"19251:556:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7814,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"19395:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19403:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19395:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6465706f736974206e6f7420737570706f727420455448207374616b696e67","id":7817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19406:33:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757","typeString":"literal_string \"deposit not support ETH staking\""},"value":"deposit not support ETH staking"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757","typeString":"literal_string \"deposit not support ETH staking\""}],"id":7813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19387:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19387:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7819,"nodeType":"ExpressionStatement","src":"19387:53:27"},{"assignments":[7824],"declarations":[{"constant":false,"id":7824,"mutability":"mutable","name":"pool_","nameLocation":"19475:5:27","nodeType":"VariableDeclaration","scope":7861,"src":"19450:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"},"typeName":{"id":7823,"nodeType":"UserDefinedTypeName","pathNode":{"id":7822,"name":"RCCStakeLib.Pool","nameLocations":["19450:11:27","19462:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8577,"src":"19450:16:27"},"referencedDeclaration":8577,"src":"19450:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"}},"visibility":"internal"}],"id":7828,"initialValue":{"baseExpression":{"id":7825,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"19483:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7827,"indexExpression":{"id":7826,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"19488:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19483:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19450:43:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7830,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"19511:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7831,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"19521:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19527:16:27","memberName":"minDepositAmount","nodeType":"MemberAccess","referencedDeclaration":8574,"src":"19521:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19511:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964206465706f73697420616d6f756e74","id":7834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19545:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec","typeString":"literal_string \"invalid deposit amount\""},"value":"invalid deposit amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec","typeString":"literal_string \"invalid deposit amount\""}],"id":7829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19503:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19503:67:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7836,"nodeType":"ExpressionStatement","src":"19503:67:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7837,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"19584:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19594:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19584:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7855,"nodeType":"IfStatement","src":"19580:188:27","trueBody":{"id":7854,"nodeType":"Block","src":"19597:171:27","statements":[{"expression":{"arguments":[{"expression":{"id":7845,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19677:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19681:6:27","memberName":"sender","nodeType":"MemberAccess","src":"19677:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7849,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19713:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_RCCStake_$8560","typeString":"contract RCCStake"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RCCStake_$8560","typeString":"contract RCCStake"}],"id":7848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19705:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7847,"name":"address","nodeType":"ElementaryTypeName","src":"19705:7:27","typeDescriptions":{}}},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19705:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7851,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"19736:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7841,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"19618:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19624:17:27","memberName":"stakeTokenAddress","nodeType":"MemberAccess","referencedDeclaration":8564,"src":"19618:23:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7840,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"19611:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2298_$","typeString":"type(contract IERC20)"}},"id":7843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19611:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"id":7844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19643:16:27","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2396,"src":"19611:48:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$2298_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":7852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19611:146:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7853,"nodeType":"ExpressionStatement","src":"19611:146:27"}]}},{"expression":{"arguments":[{"id":7857,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"19786:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7858,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"19792:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7856,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8467,"src":"19777:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19777:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7860,"nodeType":"ExpressionStatement","src":"19777:23:27"}]},"documentation":{"id":7801,"nodeType":"StructuredDocumentation","src":"18824:308:27","text":" @notice Deposit staking token for RCC rewards\n Before depositing, user needs approve this contract to be able to spend or transfer their staking tokens\n @param _pid       Id of the pool to be deposited to\n @param _amount    Amount of staking tokens to be deposited"},"functionSelector":"e2bbb158","id":7862,"implemented":true,"kind":"function","modifiers":[{"id":7808,"kind":"modifierInvocation","modifierName":{"id":7807,"name":"whenNotWithdrawPaused","nameLocations":["19214:21:27"],"nodeType":"IdentifierPath","referencedDeclaration":6825,"src":"19214:21:27"},"nodeType":"ModifierInvocation","src":"19214:21:27"},{"arguments":[{"id":7810,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"19245:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7811,"kind":"modifierInvocation","modifierName":{"id":7809,"name":"checkPid","nameLocations":["19236:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6805,"src":"19236:8:27"},"nodeType":"ModifierInvocation","src":"19236:14:27"}],"name":"deposit","nameLocation":"19146:7:27","nodeType":"FunctionDefinition","parameters":{"id":7806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7803,"mutability":"mutable","name":"_pid","nameLocation":"19171:4:27","nodeType":"VariableDeclaration","scope":7862,"src":"19163:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7802,"name":"uint256","nodeType":"ElementaryTypeName","src":"19163:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7805,"mutability":"mutable","name":"_amount","nameLocation":"19193:7:27","nodeType":"VariableDeclaration","scope":7862,"src":"19185:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7804,"name":"uint256","nodeType":"ElementaryTypeName","src":"19185:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19153:53:27"},"returnParameters":{"id":7812,"nodeType":"ParameterList","parameters":[],"src":"19251:0:27"},"scope":8560,"src":"19137:670:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8020,"nodeType":"Block","src":"20129:1331:27","statements":[{"assignments":[7881],"declarations":[{"constant":false,"id":7881,"mutability":"mutable","name":"pool_","nameLocation":"20164:5:27","nodeType":"VariableDeclaration","scope":8020,"src":"20139:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"},"typeName":{"id":7880,"nodeType":"UserDefinedTypeName","pathNode":{"id":7879,"name":"RCCStakeLib.Pool","nameLocations":["20139:11:27","20151:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8577,"src":"20139:16:27"},"referencedDeclaration":8577,"src":"20139:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"}},"visibility":"internal"}],"id":7885,"initialValue":{"baseExpression":{"id":7882,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"20172:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":7884,"indexExpression":{"id":7883,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7865,"src":"20177:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20172:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20139:43:27"},{"assignments":[7890],"declarations":[{"constant":false,"id":7890,"mutability":"mutable","name":"user_","nameLocation":"20217:5:27","nodeType":"VariableDeclaration","scope":8020,"src":"20192:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"},"typeName":{"id":7889,"nodeType":"UserDefinedTypeName","pathNode":{"id":7888,"name":"RCCStakeLib.User","nameLocations":["20192:11:27","20204:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8593,"src":"20192:16:27"},"referencedDeclaration":8593,"src":"20192:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"}},"visibility":"internal"}],"id":7897,"initialValue":{"baseExpression":{"baseExpression":{"id":7891,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"20225:4:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$8593_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStakeLib.User storage ref))"}},"id":7893,"indexExpression":{"id":7892,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7865,"src":"20230:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20225:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8593_storage_$","typeString":"mapping(address => struct RCCStakeLib.User storage ref)"}},"id":7896,"indexExpression":{"expression":{"id":7894,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20236:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20240:6:27","memberName":"sender","nodeType":"MemberAccess","src":"20236:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20225:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage","typeString":"struct RCCStakeLib.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20192:55:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7899,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"20279:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20285:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"20279:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7901,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"20300:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20279:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f756768207374616b696e6720746f6b656e2062616c616e6365","id":7903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20321:34:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_a40f5adcc0f327ea4569b64219d34444458f98e534070c4ae22df0b574107ecf","typeString":"literal_string \"Not enough staking token balance\""},"value":"Not enough staking token balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a40f5adcc0f327ea4569b64219d34444458f98e534070c4ae22df0b574107ecf","typeString":"literal_string \"Not enough staking token balance\""}],"id":7898,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20258:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20258:107:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7905,"nodeType":"ExpressionStatement","src":"20258:107:27"},{"expression":{"arguments":[{"id":7907,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7865,"src":"20386:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7906,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[7219,7728],"referencedDeclaration":7728,"src":"20375:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20375:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7909,"nodeType":"ExpressionStatement","src":"20375:16:27"},{"assignments":[7911,7913],"declarations":[{"constant":false,"id":7911,"mutability":"mutable","name":"success","nameLocation":"20407:7:27","nodeType":"VariableDeclaration","scope":8020,"src":"20402:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7910,"name":"bool","nodeType":"ElementaryTypeName","src":"20402:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7913,"mutability":"mutable","name":"pendingRCC_","nameLocation":"20424:11:27","nodeType":"VariableDeclaration","scope":8020,"src":"20416:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7912,"name":"uint256","nodeType":"ElementaryTypeName","src":"20416:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7920,"initialValue":{"arguments":[{"expression":{"id":7917,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"20477:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20483:25:27","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":8570,"src":"20477:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":7914,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"20439:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20445:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"20439:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20457:6:27","memberName":"tryMul","nodeType":"MemberAccess","referencedDeclaration":3347,"src":"20439:24:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20439:79:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"20401:117:27"},{"expression":{"arguments":[{"id":7922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"20536:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f77","id":7923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20545:10:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""},"value":"overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""}],"id":7921,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20528:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20528:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7925,"nodeType":"ExpressionStatement","src":"20528:28:27"},{"expression":{"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7926,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"20567:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7927,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"20576:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7928,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"20566:22:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":7931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20610:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":7929,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"20591:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20603:6:27","memberName":"tryDiv","nodeType":"MemberAccess","referencedDeclaration":3375,"src":"20591:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20591:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"src":"20566:46:27","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7934,"nodeType":"ExpressionStatement","src":"20566:46:27"},{"expression":{"arguments":[{"id":7936,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"20630:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f7732","id":7937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20639:11:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc46be7e88dad9c850cfc31962eb9871149b07b0ba227a4233d18e86f3aa2886","typeString":"literal_string \"overflow2\""},"value":"overflow2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc46be7e88dad9c850cfc31962eb9871149b07b0ba227a4233d18e86f3aa2886","typeString":"literal_string \"overflow2\""}],"id":7935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20622:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20622:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7939,"nodeType":"ExpressionStatement","src":"20622:29:27"},{"expression":{"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7940,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"20662:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7941,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"20671:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7942,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"20661:22:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7945,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"20705:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20711:15:27","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":8586,"src":"20705:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7943,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"20686:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20698:6:27","memberName":"trySub","nodeType":"MemberAccess","referencedDeclaration":3305,"src":"20686:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20686:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"src":"20661:66:27","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7949,"nodeType":"ExpressionStatement","src":"20661:66:27"},{"expression":{"arguments":[{"id":7951,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"20745:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f7733","id":7952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20754:11:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5e521e2c65f04ddc979b259b7b59d4bb841d693fe0fe14d56a3ec19243b969a","typeString":"literal_string \"overflow3\""},"value":"overflow3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f5e521e2c65f04ddc979b259b7b59d4bb841d693fe0fe14d56a3ec19243b969a","typeString":"literal_string \"overflow3\""}],"id":7950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20737:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20737:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7954,"nodeType":"ExpressionStatement","src":"20737:29:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7955,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"20780:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20794:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20780:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7965,"nodeType":"IfStatement","src":"20776:81:27","trueBody":{"id":7964,"nodeType":"Block","src":"20797:60:27","statements":[{"expression":{"id":7962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7958,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"20811:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20817:14:27","memberName":"pendingRewards","nodeType":"MemberAccess","referencedDeclaration":8588,"src":"20811:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7961,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"20835:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20811:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7963,"nodeType":"ExpressionStatement","src":"20811:35:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7966,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"20903:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20913:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20903:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7992,"nodeType":"IfStatement","src":"20899:300:27","trueBody":{"id":7991,"nodeType":"Block","src":"20916:283:27","statements":[{"expression":{"id":7973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7969,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"20930:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20936:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"20930:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7972,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"20951:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20930:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7974,"nodeType":"ExpressionStatement","src":"20930:28:27"},{"expression":{"arguments":[{"arguments":[{"id":7982,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"21066:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7983,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"21115:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21121:6:27","memberName":"number","nodeType":"MemberAccess","src":"21115:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":7985,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"21130:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21136:19:27","memberName":"unStakeLockedBlocks","nodeType":"MemberAccess","referencedDeclaration":8576,"src":"21130:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21115:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7980,"name":"RCCStakeLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"21009:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RCCStakeLib_$8594_$","typeString":"type(library RCCStakeLib)"}},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21021:14:27","memberName":"UnStakeRequest","nodeType":"MemberAccess","referencedDeclaration":8582,"src":"21009:26:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_UnStakeRequest_$8582_storage_ptr_$","typeString":"type(struct RCCStakeLib.UnStakeRequest storage pointer)"}},"id":7988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["21058:6:27","21095:18:27"],"names":["amount","unlockBlocksCounts"],"nodeType":"FunctionCall","src":"21009:165:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$8582_memory_ptr","typeString":"struct RCCStakeLib.UnStakeRequest memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UnStakeRequest_$8582_memory_ptr","typeString":"struct RCCStakeLib.UnStakeRequest memory"}],"expression":{"expression":{"id":7975,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"20972:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":7978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20978:8:27","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"20972:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref[] storage ref"}},"id":7979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20987:4:27","memberName":"push","nodeType":"MemberAccess","src":"20972:19:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage_ptr_$_t_struct$_UnStakeRequest_$8582_storage_$returns$__$attached_to$_t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage_ptr_$","typeString":"function (struct RCCStakeLib.UnStakeRequest storage ref[] storage pointer,struct RCCStakeLib.UnStakeRequest storage ref)"}},"id":7989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20972:216:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7990,"nodeType":"ExpressionStatement","src":"20972:216:27"}]}},{"expression":{"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7993,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"21241:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":7995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21247:16:27","memberName":"stakeTokenAmount","nodeType":"MemberAccess","referencedDeclaration":8572,"src":"21241:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7996,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"21267:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21241:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7998,"nodeType":"ExpressionStatement","src":"21241:33:27"},{"expression":{"id":8011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7999,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"21284:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21290:15:27","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":8586,"src":"21284:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8002,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"21321:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21327:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"21321:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":8004,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"21341:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":8005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21347:25:27","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":8570,"src":"21341:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21321:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21320:53:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"31","id":8008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21389:7:27","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"id":8009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21388:9:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"21320:77:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21284:113:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8012,"nodeType":"ExpressionStatement","src":"21284:113:27"},{"eventCall":{"arguments":[{"expression":{"id":8014,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21427:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21431:6:27","memberName":"sender","nodeType":"MemberAccess","src":"21427:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8016,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7865,"src":"21439:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8017,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"21445:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8013,"name":"RequestUnstake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"21412:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21412:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8019,"nodeType":"EmitStatement","src":"21407:46:27"}]},"documentation":{"id":7863,"nodeType":"StructuredDocumentation","src":"19813:183:27","text":" @notice Unstake staking tokens\n @param _pid       Id of the pool to be withdrawn from\n @param _amount    amount of staking tokens to be withdrawn"},"functionSelector":"9e2c8a5b","id":8021,"implemented":true,"kind":"function","modifiers":[{"id":7870,"kind":"modifierInvocation","modifierName":{"id":7869,"name":"whenNotPaused","nameLocations":["20078:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":922,"src":"20078:13:27"},"nodeType":"ModifierInvocation","src":"20078:13:27"},{"id":7872,"kind":"modifierInvocation","modifierName":{"id":7871,"name":"whenNotWithdrawPaused","nameLocations":["20092:21:27"],"nodeType":"IdentifierPath","referencedDeclaration":6825,"src":"20092:21:27"},"nodeType":"ModifierInvocation","src":"20092:21:27"},{"arguments":[{"id":7874,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7865,"src":"20123:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7875,"kind":"modifierInvocation","modifierName":{"id":7873,"name":"checkPid","nameLocations":["20114:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6805,"src":"20114:8:27"},"nodeType":"ModifierInvocation","src":"20114:14:27"}],"name":"unstake","nameLocation":"20010:7:27","nodeType":"FunctionDefinition","parameters":{"id":7868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7865,"mutability":"mutable","name":"_pid","nameLocation":"20035:4:27","nodeType":"VariableDeclaration","scope":8021,"src":"20027:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7864,"name":"uint256","nodeType":"ElementaryTypeName","src":"20027:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7867,"mutability":"mutable","name":"_amount","nameLocation":"20057:7:27","nodeType":"VariableDeclaration","scope":8021,"src":"20049:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7866,"name":"uint256","nodeType":"ElementaryTypeName","src":"20049:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20017:53:27"},"returnParameters":{"id":7876,"nodeType":"ParameterList","parameters":[],"src":"20129:0:27"},"scope":8560,"src":"20001:1459:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8187,"nodeType":"Block","src":"21870:1246:27","statements":[{"assignments":[8038],"declarations":[{"constant":false,"id":8038,"mutability":"mutable","name":"pool_","nameLocation":"21905:5:27","nodeType":"VariableDeclaration","scope":8187,"src":"21880:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"},"typeName":{"id":8037,"nodeType":"UserDefinedTypeName","pathNode":{"id":8036,"name":"RCCStakeLib.Pool","nameLocations":["21880:11:27","21892:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8577,"src":"21880:16:27"},"referencedDeclaration":8577,"src":"21880:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"}},"visibility":"internal"}],"id":8042,"initialValue":{"baseExpression":{"id":8039,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"21913:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":8041,"indexExpression":{"id":8040,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"21918:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21913:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21880:43:27"},{"assignments":[8047],"declarations":[{"constant":false,"id":8047,"mutability":"mutable","name":"user_","nameLocation":"21958:5:27","nodeType":"VariableDeclaration","scope":8187,"src":"21933:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"},"typeName":{"id":8046,"nodeType":"UserDefinedTypeName","pathNode":{"id":8045,"name":"RCCStakeLib.User","nameLocations":["21933:11:27","21945:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8593,"src":"21933:16:27"},"referencedDeclaration":8593,"src":"21933:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"}},"visibility":"internal"}],"id":8054,"initialValue":{"baseExpression":{"baseExpression":{"id":8048,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"21966:4:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$8593_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStakeLib.User storage ref))"}},"id":8050,"indexExpression":{"id":8049,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"21971:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21966:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8593_storage_$","typeString":"mapping(address => struct RCCStakeLib.User storage ref)"}},"id":8053,"indexExpression":{"expression":{"id":8051,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21977:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21981:6:27","memberName":"sender","nodeType":"MemberAccess","src":"21977:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21966:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage","typeString":"struct RCCStakeLib.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21933:55:27"},{"assignments":[8056],"declarations":[{"constant":false,"id":8056,"mutability":"mutable","name":"pendingWithdraw_","nameLocation":"22007:16:27","nodeType":"VariableDeclaration","scope":8187,"src":"21999:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8055,"name":"uint256","nodeType":"ElementaryTypeName","src":"21999:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8057,"nodeType":"VariableDeclarationStatement","src":"21999:24:27"},{"assignments":[8059],"declarations":[{"constant":false,"id":8059,"mutability":"mutable","name":"popNum_","nameLocation":"22041:7:27","nodeType":"VariableDeclaration","scope":8187,"src":"22033:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8058,"name":"uint256","nodeType":"ElementaryTypeName","src":"22033:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8060,"nodeType":"VariableDeclarationStatement","src":"22033:15:27"},{"body":{"id":8097,"nodeType":"Block","src":"22167:218:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"id":8073,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"22185:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22191:8:27","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"22185:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref[] storage ref"}},"id":8076,"indexExpression":{"id":8075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"22200:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22185:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$8582_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref"}},"id":8077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22203:18:27","memberName":"unlockBlocksCounts","nodeType":"MemberAccess","referencedDeclaration":8581,"src":"22185:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":8078,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"22224:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22230:6:27","memberName":"number","nodeType":"MemberAccess","src":"22224:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22185:51:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8083,"nodeType":"IfStatement","src":"22181:95:27","trueBody":{"id":8082,"nodeType":"Block","src":"22238:38:27","statements":[{"id":8081,"nodeType":"Break","src":"22256:5:27"}]}},{"expression":{"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8084,"name":"pendingWithdraw_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"22289:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8085,"name":"pendingWithdraw_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"22308:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"expression":{"id":8086,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"22327:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22333:8:27","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"22327:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref[] storage ref"}},"id":8089,"indexExpression":{"id":8088,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"22342:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22327:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$8582_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref"}},"id":8090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22345:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8579,"src":"22327:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22308:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22289:62:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8093,"nodeType":"ExpressionStatement","src":"22289:62:27"},{"expression":{"id":8095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22365:9:27","subExpression":{"id":8094,"name":"popNum_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"22365:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8096,"nodeType":"ExpressionStatement","src":"22365:9:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8065,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"22135:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":8066,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"22139:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22145:8:27","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"22139:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref[] storage ref"}},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22154:6:27","memberName":"length","nodeType":"MemberAccess","src":"22139:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22135:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8098,"initializationExpression":{"assignments":[8062],"declarations":[{"constant":false,"id":8062,"mutability":"mutable","name":"i","nameLocation":"22128:1:27","nodeType":"VariableDeclaration","scope":8098,"src":"22120:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8061,"name":"uint256","nodeType":"ElementaryTypeName","src":"22120:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8064,"initialValue":{"hexValue":"30","id":8063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22132:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22120:13:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22162:3:27","subExpression":{"id":8070,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"22162:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8072,"nodeType":"ExpressionStatement","src":"22162:3:27"},"nodeType":"ForStatement","src":"22115:270:27"},{"body":{"id":8126,"nodeType":"Block","src":"22519:72:27","statements":[{"expression":{"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":8113,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"22533:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22539:8:27","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"22533:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref[] storage ref"}},"id":8117,"indexExpression":{"id":8115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"22548:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22533:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$8582_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":8118,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"22553:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22559:8:27","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"22553:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref[] storage ref"}},"id":8123,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"22568:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8121,"name":"popNum_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"22572:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22568:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22553:27:27","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$8582_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref"}},"src":"22533:47:27","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$8582_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref"}},"id":8125,"nodeType":"ExpressionStatement","src":"22533:47:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"22477:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":8104,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"22481:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22487:8:27","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"22481:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref[] storage ref"}},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22496:6:27","memberName":"length","nodeType":"MemberAccess","src":"22481:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8107,"name":"popNum_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"22505:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22481:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22477:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8127,"initializationExpression":{"assignments":[8100],"declarations":[{"constant":false,"id":8100,"mutability":"mutable","name":"i","nameLocation":"22470:1:27","nodeType":"VariableDeclaration","scope":8127,"src":"22462:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8099,"name":"uint256","nodeType":"ElementaryTypeName","src":"22462:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8102,"initialValue":{"hexValue":"30","id":8101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22474:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22462:13:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22514:3:27","subExpression":{"id":8110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8100,"src":"22514:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8112,"nodeType":"ExpressionStatement","src":"22514:3:27"},"nodeType":"ForStatement","src":"22457:134:27"},{"body":{"id":8145,"nodeType":"Block","src":"22638:45:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":8138,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"22652:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22658:8:27","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":8592,"src":"22652:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage","typeString":"struct RCCStakeLib.UnStakeRequest storage ref[] storage ref"}},"id":8142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22667:3:27","memberName":"pop","nodeType":"MemberAccess","src":"22652:18:27","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage_ptr_$","typeString":"function (struct RCCStakeLib.UnStakeRequest storage ref[] storage pointer)"}},"id":8143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22652:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8144,"nodeType":"ExpressionStatement","src":"22652:20:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"22620:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8133,"name":"popNum_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"22624:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22620:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8146,"initializationExpression":{"assignments":[8129],"declarations":[{"constant":false,"id":8129,"mutability":"mutable","name":"i","nameLocation":"22613:1:27","nodeType":"VariableDeclaration","scope":8146,"src":"22605:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8128,"name":"uint256","nodeType":"ElementaryTypeName","src":"22605:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8131,"initialValue":{"hexValue":"30","id":8130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22617:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22605:13:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22633:3:27","subExpression":{"id":8135,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"22633:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8137,"nodeType":"ExpressionStatement","src":"22633:3:27"},"nodeType":"ForStatement","src":"22600:83:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8147,"name":"pendingWithdraw_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"22696:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22715:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22696:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8177,"nodeType":"IfStatement","src":"22692:345:27","trueBody":{"id":8176,"nodeType":"Block","src":"22718:319:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8150,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"22736:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":8151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22742:17:27","memberName":"stakeTokenAddress","nodeType":"MemberAccess","referencedDeclaration":8564,"src":"22736:23:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":8154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22771:3:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22763:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8152,"name":"address","nodeType":"ElementaryTypeName","src":"22763:7:27","typeDescriptions":{}}},"id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22763:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22736:39:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8174,"nodeType":"Block","src":"22862:165:27","statements":[{"expression":{"arguments":[{"expression":{"id":8169,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22946:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22950:6:27","memberName":"sender","nodeType":"MemberAccess","src":"22946:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8171,"name":"pendingWithdraw_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"22978:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":8165,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"22887:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":8166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22893:17:27","memberName":"stakeTokenAddress","nodeType":"MemberAccess","referencedDeclaration":8564,"src":"22887:23:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8164,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"22880:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2298_$","typeString":"type(contract IERC20)"}},"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22880:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"id":8168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22912:12:27","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"22880:44:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2298_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$2298_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22880:132:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8173,"nodeType":"ExpressionStatement","src":"22880:132:27"}]},"id":8175,"nodeType":"IfStatement","src":"22732:295:27","trueBody":{"id":8163,"nodeType":"Block","src":"22777:79:27","statements":[{"expression":{"arguments":[{"expression":{"id":8158,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22812:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22816:6:27","memberName":"sender","nodeType":"MemberAccess","src":"22812:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8160,"name":"pendingWithdraw_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"22824:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8157,"name":"_safeETHTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8551,"src":"22795:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22795:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8162,"nodeType":"ExpressionStatement","src":"22795:46:27"}]}}]}},{"eventCall":{"arguments":[{"expression":{"id":8179,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23060:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23064:6:27","memberName":"sender","nodeType":"MemberAccess","src":"23060:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8181,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"23072:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8182,"name":"pendingWithdraw_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"23078:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8183,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"23096:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23102:6:27","memberName":"number","nodeType":"MemberAccess","src":"23096:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8178,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"23051:8:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":8185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23051:58:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8186,"nodeType":"EmitStatement","src":"23046:63:27"}]},"documentation":{"id":8022,"nodeType":"StructuredDocumentation","src":"21466:295:27","text":" @notice Withdraw the unlock unstake amount\n @param _pid       Id of the pool to be withdrawn from\n 功能: 提取一个池子里所有的代币\n - 提取池子里所有的代币；\n - 拿走所有的奖励；\n - 更新池子\n - 发射事件"},"functionSelector":"2e1a7d4d","id":8188,"implemented":true,"kind":"function","modifiers":[{"id":8027,"kind":"modifierInvocation","modifierName":{"id":8026,"name":"whenNotPaused","nameLocations":["21819:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":922,"src":"21819:13:27"},"nodeType":"ModifierInvocation","src":"21819:13:27"},{"id":8029,"kind":"modifierInvocation","modifierName":{"id":8028,"name":"whenNotWithdrawPaused","nameLocations":["21833:21:27"],"nodeType":"IdentifierPath","referencedDeclaration":6825,"src":"21833:21:27"},"nodeType":"ModifierInvocation","src":"21833:21:27"},{"arguments":[{"id":8031,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"21864:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8032,"kind":"modifierInvocation","modifierName":{"id":8030,"name":"checkPid","nameLocations":["21855:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6805,"src":"21855:8:27"},"nodeType":"ModifierInvocation","src":"21855:14:27"}],"name":"withdraw","nameLocation":"21775:8:27","nodeType":"FunctionDefinition","parameters":{"id":8025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8024,"mutability":"mutable","name":"_pid","nameLocation":"21801:4:27","nodeType":"VariableDeclaration","scope":8188,"src":"21793:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8023,"name":"uint256","nodeType":"ElementaryTypeName","src":"21793:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21783:28:27"},"returnParameters":{"id":8033,"nodeType":"ParameterList","parameters":[],"src":"21870:0:27"},"scope":8560,"src":"21766:1350:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8279,"nodeType":"Block","src":"23418:627:27","statements":[{"assignments":[8205],"declarations":[{"constant":false,"id":8205,"mutability":"mutable","name":"pool_","nameLocation":"23453:5:27","nodeType":"VariableDeclaration","scope":8279,"src":"23428:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"},"typeName":{"id":8204,"nodeType":"UserDefinedTypeName","pathNode":{"id":8203,"name":"RCCStakeLib.Pool","nameLocations":["23428:11:27","23440:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8577,"src":"23428:16:27"},"referencedDeclaration":8577,"src":"23428:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"}},"visibility":"internal"}],"id":8209,"initialValue":{"baseExpression":{"id":8206,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"23461:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":8208,"indexExpression":{"id":8207,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"23466:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23461:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"23428:43:27"},{"assignments":[8214],"declarations":[{"constant":false,"id":8214,"mutability":"mutable","name":"user_","nameLocation":"23506:5:27","nodeType":"VariableDeclaration","scope":8279,"src":"23481:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"},"typeName":{"id":8213,"nodeType":"UserDefinedTypeName","pathNode":{"id":8212,"name":"RCCStakeLib.User","nameLocations":["23481:11:27","23493:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8593,"src":"23481:16:27"},"referencedDeclaration":8593,"src":"23481:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"}},"visibility":"internal"}],"id":8221,"initialValue":{"baseExpression":{"baseExpression":{"id":8215,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"23514:4:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$8593_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStakeLib.User storage ref))"}},"id":8217,"indexExpression":{"id":8216,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"23519:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23514:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8593_storage_$","typeString":"mapping(address => struct RCCStakeLib.User storage ref)"}},"id":8220,"indexExpression":{"expression":{"id":8218,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23525:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23529:6:27","memberName":"sender","nodeType":"MemberAccess","src":"23525:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23514:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage","typeString":"struct RCCStakeLib.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"23481:55:27"},{"expression":{"arguments":[{"id":8223,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"23557:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8222,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[7219,7728],"referencedDeclaration":7728,"src":"23546:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23546:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8225,"nodeType":"ExpressionStatement","src":"23546:16:27"},{"assignments":[8227],"declarations":[{"constant":false,"id":8227,"mutability":"mutable","name":"pendingRCC_","nameLocation":"23580:11:27","nodeType":"VariableDeclaration","scope":8279,"src":"23572:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8226,"name":"uint256","nodeType":"ElementaryTypeName","src":"23572:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8240,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8228,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"23595:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23601:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"23595:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":8230,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"23627:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":8231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23633:25:27","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":8570,"src":"23627:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23595:63:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23594:65:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8234,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"23674:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23680:15:27","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":8586,"src":"23674:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23594:101:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":8237,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"23710:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23716:14:27","memberName":"pendingRewards","nodeType":"MemberAccess","referencedDeclaration":8588,"src":"23710:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23594:136:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23572:158:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8241,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"23744:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23758:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23744:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8257,"nodeType":"IfStatement","src":"23740:125:27","trueBody":{"id":8256,"nodeType":"Block","src":"23761:104:27","statements":[{"expression":{"id":8248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8244,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"23775:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"23781:14:27","memberName":"pendingRewards","nodeType":"MemberAccess","referencedDeclaration":8588,"src":"23775:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23798:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23775:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8249,"nodeType":"ExpressionStatement","src":"23775:24:27"},{"expression":{"arguments":[{"expression":{"id":8251,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23830:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23834:6:27","memberName":"sender","nodeType":"MemberAccess","src":"23830:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8253,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"23842:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8250,"name":"_safeRCCTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8506,"src":"23813:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23813:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8255,"nodeType":"ExpressionStatement","src":"23813:41:27"}]}},{"expression":{"id":8270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8258,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"23874:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"23880:15:27","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":8586,"src":"23874:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8261,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"23911:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23917:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"23911:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":8263,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"23931:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":8264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23937:25:27","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":8570,"src":"23931:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23911:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23910:53:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"31","id":8267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23979:7:27","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"id":8268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23978:9:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"23910:77:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23874:113:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8271,"nodeType":"ExpressionStatement","src":"23874:113:27"},{"eventCall":{"arguments":[{"expression":{"id":8273,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24008:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24012:6:27","memberName":"sender","nodeType":"MemberAccess","src":"24008:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8275,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"24020:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8276,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"24026:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8272,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"24002:5:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24002:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8278,"nodeType":"EmitStatement","src":"23997:41:27"}]},"documentation":{"id":8189,"nodeType":"StructuredDocumentation","src":"23122:193:27","text":" @notice Claim RCC tokens reward\n @param _pid       Id of the pool to be claimed from\n 索取、主张、索赔\n TODO: 这段逻辑谁调用？"},"functionSelector":"379607f5","id":8280,"implemented":true,"kind":"function","modifiers":[{"id":8194,"kind":"modifierInvocation","modifierName":{"id":8193,"name":"whenNotPaused","nameLocations":["23370:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":922,"src":"23370:13:27"},"nodeType":"ModifierInvocation","src":"23370:13:27"},{"arguments":[{"id":8196,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"23393:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8197,"kind":"modifierInvocation","modifierName":{"id":8195,"name":"checkPid","nameLocations":["23384:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6805,"src":"23384:8:27"},"nodeType":"ModifierInvocation","src":"23384:14:27"},{"id":8199,"kind":"modifierInvocation","modifierName":{"id":8198,"name":"whenNotClaimPaused","nameLocations":["23399:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":6815,"src":"23399:18:27"},"nodeType":"ModifierInvocation","src":"23399:18:27"}],"name":"claim","nameLocation":"23329:5:27","nodeType":"FunctionDefinition","parameters":{"id":8192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8191,"mutability":"mutable","name":"_pid","nameLocation":"23352:4:27","nodeType":"VariableDeclaration","scope":8280,"src":"23344:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8190,"name":"uint256","nodeType":"ElementaryTypeName","src":"23344:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23334:28:27"},"returnParameters":{"id":8200,"nodeType":"ParameterList","parameters":[],"src":"23418:0:27"},"scope":8560,"src":"23320:725:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8466,"nodeType":"Block","src":"24414:1965:27","statements":[{"assignments":[8292],"declarations":[{"constant":false,"id":8292,"mutability":"mutable","name":"pool_","nameLocation":"24449:5:27","nodeType":"VariableDeclaration","scope":8466,"src":"24424:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"},"typeName":{"id":8291,"nodeType":"UserDefinedTypeName","pathNode":{"id":8290,"name":"RCCStakeLib.Pool","nameLocations":["24424:11:27","24436:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8577,"src":"24424:16:27"},"referencedDeclaration":8577,"src":"24424:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool"}},"visibility":"internal"}],"id":8296,"initialValue":{"baseExpression":{"id":8293,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"24457:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$8577_storage_$dyn_storage","typeString":"struct RCCStakeLib.Pool storage ref[] storage ref"}},"id":8295,"indexExpression":{"id":8294,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"24462:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24457:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage","typeString":"struct RCCStakeLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"24424:43:27"},{"assignments":[8301],"declarations":[{"constant":false,"id":8301,"mutability":"mutable","name":"user_","nameLocation":"24502:5:27","nodeType":"VariableDeclaration","scope":8466,"src":"24477:30:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"},"typeName":{"id":8300,"nodeType":"UserDefinedTypeName","pathNode":{"id":8299,"name":"RCCStakeLib.User","nameLocations":["24477:11:27","24489:4:27"],"nodeType":"IdentifierPath","referencedDeclaration":8593,"src":"24477:16:27"},"referencedDeclaration":8593,"src":"24477:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User"}},"visibility":"internal"}],"id":8308,"initialValue":{"baseExpression":{"baseExpression":{"id":8302,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"24510:4:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$8593_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStakeLib.User storage ref))"}},"id":8304,"indexExpression":{"id":8303,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"24515:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24510:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8593_storage_$","typeString":"mapping(address => struct RCCStakeLib.User storage ref)"}},"id":8307,"indexExpression":{"expression":{"id":8305,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24521:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24525:6:27","memberName":"sender","nodeType":"MemberAccess","src":"24521:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24510:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage","typeString":"struct RCCStakeLib.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"24477:55:27"},{"expression":{"arguments":[{"id":8310,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"24553:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8309,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[7219,7728],"referencedDeclaration":7728,"src":"24542:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24542:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8312,"nodeType":"ExpressionStatement","src":"24542:16:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8313,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"24614:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24620:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"24614:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24634:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24614:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8389,"nodeType":"IfStatement","src":"24610:873:27","trueBody":{"id":8388,"nodeType":"Block","src":"24637:846:27","statements":[{"assignments":[8318,8320],"declarations":[{"constant":false,"id":8318,"mutability":"mutable","name":"success1","nameLocation":"24657:8:27","nodeType":"VariableDeclaration","scope":8388,"src":"24652:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8317,"name":"bool","nodeType":"ElementaryTypeName","src":"24652:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8320,"mutability":"mutable","name":"accStakeToken","nameLocation":"24675:13:27","nodeType":"VariableDeclaration","scope":8388,"src":"24667:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8319,"name":"uint256","nodeType":"ElementaryTypeName","src":"24667:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8327,"initialValue":{"arguments":[{"expression":{"id":8324,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8292,"src":"24734:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":8325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24740:25:27","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":8570,"src":"24734:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":8321,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"24692:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24698:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"24692:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24710:6:27","memberName":"tryMul","nodeType":"MemberAccess","referencedDeclaration":3347,"src":"24692:24:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24692:87:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"24651:128:27"},{"expression":{"arguments":[{"id":8329,"name":"success1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8318,"src":"24801:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"75736572207374616b6520616d6f756e74206f766572666c6f77","id":8330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24811:28:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c","typeString":"literal_string \"user stake amount overflow\""},"value":"user stake amount overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c","typeString":"literal_string \"user stake amount overflow\""}],"id":8328,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24793:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24793:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8332,"nodeType":"ExpressionStatement","src":"24793:47:27"},{"expression":{"id":8340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":8333,"name":"success1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8318,"src":"24855:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8334,"name":"accStakeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8320,"src":"24865:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8335,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"24854:25:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":8338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24903:7:27","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"id":8336,"name":"accStakeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8320,"src":"24882:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24896:6:27","memberName":"tryDiv","nodeType":"MemberAccess","referencedDeclaration":3375,"src":"24882:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":8339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24882:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"src":"24854:57:27","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8341,"nodeType":"ExpressionStatement","src":"24854:57:27"},{"expression":{"arguments":[{"id":8343,"name":"success1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8318,"src":"24933:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616363756d756c617465207265776172647320706572207374616b65206f766572666c6f77","id":8344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24943:39:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e","typeString":"literal_string \"accumulate rewards per stake overflow\""},"value":"accumulate rewards per stake overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e","typeString":"literal_string \"accumulate rewards per stake overflow\""}],"id":8342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24925:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24925:58:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8346,"nodeType":"ExpressionStatement","src":"24925:58:27"},{"assignments":[8348,8350],"declarations":[{"constant":false,"id":8348,"mutability":"mutable","name":"success2","nameLocation":"25004:8:27","nodeType":"VariableDeclaration","scope":8388,"src":"24999:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8347,"name":"bool","nodeType":"ElementaryTypeName","src":"24999:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8350,"mutability":"mutable","name":"pendingRCC_","nameLocation":"25022:11:27","nodeType":"VariableDeclaration","scope":8388,"src":"25014:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8349,"name":"uint256","nodeType":"ElementaryTypeName","src":"25014:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8356,"initialValue":{"arguments":[{"expression":{"id":8353,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"25075:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25081:15:27","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":8586,"src":"25075:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8351,"name":"accStakeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8320,"src":"25037:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25051:6:27","memberName":"trySub","nodeType":"MemberAccess","referencedDeclaration":3305,"src":"25037:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":8355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25037:73:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"24998:112:27"},{"expression":{"arguments":[{"id":8358,"name":"success2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8348,"src":"25132:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"70656e64696e672072657761726473206f766572666c6f77","id":8359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25142:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4","typeString":"literal_string \"pending rewards overflow\""},"value":"pending rewards overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4","typeString":"literal_string \"pending rewards overflow\""}],"id":8357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25124:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25124:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8361,"nodeType":"ExpressionStatement","src":"25124:45:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8362,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"25187:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25201:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25187:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8387,"nodeType":"IfStatement","src":"25183:290:27","trueBody":{"id":8386,"nodeType":"Block","src":"25204:269:27","statements":[{"assignments":[8366,8368],"declarations":[{"constant":false,"id":8366,"mutability":"mutable","name":"success3","nameLocation":"25228:8:27","nodeType":"VariableDeclaration","scope":8386,"src":"25223:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8365,"name":"bool","nodeType":"ElementaryTypeName","src":"25223:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8368,"mutability":"mutable","name":"_pendingRCC","nameLocation":"25246:11:27","nodeType":"VariableDeclaration","scope":8386,"src":"25238:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8367,"name":"uint256","nodeType":"ElementaryTypeName","src":"25238:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8374,"initialValue":{"arguments":[{"id":8372,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"25331:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":8369,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"25261:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25288:14:27","memberName":"pendingRewards","nodeType":"MemberAccess","referencedDeclaration":8588,"src":"25261:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25324:6:27","memberName":"tryAdd","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"25261:69:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":8373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25261:82:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"25222:121:27"},{"expression":{"arguments":[{"id":8376,"name":"success3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"25369:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"70656e64696e672072657761726473206f766572666c6f77","id":8377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25379:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4","typeString":"literal_string \"pending rewards overflow\""},"value":"pending rewards overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4","typeString":"literal_string \"pending rewards overflow\""}],"id":8375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25361:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25361:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8379,"nodeType":"ExpressionStatement","src":"25361:45:27"},{"expression":{"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8380,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"25424:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25430:14:27","memberName":"pendingRewards","nodeType":"MemberAccess","referencedDeclaration":8588,"src":"25424:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8383,"name":"_pendingRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8368,"src":"25447:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25424:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8385,"nodeType":"ExpressionStatement","src":"25424:34:27"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8390,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"25538:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25548:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25538:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8415,"nodeType":"IfStatement","src":"25534:262:27","trueBody":{"id":8414,"nodeType":"Block","src":"25551:245:27","statements":[{"assignments":[8394,8396],"declarations":[{"constant":false,"id":8394,"mutability":"mutable","name":"success4","nameLocation":"25571:8:27","nodeType":"VariableDeclaration","scope":8414,"src":"25566:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8393,"name":"bool","nodeType":"ElementaryTypeName","src":"25566:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8396,"mutability":"mutable","name":"accStakeAmount","nameLocation":"25589:14:27","nodeType":"VariableDeclaration","scope":8414,"src":"25581:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8395,"name":"uint256","nodeType":"ElementaryTypeName","src":"25581:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8402,"initialValue":{"arguments":[{"expression":{"id":8399,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"25639:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25645:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"25639:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8397,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"25607:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25615:6:27","memberName":"tryAdd","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"25607:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":8401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25607:63:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"25565:105:27"},{"expression":{"arguments":[{"id":8404,"name":"success4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"25692:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616363756d756c617465207374616b6520616d6f756e74206f766572666c6f77","id":8405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25702:34:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720","typeString":"literal_string \"accumulate stake amount overflow\""},"value":"accumulate stake amount overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720","typeString":"literal_string \"accumulate stake amount overflow\""}],"id":8403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25684:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25684:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8407,"nodeType":"ExpressionStatement","src":"25684:53:27"},{"expression":{"id":8412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8408,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"25751:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25757:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"25751:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8411,"name":"accStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8396,"src":"25771:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25751:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8413,"nodeType":"ExpressionStatement","src":"25751:34:27"}]}},{"assignments":[8417,8419],"declarations":[{"constant":false,"id":8417,"mutability":"mutable","name":"success5","nameLocation":"25856:8:27","nodeType":"VariableDeclaration","scope":8466,"src":"25851:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8416,"name":"bool","nodeType":"ElementaryTypeName","src":"25851:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8419,"mutability":"mutable","name":"_stakeTokenAmount","nameLocation":"25874:17:27","nodeType":"VariableDeclaration","scope":8466,"src":"25866:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8418,"name":"uint256","nodeType":"ElementaryTypeName","src":"25866:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8425,"initialValue":{"arguments":[{"id":8423,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"25951:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":8420,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8292,"src":"25895:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":8421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25914:16:27","memberName":"stakeTokenAmount","nodeType":"MemberAccess","referencedDeclaration":8572,"src":"25895:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25944:6:27","memberName":"tryAdd","nodeType":"MemberAccess","referencedDeclaration":3277,"src":"25895:55:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":8424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25895:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"25850:109:27"},{"expression":{"arguments":[{"id":8427,"name":"success5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8417,"src":"25977:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7374616b6520746f6b656e20616d6f756e74206f766572666c6f77","id":8428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25987:29:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf","typeString":"literal_string \"stake token amount overflow\""},"value":"stake token amount overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf","typeString":"literal_string \"stake token amount overflow\""}],"id":8426,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25969:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25969:48:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8430,"nodeType":"ExpressionStatement","src":"25969:48:27"},{"expression":{"id":8435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8431,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8292,"src":"26027:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":8433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26033:16:27","memberName":"stakeTokenAmount","nodeType":"MemberAccess","referencedDeclaration":8572,"src":"26027:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8434,"name":"_stakeTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"26052:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26027:42:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8436,"nodeType":"ExpressionStatement","src":"26027:42:27"},{"assignments":[8438,8440],"declarations":[{"constant":false,"id":8438,"mutability":"mutable","name":"success6","nameLocation":"26086:8:27","nodeType":"VariableDeclaration","scope":8466,"src":"26081:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8437,"name":"bool","nodeType":"ElementaryTypeName","src":"26081:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8440,"mutability":"mutable","name":"_finishedRewards","nameLocation":"26104:16:27","nodeType":"VariableDeclaration","scope":8466,"src":"26096:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8439,"name":"uint256","nodeType":"ElementaryTypeName","src":"26096:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8447,"initialValue":{"arguments":[{"expression":{"id":8444,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8292,"src":"26162:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$8577_storage_ptr","typeString":"struct RCCStakeLib.Pool storage pointer"}},"id":8445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26168:25:27","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":8570,"src":"26162:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":8441,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"26124:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26130:11:27","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":8584,"src":"26124:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26142:6:27","memberName":"tryMul","nodeType":"MemberAccess","referencedDeclaration":3347,"src":"26124:24:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":8446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26124:79:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"26080:123:27"},{"expression":{"arguments":[{"id":8449,"name":"success6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"26221:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"75736572207374416d6f756e74206d756c206163635243435065725354206f766572666c6f77","id":8450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26231:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5","typeString":"literal_string \"user stAmount mul accRCCPerST overflow\""},"value":"user stAmount mul accRCCPerST overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5","typeString":"literal_string \"user stAmount mul accRCCPerST overflow\""}],"id":8448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26213:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26213:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8452,"nodeType":"ExpressionStatement","src":"26213:59:27"},{"expression":{"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8453,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"26282:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8593_storage_ptr","typeString":"struct RCCStakeLib.User storage pointer"}},"id":8455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26288:15:27","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":8586,"src":"26282:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8456,"name":"_finishedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8440,"src":"26306:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26282:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8458,"nodeType":"ExpressionStatement","src":"26282:40:27"},{"eventCall":{"arguments":[{"expression":{"id":8460,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26346:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26350:6:27","memberName":"sender","nodeType":"MemberAccess","src":"26346:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8462,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"26358:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8463,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"26364:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8459,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"26338:7:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26338:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8465,"nodeType":"EmitStatement","src":"26333:39:27"}]},"documentation":{"id":8281,"nodeType":"StructuredDocumentation","src":"24155:196:27","text":" @notice Deposit staking token for RCC rewards\n @param _pid       Id of the pool to be deposited to\n @param _amount    Amount of staking tokens to be deposited"},"id":8467,"implemented":true,"kind":"function","modifiers":[],"name":"_deposit","nameLocation":"24365:8:27","nodeType":"FunctionDefinition","parameters":{"id":8286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8283,"mutability":"mutable","name":"_pid","nameLocation":"24382:4:27","nodeType":"VariableDeclaration","scope":8467,"src":"24374:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8282,"name":"uint256","nodeType":"ElementaryTypeName","src":"24374:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8285,"mutability":"mutable","name":"_amount","nameLocation":"24396:7:27","nodeType":"VariableDeclaration","scope":8467,"src":"24388:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8284,"name":"uint256","nodeType":"ElementaryTypeName","src":"24388:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24373:31:27"},"returnParameters":{"id":8287,"nodeType":"ParameterList","parameters":[],"src":"24414:0:27"},"scope":8560,"src":"24356:2023:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8505,"nodeType":"Block","src":"26697:201:27","statements":[{"assignments":[8476],"declarations":[{"constant":false,"id":8476,"mutability":"mutable","name":"RCCBal","nameLocation":"26715:6:27","nodeType":"VariableDeclaration","scope":8505,"src":"26707:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8475,"name":"uint256","nodeType":"ElementaryTypeName","src":"26707:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8484,"initialValue":{"arguments":[{"arguments":[{"id":8481,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"26746:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_RCCStake_$8560","typeString":"contract RCCStake"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RCCStake_$8560","typeString":"contract RCCStake"}],"id":8480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26738:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8479,"name":"address","nodeType":"ElementaryTypeName","src":"26738:7:27","typeDescriptions":{}}},"id":8482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26738:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8477,"name":"RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"26724:3:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"id":8478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26728:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2255,"src":"26724:13:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26724:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26707:45:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8485,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8472,"src":"26766:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8486,"name":"RCCBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"26777:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26766:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8503,"nodeType":"Block","src":"26842:50:27","statements":[{"expression":{"arguments":[{"id":8499,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8470,"src":"26869:3:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8500,"name":"RCCBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"26874:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8496,"name":"RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"26856:3:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"id":8498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26860:8:27","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2265,"src":"26856:12:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26856:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8502,"nodeType":"ExpressionStatement","src":"26856:25:27"}]},"id":8504,"nodeType":"IfStatement","src":"26762:130:27","trueBody":{"id":8495,"nodeType":"Block","src":"26785:51:27","statements":[{"expression":{"arguments":[{"id":8491,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8470,"src":"26812:3:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8492,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8472,"src":"26817:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8488,"name":"RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"26799:3:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2298","typeString":"contract IERC20"}},"id":8490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26803:8:27","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2265,"src":"26799:12:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26799:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8494,"nodeType":"ExpressionStatement","src":"26799:26:27"}]}}]},"documentation":{"id":8468,"nodeType":"StructuredDocumentation","src":"26385:242:27","text":" @notice Safe RCC transfer function, just in case if rounding error causes pool to not have enough RCCs\n @param _to        Address to get transferred RCCs\n @param _amount    Amount of RCC to be transferred"},"id":8506,"implemented":true,"kind":"function","modifiers":[],"name":"_safeRCCTransfer","nameLocation":"26641:16:27","nodeType":"FunctionDefinition","parameters":{"id":8473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8470,"mutability":"mutable","name":"_to","nameLocation":"26666:3:27","nodeType":"VariableDeclaration","scope":8506,"src":"26658:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8469,"name":"address","nodeType":"ElementaryTypeName","src":"26658:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8472,"mutability":"mutable","name":"_amount","nameLocation":"26679:7:27","nodeType":"VariableDeclaration","scope":8506,"src":"26671:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8471,"name":"uint256","nodeType":"ElementaryTypeName","src":"26671:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26657:30:27"},"returnParameters":{"id":8474,"nodeType":"ParameterList","parameters":[],"src":"26697:0:27"},"scope":8560,"src":"26632:266:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8550,"nodeType":"Block","src":"27427:399:27","statements":[{"assignments":[8515,8517],"declarations":[{"constant":false,"id":8515,"mutability":"mutable","name":"success","nameLocation":"27500:7:27","nodeType":"VariableDeclaration","scope":8550,"src":"27495:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8514,"name":"bool","nodeType":"ElementaryTypeName","src":"27495:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8517,"mutability":"mutable","name":"data","nameLocation":"27522:4:27","nodeType":"VariableDeclaration","scope":8550,"src":"27509:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8516,"name":"bytes","nodeType":"ElementaryTypeName","src":"27509:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8527,"initialValue":{"arguments":[{"hexValue":"","id":8525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27577:2:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":8520,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8509,"src":"27538:3:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27530:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8518,"name":"address","nodeType":"ElementaryTypeName","src":"27530:7:27","typeDescriptions":{}}},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27530:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27543:4:27","memberName":"call","nodeType":"MemberAccess","src":"27530:17:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":8523,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8511,"src":"27555:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"27530:33:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27530:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"27494:95:27"},{"expression":{"arguments":[{"id":8529,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"27607:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e736665722063616c6c206661696c6564","id":8530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27616:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b","typeString":"literal_string \"ETH transfer call failed\""},"value":"ETH transfer call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b","typeString":"literal_string \"ETH transfer call failed\""}],"id":8528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27599:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27599:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8532,"nodeType":"ExpressionStatement","src":"27599:44:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8533,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"27657:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27662:6:27","memberName":"length","nodeType":"MemberAccess","src":"27657:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27671:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27657:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8549,"nodeType":"IfStatement","src":"27653:167:27","trueBody":{"id":8548,"nodeType":"Block","src":"27674:146:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":8540,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"27724:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":8542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27731:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":8541,"name":"bool","nodeType":"ElementaryTypeName","src":"27731:4:27","typeDescriptions":{}}}],"id":8543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27730:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":8538,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"27713:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27717:6:27","memberName":"decode","nodeType":"MemberAccess","src":"27713:10:27","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27713:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206f7065726174696f6e20646964206e6f742073756363656564","id":8545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27755:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4","typeString":"literal_string \"ETH transfer operation did not succeed\""},"value":"ETH transfer operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4","typeString":"literal_string \"ETH transfer operation did not succeed\""}],"id":8537,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27688:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27688:121:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8547,"nodeType":"ExpressionStatement","src":"27688:121:27"}]}}]},"documentation":{"id":8507,"nodeType":"StructuredDocumentation","src":"26904:453:27","text":" @notice Safe ETH transfer function\n @param _to        Address to get transferred ETH\n @param _amount    Amount of ETH to be transferred\n FIXME: 什么函数适合放在 internal，只有内部调用的；哪些函数是只能放在内部调用呢？\n - 转账，涉及到钱的；也不完全这样说，角色权限 + 控制也可以，看取舍，修饰符，方法就那几个，遍历一下也可；"},"id":8551,"implemented":true,"kind":"function","modifiers":[],"name":"_safeETHTransfer","nameLocation":"27371:16:27","nodeType":"FunctionDefinition","parameters":{"id":8512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8509,"mutability":"mutable","name":"_to","nameLocation":"27396:3:27","nodeType":"VariableDeclaration","scope":8551,"src":"27388:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8508,"name":"address","nodeType":"ElementaryTypeName","src":"27388:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8511,"mutability":"mutable","name":"_amount","nameLocation":"27409:7:27","nodeType":"VariableDeclaration","scope":8551,"src":"27401:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8510,"name":"uint256","nodeType":"ElementaryTypeName","src":"27401:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27387:30:27"},"returnParameters":{"id":8513,"nodeType":"ParameterList","parameters":[],"src":"27427:0:27"},"scope":8560,"src":"27362:464:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8554,"nodeType":"Block","src":"27859:2:27","statements":[]},"id":8555,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8552,"nodeType":"ParameterList","parameters":[],"src":"27839:2:27"},"returnParameters":{"id":8553,"nodeType":"ParameterList","parameters":[],"src":"27859:0:27"},"scope":8560,"src":"27832:29:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":8558,"nodeType":"Block","src":"27895:2:27","statements":[]},"id":8559,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8556,"nodeType":"ParameterList","parameters":[],"src":"27875:2:27"},"returnParameters":{"id":8557,"nodeType":"ParameterList","parameters":[],"src":"27895:0:27"},"scope":8560,"src":"27867:30:27","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":8561,"src":"921:26978:27","usedErrors":[379,382,643,648,883,886,1070,1073,1421,1434,2336,2743,3036],"usedEvents":[387,875,880,1082,1091,1100,1237,6677,6679,6681,6683,6685,6689,6693,6697,6709,6717,6725,6733,6741,6749,6759,6767,6775,6783,6791]}],"src":"32:27868:27"},"id":27},"contracts/RCCStakeLib.sol":{"ast":{"absolutePath":"contracts/RCCStakeLib.sol","exportedSymbols":{"RCCStakeLib":[8594]},"id":8595,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8562,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"RCCStakeLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":8594,"linearizedBaseContracts":[8594],"name":"RCCStakeLib","nameLocation":"65:11:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"RCCStakeLib.Pool","id":8577,"members":[{"constant":false,"id":8564,"mutability":"mutable","name":"stakeTokenAddress","nameLocation":"113:17:28","nodeType":"VariableDeclaration","scope":8577,"src":"105:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8563,"name":"address","nodeType":"ElementaryTypeName","src":"105:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8566,"mutability":"mutable","name":"poolWeight","nameLocation":"180:10:28","nodeType":"VariableDeclaration","scope":8577,"src":"172:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8565,"name":"uint256","nodeType":"ElementaryTypeName","src":"172:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8568,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"234:15:28","nodeType":"VariableDeclaration","scope":8577,"src":"226:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8567,"name":"uint256","nodeType":"ElementaryTypeName","src":"226:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8570,"mutability":"mutable","name":"accumulateRewardsPerStake","nameLocation":"302:25:28","nodeType":"VariableDeclaration","scope":8577,"src":"294:33:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8569,"name":"uint256","nodeType":"ElementaryTypeName","src":"294:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8572,"mutability":"mutable","name":"stakeTokenAmount","nameLocation":"453:16:28","nodeType":"VariableDeclaration","scope":8577,"src":"445:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8571,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8574,"mutability":"mutable","name":"minDepositAmount","nameLocation":"518:16:28","nodeType":"VariableDeclaration","scope":8577,"src":"510:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8573,"name":"uint256","nodeType":"ElementaryTypeName","src":"510:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8576,"mutability":"mutable","name":"unStakeLockedBlocks","nameLocation":"578:19:28","nodeType":"VariableDeclaration","scope":8577,"src":"570:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8575,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Pool","nameLocation":"90:4:28","nodeType":"StructDefinition","scope":8594,"src":"83:556:28","visibility":"public"},{"canonicalName":"RCCStakeLib.UnStakeRequest","id":8582,"members":[{"constant":false,"id":8579,"mutability":"mutable","name":"amount","nameLocation":"719:6:28","nodeType":"VariableDeclaration","scope":8582,"src":"711:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8578,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8581,"mutability":"mutable","name":"unlockBlocksCounts","nameLocation":"871:18:28","nodeType":"VariableDeclaration","scope":8582,"src":"863:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8580,"name":"uint256","nodeType":"ElementaryTypeName","src":"863:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UnStakeRequest","nameLocation":"651:14:28","nodeType":"StructDefinition","scope":8594,"src":"644:252:28","visibility":"public"},{"canonicalName":"RCCStakeLib.User","id":8593,"members":[{"constant":false,"id":8584,"mutability":"mutable","name":"stakeAmount","nameLocation":"931:11:28","nodeType":"VariableDeclaration","scope":8593,"src":"923:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8583,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8586,"mutability":"mutable","name":"finishedRewards","nameLocation":"960:15:28","nodeType":"VariableDeclaration","scope":8593,"src":"952:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8585,"name":"uint256","nodeType":"ElementaryTypeName","src":"952:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8588,"mutability":"mutable","name":"pendingRewards","nameLocation":"993:14:28","nodeType":"VariableDeclaration","scope":8593,"src":"985:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8587,"name":"uint256","nodeType":"ElementaryTypeName","src":"985:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8592,"mutability":"mutable","name":"requests","nameLocation":"1034:8:28","nodeType":"VariableDeclaration","scope":8593,"src":"1017:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage_ptr","typeString":"struct RCCStakeLib.UnStakeRequest[]"},"typeName":{"baseType":{"id":8590,"nodeType":"UserDefinedTypeName","pathNode":{"id":8589,"name":"UnStakeRequest","nameLocations":["1017:14:28"],"nodeType":"IdentifierPath","referencedDeclaration":8582,"src":"1017:14:28"},"referencedDeclaration":8582,"src":"1017:14:28","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$8582_storage_ptr","typeString":"struct RCCStakeLib.UnStakeRequest"}},"id":8591,"nodeType":"ArrayTypeName","src":"1017:16:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$8582_storage_$dyn_storage_ptr","typeString":"struct RCCStakeLib.UnStakeRequest[]"}},"visibility":"internal"}],"name":"User","nameLocation":"908:4:28","nodeType":"StructDefinition","scope":8594,"src":"901:148:28","visibility":"public"}],"scope":8595,"src":"57:994:28","usedErrors":[],"usedEvents":[]}],"src":"32:1020:28"},"id":28},"contracts/RccToken.sol":{"ast":{"absolutePath":"contracts/RccToken.sol","exportedSymbols":{"Context":[3023],"ERC20":[2220],"IERC20":[2298],"IERC20Errors":[1306],"IERC20Metadata":[2324],"RccToken":[8616]},"id":8617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8596,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:29"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8597,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8617,"sourceUnit":2221,"src":"58:55:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8598,"name":"ERC20","nameLocations":["136:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":2220,"src":"136:5:29"},"id":8599,"nodeType":"InheritanceSpecifier","src":"136:5:29"}],"canonicalName":"RccToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8616,"linearizedBaseContracts":[8616,2220,1306,2324,2298,3023],"name":"RccToken","nameLocation":"124:8:29","nodeType":"ContractDefinition","nodes":[{"body":{"id":8614,"nodeType":"Block","src":"187:140:29","statements":[{"expression":{"arguments":[{"expression":{"id":8607,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"264:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"268:6:29","memberName":"sender","nodeType":"MemberAccess","src":"264:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000_by_1","typeString":"int_const 10000000000000000000000000"},"id":8611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130303030303030","id":8609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"276:8:29","typeDescriptions":{"typeIdentifier":"t_rational_10000000_by_1","typeString":"int_const 10000000"},"value":"10000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"315f3030305f3030305f3030305f3030305f3030305f303030","id":8610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"287:25:29","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1_000_000_000_000_000_000"},"src":"276:36:29","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000_by_1","typeString":"int_const 10000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_10000000000000000000000000_by_1","typeString":"int_const 10000000000000000000000000"}],"id":8606,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"258:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"258:55:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8613,"nodeType":"ExpressionStatement","src":"258:55:29"}]},"id":8615,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"526363546f6b656e","id":8602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"168:10:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f59668f10af346bed23ebf37faca8718eda0112ee1d1872106e3f738b8f0051","typeString":"literal_string \"RccToken\""},"value":"RccToken"},{"hexValue":"524343","id":8603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"180:5:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_352c9c90ec54ea24541cbe65963af13956516a7b3efdbe04610b553e861a169b","typeString":"literal_string \"RCC\""},"value":"RCC"}],"id":8604,"kind":"baseConstructorSpecifier","modifierName":{"id":8601,"name":"ERC20","nameLocations":["162:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":2220,"src":"162:5:29"},"nodeType":"ModifierInvocation","src":"162:24:29"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8600,"nodeType":"ParameterList","parameters":[],"src":"159:2:29"},"returnParameters":{"id":8605,"nodeType":"ParameterList","parameters":[],"src":"187:0:29"},"scope":8616,"src":"148:179:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":8617,"src":"115:214:29","usedErrors":[1276,1281,1286,1295,1300,1305],"usedEvents":[2232,2241]}],"src":"32:298:29"},"id":29}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e274eaccba5882a0af048d39959ca6e8cdf4933e54498c57fc57a9f23851c56b64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH21 0xEACCBA5882A0AF048D39959CA6E8CDF4933E54498C JUMPI 0xFC JUMPI 0xA9 CALLCODE CODESIZE MLOAD 0xC5 PUSH12 0x64736F6C6343000816003300 ","sourceMap":"496:5741:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e274eaccba5882a0af048d39959ca6e8cdf4933e54498c57fc57a9f23851c56b64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH21 0xEACCBA5882A0AF048D39959CA6E8CDF4933E54498C JUMPI 0xFC JUMPI 0xA9 CALLCODE CODESIZE MLOAD 0xC5 PUSH12 0x64736F6C6343000816003300 ","sourceMap":"496:5741:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1728,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1734,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1736,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1738,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1740,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c7a52625c54bd293c65b2416c837dc58a69d76043704e8896308bcee4bfa987c64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xA5 0x26 0x25 0xC5 0x4B 0xD2 SWAP4 0xC6 JUMPDEST 0x24 AND 0xC8 CALLDATACOPY 0xDC PC 0xA6 SWAP14 PUSH23 0x43704E8896308BCEE4BFA987C64736F6C634300081600 CALLER ","sourceMap":"698:8692:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:8692:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c7a52625c54bd293c65b2416c837dc58a69d76043704e8896308bcee4bfa987c64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xA5 0x26 0x25 0xC5 0x4B 0xD2 SWAP4 0xC6 JUMPDEST 0x24 AND 0xC8 CALLDATACOPY 0xDC PC 0xA6 SWAP14 PUSH23 0x43704E8896308BCEE4BFA987C64736F6C634300081600 CALLER ","sourceMap":"698:8692:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205965a49a4005a86ed954ab6e57bfedc675ff3c6b372d5d68bd315532662a642c64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE PUSH6 0xA49A4005A86E 0xD9 SLOAD 0xAB PUSH15 0x57BFEDC675FF3C6B372D5D68BD3155 ORIGIN PUSH7 0x2A642C64736F6C PUSH4 0x43000816 STOP CALLER ","sourceMap":"233:5815:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5815:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205965a49a4005a86ed954ab6e57bfedc675ff3c6b372d5d68bd315532662a642c64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE PUSH6 0xA49A4005A86E 0xD9 SLOAD 0xAB PUSH15 0x57BFEDC675FF3C6B372D5D68BD3155 ORIGIN PUSH7 0x2A642C64736F6C PUSH4 0x43000816 STOP CALLER ","sourceMap":"233:5815:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122066d48d2abd48c70ba22ce993ad029194c8ef200202c523b92ffb3b0667c166b564736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xD48D2ABD48C70B LOG2 0x2C 0xE9 SWAP4 0xAD MUL SWAP2 SWAP5 0xC8 0xEF KECCAK256 MUL MUL 0xC5 0x23 0xB9 0x2F 0xFB EXTCODESIZE MOD PUSH8 0xC166B564736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ","sourceMap":"411:484:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122066d48d2abd48c70ba22ce993ad029194c8ef200202c523b92ffb3b0667c166b564736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xD48D2ABD48C70B LOG2 0x2C 0xE9 SWAP4 0xAD MUL SWAP2 SWAP5 0xC8 0xEF KECCAK256 MUL MUL 0xC5 0x23 0xB9 0x2F 0xFB EXTCODESIZE MOD PUSH8 0xC166B564736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ","sourceMap":"411:484:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204d064c85f5f294b966abfd22ede05afb4ed1ba7a6af8feb343b3d99d778085ed64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D MOD 0x4C DUP6 CREATE2 CALLCODE SWAP5 0xB9 PUSH7 0xABFD22EDE05AFB 0x4E 0xD1 0xBA PUSH27 0x6AF8FEB343B3D99D778085ED64736F6C6343000816003300000000 ","sourceMap":"657:1315:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204d064c85f5f294b966abfd22ede05afb4ed1ba7a6af8feb343b3d99d778085ed64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D MOD 0x4C DUP6 CREATE2 CALLCODE SWAP5 0xB9 PUSH7 0xABFD22EDE05AFB 0x4E 0xD1 0xBA PUSH27 0x6AF8FEB343B3D99D778085ED64736F6C6343000816003300000000 ","sourceMap":"657:1315:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c781a8b885a3ca5fe2dc9f4dee2fc882f7984acf1a1b984d9a970a9da7762bad64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 DUP2 0xA8 0xB8 DUP6 LOG3 0xCA PUSH0 0xE2 0xDC SWAP16 0x4D 0xEE 0x2F 0xC8 DUP3 0xF7 SWAP9 0x4A 0xCF BYTE SHL SWAP9 0x4D SWAP11 SWAP8 EXP SWAP14 0xA7 PUSH23 0x2BAD64736F6C6343000816003300000000000000000000 ","sourceMap":"1407:2774:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c781a8b885a3ca5fe2dc9f4dee2fc882f7984acf1a1b984d9a970a9da7762bad64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 DUP2 0xA8 0xB8 DUP6 LOG3 0xCA PUSH0 0xE2 0xDC SWAP16 0x4D 0xEE 0x2F 0xC8 DUP3 0xF7 SWAP9 0x4A 0xCF BYTE SHL SWAP9 0x4D SWAP11 SWAP8 EXP SWAP14 0xA7 PUSH23 0x2BAD64736F6C6343000816003300000000000000000000 ","sourceMap":"1407:2774:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c8e2db0ba3184086432cdfbb4207633601724fff01a87b9df5c373818ab884ed64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xE2 0xDB SIGNEXTEND LOG3 XOR BLOCKHASH DUP7 NUMBER 0x2C 0xDF 0xBB TIMESTAMP SMOD PUSH4 0x3601724F SELFDESTRUCT ADD 0xA8 PUSH28 0x9DF5C373818AB884ED64736F6C634300081600330000000000000000 ","sourceMap":"281:28026:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c8e2db0ba3184086432cdfbb4207633601724fff01a87b9df5c373818ab884ed64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xE2 0xDB SIGNEXTEND LOG3 XOR BLOCKHASH DUP7 NUMBER 0x2C 0xDF 0xBB TIMESTAMP SMOD PUSH4 0x3601724F SELFDESTRUCT ADD 0xA8 PUSH28 0x9DF5C373818AB884ED64736F6C634300081600330000000000000000 ","sourceMap":"281:28026:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122046b97e0f0caaf4e5795f0f9285a66bf03a0e3e5bcb1892e93096dab0ff8ace5964736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xB9 PUSH31 0xF0CAAF4E5795F0F9285A66BF03A0E3E5BCB1892E93096DAB0FF8ACE596473 PUSH16 0x6C634300081600330000000000000000 ","sourceMap":"769:34173:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122046b97e0f0caaf4e5795f0f9285a66bf03a0e3e5bcb1892e93096dab0ff8ace5964736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xB9 PUSH31 0xF0CAAF4E5795F0F9285A66BF03A0E3E5BCB1892E93096DAB0FF8ACE596473 PUSH16 0x6C634300081600330000000000000000 ","sourceMap":"769:34173:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/RCCStake.sol":{"RCCStake":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"stakeTokenAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolWeight","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"minDepositAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unStakeLockedBlocks","type":"uint256"}],"name":"AddPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"RccReward","type":"uint256"}],"name":"Claim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"pid","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"GetRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[],"name":"PausedClaim","type":"event"},{"anonymous":false,"inputs":[],"name":"PausedWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RequestUnstake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"endBlock","type":"uint256"}],"name":"SetEndBlock","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"poolWeight","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalPoolWeight","type":"uint256"}],"name":"SetPoolWeight","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC20","name":"RCC","type":"address"}],"name":"SetRCC","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"rccPerBlock","type":"uint256"}],"name":"SetRCCPerBlock","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"startBlock","type":"uint256"}],"name":"SetStartBlock","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"pid","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Stake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"pid","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UnStake","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[],"name":"UnpausedClaim","type":"event"},{"anonymous":false,"inputs":[],"name":"UnpausedWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalRCC","type":"uint256"}],"name":"UpdatePool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"minDepositAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"unStakeLockedBlocks","type":"uint256"}],"name":"UpdatePoolInfo","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"Withdraw","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ETH_PID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RCC","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_stakeTokenAddress","type":"address"},{"internalType":"uint256","name":"_poolWeight","type":"uint256"},{"internalType":"uint256","name":"_minDepositAmount","type":"uint256"},{"internalType":"uint256","name":"_unStakeLockedBlocks","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"addPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"endBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_from","type":"uint256"},{"internalType":"uint256","name":"_to","type":"uint256"}],"name":"getMultiplier","outputs":[{"internalType":"uint256","name":"multiplier","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"getPendingRCC","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_RCC","type":"address"},{"internalType":"uint256","name":"_startBlock","type":"uint256"},{"internalType":"uint256","name":"_endBlock","type":"uint256"},{"internalType":"uint256","name":"_rccPerBlock","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pauseWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"name":"pendingRCCByBlockNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pool","outputs":[{"internalType":"address","name":"stakeTokenAddress","type":"address"},{"internalType":"uint256","name":"poolWeight","type":"uint256"},{"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"internalType":"uint256","name":"accumulateRewardsPerStake","type":"uint256"},{"internalType":"uint256","name":"stakeTokenAmount","type":"uint256"},{"internalType":"uint256","name":"minDepositAmount","type":"uint256"},{"internalType":"uint256","name":"unStakeLockedBlocks","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rccPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_endBlock","type":"uint256"}],"name":"setEndBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_poolWeight","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"setPoolWeight","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_RCC","type":"address"}],"name":"setRCC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rccPerBlock","type":"uint256"}],"name":"setRCCPerBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_startBlock","type":"uint256"}],"name":"setStartBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"stakingBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"startBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"toggleClaimPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"toggleWithdrawPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalPoolWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_minDepositAmount","type":"uint256"},{"internalType":"uint256","name":"_unStakeLockedBlocks","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"user","outputs":[{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"uint256","name":"finishedRewards","type":"uint256"},{"internalType":"uint256","name":"pendingRewards","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"withdrawAmount","outputs":[{"internalType":"uint256","name":"requestAmount","type":"uint256"},{"internalType":"uint256","name":"pendingWithdrawAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a06040523060805234801561001457600080fd5b5060805161382a61003e600039600081816129730152818161299c0152612b98015261382a6000f3fe6080604052600436106102745760003560e01c80638dbb1e3a1161014e578063bed66c08116100bb578063f35e4a6e11610077578063f35e4a6e146107c2578063f5485d32146107e2578063f6326fb314610802578063fad07ece1461080a578063fe3131121461082a578063ff4233571461088957005b8063bed66c0814610722578063bfc3ebba146105d4578063c713aa9414610742578063d547741f14610762578063d86c044414610782578063e2bbb158146107a257005b8063ab5e124a1161010a578063ab5e124a14610647578063ad3cb1cc14610666578063ae35a8d5146106a4578063b3944d52146106b9578063b6d9d919146106ce578063b908afa8146106ee57005b80638dbb1e3a1461057457806391d14854146105945780639e2c8a5b146105b4578063a217fddf146105d4578063a27d9279146105e9578063a72d5bf41461060957005b806341721ab7116101ec5780635c975abb116101a85780635c975abb146104c65780636155e3de146104fd578063630b5ba11461051257806370ff01731461052757806375b238fc1461053d57806380cce73f1461055f57005b806341721ab71461042857806348cd4cb1146104485780634ec81af11461045e5780634f1ef2861461047e57806351eb05a61461049157806352d1902d146104b157005b80632e1a7d4d1161023b5780632e1a7d4d1461032c5780632f2ff15d1461034c5780632f3ffb9f1461036c57806336568abe1461038657806337849b3c146103a6578063379607f51461040857005b806301ffc9a71461027d57806302559004146102b2578063083c6323146102d657806311548234146102ec578063248a9ca31461030c57005b3661027b57005b005b34801561028957600080fd5b5061029d6102983660046132cb565b6108be565b60405190151581526020015b60405180910390f35b3480156102be57600080fd5b506102c860045481565b6040519081526020016102a9565b3480156102e257600080fd5b506102c860015481565b3480156102f857600080fd5b506102c861030736600461330a565b6108f5565b34801561031857600080fd5b506102c861032736600461333a565b610951565b34801561033857600080fd5b5061027b61034736600461333a565b610973565b34801561035857600080fd5b5061027b61036736600461330a565b610bd4565b34801561037857600080fd5b5060035461029d9060ff1681565b34801561039257600080fd5b5061027b6103a136600461330a565b610bf6565b3480156103b257600080fd5b506103ed6103c136600461330a565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b604080519384526020840192909252908201526060016102a9565b34801561041457600080fd5b5061027b61042336600461333a565b610c2e565b34801561043457600080fd5b506102c8610443366004613353565b610d9d565b34801561045457600080fd5b506102c860005481565b34801561046a57600080fd5b5061027b61047936600461338b565b610eb5565b61027b61048c3660046133dc565b6110fb565b34801561049d57600080fd5b5061027b6104ac36600461333a565b61111a565b3480156104bd57600080fd5b506102c86112ed565b3480156104d257600080fd5b507fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1661029d565b34801561050957600080fd5b5061027b61130a565b34801561051e57600080fd5b5061027b6113b8565b34801561053357600080fd5b506102c860025481565b34801561054957600080fd5b506102c860008051602061379583398151915281565b34801561056b57600080fd5b5061027b6113d7565b34801561058057600080fd5b506102c861058f3660046134a0565b611463565b3480156105a057600080fd5b5061029d6105af36600461330a565b611569565b3480156105c057600080fd5b5061027b6105cf3660046134a0565b6115a1565b3480156105e057600080fd5b506102c8600081565b3480156105f557600080fd5b506102c861060436600461330a565b611859565b34801561061557600080fd5b5060035461062f906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020016102a9565b34801561065357600080fd5b5060035461029d90610100900460ff1681565b34801561067257600080fd5b50610697604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102a991906134e6565b3480156106b057600080fd5b5061027b611892565b3480156106c557600080fd5b506005546102c8565b3480156106da57600080fd5b5061027b6106e9366004613527565b61192a565b3480156106fa57600080fd5b506102c87ff47fc0c09ebbfe308d89b8035681a1164b9882bcfd49eb89861067738a30f5ab81565b34801561072e57600080fd5b5061027b61073d36600461333a565b611cb2565b34801561074e57600080fd5b5061027b61075d36600461333a565b611d46565b34801561076e57600080fd5b5061027b61077d36600461330a565b611dd8565b34801561078e57600080fd5b5061027b61079d36600461357d565b611df4565b3480156107ae57600080fd5b5061027b6107bd3660046134a0565b611efa565b3480156107ce57600080fd5b5061027b6107dd36600461333a565b612028565b3480156107ee57600080fd5b5061027b6107fd3660046135a9565b6120b9565b61027b61212b565b34801561081657600080fd5b5061027b6108253660046135c6565b61220e565b34801561083657600080fd5b5061084a61084536600461333a565b6123d2565b604080516001600160a01b0390981688526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0016102a9565b34801561089557600080fd5b506108a96108a436600461330a565b61242b565b604080519283526020830191909152016102a9565b60006001600160e01b03198216637965db0b60e01b14806108ef57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600554600090839081106109245760405162461bcd60e51b815260040161091b906135ff565b60405180910390fd5b60008481526006602090815260408083206001600160a01b038716845290915290205491505b5092915050565b60009081526000805160206137d5833981519152602052604090206001015490565b61097b61252b565b60035460ff161561099e5760405162461bcd60e51b815260040161091b90613624565b600554819081106109c15760405162461bcd60e51b815260040161091b906135ff565b6000600583815481106109d6576109d6613650565b6000918252602080832086845260068252604080852033865290925290832060079092020192509080805b6003840154811015610a835743846003018281548110610a2357610a23613650565b90600052602060002090600202016001015411610a8357836003018181548110610a4f57610a4f613650565b90600052602060002090600202016000015483610a6c919061367c565b925081610a788161368f565b925050600101610a01565b5060005b6003840154610a979083906136a8565b811015610b045760038401610aac838361367c565b81548110610abc57610abc613650565b9060005260206000209060020201846003018281548110610adf57610adf613650565b6000918252602090912082546002909202019081556001918201549082015501610a87565b5060005b81811015610b4c5783600301805480610b2357610b236136bb565b600082815260208120600260001990930192830201818155600190810191909155915501610b08565b508115610b875783546001600160a01b0316610b7157610b6c3383612570565b610b87565b8354610b87906001600160a01b0316338461268b565b4386336001600160a01b03167f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca9485604051610bc491815260200190565b60405180910390a4505050505050565b610bdd82610951565b610be6816126ea565b610bf083836126f4565b50505050565b6001600160a01b0381163314610c1f5760405163334bd91960e11b815260040160405180910390fd5b610c298282612799565b505050565b610c3661252b565b60055481908110610c595760405162461bcd60e51b815260040161091b906135ff565b600354610100900460ff1615610ca35760405162461bcd60e51b815260206004820152600f60248201526e18db185a5b481a5cc81c185d5cd959608a1b604482015260640161091b565b600060058381548110610cb857610cb8613650565b60009182526020808320868452600682526040808520338652909252922060079091029091019150610ce98461111a565b60008160020154826001015484600301548460000154610d0991906136d1565b610d1391906136a8565b610d1d919061367c565b90508015610d365760006002830155610d363382612815565b60038301548254670de0b6b3a764000091610d50916136d1565b610d5a91906136fe565b6001830155604051818152859033907f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf79060200160405180910390a35050505050565b60008060058581548110610db357610db3613650565b600091825260208083208884526006825260408085206001600160a01b038a1686529092529220600360079092029092019081015460048201546002830154929450909186108015610e0457508015155b15610e68576000610e19856002015488611463565b90506000600454866001015483610e3091906136d1565b610e3a91906136fe565b905082610e4f82670de0b6b3a76400006136d1565b610e5991906136fe565b610e63908561367c565b935050505b600283015460018401548454670de0b6b3a764000090610e899086906136d1565b610e9391906136fe565b610e9d91906136a8565b610ea7919061367c565b9450505050505b9392505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610efb5750825b905060008267ffffffffffffffff166001148015610f185750303b155b905081158015610f26575080155b15610f445760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610f6e57845460ff60401b1916600160401b1785555b86881115610fce5760405162461bcd60e51b815260206004820152602760248201527f737461727420626c6f636b206d757374206265206c657373207468616e20656e6044820152666420626c6f636b60c81b606482015260840161091b565b6000861161102a5760405162461bcd60e51b8152602060048201526024808201527f7263632070657220626c6f636b206d75737420626520677265617465722074686044820152630616e20360e41b606482015260840161091b565b611032612950565b61103a612950565b611042612958565b61104d6000336126f4565b506110787ff47fc0c09ebbfe308d89b8035681a1164b9882bcfd49eb89861067738a30f5ab336126f4565b50611091600080516020613795833981519152336126f4565b5061109b896120b9565b60008890556001879055600286905583156110f057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b611103612968565b61110c82612a0d565b6111168282612a37565b5050565b6005548190811061113d5760405162461bcd60e51b815260040161091b906135ff565b60006005838154811061115257611152613650565b906000526020600020906007020190508060020154431161117257505050565b6004810154600081900361118c5750436002909101555050565b6000806111ab84600101546111a5866002015443611463565b90612af4565b91509150816111cc5760405162461bcd60e51b815260040161091b90613720565b6004546111da908290612b3f565b9092509050816111fc5760405162461bcd60e51b815260040161091b90613720565b600484015480156112a657600080611215846001612af4565b91509150816112365760405162461bcd60e51b815260040161091b90613720565b6112408184612b3f565b9092509050816112625760405162461bcd60e51b815260040161091b90613720565b60008061127c838a60030154612b7290919063ffffffff16565b915091508161129d5760405162461bcd60e51b815260040161091b90613720565b60038901555050505b436002860181905560405183815288907ff5d2d72d9b25d6853afd7d0554a113b705234b6a68bb36b7f143662994632411906020015b60405180910390a350505050505050565b60006112f7612b8d565b506000805160206137b583398151915290565b600080516020613795833981519152611322816126ea565b60035460ff1661137f5760405162461bcd60e51b815260206004820152602260248201527f77697468647261772068617320616c7265616479206265656e20756e70617573604482015261195960f21b606482015260840161091b565b6003805460ff191660011790556040517f2523dfdafa00190f21a4cbd0c25179c8dd3cb34a6c17fea952ecca8fa8332c0e90600090a150565b60055460005b81811015611116576113cf8161111a565b6001016113be565b6000805160206137958339815191526113ef816126ea565b6003805460ff19811660ff918216159081179092551615611436576040517f2523dfdafa00190f21a4cbd0c25179c8dd3cb34a6c17fea952ecca8fa8332c0e90600090a150565b6040517f027c975733baceca09666fae356a901e083676848aaf9710150079385daae74390600090a15b50565b6000818311156114a55760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642072616e676560981b604482015260640161091b565b6000548310156114b55760005492505b6001548211156114c55760015491505b60006114d184846136a8565b1161150e5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642072616e676560981b604482015260640161091b565b600061152260025485856111a591906136a8565b925090508061094a5760405162461bcd60e51b81526020600482015260136024820152726d756c7469706c696572206f766572666c6f7760681b604482015260640161091b565b60009182526000805160206137d5833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6115a961252b565b60035460ff16156115cc5760405162461bcd60e51b815260040161091b90613624565b600554829081106115ef5760405162461bcd60e51b815260040161091b906135ff565b60006005848154811061160457611604613650565b60009182526020808320878452600682526040808520338652909252922080546007909202909201925084111561167d5760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f756768207374616b696e6720746f6b656e2062616c616e6365604482015260640161091b565b6116868561111a565b60038201548154600091829161169b91612af4565b91509150816116bc5760405162461bcd60e51b815260040161091b90613720565b6116c7816001612b3f565b9092509050816117055760405162461bcd60e51b815260206004820152600960248201526837bb32b9333637bb9960b91b604482015260640161091b565b6001830154611715908290612bd6565b9092509050816117535760405162461bcd60e51b81526020600482015260096024820152686f766572666c6f773360b81b604482015260640161091b565b8015611773578083600201600082825461176d919061367c565b90915550505b85156117e3578583600001600082825461178d91906136a8565b925050819055508260030160405180604001604052808881526020018660060154436117b9919061367c565b90528154600181810184556000938452602093849020835160029093020191825592909101519101555b858460040160008282546117f791906136a8565b909155505060038401548354670de0b6b3a764000091611816916136d1565b61182091906136fe565b6001840155604051868152879033907fc80277265097707f6f12a4ac4c09d46c9926e2eea2536f63616cb04d9fcad7d6906020016112dc565b6005546000908390811061187f5760405162461bcd60e51b815260040161091b906135ff565b61188a848443610d9d565b949350505050565b6000805160206137958339815191526118aa816126ea565b6003805460ff610100808304821615810261ff00199093169290921792839055910416156118fe576040517f443bf540e8151617cd5c39a681cc35a5a22be078b6f0cf16e5bd822b4c4b61ff90600090a150565b6040517f07c8faf23a72a53eb5c2c466dc81386a58b2a27d0cc3c7c580a3c12e372ba31390600090a150565b600080516020613795833981519152611942816126ea565b600554156119d55760006001600160a01b0316600560008154811061196957611969613650565b60009182526020909120600790910201546001600160a01b0316146119d05760405162461bcd60e51b815260206004820152601f60248201527f74686520666972737420706f6f6c206d7573742062652045544820706f6f6c00604482015260640161091b565b611a2c565b6001600160a01b03861615611a2c5760405162461bcd60e51b815260206004820152601f60248201527f74686520666972737420706f6f6c206d7573742062652045544820706f6f6c00604482015260640161091b565b60008311611a7c5760405162461bcd60e51b815260206004820152601e60248201527f696e76616c6964207769746864726177206c6f636b656420626c6f636b730000604482015260640161091b565b6001544310611abd5760405162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e48195b991959609a1b604482015260640161091b565b8115611acb57611acb6113b8565b600080544311611add57600054611adf565b435b90508560046000828254611af3919061367c565b90915550506040805160e0810182526001600160a01b0389811680835260208084018b81528486018781526000606087018181526080880182815260a089018f815260c08a018f815260058054600181018255955299517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600790950294850180546001600160a01b03191691909a161790985593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db183015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db382015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db482015592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db584015592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db6909201919091558251888152918201879052839289927f0fa296fce13e7a0e622b3a892e66220c248337289483a3cfa4130cde0caa1346910160405180910390a450505050505050565b600080516020613795833981519152611cca816126ea565b60008211611d125760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964205243432070657220626c6f636b60581b604482015260640161091b565b600282905560405182907f4c70925b625536dd633f6bd2d615c67fddc2e7c63c31164047a981a0df3fee5490600090a25050565b600080516020613795833981519152611d5e816126ea565b816000541115611da45760405162461bcd60e51b8152602060048201526011602482015270496e76616c696420656e6420626c6f636b60781b604482015260640161091b565b600182905560405182907f1132c5baccb51da3d049fabc819697dc845fa224ad59d9b555507d6446b4085090600090a25050565b611de182610951565b611dea816126ea565b610bf08383612799565b60055483908110611e175760405162461bcd60e51b815260040161091b906135ff565b600080516020613795833981519152611e2f816126ea565b6005548510611e725760405162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a59081c1bdbdb081a59608a1b604482015260640161091b565b8360058681548110611e8657611e86613650565b9060005260206000209060070201600501819055508260058681548110611eaf57611eaf613650565b9060005260206000209060070201600601819055508284867f30dffdedaa3e3b4849298233f7cd71d229956e875ab09270498c96b7cf9181fd60405160405180910390a45050505050565b60035460ff1615611f1d5760405162461bcd60e51b815260040161091b90613624565b60055482908110611f405760405162461bcd60e51b815260040161091b906135ff565b82600003611f905760405162461bcd60e51b815260206004820152601f60248201527f6465706f736974206e6f7420737570706f727420455448207374616b696e6700604482015260640161091b565b600060058481548110611fa557611fa5613650565b90600052602060002090600702019050806005015483116120015760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a590819195c1bdcda5d08185b5bdd5b9d60521b604482015260640161091b565b821561201e57805461201e906001600160a01b0316333086612bf8565b610bf08484612c31565b600080516020613795833981519152612040816126ea565b6001548211156120885760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420737461727420626c6f636b60681b604482015260640161091b565b600082815560405183917f63b90b79f11a0f132bcb2c4a4ddd44abda45c1308a83b2919318df7f5f8b7be491a25050565b6000805160206137958339815191526120d1816126ea565b6003805462010000600160b01b031916620100006001600160a01b0385811682029290921792839055604051920416907f153aae53b92218044bd5f43922617c6b253e50ac98a41b44c3acb5625ded348890600090a25050565b61213361252b565b6000600560008154811061214957612149613650565b6000918252602090912060079091020180549091506001600160a01b0316156121b45760405162461bcd60e51b815260206004820152601e60248201527f45544820706f6f6c206d75737420626520637265617465642066697273740000604482015260640161091b565b600581015434908110156122035760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a590819195c1bdcda5d08185b5bdd5b9d60521b604482015260640161091b565b611116600082612c31565b600080516020613795833981519152612226816126ea565b60055484106122695760405162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a59081c1bdbdb081a59608a1b604482015260640161091b565b600083116122af5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081c1bdbdb081dd95a59da1d606a1b604482015260640161091b565b81156122bd576122bd6113b8565b6000806122d585600454612b7290919063ffffffff16565b91509150816123265760405162461bcd60e51b815260206004820152601a60248201527f746f74616c20706f6f6c20776569676874206f766572666c6f77000000000000604482015260640161091b565b6005868154811061233957612339613650565b9060005260206000209060070201600101548161235691906136a8565b600481905550846005878154811061237057612370613650565b906000526020600020906007020160010181905550857f4b8fa3d6a87cb21d1bf4978bf60628ae358a28ac7f39de1751a481c6dd957617866004546040516123c2929190918252602082015260400190565b60405180910390a2505050505050565b600581815481106123e257600080fd5b600091825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601546001600160a01b039095169650929491939092919087565b6000808360058054905081106124535760405162461bcd60e51b815260040161091b906135ff565b60008581526006602090815260408083206001600160a01b03881684529091528120905b6003820154811015612521574382600301828154811061249957612499613650565b906000526020600020906002020160010154116124e5578160030181815481106124c5576124c5613650565b906000526020600020906002020160000154846124e2919061367c565b93505b8160030181815481106124fa576124fa613650565b90600052602060002090600202016000015485612517919061367c565b9450600101612477565b5050509250929050565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff161561256e5760405163d93c066560e01b815260040160405180910390fd5b565b600080836001600160a01b03168360405160006040518083038185875af1925050503d80600081146125be576040519150601f19603f3d011682016040523d82523d6000602084013e6125c3565b606091505b5091509150816126155760405162461bcd60e51b815260206004820152601860248201527f455448207472616e736665722063616c6c206661696c65640000000000000000604482015260640161091b565b805115610bf057808060200190518101906126309190613742565b610bf05760405162461bcd60e51b815260206004820152602660248201527f455448207472616e73666572206f7065726174696f6e20646964206e6f7420736044820152651d58d8d9595960d21b606482015260840161091b565b6040516001600160a01b03838116602483015260448201839052610c2991859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050612fd0565b6114608133613041565b60006000805160206137d583398151915261270f8484611569565b61278f576000848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556127453390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506108ef565b60009150506108ef565b60006000805160206137d58339815191526127b48484611569565b1561278f576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506108ef565b6003546040516370a0823160e01b81523060048201526000916201000090046001600160a01b0316906370a0823190602401602060405180830381865afa158015612864573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612888919061375f565b90508082116129105760035460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201859052620100009092049091169063a9059cbb906044015b6020604051808303816000875af11580156128ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf09190613742565b60035460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201849052620100009092049091169063a9059cbb906044016128cd565b61256e61307a565b61296061307a565b61256e6130c3565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806129ef57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166129e36000805160206137b5833981519152546001600160a01b031690565b6001600160a01b031614155b1561256e5760405163703e46dd60e11b815260040160405180910390fd5b7ff47fc0c09ebbfe308d89b8035681a1164b9882bcfd49eb89861067738a30f5ab611116816126ea565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612a91575060408051601f3d908101601f19168201909252612a8e9181019061375f565b60015b612ab957604051634c9c8ce360e01b81526001600160a01b038316600482015260240161091b565b6000805160206137b58339815191528114612aea57604051632a87526960e21b81526004810182905260240161091b565b610c2983836130f6565b60008083600003612b0b5750600190506000612b38565b83830283858281612b1e57612b1e6136e8565b0414612b31576000809250925050612b38565b6001925090505b9250929050565b60008082600003612b5557506000905080612b38565b6001838581612b6657612b666136e8565b04915091509250929050565b60008083830184811015612b31576000809250925050612b38565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461256e5760405163703e46dd60e11b815260040160405180910390fd5b60008083831115612bec57506000905080612b38565b50600193919092039150565b6040516001600160a01b038481166024830152838116604483015260648201839052610bf09186918216906323b872dd906084016126b8565b600060058381548110612c4657612c46613650565b60009182526020808320868452600682526040808520338652909252922060079091029091019150612c778461111a565b805415612e3457600382015481546000918291612c9391612af4565b9150915081612ce45760405162461bcd60e51b815260206004820152601a60248201527f75736572207374616b6520616d6f756e74206f766572666c6f77000000000000604482015260640161091b565b612cf681670de0b6b3a7640000612b3f565b909250905081612d565760405162461bcd60e51b815260206004820152602560248201527f616363756d756c617465207265776172647320706572207374616b65206f766560448201526472666c6f7760d81b606482015260840161091b565b600080612d70856001015484612bd690919063ffffffff16565b9150915081612dbc5760405162461bcd60e51b815260206004820152601860248201527770656e64696e672072657761726473206f766572666c6f7760401b604482015260640161091b565b8015612e2f57600080612ddc838860020154612b7290919063ffffffff16565b9150915081612e285760405162461bcd60e51b815260206004820152601860248201527770656e64696e672072657761726473206f766572666c6f7760401b604482015260640161091b565b6002870155505b505050505b8215612ea15780546000908190612e4c908690612b72565b9150915081612e9d5760405162461bcd60e51b815260206004820181905260248201527f616363756d756c617465207374616b6520616d6f756e74206f766572666c6f77604482015260640161091b565b8255505b600080612ebb858560040154612b7290919063ffffffff16565b9150915081612f0c5760405162461bcd60e51b815260206004820152601b60248201527f7374616b6520746f6b656e20616d6f756e74206f766572666c6f770000000000604482015260640161091b565b60048401819055600384015483546000918291612f2891612af4565b9150915081612f885760405162461bcd60e51b815260206004820152602660248201527f75736572207374416d6f756e74206d756c206163635243435065725354206f766044820152656572666c6f7760d01b606482015260840161091b565b60018501819055604051878152889033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a35050505050505050565b600080602060008451602086016000885af180612ff3576040513d6000823e3d81fd5b50506000513d9150811561300b578060011415613018565b6001600160a01b0384163b155b15610bf057604051635274afe760e01b81526001600160a01b038516600482015260240161091b565b61304b8282611569565b6111165760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161091b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661256e57604051631afcd79f60e31b815260040160405180910390fd5b6130cb61307a565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff19169055565b6130ff8261314c565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561314457610c2982826131b1565b611116613227565b806001600160a01b03163b60000361318257604051634c9c8ce360e01b81526001600160a01b038216600482015260240161091b565b6000805160206137b583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516131ce9190613778565b600060405180830381855af49150503d8060008114613209576040519150601f19603f3d011682016040523d82523d6000602084013e61320e565b606091505b509150915061321e858383613246565b95945050505050565b341561256e5760405163b398979f60e01b815260040160405180910390fd5b60608261325b57613256826132a2565b610eae565b815115801561327257506001600160a01b0384163b155b1561329b57604051639996b31560e01b81526001600160a01b038516600482015260240161091b565b5080610eae565b8051156132b25780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6000602082840312156132dd57600080fd5b81356001600160e01b031981168114610eae57600080fd5b6001600160a01b038116811461146057600080fd5b6000806040838503121561331d57600080fd5b82359150602083013561332f816132f5565b809150509250929050565b60006020828403121561334c57600080fd5b5035919050565b60008060006060848603121561336857600080fd5b83359250602084013561337a816132f5565b929592945050506040919091013590565b600080600080608085870312156133a157600080fd5b84356133ac816132f5565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156133ef57600080fd5b82356133fa816132f5565b9150602083013567ffffffffffffffff8082111561341757600080fd5b818501915085601f83011261342b57600080fd5b81358181111561343d5761343d6133c6565b604051601f8201601f19908116603f01168101908382118183101715613465576134656133c6565b8160405282815288602084870101111561347e57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156134b357600080fd5b50508035926020909101359150565b60005b838110156134dd5781810151838201526020016134c5565b50506000910152565b60208152600082518060208401526135058160408501602087016134c2565b601f01601f19169190910160400192915050565b801515811461146057600080fd5b600080600080600060a0868803121561353f57600080fd5b853561354a816132f5565b9450602086013593506040860135925060608601359150608086013561356f81613519565b809150509295509295909350565b60008060006060848603121561359257600080fd5b505081359360208301359350604090920135919050565b6000602082840312156135bb57600080fd5b8135610eae816132f5565b6000806000606084860312156135db57600080fd5b833592506020840135915060408401356135f481613519565b809150509250925092565b6020808252600b908201526a1a5b9d985b1a59081c1a5960aa1b604082015260600190565b6020808252601290820152711dda5d1a191c985dc81a5cc81c185d5cd95960721b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156108ef576108ef613666565b6000600182016136a1576136a1613666565b5060010190565b818103818111156108ef576108ef613666565b634e487b7160e01b600052603160045260246000fd5b80820281158282048414176108ef576108ef613666565b634e487b7160e01b600052601260045260246000fd5b60008261371b57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600890820152676f766572666c6f7760c01b604082015260600190565b60006020828403121561375457600080fd5b8151610eae81613519565b60006020828403121561377157600080fd5b5051919050565b6000825161378a8184602087016134c2565b919091019291505056fe589d473ba17c0f47d494622893831497bad25919b9afb8e33e9521b8963fccde360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a264697066735822122020fc11adb91303623bd9da8f1ff96a7a881482f5dd4e6ca3791f4970abcf31bf64736f6c63430008160033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x382A PUSH2 0x3E PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2973 ADD MSTORE DUP2 DUP2 PUSH2 0x299C ADD MSTORE PUSH2 0x2B98 ADD MSTORE PUSH2 0x382A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x274 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DBB1E3A GT PUSH2 0x14E JUMPI DUP1 PUSH4 0xBED66C08 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xF35E4A6E GT PUSH2 0x77 JUMPI DUP1 PUSH4 0xF35E4A6E EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xF5485D32 EQ PUSH2 0x7E2 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x802 JUMPI DUP1 PUSH4 0xFAD07ECE EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0xFE313112 EQ PUSH2 0x82A JUMPI DUP1 PUSH4 0xFF423357 EQ PUSH2 0x889 JUMPI STOP JUMPDEST DUP1 PUSH4 0xBED66C08 EQ PUSH2 0x722 JUMPI DUP1 PUSH4 0xBFC3EBBA EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0xC713AA94 EQ PUSH2 0x742 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x762 JUMPI DUP1 PUSH4 0xD86C0444 EQ PUSH2 0x782 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x7A2 JUMPI STOP JUMPDEST DUP1 PUSH4 0xAB5E124A GT PUSH2 0x10A JUMPI DUP1 PUSH4 0xAB5E124A EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0xAE35A8D5 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xB3944D52 EQ PUSH2 0x6B9 JUMPI DUP1 PUSH4 0xB6D9D919 EQ PUSH2 0x6CE JUMPI DUP1 PUSH4 0xB908AFA8 EQ PUSH2 0x6EE JUMPI STOP JUMPDEST DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x9E2C8A5B EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0xA27D9279 EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xA72D5BF4 EQ PUSH2 0x609 JUMPI STOP JUMPDEST DUP1 PUSH4 0x41721AB7 GT PUSH2 0x1EC JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x6155E3DE EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x70FF0173 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x80CCE73F EQ PUSH2 0x55F JUMPI STOP JUMPDEST DUP1 PUSH4 0x41721AB7 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x4EC81AF1 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x4B1 JUMPI STOP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x23B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x2F3FFB9F EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x37849B3C EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x408 JUMPI STOP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x2559004 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x83C6323 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x11548234 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x30C JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x27B JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29D PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x32CB JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x29D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x423 CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0xD9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0x338B JUMP JUMPDEST PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0x27B PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x33DC JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x111A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x12ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0x29D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x130A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x13B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x13D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x58F CALLDATASIZE PUSH1 0x4 PUSH2 0x34A0 JUMP JUMPDEST PUSH2 0x1463 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29D PUSH2 0x5AF CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x1569 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x5CF CALLDATASIZE PUSH1 0x4 PUSH2 0x34A0 JUMP JUMPDEST PUSH2 0x15A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x604 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x1859 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x62F SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x29D SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x697 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x34E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x1892 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x6E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3527 JUMP JUMPDEST PUSH2 0x192A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH32 0xF47FC0C09EBBFE308D89B8035681A1164B9882BCFD49EB89861067738A30F5AB DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x73D CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x1CB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x75D CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x1D46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x77D CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x1DD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x79D CALLDATASIZE PUSH1 0x4 PUSH2 0x357D JUMP JUMPDEST PUSH2 0x1DF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x7BD CALLDATASIZE PUSH1 0x4 PUSH2 0x34A0 JUMP JUMPDEST PUSH2 0x1EFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x7DD CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x2028 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x7FD CALLDATASIZE PUSH1 0x4 PUSH2 0x35A9 JUMP JUMPDEST PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x27B PUSH2 0x212B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x825 CALLDATASIZE PUSH1 0x4 PUSH2 0x35C6 JUMP JUMPDEST PUSH2 0x220E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84A PUSH2 0x845 CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x23D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x2A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A9 PUSH2 0x8A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x8EF JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x97B PUSH2 0x252B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9D6 JUMPI PUSH2 0x9D6 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP4 KECCAK256 PUSH1 0x7 SWAP1 SWAP3 MUL ADD SWAP3 POP SWAP1 DUP1 DUP1 JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD DUP2 LT ISZERO PUSH2 0xA83 JUMPI NUMBER DUP5 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA23 JUMPI PUSH2 0xA23 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0xA83 JUMPI DUP4 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA4F JUMPI PUSH2 0xA4F PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP4 PUSH2 0xA6C SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP3 POP DUP2 PUSH2 0xA78 DUP2 PUSH2 0x368F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xA01 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0xA97 SWAP1 DUP4 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x3 DUP5 ADD PUSH2 0xAAC DUP4 DUP4 PUSH2 0x367C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xABC JUMPI PUSH2 0xABC PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD DUP5 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xADF JUMPI PUSH2 0xADF PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP1 DUP3 ADD SSTORE ADD PUSH2 0xA87 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB4C JUMPI DUP4 PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH2 0xB23 JUMPI PUSH2 0xB23 PUSH2 0x36BB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x2 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SSTORE ADD PUSH2 0xB08 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0xB87 JUMPI DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB71 JUMPI PUSH2 0xB6C CALLER DUP4 PUSH2 0x2570 JUMP JUMPDEST PUSH2 0xB87 JUMP JUMPDEST DUP4 SLOAD PUSH2 0xB87 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x268B JUMP JUMPDEST NUMBER DUP7 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94 DUP6 PUSH1 0x40 MLOAD PUSH2 0xBC4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBDD DUP3 PUSH2 0x951 JUMP JUMPDEST PUSH2 0xBE6 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0xBF0 DUP4 DUP4 PUSH2 0x26F4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC29 DUP3 DUP3 PUSH2 0x2799 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC36 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x18DB185A5B481A5CC81C185D5CD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCB8 JUMPI PUSH2 0xCB8 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xCE9 DUP5 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xD09 SWAP2 SWAP1 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD36 JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0xD36 CALLER DUP3 PUSH2 0x2815 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP3 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0xD50 SWAP2 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0xD5A SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xDB3 JUMPI PUSH2 0xDB3 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x3 PUSH1 0x7 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP1 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP7 LT DUP1 ISZERO PUSH2 0xE04 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE68 JUMPI PUSH1 0x0 PUSH2 0xE19 DUP6 PUSH1 0x2 ADD SLOAD DUP9 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP7 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0xE3A SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0xE4F DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0xE59 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0xE63 SWAP1 DUP6 PUSH2 0x367C JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 DUP5 ADD SLOAD DUP5 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0xE89 SWAP1 DUP7 SWAP1 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0xE93 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0xE9D SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST PUSH2 0xEA7 SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xEFB JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xF18 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xF26 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xF44 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xF6E JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST DUP7 DUP9 GT ISZERO PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x737461727420626C6F636B206D757374206265206C657373207468616E20656E PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6420626C6F636B PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP7 GT PUSH2 0x102A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x7263632070657220626C6F636B206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0x1032 PUSH2 0x2950 JUMP JUMPDEST PUSH2 0x103A PUSH2 0x2950 JUMP JUMPDEST PUSH2 0x1042 PUSH2 0x2958 JUMP JUMPDEST PUSH2 0x104D PUSH1 0x0 CALLER PUSH2 0x26F4 JUMP JUMPDEST POP PUSH2 0x1078 PUSH32 0xF47FC0C09EBBFE308D89B8035681A1164B9882BCFD49EB89861067738A30F5AB CALLER PUSH2 0x26F4 JUMP JUMPDEST POP PUSH2 0x1091 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x26F4 JUMP JUMPDEST POP PUSH2 0x109B DUP10 PUSH2 0x20B9 JUMP JUMPDEST PUSH1 0x0 DUP9 SWAP1 SSTORE PUSH1 0x1 DUP8 SWAP1 SSTORE PUSH1 0x2 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0x10F0 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1103 PUSH2 0x2968 JUMP JUMPDEST PUSH2 0x110C DUP3 PUSH2 0x2A0D JUMP JUMPDEST PUSH2 0x1116 DUP3 DUP3 PUSH2 0x2A37 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x113D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1152 JUMPI PUSH2 0x1152 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1172 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0x118C JUMPI POP NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11AB DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x11A5 DUP7 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x1463 JUMP JUMPDEST SWAP1 PUSH2 0x2AF4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3720 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x11DA SWAP1 DUP3 SWAP1 PUSH2 0x2B3F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x11FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3720 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD DUP1 ISZERO PUSH2 0x12A6 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1215 DUP5 PUSH1 0x1 PUSH2 0x2AF4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3720 JUMP JUMPDEST PUSH2 0x1240 DUP2 DUP5 PUSH2 0x2B3F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1262 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3720 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x127C DUP4 DUP11 PUSH1 0x3 ADD SLOAD PUSH2 0x2B72 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x129D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3720 JUMP JUMPDEST PUSH1 0x3 DUP10 ADD SSTORE POP POP POP JUMPDEST NUMBER PUSH1 0x2 DUP7 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP9 SWAP1 PUSH32 0xF5D2D72D9B25D6853AFD7D0554A113B705234B6A68BB36B7F143662994632411 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F7 PUSH2 0x2B8D JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1322 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x137F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77697468647261772068617320616C7265616479206265656E20756E70617573 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2523DFDAFA00190F21A4CBD0C25179C8DD3CB34A6C17FEA952ECCA8FA8332C0E SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1116 JUMPI PUSH2 0x13CF DUP2 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x13EF DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP2 DUP3 AND ISZERO SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE AND ISZERO PUSH2 0x1436 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2523DFDAFA00190F21A4CBD0C25179C8DD3CB34A6C17FEA952ECCA8FA8332C0E SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x27C975733BACECA09666FAE356A901E083676848AAF9710150079385DAAE743 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x14A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C69642072616E6765 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 SLOAD DUP4 LT ISZERO PUSH2 0x14B5 JUMPI PUSH1 0x0 SLOAD SWAP3 POP JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x14C5 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP5 DUP5 PUSH2 0x36A8 JUMP JUMPDEST GT PUSH2 0x150E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C69642072616E6765 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1522 PUSH1 0x2 SLOAD DUP6 DUP6 PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP1 PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x6D756C7469706C696572206F766572666C6F77 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x15A9 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x15EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1604 JUMPI PUSH2 0x1604 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x7 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP5 GT ISZERO PUSH2 0x167D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207374616B696E6720746F6B656E2062616C616E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0x1686 DUP6 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x169B SWAP2 PUSH2 0x2AF4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x16BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3720 JUMP JUMPDEST PUSH2 0x16C7 DUP2 PUSH1 0x1 PUSH2 0x2B3F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1705 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x37BB32B9333637BB99 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x1715 SWAP1 DUP3 SWAP1 PUSH2 0x2BD6 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6F766572666C6F7733 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1773 JUMPI DUP1 DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x176D SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP6 ISZERO PUSH2 0x17E3 JUMPI DUP6 DUP4 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x178D SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x6 ADD SLOAD NUMBER PUSH2 0x17B9 SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE JUMPDEST DUP6 DUP5 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17F7 SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP5 ADD SLOAD DUP4 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1816 SWAP2 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x1820 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE DUP8 SWAP1 CALLER SWAP1 PUSH32 0xC80277265097707F6F12A4AC4C09D46C9926E2EEA2536F63616CB04D9FCAD7D6 SWAP1 PUSH1 0x20 ADD PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x187F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH2 0x188A DUP5 DUP5 NUMBER PUSH2 0xD9D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x18AA DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH2 0x100 DUP1 DUP4 DIV DUP3 AND ISZERO DUP2 MUL PUSH2 0xFF00 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE SWAP2 DIV AND ISZERO PUSH2 0x18FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x443BF540E8151617CD5C39A681CC35A5A22BE078B6F0CF16E5BD822B4C4B61FF SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7C8FAF23A72A53EB5C2C466DC81386A58B2A27D0CC3C7C580A3C12E372BA313 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1942 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x5 SLOAD ISZERO PUSH2 0x19D5 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1969 JUMPI PUSH2 0x1969 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520666972737420706F6F6C206D7573742062652045544820706F6F6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x1A2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520666972737420706F6F6C206D7573742062652045544820706F6F6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1A7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207769746864726177206C6F636B656420626C6F636B730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 SLOAD NUMBER LT PUSH2 0x1ABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x185B1C9958591E48195B991959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1ACB JUMPI PUSH2 0x1ACB PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD NUMBER GT PUSH2 0x1ADD JUMPI PUSH1 0x0 SLOAD PUSH2 0x1ADF JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP DUP6 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1AF3 SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP12 DUP2 MSTORE DUP5 DUP7 ADD DUP8 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP9 ADD DUP3 DUP2 MSTORE PUSH1 0xA0 DUP10 ADD DUP16 DUP2 MSTORE PUSH1 0xC0 DUP11 ADD DUP16 DUP2 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP6 MSTORE SWAP10 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 PUSH1 0x7 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP11 AND OR SWAP1 SWAP9 SSTORE SWAP4 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP4 ADD SSTORE SWAP2 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 DUP3 ADD SSTORE SWAP3 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5 DUP5 ADD SSTORE SWAP3 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB6 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP4 SWAP3 DUP10 SWAP3 PUSH32 0xFA296FCE13E7A0E622B3A892E66220C248337289483A3CFA4130CDE0CAA1346 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1CCA DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1D12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964205243432070657220626C6F636B PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x4C70925B625536DD633F6BD2D615C67FDDC2E7C63C31164047A981A0DF3FEE54 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1D5E DUP2 PUSH2 0x26EA JUMP JUMPDEST DUP2 PUSH1 0x0 SLOAD GT ISZERO PUSH2 0x1DA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420656E6420626C6F636B PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x1132C5BACCB51DA3D049FABC819697DC845FA224AD59D9B555507D6446B40850 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1DE1 DUP3 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x1DEA DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0xBF0 DUP4 DUP4 PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1E17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1E2F DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x5 SLOAD DUP6 LT PUSH2 0x1E72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081C1BDBDB081A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP4 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1E86 JUMPI PUSH2 0x1E86 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1EAF JUMPI PUSH2 0x1EAF PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP5 DUP7 PUSH32 0x30DFFDEDAA3E3B4849298233F7CD71D229956E875AB09270498C96B7CF9181FD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1F1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x1F40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0x1F90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6465706F736974206E6F7420737570706F727420455448207374616B696E6700 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FA5 JUMPI PUSH2 0x1FA5 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP1 PUSH1 0x5 ADD SLOAD DUP4 GT PUSH2 0x2001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1A5B9D985B1A590819195C1BDCDA5D08185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP3 ISZERO PUSH2 0x201E JUMPI DUP1 SLOAD PUSH2 0x201E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x2BF8 JUMP JUMPDEST PUSH2 0xBF0 DUP5 DUP5 PUSH2 0x2C31 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2040 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x2088 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C696420737461727420626C6F636B PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP2 PUSH32 0x63B90B79F11A0F132BCB2C4A4DDD44ABDA45C1308A83B2919318DF7F5F8B7BE4 SWAP2 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x20D1 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DIV AND SWAP1 PUSH32 0x153AAE53B92218044BD5F43922617C6B253E50AC98A41B44C3ACB5625DED3488 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x2149 JUMPI PUSH2 0x2149 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x21B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45544820706F6F6C206D75737420626520637265617465642066697273740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD CALLVALUE SWAP1 DUP2 LT ISZERO PUSH2 0x2203 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1A5B9D985B1A590819195C1BDCDA5D08185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0x1116 PUSH1 0x0 DUP3 PUSH2 0x2C31 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2226 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x5 SLOAD DUP5 LT PUSH2 0x2269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081C1BDBDB081A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x22AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1A5B9D985B1A59081C1BDBDB081DD95A59DA1D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP2 ISZERO PUSH2 0x22BD JUMPI PUSH2 0x22BD PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22D5 DUP6 PUSH1 0x4 SLOAD PUSH2 0x2B72 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2326 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F74616C20706F6F6C20776569676874206F766572666C6F77000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2339 JUMPI PUSH2 0x2339 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 PUSH2 0x2356 SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x5 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x2370 JUMPI PUSH2 0x2370 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 PUSH32 0x4B8FA3D6A87CB21D1BF4978BF60628AE358A28AC7F39DE1751A481C6DD957617 DUP7 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x23C2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x23E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP7 POP SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x2453 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x2521 JUMPI NUMBER DUP3 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2499 JUMPI PUSH2 0x2499 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0x24E5 JUMPI DUP2 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x24C5 JUMPI PUSH2 0x24C5 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 PUSH2 0x24E2 SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP4 POP JUMPDEST DUP2 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x24FA JUMPI PUSH2 0x24FA PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x2517 SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP5 POP PUSH1 0x1 ADD PUSH2 0x2477 JUMP JUMPDEST POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x256E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2615 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E736665722063616C6C206661696C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xBF0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2630 SWAP2 SWAP1 PUSH2 0x3742 JUMP JUMPDEST PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206F7065726174696F6E20646964206E6F742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1D58D8D95959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xC29 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2FD0 JUMP JUMPDEST PUSH2 0x1460 DUP2 CALLER PUSH2 0x3041 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x270F DUP5 DUP5 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x278F JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2745 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x27B4 DUP5 DUP5 PUSH2 0x1569 JUMP JUMPDEST ISZERO PUSH2 0x278F JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2864 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2888 SWAP2 SWAP1 PUSH2 0x375F JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT PUSH2 0x2910 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH3 0x10000 SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF0 SWAP2 SWAP1 PUSH2 0x3742 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH3 0x10000 SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x28CD JUMP JUMPDEST PUSH2 0x256E PUSH2 0x307A JUMP JUMPDEST PUSH2 0x2960 PUSH2 0x307A JUMP JUMPDEST PUSH2 0x256E PUSH2 0x30C3 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x29EF JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29E3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x256E JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF47FC0C09EBBFE308D89B8035681A1164B9882BCFD49EB89861067738A30F5AB PUSH2 0x1116 DUP2 PUSH2 0x26EA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2A91 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2A8E SWAP2 DUP2 ADD SWAP1 PUSH2 0x375F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2AB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x2AEA JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0xC29 DUP4 DUP4 PUSH2 0x30F6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 SUB PUSH2 0x2B0B JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x2B38 JUMP JUMPDEST DUP4 DUP4 MUL DUP4 DUP6 DUP3 DUP2 PUSH2 0x2B1E JUMPI PUSH2 0x2B1E PUSH2 0x36E8 JUMP JUMPDEST DIV EQ PUSH2 0x2B31 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x2B38 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 SUB PUSH2 0x2B55 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x2B38 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x2B66 JUMPI PUSH2 0x2B66 PUSH2 0x36E8 JUMP JUMPDEST DIV SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x2B31 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x2B38 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x256E JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x2BEC JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x2B38 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xBF0 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2C46 JUMPI PUSH2 0x2C46 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x2C77 DUP5 PUSH2 0x111A JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x2E34 JUMPI PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x2C93 SWAP2 PUSH2 0x2AF4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2CE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x75736572207374616B6520616D6F756E74206F766572666C6F77000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0x2CF6 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2B3F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x2D56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616363756D756C617465207265776172647320706572207374616B65206F7665 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x72666C6F77 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D70 DUP6 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0x2BD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2DBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x70656E64696E672072657761726473206F766572666C6F77 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E2F JUMPI PUSH1 0x0 DUP1 PUSH2 0x2DDC DUP4 DUP9 PUSH1 0x2 ADD SLOAD PUSH2 0x2B72 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2E28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x70656E64696E672072657761726473206F766572666C6F77 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SSTORE POP JUMPDEST POP POP POP POP JUMPDEST DUP3 ISZERO PUSH2 0x2EA1 JUMPI DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x2E4C SWAP1 DUP7 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2E9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616363756D756C617465207374616B6520616D6F756E74206F766572666C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP3 SSTORE POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EBB DUP6 DUP6 PUSH1 0x4 ADD SLOAD PUSH2 0x2B72 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2F0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374616B6520746F6B656E20616D6F756E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x4 DUP5 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP5 ADD SLOAD DUP4 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x2F28 SWAP2 PUSH2 0x2AF4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2F88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x75736572207374416D6F756E74206D756C206163635243435065725354206F76 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6572666C6F77 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 DUP6 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE DUP9 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x2FF3 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x300B JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x3018 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0x304B DUP3 DUP3 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x1116 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x91B JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x256E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30CB PUSH2 0x307A JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x30FF DUP3 PUSH2 0x314C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x3144 JUMPI PUSH2 0xC29 DUP3 DUP3 PUSH2 0x31B1 JUMP JUMPDEST PUSH2 0x1116 PUSH2 0x3227 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x3182 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x31CE SWAP2 SWAP1 PUSH2 0x3778 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3209 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x320E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x321E DUP6 DUP4 DUP4 PUSH2 0x3246 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x256E JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x325B JUMPI PUSH2 0x3256 DUP3 PUSH2 0x32A2 JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x3272 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x329B JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x91B JUMP JUMPDEST POP DUP1 PUSH2 0xEAE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x32B2 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xEAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x331D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x332F DUP2 PUSH2 0x32F5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x334C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x337A DUP2 PUSH2 0x32F5 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x33A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x33AC DUP2 PUSH2 0x32F5 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x33FA DUP2 PUSH2 0x32F5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x342B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x343D JUMPI PUSH2 0x343D PUSH2 0x33C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3465 JUMPI PUSH2 0x3465 PUSH2 0x33C6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x347E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x34C5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3505 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x34C2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x353F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x354A DUP2 PUSH2 0x32F5 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x356F DUP2 PUSH2 0x3519 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEAE DUP2 PUSH2 0x32F5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x35DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x35F4 DUP2 PUSH2 0x3519 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x1A5B9D985B1A59081C1A59 PUSH1 0xAA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DC81A5CC81C185D5CD959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8EF JUMPI PUSH2 0x8EF PUSH2 0x3666 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x36A1 JUMPI PUSH2 0x36A1 PUSH2 0x3666 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8EF JUMPI PUSH2 0x8EF PUSH2 0x3666 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8EF JUMPI PUSH2 0x8EF PUSH2 0x3666 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x371B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x6F766572666C6F77 PUSH1 0xC0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xEAE DUP2 PUSH2 0x3519 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x378A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x34C2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PC SWAP14 SELFBALANCE EXTCODESIZE LOG1 PUSH29 0xF47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE360894 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC02DD7BC7DEC4DCEEDDA775 0xE5 DUP14 0xD5 COINBASE 0xE0 DUP11 GT PUSH13 0x6C53815C0BD028192F7B626800 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xFC GT 0xAD 0xB9 SGT SUB PUSH3 0x3BD9DA DUP16 0x1F 0xF9 PUSH11 0x7A881482F5DD4E6CA3791F 0x49 PUSH17 0xABCF31BF64736F6C634300081600330000 ","sourceMap":"921:26978:27:-:0;;;1171:4:2;1128:48;;921:26978:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_6638":{"entryPoint":null,"id":6638,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_28":{"entryPoint":null,"id":28,"parameterSlots":0,"returnSlots":0},"@ETH_PID_6646":{"entryPoint":null,"id":6646,"parameterSlots":0,"returnSlots":0},"@RCC_6659":{"entryPoint":null,"id":6659,"parameterSlots":0,"returnSlots":0},"@UPGRADE_INTERFACE_VERSION_640":{"entryPoint":null,"id":640,"parameterSlots":0,"returnSlots":0},"@UPGRADE_ROLE_6643":{"entryPoint":null,"id":6643,"parameterSlots":0,"returnSlots":0},"@_8555":{"entryPoint":null,"id":8555,"parameterSlots":0,"returnSlots":0},"@_8559":{"entryPoint":null,"id":8559,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_63":{"entryPoint":10576,"id":63,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_896":{"entryPoint":10584,"id":896,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_914":{"entryPoint":12483,"id":914,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_670":{"entryPoint":null,"id":670,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_6908":{"entryPoint":10765,"id":6908,"parameterSlots":1,"returnSlots":0},"@_callOptionalReturn_2691":{"entryPoint":12240,"id":2691,"parameterSlots":2,"returnSlots":0},"@_checkInitializing_538":{"entryPoint":12410,"id":538,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_1694":{"entryPoint":12839,"id":1694,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_746":{"entryPoint":11149,"id":746,"parameterSlots":0,"returnSlots":0},"@_checkProxy_730":{"entryPoint":10600,"id":730,"parameterSlots":0,"returnSlots":0},"@_checkRole_129":{"entryPoint":9962,"id":129,"parameterSlots":1,"returnSlots":0},"@_checkRole_150":{"entryPoint":12353,"id":150,"parameterSlots":2,"returnSlots":0},"@_deposit_8467":{"entryPoint":11313,"id":8467,"parameterSlots":2,"returnSlots":0},"@_getAccessControlStorage_46":{"entryPoint":null,"id":46,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_615":{"entryPoint":null,"id":615,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_870":{"entryPoint":null,"id":870,"parameterSlots":0,"returnSlots":1},"@_grantRole_315":{"entryPoint":9972,"id":315,"parameterSlots":2,"returnSlots":1},"@_isInitializing_606":{"entryPoint":null,"id":606,"parameterSlots":0,"returnSlots":1},"@_msgSender_826":{"entryPoint":null,"id":826,"parameterSlots":0,"returnSlots":1},"@_requireNotPaused_958":{"entryPoint":9515,"id":958,"parameterSlots":0,"returnSlots":0},"@_revert_2992":{"entryPoint":12962,"id":2992,"parameterSlots":1,"returnSlots":0},"@_revokeRole_361":{"entryPoint":10137,"id":361,"parameterSlots":2,"returnSlots":1},"@_safeETHTransfer_8551":{"entryPoint":9584,"id":8551,"parameterSlots":2,"returnSlots":0},"@_safeRCCTransfer_8506":{"entryPoint":10261,"id":8506,"parameterSlots":2,"returnSlots":0},"@_setImplementation_1474":{"entryPoint":12620,"id":1474,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_797":{"entryPoint":10807,"id":797,"parameterSlots":2,"returnSlots":0},"@addPool_7174":{"entryPoint":6442,"id":7174,"parameterSlots":5,"returnSlots":0},"@claimPaused_6656":{"entryPoint":null,"id":6656,"parameterSlots":0,"returnSlots":0},"@claim_8280":{"entryPoint":3118,"id":8280,"parameterSlots":1,"returnSlots":0},"@depositETH_7800":{"entryPoint":8491,"id":7800,"parameterSlots":0,"returnSlots":0},"@deposit_7862":{"entryPoint":7930,"id":7862,"parameterSlots":2,"returnSlots":0},"@endBlock_6650":{"entryPoint":null,"id":6650,"parameterSlots":0,"returnSlots":0},"@functionDelegateCall_2910":{"entryPoint":12721,"id":2910,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_3132":{"entryPoint":null,"id":3132,"parameterSlots":1,"returnSlots":1},"@getImplementation_1447":{"entryPoint":null,"id":1447,"parameterSlots":0,"returnSlots":1},"@getMultiplier_7365":{"entryPoint":5219,"id":7365,"parameterSlots":2,"returnSlots":1},"@getPendingRCC_7386":{"entryPoint":6233,"id":7386,"parameterSlots":2,"returnSlots":1},"@getPoolLength_7300":{"entryPoint":null,"id":7300,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_171":{"entryPoint":2385,"id":171,"parameterSlots":1,"returnSlots":1},"@grantRole_190":{"entryPoint":3028,"id":190,"parameterSlots":2,"returnSlots":0},"@hasRole_116":{"entryPoint":5481,"id":116,"parameterSlots":2,"returnSlots":1},"@initialize_6898":{"entryPoint":3765,"id":6898,"parameterSlots":4,"returnSlots":0},"@massUpdatePools_7755":{"entryPoint":5048,"id":7755,"parameterSlots":0,"returnSlots":0},"@pauseWithdraw_6947":{"entryPoint":4874,"id":6947,"parameterSlots":0,"returnSlots":0},"@paused_946":{"entryPoint":null,"id":946,"parameterSlots":0,"returnSlots":1},"@pendingRCCByBlockNumber_7484":{"entryPoint":3485,"id":7484,"parameterSlots":3,"returnSlots":1},"@pool_6665":{"entryPoint":9170,"id":6665,"parameterSlots":0,"returnSlots":0},"@proxiableUUID_688":{"entryPoint":4845,"id":688,"parameterSlots":0,"returnSlots":1},"@rccPerBlock_6652":{"entryPoint":null,"id":6652,"parameterSlots":0,"returnSlots":0},"@renounceRole_232":{"entryPoint":3062,"id":232,"parameterSlots":2,"returnSlots":0},"@revokeRole_209":{"entryPoint":7640,"id":209,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_2396":{"entryPoint":11256,"id":2396,"parameterSlots":4,"returnSlots":0},"@safeTransfer_2369":{"entryPoint":9867,"id":2369,"parameterSlots":3,"returnSlots":0},"@setEndBlock_7042":{"entryPoint":7494,"id":7042,"parameterSlots":1,"returnSlots":0},"@setPoolWeight_7290":{"entryPoint":8718,"id":7290,"parameterSlots":3,"returnSlots":0},"@setRCCPerBlock_7067":{"entryPoint":7346,"id":7067,"parameterSlots":1,"returnSlots":0},"@setRCC_6927":{"entryPoint":8377,"id":6927,"parameterSlots":1,"returnSlots":0},"@setStartBlock_7017":{"entryPoint":8232,"id":7017,"parameterSlots":1,"returnSlots":0},"@stakingBalance_7505":{"entryPoint":2293,"id":7505,"parameterSlots":2,"returnSlots":1},"@startBlock_6648":{"entryPoint":null,"id":6648,"parameterSlots":0,"returnSlots":0},"@supportsInterface_1059":{"entryPoint":null,"id":1059,"parameterSlots":1,"returnSlots":1},"@supportsInterface_91":{"entryPoint":2238,"id":91,"parameterSlots":1,"returnSlots":1},"@toggleClaimPause_6992":{"entryPoint":6290,"id":6992,"parameterSlots":0,"returnSlots":0},"@toggleWithdrawPause_6970":{"entryPoint":5079,"id":6970,"parameterSlots":0,"returnSlots":0},"@totalPoolWeight_6661":{"entryPoint":null,"id":6661,"parameterSlots":0,"returnSlots":0},"@tryAdd_3277":{"entryPoint":11122,"id":3277,"parameterSlots":2,"returnSlots":2},"@tryDiv_3375":{"entryPoint":11071,"id":3375,"parameterSlots":2,"returnSlots":2},"@tryMul_3347":{"entryPoint":10996,"id":3347,"parameterSlots":2,"returnSlots":2},"@trySub_3305":{"entryPoint":11222,"id":3305,"parameterSlots":2,"returnSlots":2},"@unstake_8021":{"entryPoint":5537,"id":8021,"parameterSlots":2,"returnSlots":0},"@updatePool_7219":{"entryPoint":7668,"id":7219,"parameterSlots":3,"returnSlots":0},"@updatePool_7728":{"entryPoint":4378,"id":7728,"parameterSlots":1,"returnSlots":0},"@upgradeToAndCall_1510":{"entryPoint":12534,"id":1510,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_708":{"entryPoint":4347,"id":708,"parameterSlots":2,"returnSlots":0},"@user_6672":{"entryPoint":null,"id":6672,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_2950":{"entryPoint":12870,"id":2950,"parameterSlots":3,"returnSlots":1},"@withdrawAmount_7576":{"entryPoint":9259,"id":7576,"parameterSlots":2,"returnSlots":2},"@withdrawPaused_6654":{"entryPoint":null,"id":6654,"parameterSlots":0,"returnSlots":0},"@withdraw_8188":{"entryPoint":2419,"id":8188,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":13276,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bool":{"entryPoint":13607,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":14146,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":13114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":13003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$2298":{"entryPoint":13737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$2298t_uint256t_uint256t_uint256":{"entryPoint":13195,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":14175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":13066,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_uint256":{"entryPoint":13139,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":13472,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_bool":{"entryPoint":13766,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":13693,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$2298__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_11d6ed57bc2b60051e8a3bda6c3bc12d844aa2380e7d2f1336e05a70bb63dc7e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_31d5b1c22ea6e76334ac16bb5682be30c83b68d64d59c704e05e7e51c06d2e57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6931c31d4f12cf701d2bae3519754547c6c993e2548333d63706fa6eb15e9c7c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7d2ab1273c3a1faf917e7dccd29abed8d9f4b4c4744abaa01dfcf902cef0a4df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13823,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13860,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a40f5adcc0f327ea4569b64219d34444458f98e534070c4ae22df0b574107ecf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bc46be7e88dad9c850cfc31962eb9871149b07b0ba227a4233d18e86f3aa2886__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14112,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f5e521e2c65f04ddc979b259b7b59d4bb841d693fe0fe14d56a3ec19243b969a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13948,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":14078,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":14033,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13992,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":13506,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":13967,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":13926,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":14056,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":14011,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13904,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13254,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":13045,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":13593,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:23434:30","nodeType":"YulBlock","src":"0:23434:30","statements":[{"nativeSrc":"6:3:30","nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nativeSrc":"83:217:30","nodeType":"YulBlock","src":"83:217:30","statements":[{"body":{"nativeSrc":"129:16:30","nodeType":"YulBlock","src":"129:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"138:1:30","nodeType":"YulLiteral","src":"138:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"141:1:30","nodeType":"YulLiteral","src":"141:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"131:6:30","nodeType":"YulIdentifier","src":"131:6:30"},"nativeSrc":"131:12:30","nodeType":"YulFunctionCall","src":"131:12:30"},"nativeSrc":"131:12:30","nodeType":"YulExpressionStatement","src":"131:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"104:7:30","nodeType":"YulIdentifier","src":"104:7:30"},{"name":"headStart","nativeSrc":"113:9:30","nodeType":"YulIdentifier","src":"113:9:30"}],"functionName":{"name":"sub","nativeSrc":"100:3:30","nodeType":"YulIdentifier","src":"100:3:30"},"nativeSrc":"100:23:30","nodeType":"YulFunctionCall","src":"100:23:30"},{"kind":"number","nativeSrc":"125:2:30","nodeType":"YulLiteral","src":"125:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"96:3:30","nodeType":"YulIdentifier","src":"96:3:30"},"nativeSrc":"96:32:30","nodeType":"YulFunctionCall","src":"96:32:30"},"nativeSrc":"93:52:30","nodeType":"YulIf","src":"93:52:30"},{"nativeSrc":"154:36:30","nodeType":"YulVariableDeclaration","src":"154:36:30","value":{"arguments":[{"name":"headStart","nativeSrc":"180:9:30","nodeType":"YulIdentifier","src":"180:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"167:12:30","nodeType":"YulIdentifier","src":"167:12:30"},"nativeSrc":"167:23:30","nodeType":"YulFunctionCall","src":"167:23:30"},"variables":[{"name":"value","nativeSrc":"158:5:30","nodeType":"YulTypedName","src":"158:5:30","type":""}]},{"body":{"nativeSrc":"254:16:30","nodeType":"YulBlock","src":"254:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"263:1:30","nodeType":"YulLiteral","src":"263:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"266:1:30","nodeType":"YulLiteral","src":"266:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"256:6:30","nodeType":"YulIdentifier","src":"256:6:30"},"nativeSrc":"256:12:30","nodeType":"YulFunctionCall","src":"256:12:30"},"nativeSrc":"256:12:30","nodeType":"YulExpressionStatement","src":"256:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"212:5:30","nodeType":"YulIdentifier","src":"212:5:30"},{"arguments":[{"name":"value","nativeSrc":"223:5:30","nodeType":"YulIdentifier","src":"223:5:30"},{"arguments":[{"kind":"number","nativeSrc":"234:3:30","nodeType":"YulLiteral","src":"234:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"239:10:30","nodeType":"YulLiteral","src":"239:10:30","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"230:3:30","nodeType":"YulIdentifier","src":"230:3:30"},"nativeSrc":"230:20:30","nodeType":"YulFunctionCall","src":"230:20:30"}],"functionName":{"name":"and","nativeSrc":"219:3:30","nodeType":"YulIdentifier","src":"219:3:30"},"nativeSrc":"219:32:30","nodeType":"YulFunctionCall","src":"219:32:30"}],"functionName":{"name":"eq","nativeSrc":"209:2:30","nodeType":"YulIdentifier","src":"209:2:30"},"nativeSrc":"209:43:30","nodeType":"YulFunctionCall","src":"209:43:30"}],"functionName":{"name":"iszero","nativeSrc":"202:6:30","nodeType":"YulIdentifier","src":"202:6:30"},"nativeSrc":"202:51:30","nodeType":"YulFunctionCall","src":"202:51:30"},"nativeSrc":"199:71:30","nodeType":"YulIf","src":"199:71:30"},{"nativeSrc":"279:15:30","nodeType":"YulAssignment","src":"279:15:30","value":{"name":"value","nativeSrc":"289:5:30","nodeType":"YulIdentifier","src":"289:5:30"},"variableNames":[{"name":"value0","nativeSrc":"279:6:30","nodeType":"YulIdentifier","src":"279:6:30"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"14:286:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49:9:30","nodeType":"YulTypedName","src":"49:9:30","type":""},{"name":"dataEnd","nativeSrc":"60:7:30","nodeType":"YulTypedName","src":"60:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"72:6:30","nodeType":"YulTypedName","src":"72:6:30","type":""}],"src":"14:286:30"},{"body":{"nativeSrc":"400:92:30","nodeType":"YulBlock","src":"400:92:30","statements":[{"nativeSrc":"410:26:30","nodeType":"YulAssignment","src":"410:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:30","nodeType":"YulIdentifier","src":"422:9:30"},{"kind":"number","nativeSrc":"433:2:30","nodeType":"YulLiteral","src":"433:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"418:3:30","nodeType":"YulIdentifier","src":"418:3:30"},"nativeSrc":"418:18:30","nodeType":"YulFunctionCall","src":"418:18:30"},"variableNames":[{"name":"tail","nativeSrc":"410:4:30","nodeType":"YulIdentifier","src":"410:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"452:9:30","nodeType":"YulIdentifier","src":"452:9:30"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"477:6:30","nodeType":"YulIdentifier","src":"477:6:30"}],"functionName":{"name":"iszero","nativeSrc":"470:6:30","nodeType":"YulIdentifier","src":"470:6:30"},"nativeSrc":"470:14:30","nodeType":"YulFunctionCall","src":"470:14:30"}],"functionName":{"name":"iszero","nativeSrc":"463:6:30","nodeType":"YulIdentifier","src":"463:6:30"},"nativeSrc":"463:22:30","nodeType":"YulFunctionCall","src":"463:22:30"}],"functionName":{"name":"mstore","nativeSrc":"445:6:30","nodeType":"YulIdentifier","src":"445:6:30"},"nativeSrc":"445:41:30","nodeType":"YulFunctionCall","src":"445:41:30"},"nativeSrc":"445:41:30","nodeType":"YulExpressionStatement","src":"445:41:30"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"305:187:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"369:9:30","nodeType":"YulTypedName","src":"369:9:30","type":""},{"name":"value0","nativeSrc":"380:6:30","nodeType":"YulTypedName","src":"380:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"391:4:30","nodeType":"YulTypedName","src":"391:4:30","type":""}],"src":"305:187:30"},{"body":{"nativeSrc":"598:76:30","nodeType":"YulBlock","src":"598:76:30","statements":[{"nativeSrc":"608:26:30","nodeType":"YulAssignment","src":"608:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"620:9:30","nodeType":"YulIdentifier","src":"620:9:30"},{"kind":"number","nativeSrc":"631:2:30","nodeType":"YulLiteral","src":"631:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"616:3:30","nodeType":"YulIdentifier","src":"616:3:30"},"nativeSrc":"616:18:30","nodeType":"YulFunctionCall","src":"616:18:30"},"variableNames":[{"name":"tail","nativeSrc":"608:4:30","nodeType":"YulIdentifier","src":"608:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"650:9:30","nodeType":"YulIdentifier","src":"650:9:30"},{"name":"value0","nativeSrc":"661:6:30","nodeType":"YulIdentifier","src":"661:6:30"}],"functionName":{"name":"mstore","nativeSrc":"643:6:30","nodeType":"YulIdentifier","src":"643:6:30"},"nativeSrc":"643:25:30","nodeType":"YulFunctionCall","src":"643:25:30"},"nativeSrc":"643:25:30","nodeType":"YulExpressionStatement","src":"643:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"497:177:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"567:9:30","nodeType":"YulTypedName","src":"567:9:30","type":""},{"name":"value0","nativeSrc":"578:6:30","nodeType":"YulTypedName","src":"578:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"589:4:30","nodeType":"YulTypedName","src":"589:4:30","type":""}],"src":"497:177:30"},{"body":{"nativeSrc":"724:86:30","nodeType":"YulBlock","src":"724:86:30","statements":[{"body":{"nativeSrc":"788:16:30","nodeType":"YulBlock","src":"788:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"797:1:30","nodeType":"YulLiteral","src":"797:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"800:1:30","nodeType":"YulLiteral","src":"800:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"790:6:30","nodeType":"YulIdentifier","src":"790:6:30"},"nativeSrc":"790:12:30","nodeType":"YulFunctionCall","src":"790:12:30"},"nativeSrc":"790:12:30","nodeType":"YulExpressionStatement","src":"790:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"747:5:30","nodeType":"YulIdentifier","src":"747:5:30"},{"arguments":[{"name":"value","nativeSrc":"758:5:30","nodeType":"YulIdentifier","src":"758:5:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"773:3:30","nodeType":"YulLiteral","src":"773:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"778:1:30","nodeType":"YulLiteral","src":"778:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"769:3:30","nodeType":"YulIdentifier","src":"769:3:30"},"nativeSrc":"769:11:30","nodeType":"YulFunctionCall","src":"769:11:30"},{"kind":"number","nativeSrc":"782:1:30","nodeType":"YulLiteral","src":"782:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"765:3:30","nodeType":"YulIdentifier","src":"765:3:30"},"nativeSrc":"765:19:30","nodeType":"YulFunctionCall","src":"765:19:30"}],"functionName":{"name":"and","nativeSrc":"754:3:30","nodeType":"YulIdentifier","src":"754:3:30"},"nativeSrc":"754:31:30","nodeType":"YulFunctionCall","src":"754:31:30"}],"functionName":{"name":"eq","nativeSrc":"744:2:30","nodeType":"YulIdentifier","src":"744:2:30"},"nativeSrc":"744:42:30","nodeType":"YulFunctionCall","src":"744:42:30"}],"functionName":{"name":"iszero","nativeSrc":"737:6:30","nodeType":"YulIdentifier","src":"737:6:30"},"nativeSrc":"737:50:30","nodeType":"YulFunctionCall","src":"737:50:30"},"nativeSrc":"734:70:30","nodeType":"YulIf","src":"734:70:30"}]},"name":"validator_revert_address","nativeSrc":"679:131:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"713:5:30","nodeType":"YulTypedName","src":"713:5:30","type":""}],"src":"679:131:30"},{"body":{"nativeSrc":"902:228:30","nodeType":"YulBlock","src":"902:228:30","statements":[{"body":{"nativeSrc":"948:16:30","nodeType":"YulBlock","src":"948:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"957:1:30","nodeType":"YulLiteral","src":"957:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"960:1:30","nodeType":"YulLiteral","src":"960:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"950:6:30","nodeType":"YulIdentifier","src":"950:6:30"},"nativeSrc":"950:12:30","nodeType":"YulFunctionCall","src":"950:12:30"},"nativeSrc":"950:12:30","nodeType":"YulExpressionStatement","src":"950:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"923:7:30","nodeType":"YulIdentifier","src":"923:7:30"},{"name":"headStart","nativeSrc":"932:9:30","nodeType":"YulIdentifier","src":"932:9:30"}],"functionName":{"name":"sub","nativeSrc":"919:3:30","nodeType":"YulIdentifier","src":"919:3:30"},"nativeSrc":"919:23:30","nodeType":"YulFunctionCall","src":"919:23:30"},{"kind":"number","nativeSrc":"944:2:30","nodeType":"YulLiteral","src":"944:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"915:3:30","nodeType":"YulIdentifier","src":"915:3:30"},"nativeSrc":"915:32:30","nodeType":"YulFunctionCall","src":"915:32:30"},"nativeSrc":"912:52:30","nodeType":"YulIf","src":"912:52:30"},{"nativeSrc":"973:33:30","nodeType":"YulAssignment","src":"973:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"996:9:30","nodeType":"YulIdentifier","src":"996:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"983:12:30","nodeType":"YulIdentifier","src":"983:12:30"},"nativeSrc":"983:23:30","nodeType":"YulFunctionCall","src":"983:23:30"},"variableNames":[{"name":"value0","nativeSrc":"973:6:30","nodeType":"YulIdentifier","src":"973:6:30"}]},{"nativeSrc":"1015:45:30","nodeType":"YulVariableDeclaration","src":"1015:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1045:9:30","nodeType":"YulIdentifier","src":"1045:9:30"},{"kind":"number","nativeSrc":"1056:2:30","nodeType":"YulLiteral","src":"1056:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1041:3:30","nodeType":"YulIdentifier","src":"1041:3:30"},"nativeSrc":"1041:18:30","nodeType":"YulFunctionCall","src":"1041:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"1028:12:30","nodeType":"YulIdentifier","src":"1028:12:30"},"nativeSrc":"1028:32:30","nodeType":"YulFunctionCall","src":"1028:32:30"},"variables":[{"name":"value","nativeSrc":"1019:5:30","nodeType":"YulTypedName","src":"1019:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1094:5:30","nodeType":"YulIdentifier","src":"1094:5:30"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1069:24:30","nodeType":"YulIdentifier","src":"1069:24:30"},"nativeSrc":"1069:31:30","nodeType":"YulFunctionCall","src":"1069:31:30"},"nativeSrc":"1069:31:30","nodeType":"YulExpressionStatement","src":"1069:31:30"},{"nativeSrc":"1109:15:30","nodeType":"YulAssignment","src":"1109:15:30","value":{"name":"value","nativeSrc":"1119:5:30","nodeType":"YulIdentifier","src":"1119:5:30"},"variableNames":[{"name":"value1","nativeSrc":"1109:6:30","nodeType":"YulIdentifier","src":"1109:6:30"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nativeSrc":"815:315:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"860:9:30","nodeType":"YulTypedName","src":"860:9:30","type":""},{"name":"dataEnd","nativeSrc":"871:7:30","nodeType":"YulTypedName","src":"871:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"883:6:30","nodeType":"YulTypedName","src":"883:6:30","type":""},{"name":"value1","nativeSrc":"891:6:30","nodeType":"YulTypedName","src":"891:6:30","type":""}],"src":"815:315:30"},{"body":{"nativeSrc":"1205:110:30","nodeType":"YulBlock","src":"1205:110:30","statements":[{"body":{"nativeSrc":"1251:16:30","nodeType":"YulBlock","src":"1251:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1260:1:30","nodeType":"YulLiteral","src":"1260:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1263:1:30","nodeType":"YulLiteral","src":"1263:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1253:6:30","nodeType":"YulIdentifier","src":"1253:6:30"},"nativeSrc":"1253:12:30","nodeType":"YulFunctionCall","src":"1253:12:30"},"nativeSrc":"1253:12:30","nodeType":"YulExpressionStatement","src":"1253:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1226:7:30","nodeType":"YulIdentifier","src":"1226:7:30"},{"name":"headStart","nativeSrc":"1235:9:30","nodeType":"YulIdentifier","src":"1235:9:30"}],"functionName":{"name":"sub","nativeSrc":"1222:3:30","nodeType":"YulIdentifier","src":"1222:3:30"},"nativeSrc":"1222:23:30","nodeType":"YulFunctionCall","src":"1222:23:30"},{"kind":"number","nativeSrc":"1247:2:30","nodeType":"YulLiteral","src":"1247:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1218:3:30","nodeType":"YulIdentifier","src":"1218:3:30"},"nativeSrc":"1218:32:30","nodeType":"YulFunctionCall","src":"1218:32:30"},"nativeSrc":"1215:52:30","nodeType":"YulIf","src":"1215:52:30"},{"nativeSrc":"1276:33:30","nodeType":"YulAssignment","src":"1276:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1299:9:30","nodeType":"YulIdentifier","src":"1299:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"1286:12:30","nodeType":"YulIdentifier","src":"1286:12:30"},"nativeSrc":"1286:23:30","nodeType":"YulFunctionCall","src":"1286:23:30"},"variableNames":[{"name":"value0","nativeSrc":"1276:6:30","nodeType":"YulIdentifier","src":"1276:6:30"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"1135:180:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1171:9:30","nodeType":"YulTypedName","src":"1171:9:30","type":""},{"name":"dataEnd","nativeSrc":"1182:7:30","nodeType":"YulTypedName","src":"1182:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1194:6:30","nodeType":"YulTypedName","src":"1194:6:30","type":""}],"src":"1135:180:30"},{"body":{"nativeSrc":"1421:76:30","nodeType":"YulBlock","src":"1421:76:30","statements":[{"nativeSrc":"1431:26:30","nodeType":"YulAssignment","src":"1431:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1443:9:30","nodeType":"YulIdentifier","src":"1443:9:30"},{"kind":"number","nativeSrc":"1454:2:30","nodeType":"YulLiteral","src":"1454:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1439:3:30","nodeType":"YulIdentifier","src":"1439:3:30"},"nativeSrc":"1439:18:30","nodeType":"YulFunctionCall","src":"1439:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1431:4:30","nodeType":"YulIdentifier","src":"1431:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1473:9:30","nodeType":"YulIdentifier","src":"1473:9:30"},{"name":"value0","nativeSrc":"1484:6:30","nodeType":"YulIdentifier","src":"1484:6:30"}],"functionName":{"name":"mstore","nativeSrc":"1466:6:30","nodeType":"YulIdentifier","src":"1466:6:30"},"nativeSrc":"1466:25:30","nodeType":"YulFunctionCall","src":"1466:25:30"},"nativeSrc":"1466:25:30","nodeType":"YulExpressionStatement","src":"1466:25:30"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"1320:177:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1390:9:30","nodeType":"YulTypedName","src":"1390:9:30","type":""},{"name":"value0","nativeSrc":"1401:6:30","nodeType":"YulTypedName","src":"1401:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1412:4:30","nodeType":"YulTypedName","src":"1412:4:30","type":""}],"src":"1320:177:30"},{"body":{"nativeSrc":"1572:110:30","nodeType":"YulBlock","src":"1572:110:30","statements":[{"body":{"nativeSrc":"1618:16:30","nodeType":"YulBlock","src":"1618:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1627:1:30","nodeType":"YulLiteral","src":"1627:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1630:1:30","nodeType":"YulLiteral","src":"1630:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1620:6:30","nodeType":"YulIdentifier","src":"1620:6:30"},"nativeSrc":"1620:12:30","nodeType":"YulFunctionCall","src":"1620:12:30"},"nativeSrc":"1620:12:30","nodeType":"YulExpressionStatement","src":"1620:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1593:7:30","nodeType":"YulIdentifier","src":"1593:7:30"},{"name":"headStart","nativeSrc":"1602:9:30","nodeType":"YulIdentifier","src":"1602:9:30"}],"functionName":{"name":"sub","nativeSrc":"1589:3:30","nodeType":"YulIdentifier","src":"1589:3:30"},"nativeSrc":"1589:23:30","nodeType":"YulFunctionCall","src":"1589:23:30"},{"kind":"number","nativeSrc":"1614:2:30","nodeType":"YulLiteral","src":"1614:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1585:3:30","nodeType":"YulIdentifier","src":"1585:3:30"},"nativeSrc":"1585:32:30","nodeType":"YulFunctionCall","src":"1585:32:30"},"nativeSrc":"1582:52:30","nodeType":"YulIf","src":"1582:52:30"},{"nativeSrc":"1643:33:30","nodeType":"YulAssignment","src":"1643:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1666:9:30","nodeType":"YulIdentifier","src":"1666:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"1653:12:30","nodeType":"YulIdentifier","src":"1653:12:30"},"nativeSrc":"1653:23:30","nodeType":"YulFunctionCall","src":"1653:23:30"},"variableNames":[{"name":"value0","nativeSrc":"1643:6:30","nodeType":"YulIdentifier","src":"1643:6:30"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1502:180:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1538:9:30","nodeType":"YulTypedName","src":"1538:9:30","type":""},{"name":"dataEnd","nativeSrc":"1549:7:30","nodeType":"YulTypedName","src":"1549:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1561:6:30","nodeType":"YulTypedName","src":"1561:6:30","type":""}],"src":"1502:180:30"},{"body":{"nativeSrc":"1774:228:30","nodeType":"YulBlock","src":"1774:228:30","statements":[{"body":{"nativeSrc":"1820:16:30","nodeType":"YulBlock","src":"1820:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1829:1:30","nodeType":"YulLiteral","src":"1829:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1832:1:30","nodeType":"YulLiteral","src":"1832:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1822:6:30","nodeType":"YulIdentifier","src":"1822:6:30"},"nativeSrc":"1822:12:30","nodeType":"YulFunctionCall","src":"1822:12:30"},"nativeSrc":"1822:12:30","nodeType":"YulExpressionStatement","src":"1822:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1795:7:30","nodeType":"YulIdentifier","src":"1795:7:30"},{"name":"headStart","nativeSrc":"1804:9:30","nodeType":"YulIdentifier","src":"1804:9:30"}],"functionName":{"name":"sub","nativeSrc":"1791:3:30","nodeType":"YulIdentifier","src":"1791:3:30"},"nativeSrc":"1791:23:30","nodeType":"YulFunctionCall","src":"1791:23:30"},{"kind":"number","nativeSrc":"1816:2:30","nodeType":"YulLiteral","src":"1816:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1787:3:30","nodeType":"YulIdentifier","src":"1787:3:30"},"nativeSrc":"1787:32:30","nodeType":"YulFunctionCall","src":"1787:32:30"},"nativeSrc":"1784:52:30","nodeType":"YulIf","src":"1784:52:30"},{"nativeSrc":"1845:33:30","nodeType":"YulAssignment","src":"1845:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1868:9:30","nodeType":"YulIdentifier","src":"1868:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"1855:12:30","nodeType":"YulIdentifier","src":"1855:12:30"},"nativeSrc":"1855:23:30","nodeType":"YulFunctionCall","src":"1855:23:30"},"variableNames":[{"name":"value0","nativeSrc":"1845:6:30","nodeType":"YulIdentifier","src":"1845:6:30"}]},{"nativeSrc":"1887:45:30","nodeType":"YulVariableDeclaration","src":"1887:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1917:9:30","nodeType":"YulIdentifier","src":"1917:9:30"},{"kind":"number","nativeSrc":"1928:2:30","nodeType":"YulLiteral","src":"1928:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1913:3:30","nodeType":"YulIdentifier","src":"1913:3:30"},"nativeSrc":"1913:18:30","nodeType":"YulFunctionCall","src":"1913:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"1900:12:30","nodeType":"YulIdentifier","src":"1900:12:30"},"nativeSrc":"1900:32:30","nodeType":"YulFunctionCall","src":"1900:32:30"},"variables":[{"name":"value","nativeSrc":"1891:5:30","nodeType":"YulTypedName","src":"1891:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1966:5:30","nodeType":"YulIdentifier","src":"1966:5:30"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1941:24:30","nodeType":"YulIdentifier","src":"1941:24:30"},"nativeSrc":"1941:31:30","nodeType":"YulFunctionCall","src":"1941:31:30"},"nativeSrc":"1941:31:30","nodeType":"YulExpressionStatement","src":"1941:31:30"},{"nativeSrc":"1981:15:30","nodeType":"YulAssignment","src":"1981:15:30","value":{"name":"value","nativeSrc":"1991:5:30","nodeType":"YulIdentifier","src":"1991:5:30"},"variableNames":[{"name":"value1","nativeSrc":"1981:6:30","nodeType":"YulIdentifier","src":"1981:6:30"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"1687:315:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1732:9:30","nodeType":"YulTypedName","src":"1732:9:30","type":""},{"name":"dataEnd","nativeSrc":"1743:7:30","nodeType":"YulTypedName","src":"1743:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1755:6:30","nodeType":"YulTypedName","src":"1755:6:30","type":""},{"name":"value1","nativeSrc":"1763:6:30","nodeType":"YulTypedName","src":"1763:6:30","type":""}],"src":"1687:315:30"},{"body":{"nativeSrc":"2164:162:30","nodeType":"YulBlock","src":"2164:162:30","statements":[{"nativeSrc":"2174:26:30","nodeType":"YulAssignment","src":"2174:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2186:9:30","nodeType":"YulIdentifier","src":"2186:9:30"},{"kind":"number","nativeSrc":"2197:2:30","nodeType":"YulLiteral","src":"2197:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2182:3:30","nodeType":"YulIdentifier","src":"2182:3:30"},"nativeSrc":"2182:18:30","nodeType":"YulFunctionCall","src":"2182:18:30"},"variableNames":[{"name":"tail","nativeSrc":"2174:4:30","nodeType":"YulIdentifier","src":"2174:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2216:9:30","nodeType":"YulIdentifier","src":"2216:9:30"},{"name":"value0","nativeSrc":"2227:6:30","nodeType":"YulIdentifier","src":"2227:6:30"}],"functionName":{"name":"mstore","nativeSrc":"2209:6:30","nodeType":"YulIdentifier","src":"2209:6:30"},"nativeSrc":"2209:25:30","nodeType":"YulFunctionCall","src":"2209:25:30"},"nativeSrc":"2209:25:30","nodeType":"YulExpressionStatement","src":"2209:25:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2254:9:30","nodeType":"YulIdentifier","src":"2254:9:30"},{"kind":"number","nativeSrc":"2265:2:30","nodeType":"YulLiteral","src":"2265:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2250:3:30","nodeType":"YulIdentifier","src":"2250:3:30"},"nativeSrc":"2250:18:30","nodeType":"YulFunctionCall","src":"2250:18:30"},{"name":"value1","nativeSrc":"2270:6:30","nodeType":"YulIdentifier","src":"2270:6:30"}],"functionName":{"name":"mstore","nativeSrc":"2243:6:30","nodeType":"YulIdentifier","src":"2243:6:30"},"nativeSrc":"2243:34:30","nodeType":"YulFunctionCall","src":"2243:34:30"},"nativeSrc":"2243:34:30","nodeType":"YulExpressionStatement","src":"2243:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2297:9:30","nodeType":"YulIdentifier","src":"2297:9:30"},{"kind":"number","nativeSrc":"2308:2:30","nodeType":"YulLiteral","src":"2308:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2293:3:30","nodeType":"YulIdentifier","src":"2293:3:30"},"nativeSrc":"2293:18:30","nodeType":"YulFunctionCall","src":"2293:18:30"},{"name":"value2","nativeSrc":"2313:6:30","nodeType":"YulIdentifier","src":"2313:6:30"}],"functionName":{"name":"mstore","nativeSrc":"2286:6:30","nodeType":"YulIdentifier","src":"2286:6:30"},"nativeSrc":"2286:34:30","nodeType":"YulFunctionCall","src":"2286:34:30"},"nativeSrc":"2286:34:30","nodeType":"YulExpressionStatement","src":"2286:34:30"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"2007:319:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2117:9:30","nodeType":"YulTypedName","src":"2117:9:30","type":""},{"name":"value2","nativeSrc":"2128:6:30","nodeType":"YulTypedName","src":"2128:6:30","type":""},{"name":"value1","nativeSrc":"2136:6:30","nodeType":"YulTypedName","src":"2136:6:30","type":""},{"name":"value0","nativeSrc":"2144:6:30","nodeType":"YulTypedName","src":"2144:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2155:4:30","nodeType":"YulTypedName","src":"2155:4:30","type":""}],"src":"2007:319:30"},{"body":{"nativeSrc":"2435:279:30","nodeType":"YulBlock","src":"2435:279:30","statements":[{"body":{"nativeSrc":"2481:16:30","nodeType":"YulBlock","src":"2481:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2490:1:30","nodeType":"YulLiteral","src":"2490:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"2493:1:30","nodeType":"YulLiteral","src":"2493:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2483:6:30","nodeType":"YulIdentifier","src":"2483:6:30"},"nativeSrc":"2483:12:30","nodeType":"YulFunctionCall","src":"2483:12:30"},"nativeSrc":"2483:12:30","nodeType":"YulExpressionStatement","src":"2483:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2456:7:30","nodeType":"YulIdentifier","src":"2456:7:30"},{"name":"headStart","nativeSrc":"2465:9:30","nodeType":"YulIdentifier","src":"2465:9:30"}],"functionName":{"name":"sub","nativeSrc":"2452:3:30","nodeType":"YulIdentifier","src":"2452:3:30"},"nativeSrc":"2452:23:30","nodeType":"YulFunctionCall","src":"2452:23:30"},{"kind":"number","nativeSrc":"2477:2:30","nodeType":"YulLiteral","src":"2477:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2448:3:30","nodeType":"YulIdentifier","src":"2448:3:30"},"nativeSrc":"2448:32:30","nodeType":"YulFunctionCall","src":"2448:32:30"},"nativeSrc":"2445:52:30","nodeType":"YulIf","src":"2445:52:30"},{"nativeSrc":"2506:33:30","nodeType":"YulAssignment","src":"2506:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2529:9:30","nodeType":"YulIdentifier","src":"2529:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"2516:12:30","nodeType":"YulIdentifier","src":"2516:12:30"},"nativeSrc":"2516:23:30","nodeType":"YulFunctionCall","src":"2516:23:30"},"variableNames":[{"name":"value0","nativeSrc":"2506:6:30","nodeType":"YulIdentifier","src":"2506:6:30"}]},{"nativeSrc":"2548:45:30","nodeType":"YulVariableDeclaration","src":"2548:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2578:9:30","nodeType":"YulIdentifier","src":"2578:9:30"},{"kind":"number","nativeSrc":"2589:2:30","nodeType":"YulLiteral","src":"2589:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2574:3:30","nodeType":"YulIdentifier","src":"2574:3:30"},"nativeSrc":"2574:18:30","nodeType":"YulFunctionCall","src":"2574:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"2561:12:30","nodeType":"YulIdentifier","src":"2561:12:30"},"nativeSrc":"2561:32:30","nodeType":"YulFunctionCall","src":"2561:32:30"},"variables":[{"name":"value","nativeSrc":"2552:5:30","nodeType":"YulTypedName","src":"2552:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2627:5:30","nodeType":"YulIdentifier","src":"2627:5:30"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2602:24:30","nodeType":"YulIdentifier","src":"2602:24:30"},"nativeSrc":"2602:31:30","nodeType":"YulFunctionCall","src":"2602:31:30"},"nativeSrc":"2602:31:30","nodeType":"YulExpressionStatement","src":"2602:31:30"},{"nativeSrc":"2642:15:30","nodeType":"YulAssignment","src":"2642:15:30","value":{"name":"value","nativeSrc":"2652:5:30","nodeType":"YulIdentifier","src":"2652:5:30"},"variableNames":[{"name":"value1","nativeSrc":"2642:6:30","nodeType":"YulIdentifier","src":"2642:6:30"}]},{"nativeSrc":"2666:42:30","nodeType":"YulAssignment","src":"2666:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2693:9:30","nodeType":"YulIdentifier","src":"2693:9:30"},{"kind":"number","nativeSrc":"2704:2:30","nodeType":"YulLiteral","src":"2704:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2689:3:30","nodeType":"YulIdentifier","src":"2689:3:30"},"nativeSrc":"2689:18:30","nodeType":"YulFunctionCall","src":"2689:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"2676:12:30","nodeType":"YulIdentifier","src":"2676:12:30"},"nativeSrc":"2676:32:30","nodeType":"YulFunctionCall","src":"2676:32:30"},"variableNames":[{"name":"value2","nativeSrc":"2666:6:30","nodeType":"YulIdentifier","src":"2666:6:30"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256","nativeSrc":"2331:383:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2385:9:30","nodeType":"YulTypedName","src":"2385:9:30","type":""},{"name":"dataEnd","nativeSrc":"2396:7:30","nodeType":"YulTypedName","src":"2396:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2408:6:30","nodeType":"YulTypedName","src":"2408:6:30","type":""},{"name":"value1","nativeSrc":"2416:6:30","nodeType":"YulTypedName","src":"2416:6:30","type":""},{"name":"value2","nativeSrc":"2424:6:30","nodeType":"YulTypedName","src":"2424:6:30","type":""}],"src":"2331:383:30"},{"body":{"nativeSrc":"2855:331:30","nodeType":"YulBlock","src":"2855:331:30","statements":[{"body":{"nativeSrc":"2902:16:30","nodeType":"YulBlock","src":"2902:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2911:1:30","nodeType":"YulLiteral","src":"2911:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"2914:1:30","nodeType":"YulLiteral","src":"2914:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2904:6:30","nodeType":"YulIdentifier","src":"2904:6:30"},"nativeSrc":"2904:12:30","nodeType":"YulFunctionCall","src":"2904:12:30"},"nativeSrc":"2904:12:30","nodeType":"YulExpressionStatement","src":"2904:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2876:7:30","nodeType":"YulIdentifier","src":"2876:7:30"},{"name":"headStart","nativeSrc":"2885:9:30","nodeType":"YulIdentifier","src":"2885:9:30"}],"functionName":{"name":"sub","nativeSrc":"2872:3:30","nodeType":"YulIdentifier","src":"2872:3:30"},"nativeSrc":"2872:23:30","nodeType":"YulFunctionCall","src":"2872:23:30"},{"kind":"number","nativeSrc":"2897:3:30","nodeType":"YulLiteral","src":"2897:3:30","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"2868:3:30","nodeType":"YulIdentifier","src":"2868:3:30"},"nativeSrc":"2868:33:30","nodeType":"YulFunctionCall","src":"2868:33:30"},"nativeSrc":"2865:53:30","nodeType":"YulIf","src":"2865:53:30"},{"nativeSrc":"2927:36:30","nodeType":"YulVariableDeclaration","src":"2927:36:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2953:9:30","nodeType":"YulIdentifier","src":"2953:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"2940:12:30","nodeType":"YulIdentifier","src":"2940:12:30"},"nativeSrc":"2940:23:30","nodeType":"YulFunctionCall","src":"2940:23:30"},"variables":[{"name":"value","nativeSrc":"2931:5:30","nodeType":"YulTypedName","src":"2931:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2997:5:30","nodeType":"YulIdentifier","src":"2997:5:30"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2972:24:30","nodeType":"YulIdentifier","src":"2972:24:30"},"nativeSrc":"2972:31:30","nodeType":"YulFunctionCall","src":"2972:31:30"},"nativeSrc":"2972:31:30","nodeType":"YulExpressionStatement","src":"2972:31:30"},{"nativeSrc":"3012:15:30","nodeType":"YulAssignment","src":"3012:15:30","value":{"name":"value","nativeSrc":"3022:5:30","nodeType":"YulIdentifier","src":"3022:5:30"},"variableNames":[{"name":"value0","nativeSrc":"3012:6:30","nodeType":"YulIdentifier","src":"3012:6:30"}]},{"nativeSrc":"3036:42:30","nodeType":"YulAssignment","src":"3036:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3063:9:30","nodeType":"YulIdentifier","src":"3063:9:30"},{"kind":"number","nativeSrc":"3074:2:30","nodeType":"YulLiteral","src":"3074:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3059:3:30","nodeType":"YulIdentifier","src":"3059:3:30"},"nativeSrc":"3059:18:30","nodeType":"YulFunctionCall","src":"3059:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"3046:12:30","nodeType":"YulIdentifier","src":"3046:12:30"},"nativeSrc":"3046:32:30","nodeType":"YulFunctionCall","src":"3046:32:30"},"variableNames":[{"name":"value1","nativeSrc":"3036:6:30","nodeType":"YulIdentifier","src":"3036:6:30"}]},{"nativeSrc":"3087:42:30","nodeType":"YulAssignment","src":"3087:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3114:9:30","nodeType":"YulIdentifier","src":"3114:9:30"},{"kind":"number","nativeSrc":"3125:2:30","nodeType":"YulLiteral","src":"3125:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3110:3:30","nodeType":"YulIdentifier","src":"3110:3:30"},"nativeSrc":"3110:18:30","nodeType":"YulFunctionCall","src":"3110:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"3097:12:30","nodeType":"YulIdentifier","src":"3097:12:30"},"nativeSrc":"3097:32:30","nodeType":"YulFunctionCall","src":"3097:32:30"},"variableNames":[{"name":"value2","nativeSrc":"3087:6:30","nodeType":"YulIdentifier","src":"3087:6:30"}]},{"nativeSrc":"3138:42:30","nodeType":"YulAssignment","src":"3138:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3165:9:30","nodeType":"YulIdentifier","src":"3165:9:30"},{"kind":"number","nativeSrc":"3176:2:30","nodeType":"YulLiteral","src":"3176:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3161:3:30","nodeType":"YulIdentifier","src":"3161:3:30"},"nativeSrc":"3161:18:30","nodeType":"YulFunctionCall","src":"3161:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"3148:12:30","nodeType":"YulIdentifier","src":"3148:12:30"},"nativeSrc":"3148:32:30","nodeType":"YulFunctionCall","src":"3148:32:30"},"variableNames":[{"name":"value3","nativeSrc":"3138:6:30","nodeType":"YulIdentifier","src":"3138:6:30"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$2298t_uint256t_uint256t_uint256","nativeSrc":"2719:467:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2797:9:30","nodeType":"YulTypedName","src":"2797:9:30","type":""},{"name":"dataEnd","nativeSrc":"2808:7:30","nodeType":"YulTypedName","src":"2808:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2820:6:30","nodeType":"YulTypedName","src":"2820:6:30","type":""},{"name":"value1","nativeSrc":"2828:6:30","nodeType":"YulTypedName","src":"2828:6:30","type":""},{"name":"value2","nativeSrc":"2836:6:30","nodeType":"YulTypedName","src":"2836:6:30","type":""},{"name":"value3","nativeSrc":"2844:6:30","nodeType":"YulTypedName","src":"2844:6:30","type":""}],"src":"2719:467:30"},{"body":{"nativeSrc":"3223:95:30","nodeType":"YulBlock","src":"3223:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3240:1:30","nodeType":"YulLiteral","src":"3240:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3247:3:30","nodeType":"YulLiteral","src":"3247:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"3252:10:30","nodeType":"YulLiteral","src":"3252:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3243:3:30","nodeType":"YulIdentifier","src":"3243:3:30"},"nativeSrc":"3243:20:30","nodeType":"YulFunctionCall","src":"3243:20:30"}],"functionName":{"name":"mstore","nativeSrc":"3233:6:30","nodeType":"YulIdentifier","src":"3233:6:30"},"nativeSrc":"3233:31:30","nodeType":"YulFunctionCall","src":"3233:31:30"},"nativeSrc":"3233:31:30","nodeType":"YulExpressionStatement","src":"3233:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3280:1:30","nodeType":"YulLiteral","src":"3280:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"3283:4:30","nodeType":"YulLiteral","src":"3283:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3273:6:30","nodeType":"YulIdentifier","src":"3273:6:30"},"nativeSrc":"3273:15:30","nodeType":"YulFunctionCall","src":"3273:15:30"},"nativeSrc":"3273:15:30","nodeType":"YulExpressionStatement","src":"3273:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3304:1:30","nodeType":"YulLiteral","src":"3304:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3307:4:30","nodeType":"YulLiteral","src":"3307:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3297:6:30","nodeType":"YulIdentifier","src":"3297:6:30"},"nativeSrc":"3297:15:30","nodeType":"YulFunctionCall","src":"3297:15:30"},"nativeSrc":"3297:15:30","nodeType":"YulExpressionStatement","src":"3297:15:30"}]},"name":"panic_error_0x41","nativeSrc":"3191:127:30","nodeType":"YulFunctionDefinition","src":"3191:127:30"},{"body":{"nativeSrc":"3419:960:30","nodeType":"YulBlock","src":"3419:960:30","statements":[{"body":{"nativeSrc":"3465:16:30","nodeType":"YulBlock","src":"3465:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3474:1:30","nodeType":"YulLiteral","src":"3474:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3477:1:30","nodeType":"YulLiteral","src":"3477:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3467:6:30","nodeType":"YulIdentifier","src":"3467:6:30"},"nativeSrc":"3467:12:30","nodeType":"YulFunctionCall","src":"3467:12:30"},"nativeSrc":"3467:12:30","nodeType":"YulExpressionStatement","src":"3467:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3440:7:30","nodeType":"YulIdentifier","src":"3440:7:30"},{"name":"headStart","nativeSrc":"3449:9:30","nodeType":"YulIdentifier","src":"3449:9:30"}],"functionName":{"name":"sub","nativeSrc":"3436:3:30","nodeType":"YulIdentifier","src":"3436:3:30"},"nativeSrc":"3436:23:30","nodeType":"YulFunctionCall","src":"3436:23:30"},{"kind":"number","nativeSrc":"3461:2:30","nodeType":"YulLiteral","src":"3461:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3432:3:30","nodeType":"YulIdentifier","src":"3432:3:30"},"nativeSrc":"3432:32:30","nodeType":"YulFunctionCall","src":"3432:32:30"},"nativeSrc":"3429:52:30","nodeType":"YulIf","src":"3429:52:30"},{"nativeSrc":"3490:36:30","nodeType":"YulVariableDeclaration","src":"3490:36:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3516:9:30","nodeType":"YulIdentifier","src":"3516:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"3503:12:30","nodeType":"YulIdentifier","src":"3503:12:30"},"nativeSrc":"3503:23:30","nodeType":"YulFunctionCall","src":"3503:23:30"},"variables":[{"name":"value","nativeSrc":"3494:5:30","nodeType":"YulTypedName","src":"3494:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3560:5:30","nodeType":"YulIdentifier","src":"3560:5:30"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3535:24:30","nodeType":"YulIdentifier","src":"3535:24:30"},"nativeSrc":"3535:31:30","nodeType":"YulFunctionCall","src":"3535:31:30"},"nativeSrc":"3535:31:30","nodeType":"YulExpressionStatement","src":"3535:31:30"},{"nativeSrc":"3575:15:30","nodeType":"YulAssignment","src":"3575:15:30","value":{"name":"value","nativeSrc":"3585:5:30","nodeType":"YulIdentifier","src":"3585:5:30"},"variableNames":[{"name":"value0","nativeSrc":"3575:6:30","nodeType":"YulIdentifier","src":"3575:6:30"}]},{"nativeSrc":"3599:46:30","nodeType":"YulVariableDeclaration","src":"3599:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3630:9:30","nodeType":"YulIdentifier","src":"3630:9:30"},{"kind":"number","nativeSrc":"3641:2:30","nodeType":"YulLiteral","src":"3641:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3626:3:30","nodeType":"YulIdentifier","src":"3626:3:30"},"nativeSrc":"3626:18:30","nodeType":"YulFunctionCall","src":"3626:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"3613:12:30","nodeType":"YulIdentifier","src":"3613:12:30"},"nativeSrc":"3613:32:30","nodeType":"YulFunctionCall","src":"3613:32:30"},"variables":[{"name":"offset","nativeSrc":"3603:6:30","nodeType":"YulTypedName","src":"3603:6:30","type":""}]},{"nativeSrc":"3654:28:30","nodeType":"YulVariableDeclaration","src":"3654:28:30","value":{"kind":"number","nativeSrc":"3664:18:30","nodeType":"YulLiteral","src":"3664:18:30","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"3658:2:30","nodeType":"YulTypedName","src":"3658:2:30","type":""}]},{"body":{"nativeSrc":"3709:16:30","nodeType":"YulBlock","src":"3709:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3718:1:30","nodeType":"YulLiteral","src":"3718:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3721:1:30","nodeType":"YulLiteral","src":"3721:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3711:6:30","nodeType":"YulIdentifier","src":"3711:6:30"},"nativeSrc":"3711:12:30","nodeType":"YulFunctionCall","src":"3711:12:30"},"nativeSrc":"3711:12:30","nodeType":"YulExpressionStatement","src":"3711:12:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3697:6:30","nodeType":"YulIdentifier","src":"3697:6:30"},{"name":"_1","nativeSrc":"3705:2:30","nodeType":"YulIdentifier","src":"3705:2:30"}],"functionName":{"name":"gt","nativeSrc":"3694:2:30","nodeType":"YulIdentifier","src":"3694:2:30"},"nativeSrc":"3694:14:30","nodeType":"YulFunctionCall","src":"3694:14:30"},"nativeSrc":"3691:34:30","nodeType":"YulIf","src":"3691:34:30"},{"nativeSrc":"3734:32:30","nodeType":"YulVariableDeclaration","src":"3734:32:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3748:9:30","nodeType":"YulIdentifier","src":"3748:9:30"},{"name":"offset","nativeSrc":"3759:6:30","nodeType":"YulIdentifier","src":"3759:6:30"}],"functionName":{"name":"add","nativeSrc":"3744:3:30","nodeType":"YulIdentifier","src":"3744:3:30"},"nativeSrc":"3744:22:30","nodeType":"YulFunctionCall","src":"3744:22:30"},"variables":[{"name":"_2","nativeSrc":"3738:2:30","nodeType":"YulTypedName","src":"3738:2:30","type":""}]},{"body":{"nativeSrc":"3814:16:30","nodeType":"YulBlock","src":"3814:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3823:1:30","nodeType":"YulLiteral","src":"3823:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3826:1:30","nodeType":"YulLiteral","src":"3826:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3816:6:30","nodeType":"YulIdentifier","src":"3816:6:30"},"nativeSrc":"3816:12:30","nodeType":"YulFunctionCall","src":"3816:12:30"},"nativeSrc":"3816:12:30","nodeType":"YulExpressionStatement","src":"3816:12:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"3793:2:30","nodeType":"YulIdentifier","src":"3793:2:30"},{"kind":"number","nativeSrc":"3797:4:30","nodeType":"YulLiteral","src":"3797:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3789:3:30","nodeType":"YulIdentifier","src":"3789:3:30"},"nativeSrc":"3789:13:30","nodeType":"YulFunctionCall","src":"3789:13:30"},{"name":"dataEnd","nativeSrc":"3804:7:30","nodeType":"YulIdentifier","src":"3804:7:30"}],"functionName":{"name":"slt","nativeSrc":"3785:3:30","nodeType":"YulIdentifier","src":"3785:3:30"},"nativeSrc":"3785:27:30","nodeType":"YulFunctionCall","src":"3785:27:30"}],"functionName":{"name":"iszero","nativeSrc":"3778:6:30","nodeType":"YulIdentifier","src":"3778:6:30"},"nativeSrc":"3778:35:30","nodeType":"YulFunctionCall","src":"3778:35:30"},"nativeSrc":"3775:55:30","nodeType":"YulIf","src":"3775:55:30"},{"nativeSrc":"3839:26:30","nodeType":"YulVariableDeclaration","src":"3839:26:30","value":{"arguments":[{"name":"_2","nativeSrc":"3862:2:30","nodeType":"YulIdentifier","src":"3862:2:30"}],"functionName":{"name":"calldataload","nativeSrc":"3849:12:30","nodeType":"YulIdentifier","src":"3849:12:30"},"nativeSrc":"3849:16:30","nodeType":"YulFunctionCall","src":"3849:16:30"},"variables":[{"name":"_3","nativeSrc":"3843:2:30","nodeType":"YulTypedName","src":"3843:2:30","type":""}]},{"body":{"nativeSrc":"3888:22:30","nodeType":"YulBlock","src":"3888:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3890:16:30","nodeType":"YulIdentifier","src":"3890:16:30"},"nativeSrc":"3890:18:30","nodeType":"YulFunctionCall","src":"3890:18:30"},"nativeSrc":"3890:18:30","nodeType":"YulExpressionStatement","src":"3890:18:30"}]},"condition":{"arguments":[{"name":"_3","nativeSrc":"3880:2:30","nodeType":"YulIdentifier","src":"3880:2:30"},{"name":"_1","nativeSrc":"3884:2:30","nodeType":"YulIdentifier","src":"3884:2:30"}],"functionName":{"name":"gt","nativeSrc":"3877:2:30","nodeType":"YulIdentifier","src":"3877:2:30"},"nativeSrc":"3877:10:30","nodeType":"YulFunctionCall","src":"3877:10:30"},"nativeSrc":"3874:36:30","nodeType":"YulIf","src":"3874:36:30"},{"nativeSrc":"3919:17:30","nodeType":"YulVariableDeclaration","src":"3919:17:30","value":{"arguments":[{"kind":"number","nativeSrc":"3933:2:30","nodeType":"YulLiteral","src":"3933:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3929:3:30","nodeType":"YulIdentifier","src":"3929:3:30"},"nativeSrc":"3929:7:30","nodeType":"YulFunctionCall","src":"3929:7:30"},"variables":[{"name":"_4","nativeSrc":"3923:2:30","nodeType":"YulTypedName","src":"3923:2:30","type":""}]},{"nativeSrc":"3945:23:30","nodeType":"YulVariableDeclaration","src":"3945:23:30","value":{"arguments":[{"kind":"number","nativeSrc":"3965:2:30","nodeType":"YulLiteral","src":"3965:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3959:5:30","nodeType":"YulIdentifier","src":"3959:5:30"},"nativeSrc":"3959:9:30","nodeType":"YulFunctionCall","src":"3959:9:30"},"variables":[{"name":"memPtr","nativeSrc":"3949:6:30","nodeType":"YulTypedName","src":"3949:6:30","type":""}]},{"nativeSrc":"3977:71:30","nodeType":"YulVariableDeclaration","src":"3977:71:30","value":{"arguments":[{"name":"memPtr","nativeSrc":"3999:6:30","nodeType":"YulIdentifier","src":"3999:6:30"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"4023:2:30","nodeType":"YulIdentifier","src":"4023:2:30"},{"kind":"number","nativeSrc":"4027:4:30","nodeType":"YulLiteral","src":"4027:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4019:3:30","nodeType":"YulIdentifier","src":"4019:3:30"},"nativeSrc":"4019:13:30","nodeType":"YulFunctionCall","src":"4019:13:30"},{"name":"_4","nativeSrc":"4034:2:30","nodeType":"YulIdentifier","src":"4034:2:30"}],"functionName":{"name":"and","nativeSrc":"4015:3:30","nodeType":"YulIdentifier","src":"4015:3:30"},"nativeSrc":"4015:22:30","nodeType":"YulFunctionCall","src":"4015:22:30"},{"kind":"number","nativeSrc":"4039:2:30","nodeType":"YulLiteral","src":"4039:2:30","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"4011:3:30","nodeType":"YulIdentifier","src":"4011:3:30"},"nativeSrc":"4011:31:30","nodeType":"YulFunctionCall","src":"4011:31:30"},{"name":"_4","nativeSrc":"4044:2:30","nodeType":"YulIdentifier","src":"4044:2:30"}],"functionName":{"name":"and","nativeSrc":"4007:3:30","nodeType":"YulIdentifier","src":"4007:3:30"},"nativeSrc":"4007:40:30","nodeType":"YulFunctionCall","src":"4007:40:30"}],"functionName":{"name":"add","nativeSrc":"3995:3:30","nodeType":"YulIdentifier","src":"3995:3:30"},"nativeSrc":"3995:53:30","nodeType":"YulFunctionCall","src":"3995:53:30"},"variables":[{"name":"newFreePtr","nativeSrc":"3981:10:30","nodeType":"YulTypedName","src":"3981:10:30","type":""}]},{"body":{"nativeSrc":"4107:22:30","nodeType":"YulBlock","src":"4107:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4109:16:30","nodeType":"YulIdentifier","src":"4109:16:30"},"nativeSrc":"4109:18:30","nodeType":"YulFunctionCall","src":"4109:18:30"},"nativeSrc":"4109:18:30","nodeType":"YulExpressionStatement","src":"4109:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"4066:10:30","nodeType":"YulIdentifier","src":"4066:10:30"},{"name":"_1","nativeSrc":"4078:2:30","nodeType":"YulIdentifier","src":"4078:2:30"}],"functionName":{"name":"gt","nativeSrc":"4063:2:30","nodeType":"YulIdentifier","src":"4063:2:30"},"nativeSrc":"4063:18:30","nodeType":"YulFunctionCall","src":"4063:18:30"},{"arguments":[{"name":"newFreePtr","nativeSrc":"4086:10:30","nodeType":"YulIdentifier","src":"4086:10:30"},{"name":"memPtr","nativeSrc":"4098:6:30","nodeType":"YulIdentifier","src":"4098:6:30"}],"functionName":{"name":"lt","nativeSrc":"4083:2:30","nodeType":"YulIdentifier","src":"4083:2:30"},"nativeSrc":"4083:22:30","nodeType":"YulFunctionCall","src":"4083:22:30"}],"functionName":{"name":"or","nativeSrc":"4060:2:30","nodeType":"YulIdentifier","src":"4060:2:30"},"nativeSrc":"4060:46:30","nodeType":"YulFunctionCall","src":"4060:46:30"},"nativeSrc":"4057:72:30","nodeType":"YulIf","src":"4057:72:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4145:2:30","nodeType":"YulLiteral","src":"4145:2:30","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4149:10:30","nodeType":"YulIdentifier","src":"4149:10:30"}],"functionName":{"name":"mstore","nativeSrc":"4138:6:30","nodeType":"YulIdentifier","src":"4138:6:30"},"nativeSrc":"4138:22:30","nodeType":"YulFunctionCall","src":"4138:22:30"},"nativeSrc":"4138:22:30","nodeType":"YulExpressionStatement","src":"4138:22:30"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"4176:6:30","nodeType":"YulIdentifier","src":"4176:6:30"},{"name":"_3","nativeSrc":"4184:2:30","nodeType":"YulIdentifier","src":"4184:2:30"}],"functionName":{"name":"mstore","nativeSrc":"4169:6:30","nodeType":"YulIdentifier","src":"4169:6:30"},"nativeSrc":"4169:18:30","nodeType":"YulFunctionCall","src":"4169:18:30"},"nativeSrc":"4169:18:30","nodeType":"YulExpressionStatement","src":"4169:18:30"},{"body":{"nativeSrc":"4233:16:30","nodeType":"YulBlock","src":"4233:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4242:1:30","nodeType":"YulLiteral","src":"4242:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"4245:1:30","nodeType":"YulLiteral","src":"4245:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4235:6:30","nodeType":"YulIdentifier","src":"4235:6:30"},"nativeSrc":"4235:12:30","nodeType":"YulFunctionCall","src":"4235:12:30"},"nativeSrc":"4235:12:30","nodeType":"YulExpressionStatement","src":"4235:12:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"4210:2:30","nodeType":"YulIdentifier","src":"4210:2:30"},{"name":"_3","nativeSrc":"4214:2:30","nodeType":"YulIdentifier","src":"4214:2:30"}],"functionName":{"name":"add","nativeSrc":"4206:3:30","nodeType":"YulIdentifier","src":"4206:3:30"},"nativeSrc":"4206:11:30","nodeType":"YulFunctionCall","src":"4206:11:30"},{"kind":"number","nativeSrc":"4219:2:30","nodeType":"YulLiteral","src":"4219:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4202:3:30","nodeType":"YulIdentifier","src":"4202:3:30"},"nativeSrc":"4202:20:30","nodeType":"YulFunctionCall","src":"4202:20:30"},{"name":"dataEnd","nativeSrc":"4224:7:30","nodeType":"YulIdentifier","src":"4224:7:30"}],"functionName":{"name":"gt","nativeSrc":"4199:2:30","nodeType":"YulIdentifier","src":"4199:2:30"},"nativeSrc":"4199:33:30","nodeType":"YulFunctionCall","src":"4199:33:30"},"nativeSrc":"4196:53:30","nodeType":"YulIf","src":"4196:53:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4275:6:30","nodeType":"YulIdentifier","src":"4275:6:30"},{"kind":"number","nativeSrc":"4283:2:30","nodeType":"YulLiteral","src":"4283:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4271:3:30","nodeType":"YulIdentifier","src":"4271:3:30"},"nativeSrc":"4271:15:30","nodeType":"YulFunctionCall","src":"4271:15:30"},{"arguments":[{"name":"_2","nativeSrc":"4292:2:30","nodeType":"YulIdentifier","src":"4292:2:30"},{"kind":"number","nativeSrc":"4296:2:30","nodeType":"YulLiteral","src":"4296:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4288:3:30","nodeType":"YulIdentifier","src":"4288:3:30"},"nativeSrc":"4288:11:30","nodeType":"YulFunctionCall","src":"4288:11:30"},{"name":"_3","nativeSrc":"4301:2:30","nodeType":"YulIdentifier","src":"4301:2:30"}],"functionName":{"name":"calldatacopy","nativeSrc":"4258:12:30","nodeType":"YulIdentifier","src":"4258:12:30"},"nativeSrc":"4258:46:30","nodeType":"YulFunctionCall","src":"4258:46:30"},"nativeSrc":"4258:46:30","nodeType":"YulExpressionStatement","src":"4258:46:30"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4328:6:30","nodeType":"YulIdentifier","src":"4328:6:30"},{"name":"_3","nativeSrc":"4336:2:30","nodeType":"YulIdentifier","src":"4336:2:30"}],"functionName":{"name":"add","nativeSrc":"4324:3:30","nodeType":"YulIdentifier","src":"4324:3:30"},"nativeSrc":"4324:15:30","nodeType":"YulFunctionCall","src":"4324:15:30"},{"kind":"number","nativeSrc":"4341:2:30","nodeType":"YulLiteral","src":"4341:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4320:3:30","nodeType":"YulIdentifier","src":"4320:3:30"},"nativeSrc":"4320:24:30","nodeType":"YulFunctionCall","src":"4320:24:30"},{"kind":"number","nativeSrc":"4346:1:30","nodeType":"YulLiteral","src":"4346:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4313:6:30","nodeType":"YulIdentifier","src":"4313:6:30"},"nativeSrc":"4313:35:30","nodeType":"YulFunctionCall","src":"4313:35:30"},"nativeSrc":"4313:35:30","nodeType":"YulExpressionStatement","src":"4313:35:30"},{"nativeSrc":"4357:16:30","nodeType":"YulAssignment","src":"4357:16:30","value":{"name":"memPtr","nativeSrc":"4367:6:30","nodeType":"YulIdentifier","src":"4367:6:30"},"variableNames":[{"name":"value1","nativeSrc":"4357:6:30","nodeType":"YulIdentifier","src":"4357:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"3323:1056:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3377:9:30","nodeType":"YulTypedName","src":"3377:9:30","type":""},{"name":"dataEnd","nativeSrc":"3388:7:30","nodeType":"YulTypedName","src":"3388:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3400:6:30","nodeType":"YulTypedName","src":"3400:6:30","type":""},{"name":"value1","nativeSrc":"3408:6:30","nodeType":"YulTypedName","src":"3408:6:30","type":""}],"src":"3323:1056:30"},{"body":{"nativeSrc":"4471:161:30","nodeType":"YulBlock","src":"4471:161:30","statements":[{"body":{"nativeSrc":"4517:16:30","nodeType":"YulBlock","src":"4517:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4526:1:30","nodeType":"YulLiteral","src":"4526:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"4529:1:30","nodeType":"YulLiteral","src":"4529:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4519:6:30","nodeType":"YulIdentifier","src":"4519:6:30"},"nativeSrc":"4519:12:30","nodeType":"YulFunctionCall","src":"4519:12:30"},"nativeSrc":"4519:12:30","nodeType":"YulExpressionStatement","src":"4519:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4492:7:30","nodeType":"YulIdentifier","src":"4492:7:30"},{"name":"headStart","nativeSrc":"4501:9:30","nodeType":"YulIdentifier","src":"4501:9:30"}],"functionName":{"name":"sub","nativeSrc":"4488:3:30","nodeType":"YulIdentifier","src":"4488:3:30"},"nativeSrc":"4488:23:30","nodeType":"YulFunctionCall","src":"4488:23:30"},{"kind":"number","nativeSrc":"4513:2:30","nodeType":"YulLiteral","src":"4513:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4484:3:30","nodeType":"YulIdentifier","src":"4484:3:30"},"nativeSrc":"4484:32:30","nodeType":"YulFunctionCall","src":"4484:32:30"},"nativeSrc":"4481:52:30","nodeType":"YulIf","src":"4481:52:30"},{"nativeSrc":"4542:33:30","nodeType":"YulAssignment","src":"4542:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"4565:9:30","nodeType":"YulIdentifier","src":"4565:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"4552:12:30","nodeType":"YulIdentifier","src":"4552:12:30"},"nativeSrc":"4552:23:30","nodeType":"YulFunctionCall","src":"4552:23:30"},"variableNames":[{"name":"value0","nativeSrc":"4542:6:30","nodeType":"YulIdentifier","src":"4542:6:30"}]},{"nativeSrc":"4584:42:30","nodeType":"YulAssignment","src":"4584:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4611:9:30","nodeType":"YulIdentifier","src":"4611:9:30"},{"kind":"number","nativeSrc":"4622:2:30","nodeType":"YulLiteral","src":"4622:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4607:3:30","nodeType":"YulIdentifier","src":"4607:3:30"},"nativeSrc":"4607:18:30","nodeType":"YulFunctionCall","src":"4607:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"4594:12:30","nodeType":"YulIdentifier","src":"4594:12:30"},"nativeSrc":"4594:32:30","nodeType":"YulFunctionCall","src":"4594:32:30"},"variableNames":[{"name":"value1","nativeSrc":"4584:6:30","nodeType":"YulIdentifier","src":"4584:6:30"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nativeSrc":"4384:248:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4429:9:30","nodeType":"YulTypedName","src":"4429:9:30","type":""},{"name":"dataEnd","nativeSrc":"4440:7:30","nodeType":"YulTypedName","src":"4440:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4452:6:30","nodeType":"YulTypedName","src":"4452:6:30","type":""},{"name":"value1","nativeSrc":"4460:6:30","nodeType":"YulTypedName","src":"4460:6:30","type":""}],"src":"4384:248:30"},{"body":{"nativeSrc":"4753:102:30","nodeType":"YulBlock","src":"4753:102:30","statements":[{"nativeSrc":"4763:26:30","nodeType":"YulAssignment","src":"4763:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"4775:9:30","nodeType":"YulIdentifier","src":"4775:9:30"},{"kind":"number","nativeSrc":"4786:2:30","nodeType":"YulLiteral","src":"4786:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4771:3:30","nodeType":"YulIdentifier","src":"4771:3:30"},"nativeSrc":"4771:18:30","nodeType":"YulFunctionCall","src":"4771:18:30"},"variableNames":[{"name":"tail","nativeSrc":"4763:4:30","nodeType":"YulIdentifier","src":"4763:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4805:9:30","nodeType":"YulIdentifier","src":"4805:9:30"},{"arguments":[{"name":"value0","nativeSrc":"4820:6:30","nodeType":"YulIdentifier","src":"4820:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4836:3:30","nodeType":"YulLiteral","src":"4836:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"4841:1:30","nodeType":"YulLiteral","src":"4841:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4832:3:30","nodeType":"YulIdentifier","src":"4832:3:30"},"nativeSrc":"4832:11:30","nodeType":"YulFunctionCall","src":"4832:11:30"},{"kind":"number","nativeSrc":"4845:1:30","nodeType":"YulLiteral","src":"4845:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4828:3:30","nodeType":"YulIdentifier","src":"4828:3:30"},"nativeSrc":"4828:19:30","nodeType":"YulFunctionCall","src":"4828:19:30"}],"functionName":{"name":"and","nativeSrc":"4816:3:30","nodeType":"YulIdentifier","src":"4816:3:30"},"nativeSrc":"4816:32:30","nodeType":"YulFunctionCall","src":"4816:32:30"}],"functionName":{"name":"mstore","nativeSrc":"4798:6:30","nodeType":"YulIdentifier","src":"4798:6:30"},"nativeSrc":"4798:51:30","nodeType":"YulFunctionCall","src":"4798:51:30"},"nativeSrc":"4798:51:30","nodeType":"YulExpressionStatement","src":"4798:51:30"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$2298__to_t_address__fromStack_reversed","nativeSrc":"4637:218:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4722:9:30","nodeType":"YulTypedName","src":"4722:9:30","type":""},{"name":"value0","nativeSrc":"4733:6:30","nodeType":"YulTypedName","src":"4733:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4744:4:30","nodeType":"YulTypedName","src":"4744:4:30","type":""}],"src":"4637:218:30"},{"body":{"nativeSrc":"4926:184:30","nodeType":"YulBlock","src":"4926:184:30","statements":[{"nativeSrc":"4936:10:30","nodeType":"YulVariableDeclaration","src":"4936:10:30","value":{"kind":"number","nativeSrc":"4945:1:30","nodeType":"YulLiteral","src":"4945:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4940:1:30","nodeType":"YulTypedName","src":"4940:1:30","type":""}]},{"body":{"nativeSrc":"5005:63:30","nodeType":"YulBlock","src":"5005:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"5030:3:30","nodeType":"YulIdentifier","src":"5030:3:30"},{"name":"i","nativeSrc":"5035:1:30","nodeType":"YulIdentifier","src":"5035:1:30"}],"functionName":{"name":"add","nativeSrc":"5026:3:30","nodeType":"YulIdentifier","src":"5026:3:30"},"nativeSrc":"5026:11:30","nodeType":"YulFunctionCall","src":"5026:11:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5049:3:30","nodeType":"YulIdentifier","src":"5049:3:30"},{"name":"i","nativeSrc":"5054:1:30","nodeType":"YulIdentifier","src":"5054:1:30"}],"functionName":{"name":"add","nativeSrc":"5045:3:30","nodeType":"YulIdentifier","src":"5045:3:30"},"nativeSrc":"5045:11:30","nodeType":"YulFunctionCall","src":"5045:11:30"}],"functionName":{"name":"mload","nativeSrc":"5039:5:30","nodeType":"YulIdentifier","src":"5039:5:30"},"nativeSrc":"5039:18:30","nodeType":"YulFunctionCall","src":"5039:18:30"}],"functionName":{"name":"mstore","nativeSrc":"5019:6:30","nodeType":"YulIdentifier","src":"5019:6:30"},"nativeSrc":"5019:39:30","nodeType":"YulFunctionCall","src":"5019:39:30"},"nativeSrc":"5019:39:30","nodeType":"YulExpressionStatement","src":"5019:39:30"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4966:1:30","nodeType":"YulIdentifier","src":"4966:1:30"},{"name":"length","nativeSrc":"4969:6:30","nodeType":"YulIdentifier","src":"4969:6:30"}],"functionName":{"name":"lt","nativeSrc":"4963:2:30","nodeType":"YulIdentifier","src":"4963:2:30"},"nativeSrc":"4963:13:30","nodeType":"YulFunctionCall","src":"4963:13:30"},"nativeSrc":"4955:113:30","nodeType":"YulForLoop","post":{"nativeSrc":"4977:19:30","nodeType":"YulBlock","src":"4977:19:30","statements":[{"nativeSrc":"4979:15:30","nodeType":"YulAssignment","src":"4979:15:30","value":{"arguments":[{"name":"i","nativeSrc":"4988:1:30","nodeType":"YulIdentifier","src":"4988:1:30"},{"kind":"number","nativeSrc":"4991:2:30","nodeType":"YulLiteral","src":"4991:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4984:3:30","nodeType":"YulIdentifier","src":"4984:3:30"},"nativeSrc":"4984:10:30","nodeType":"YulFunctionCall","src":"4984:10:30"},"variableNames":[{"name":"i","nativeSrc":"4979:1:30","nodeType":"YulIdentifier","src":"4979:1:30"}]}]},"pre":{"nativeSrc":"4959:3:30","nodeType":"YulBlock","src":"4959:3:30","statements":[]},"src":"4955:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"5088:3:30","nodeType":"YulIdentifier","src":"5088:3:30"},{"name":"length","nativeSrc":"5093:6:30","nodeType":"YulIdentifier","src":"5093:6:30"}],"functionName":{"name":"add","nativeSrc":"5084:3:30","nodeType":"YulIdentifier","src":"5084:3:30"},"nativeSrc":"5084:16:30","nodeType":"YulFunctionCall","src":"5084:16:30"},{"kind":"number","nativeSrc":"5102:1:30","nodeType":"YulLiteral","src":"5102:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"5077:6:30","nodeType":"YulIdentifier","src":"5077:6:30"},"nativeSrc":"5077:27:30","nodeType":"YulFunctionCall","src":"5077:27:30"},"nativeSrc":"5077:27:30","nodeType":"YulExpressionStatement","src":"5077:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4860:250:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4904:3:30","nodeType":"YulTypedName","src":"4904:3:30","type":""},{"name":"dst","nativeSrc":"4909:3:30","nodeType":"YulTypedName","src":"4909:3:30","type":""},{"name":"length","nativeSrc":"4914:6:30","nodeType":"YulTypedName","src":"4914:6:30","type":""}],"src":"4860:250:30"},{"body":{"nativeSrc":"5236:275:30","nodeType":"YulBlock","src":"5236:275:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5253:9:30","nodeType":"YulIdentifier","src":"5253:9:30"},{"kind":"number","nativeSrc":"5264:2:30","nodeType":"YulLiteral","src":"5264:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5246:6:30","nodeType":"YulIdentifier","src":"5246:6:30"},"nativeSrc":"5246:21:30","nodeType":"YulFunctionCall","src":"5246:21:30"},"nativeSrc":"5246:21:30","nodeType":"YulExpressionStatement","src":"5246:21:30"},{"nativeSrc":"5276:27:30","nodeType":"YulVariableDeclaration","src":"5276:27:30","value":{"arguments":[{"name":"value0","nativeSrc":"5296:6:30","nodeType":"YulIdentifier","src":"5296:6:30"}],"functionName":{"name":"mload","nativeSrc":"5290:5:30","nodeType":"YulIdentifier","src":"5290:5:30"},"nativeSrc":"5290:13:30","nodeType":"YulFunctionCall","src":"5290:13:30"},"variables":[{"name":"length","nativeSrc":"5280:6:30","nodeType":"YulTypedName","src":"5280:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5323:9:30","nodeType":"YulIdentifier","src":"5323:9:30"},{"kind":"number","nativeSrc":"5334:2:30","nodeType":"YulLiteral","src":"5334:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5319:3:30","nodeType":"YulIdentifier","src":"5319:3:30"},"nativeSrc":"5319:18:30","nodeType":"YulFunctionCall","src":"5319:18:30"},{"name":"length","nativeSrc":"5339:6:30","nodeType":"YulIdentifier","src":"5339:6:30"}],"functionName":{"name":"mstore","nativeSrc":"5312:6:30","nodeType":"YulIdentifier","src":"5312:6:30"},"nativeSrc":"5312:34:30","nodeType":"YulFunctionCall","src":"5312:34:30"},"nativeSrc":"5312:34:30","nodeType":"YulExpressionStatement","src":"5312:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5394:6:30","nodeType":"YulIdentifier","src":"5394:6:30"},{"kind":"number","nativeSrc":"5402:2:30","nodeType":"YulLiteral","src":"5402:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5390:3:30","nodeType":"YulIdentifier","src":"5390:3:30"},"nativeSrc":"5390:15:30","nodeType":"YulFunctionCall","src":"5390:15:30"},{"arguments":[{"name":"headStart","nativeSrc":"5411:9:30","nodeType":"YulIdentifier","src":"5411:9:30"},{"kind":"number","nativeSrc":"5422:2:30","nodeType":"YulLiteral","src":"5422:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5407:3:30","nodeType":"YulIdentifier","src":"5407:3:30"},"nativeSrc":"5407:18:30","nodeType":"YulFunctionCall","src":"5407:18:30"},{"name":"length","nativeSrc":"5427:6:30","nodeType":"YulIdentifier","src":"5427:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"5355:34:30","nodeType":"YulIdentifier","src":"5355:34:30"},"nativeSrc":"5355:79:30","nodeType":"YulFunctionCall","src":"5355:79:30"},"nativeSrc":"5355:79:30","nodeType":"YulExpressionStatement","src":"5355:79:30"},{"nativeSrc":"5443:62:30","nodeType":"YulAssignment","src":"5443:62:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5459:9:30","nodeType":"YulIdentifier","src":"5459:9:30"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"5478:6:30","nodeType":"YulIdentifier","src":"5478:6:30"},{"kind":"number","nativeSrc":"5486:2:30","nodeType":"YulLiteral","src":"5486:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5474:3:30","nodeType":"YulIdentifier","src":"5474:3:30"},"nativeSrc":"5474:15:30","nodeType":"YulFunctionCall","src":"5474:15:30"},{"arguments":[{"kind":"number","nativeSrc":"5495:2:30","nodeType":"YulLiteral","src":"5495:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5491:3:30","nodeType":"YulIdentifier","src":"5491:3:30"},"nativeSrc":"5491:7:30","nodeType":"YulFunctionCall","src":"5491:7:30"}],"functionName":{"name":"and","nativeSrc":"5470:3:30","nodeType":"YulIdentifier","src":"5470:3:30"},"nativeSrc":"5470:29:30","nodeType":"YulFunctionCall","src":"5470:29:30"}],"functionName":{"name":"add","nativeSrc":"5455:3:30","nodeType":"YulIdentifier","src":"5455:3:30"},"nativeSrc":"5455:45:30","nodeType":"YulFunctionCall","src":"5455:45:30"},{"kind":"number","nativeSrc":"5502:2:30","nodeType":"YulLiteral","src":"5502:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5451:3:30","nodeType":"YulIdentifier","src":"5451:3:30"},"nativeSrc":"5451:54:30","nodeType":"YulFunctionCall","src":"5451:54:30"},"variableNames":[{"name":"tail","nativeSrc":"5443:4:30","nodeType":"YulIdentifier","src":"5443:4:30"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5115:396:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5205:9:30","nodeType":"YulTypedName","src":"5205:9:30","type":""},{"name":"value0","nativeSrc":"5216:6:30","nodeType":"YulTypedName","src":"5216:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5227:4:30","nodeType":"YulTypedName","src":"5227:4:30","type":""}],"src":"5115:396:30"},{"body":{"nativeSrc":"5558:76:30","nodeType":"YulBlock","src":"5558:76:30","statements":[{"body":{"nativeSrc":"5612:16:30","nodeType":"YulBlock","src":"5612:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5621:1:30","nodeType":"YulLiteral","src":"5621:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"5624:1:30","nodeType":"YulLiteral","src":"5624:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5614:6:30","nodeType":"YulIdentifier","src":"5614:6:30"},"nativeSrc":"5614:12:30","nodeType":"YulFunctionCall","src":"5614:12:30"},"nativeSrc":"5614:12:30","nodeType":"YulExpressionStatement","src":"5614:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5581:5:30","nodeType":"YulIdentifier","src":"5581:5:30"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5602:5:30","nodeType":"YulIdentifier","src":"5602:5:30"}],"functionName":{"name":"iszero","nativeSrc":"5595:6:30","nodeType":"YulIdentifier","src":"5595:6:30"},"nativeSrc":"5595:13:30","nodeType":"YulFunctionCall","src":"5595:13:30"}],"functionName":{"name":"iszero","nativeSrc":"5588:6:30","nodeType":"YulIdentifier","src":"5588:6:30"},"nativeSrc":"5588:21:30","nodeType":"YulFunctionCall","src":"5588:21:30"}],"functionName":{"name":"eq","nativeSrc":"5578:2:30","nodeType":"YulIdentifier","src":"5578:2:30"},"nativeSrc":"5578:32:30","nodeType":"YulFunctionCall","src":"5578:32:30"}],"functionName":{"name":"iszero","nativeSrc":"5571:6:30","nodeType":"YulIdentifier","src":"5571:6:30"},"nativeSrc":"5571:40:30","nodeType":"YulFunctionCall","src":"5571:40:30"},"nativeSrc":"5568:60:30","nodeType":"YulIf","src":"5568:60:30"}]},"name":"validator_revert_bool","nativeSrc":"5516:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5547:5:30","nodeType":"YulTypedName","src":"5547:5:30","type":""}],"src":"5516:118:30"},{"body":{"nativeSrc":"5774:453:30","nodeType":"YulBlock","src":"5774:453:30","statements":[{"body":{"nativeSrc":"5821:16:30","nodeType":"YulBlock","src":"5821:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5830:1:30","nodeType":"YulLiteral","src":"5830:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"5833:1:30","nodeType":"YulLiteral","src":"5833:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5823:6:30","nodeType":"YulIdentifier","src":"5823:6:30"},"nativeSrc":"5823:12:30","nodeType":"YulFunctionCall","src":"5823:12:30"},"nativeSrc":"5823:12:30","nodeType":"YulExpressionStatement","src":"5823:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5795:7:30","nodeType":"YulIdentifier","src":"5795:7:30"},{"name":"headStart","nativeSrc":"5804:9:30","nodeType":"YulIdentifier","src":"5804:9:30"}],"functionName":{"name":"sub","nativeSrc":"5791:3:30","nodeType":"YulIdentifier","src":"5791:3:30"},"nativeSrc":"5791:23:30","nodeType":"YulFunctionCall","src":"5791:23:30"},{"kind":"number","nativeSrc":"5816:3:30","nodeType":"YulLiteral","src":"5816:3:30","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"5787:3:30","nodeType":"YulIdentifier","src":"5787:3:30"},"nativeSrc":"5787:33:30","nodeType":"YulFunctionCall","src":"5787:33:30"},"nativeSrc":"5784:53:30","nodeType":"YulIf","src":"5784:53:30"},{"nativeSrc":"5846:36:30","nodeType":"YulVariableDeclaration","src":"5846:36:30","value":{"arguments":[{"name":"headStart","nativeSrc":"5872:9:30","nodeType":"YulIdentifier","src":"5872:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"5859:12:30","nodeType":"YulIdentifier","src":"5859:12:30"},"nativeSrc":"5859:23:30","nodeType":"YulFunctionCall","src":"5859:23:30"},"variables":[{"name":"value","nativeSrc":"5850:5:30","nodeType":"YulTypedName","src":"5850:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5916:5:30","nodeType":"YulIdentifier","src":"5916:5:30"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5891:24:30","nodeType":"YulIdentifier","src":"5891:24:30"},"nativeSrc":"5891:31:30","nodeType":"YulFunctionCall","src":"5891:31:30"},"nativeSrc":"5891:31:30","nodeType":"YulExpressionStatement","src":"5891:31:30"},{"nativeSrc":"5931:15:30","nodeType":"YulAssignment","src":"5931:15:30","value":{"name":"value","nativeSrc":"5941:5:30","nodeType":"YulIdentifier","src":"5941:5:30"},"variableNames":[{"name":"value0","nativeSrc":"5931:6:30","nodeType":"YulIdentifier","src":"5931:6:30"}]},{"nativeSrc":"5955:42:30","nodeType":"YulAssignment","src":"5955:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5982:9:30","nodeType":"YulIdentifier","src":"5982:9:30"},{"kind":"number","nativeSrc":"5993:2:30","nodeType":"YulLiteral","src":"5993:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5978:3:30","nodeType":"YulIdentifier","src":"5978:3:30"},"nativeSrc":"5978:18:30","nodeType":"YulFunctionCall","src":"5978:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"5965:12:30","nodeType":"YulIdentifier","src":"5965:12:30"},"nativeSrc":"5965:32:30","nodeType":"YulFunctionCall","src":"5965:32:30"},"variableNames":[{"name":"value1","nativeSrc":"5955:6:30","nodeType":"YulIdentifier","src":"5955:6:30"}]},{"nativeSrc":"6006:42:30","nodeType":"YulAssignment","src":"6006:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6033:9:30","nodeType":"YulIdentifier","src":"6033:9:30"},{"kind":"number","nativeSrc":"6044:2:30","nodeType":"YulLiteral","src":"6044:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6029:3:30","nodeType":"YulIdentifier","src":"6029:3:30"},"nativeSrc":"6029:18:30","nodeType":"YulFunctionCall","src":"6029:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"6016:12:30","nodeType":"YulIdentifier","src":"6016:12:30"},"nativeSrc":"6016:32:30","nodeType":"YulFunctionCall","src":"6016:32:30"},"variableNames":[{"name":"value2","nativeSrc":"6006:6:30","nodeType":"YulIdentifier","src":"6006:6:30"}]},{"nativeSrc":"6057:42:30","nodeType":"YulAssignment","src":"6057:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6084:9:30","nodeType":"YulIdentifier","src":"6084:9:30"},{"kind":"number","nativeSrc":"6095:2:30","nodeType":"YulLiteral","src":"6095:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6080:3:30","nodeType":"YulIdentifier","src":"6080:3:30"},"nativeSrc":"6080:18:30","nodeType":"YulFunctionCall","src":"6080:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"6067:12:30","nodeType":"YulIdentifier","src":"6067:12:30"},"nativeSrc":"6067:32:30","nodeType":"YulFunctionCall","src":"6067:32:30"},"variableNames":[{"name":"value3","nativeSrc":"6057:6:30","nodeType":"YulIdentifier","src":"6057:6:30"}]},{"nativeSrc":"6108:48:30","nodeType":"YulVariableDeclaration","src":"6108:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6140:9:30","nodeType":"YulIdentifier","src":"6140:9:30"},{"kind":"number","nativeSrc":"6151:3:30","nodeType":"YulLiteral","src":"6151:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6136:3:30","nodeType":"YulIdentifier","src":"6136:3:30"},"nativeSrc":"6136:19:30","nodeType":"YulFunctionCall","src":"6136:19:30"}],"functionName":{"name":"calldataload","nativeSrc":"6123:12:30","nodeType":"YulIdentifier","src":"6123:12:30"},"nativeSrc":"6123:33:30","nodeType":"YulFunctionCall","src":"6123:33:30"},"variables":[{"name":"value_1","nativeSrc":"6112:7:30","nodeType":"YulTypedName","src":"6112:7:30","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"6187:7:30","nodeType":"YulIdentifier","src":"6187:7:30"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"6165:21:30","nodeType":"YulIdentifier","src":"6165:21:30"},"nativeSrc":"6165:30:30","nodeType":"YulFunctionCall","src":"6165:30:30"},"nativeSrc":"6165:30:30","nodeType":"YulExpressionStatement","src":"6165:30:30"},{"nativeSrc":"6204:17:30","nodeType":"YulAssignment","src":"6204:17:30","value":{"name":"value_1","nativeSrc":"6214:7:30","nodeType":"YulIdentifier","src":"6214:7:30"},"variableNames":[{"name":"value4","nativeSrc":"6204:6:30","nodeType":"YulIdentifier","src":"6204:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bool","nativeSrc":"5639:588:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5708:9:30","nodeType":"YulTypedName","src":"5708:9:30","type":""},{"name":"dataEnd","nativeSrc":"5719:7:30","nodeType":"YulTypedName","src":"5719:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5731:6:30","nodeType":"YulTypedName","src":"5731:6:30","type":""},{"name":"value1","nativeSrc":"5739:6:30","nodeType":"YulTypedName","src":"5739:6:30","type":""},{"name":"value2","nativeSrc":"5747:6:30","nodeType":"YulTypedName","src":"5747:6:30","type":""},{"name":"value3","nativeSrc":"5755:6:30","nodeType":"YulTypedName","src":"5755:6:30","type":""},{"name":"value4","nativeSrc":"5763:6:30","nodeType":"YulTypedName","src":"5763:6:30","type":""}],"src":"5639:588:30"},{"body":{"nativeSrc":"6336:212:30","nodeType":"YulBlock","src":"6336:212:30","statements":[{"body":{"nativeSrc":"6382:16:30","nodeType":"YulBlock","src":"6382:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6391:1:30","nodeType":"YulLiteral","src":"6391:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6394:1:30","nodeType":"YulLiteral","src":"6394:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6384:6:30","nodeType":"YulIdentifier","src":"6384:6:30"},"nativeSrc":"6384:12:30","nodeType":"YulFunctionCall","src":"6384:12:30"},"nativeSrc":"6384:12:30","nodeType":"YulExpressionStatement","src":"6384:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6357:7:30","nodeType":"YulIdentifier","src":"6357:7:30"},{"name":"headStart","nativeSrc":"6366:9:30","nodeType":"YulIdentifier","src":"6366:9:30"}],"functionName":{"name":"sub","nativeSrc":"6353:3:30","nodeType":"YulIdentifier","src":"6353:3:30"},"nativeSrc":"6353:23:30","nodeType":"YulFunctionCall","src":"6353:23:30"},{"kind":"number","nativeSrc":"6378:2:30","nodeType":"YulLiteral","src":"6378:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6349:3:30","nodeType":"YulIdentifier","src":"6349:3:30"},"nativeSrc":"6349:32:30","nodeType":"YulFunctionCall","src":"6349:32:30"},"nativeSrc":"6346:52:30","nodeType":"YulIf","src":"6346:52:30"},{"nativeSrc":"6407:33:30","nodeType":"YulAssignment","src":"6407:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"6430:9:30","nodeType":"YulIdentifier","src":"6430:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"6417:12:30","nodeType":"YulIdentifier","src":"6417:12:30"},"nativeSrc":"6417:23:30","nodeType":"YulFunctionCall","src":"6417:23:30"},"variableNames":[{"name":"value0","nativeSrc":"6407:6:30","nodeType":"YulIdentifier","src":"6407:6:30"}]},{"nativeSrc":"6449:42:30","nodeType":"YulAssignment","src":"6449:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6476:9:30","nodeType":"YulIdentifier","src":"6476:9:30"},{"kind":"number","nativeSrc":"6487:2:30","nodeType":"YulLiteral","src":"6487:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6472:3:30","nodeType":"YulIdentifier","src":"6472:3:30"},"nativeSrc":"6472:18:30","nodeType":"YulFunctionCall","src":"6472:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"6459:12:30","nodeType":"YulIdentifier","src":"6459:12:30"},"nativeSrc":"6459:32:30","nodeType":"YulFunctionCall","src":"6459:32:30"},"variableNames":[{"name":"value1","nativeSrc":"6449:6:30","nodeType":"YulIdentifier","src":"6449:6:30"}]},{"nativeSrc":"6500:42:30","nodeType":"YulAssignment","src":"6500:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6527:9:30","nodeType":"YulIdentifier","src":"6527:9:30"},{"kind":"number","nativeSrc":"6538:2:30","nodeType":"YulLiteral","src":"6538:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6523:3:30","nodeType":"YulIdentifier","src":"6523:3:30"},"nativeSrc":"6523:18:30","nodeType":"YulFunctionCall","src":"6523:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"6510:12:30","nodeType":"YulIdentifier","src":"6510:12:30"},"nativeSrc":"6510:32:30","nodeType":"YulFunctionCall","src":"6510:32:30"},"variableNames":[{"name":"value2","nativeSrc":"6500:6:30","nodeType":"YulIdentifier","src":"6500:6:30"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nativeSrc":"6232:316:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6286:9:30","nodeType":"YulTypedName","src":"6286:9:30","type":""},{"name":"dataEnd","nativeSrc":"6297:7:30","nodeType":"YulTypedName","src":"6297:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6309:6:30","nodeType":"YulTypedName","src":"6309:6:30","type":""},{"name":"value1","nativeSrc":"6317:6:30","nodeType":"YulTypedName","src":"6317:6:30","type":""},{"name":"value2","nativeSrc":"6325:6:30","nodeType":"YulTypedName","src":"6325:6:30","type":""}],"src":"6232:316:30"},{"body":{"nativeSrc":"6638:177:30","nodeType":"YulBlock","src":"6638:177:30","statements":[{"body":{"nativeSrc":"6684:16:30","nodeType":"YulBlock","src":"6684:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6693:1:30","nodeType":"YulLiteral","src":"6693:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6696:1:30","nodeType":"YulLiteral","src":"6696:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6686:6:30","nodeType":"YulIdentifier","src":"6686:6:30"},"nativeSrc":"6686:12:30","nodeType":"YulFunctionCall","src":"6686:12:30"},"nativeSrc":"6686:12:30","nodeType":"YulExpressionStatement","src":"6686:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6659:7:30","nodeType":"YulIdentifier","src":"6659:7:30"},{"name":"headStart","nativeSrc":"6668:9:30","nodeType":"YulIdentifier","src":"6668:9:30"}],"functionName":{"name":"sub","nativeSrc":"6655:3:30","nodeType":"YulIdentifier","src":"6655:3:30"},"nativeSrc":"6655:23:30","nodeType":"YulFunctionCall","src":"6655:23:30"},{"kind":"number","nativeSrc":"6680:2:30","nodeType":"YulLiteral","src":"6680:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6651:3:30","nodeType":"YulIdentifier","src":"6651:3:30"},"nativeSrc":"6651:32:30","nodeType":"YulFunctionCall","src":"6651:32:30"},"nativeSrc":"6648:52:30","nodeType":"YulIf","src":"6648:52:30"},{"nativeSrc":"6709:36:30","nodeType":"YulVariableDeclaration","src":"6709:36:30","value":{"arguments":[{"name":"headStart","nativeSrc":"6735:9:30","nodeType":"YulIdentifier","src":"6735:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"6722:12:30","nodeType":"YulIdentifier","src":"6722:12:30"},"nativeSrc":"6722:23:30","nodeType":"YulFunctionCall","src":"6722:23:30"},"variables":[{"name":"value","nativeSrc":"6713:5:30","nodeType":"YulTypedName","src":"6713:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6779:5:30","nodeType":"YulIdentifier","src":"6779:5:30"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6754:24:30","nodeType":"YulIdentifier","src":"6754:24:30"},"nativeSrc":"6754:31:30","nodeType":"YulFunctionCall","src":"6754:31:30"},"nativeSrc":"6754:31:30","nodeType":"YulExpressionStatement","src":"6754:31:30"},{"nativeSrc":"6794:15:30","nodeType":"YulAssignment","src":"6794:15:30","value":{"name":"value","nativeSrc":"6804:5:30","nodeType":"YulIdentifier","src":"6804:5:30"},"variableNames":[{"name":"value0","nativeSrc":"6794:6:30","nodeType":"YulIdentifier","src":"6794:6:30"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$2298","nativeSrc":"6553:262:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6604:9:30","nodeType":"YulTypedName","src":"6604:9:30","type":""},{"name":"dataEnd","nativeSrc":"6615:7:30","nodeType":"YulTypedName","src":"6615:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6627:6:30","nodeType":"YulTypedName","src":"6627:6:30","type":""}],"src":"6553:262:30"},{"body":{"nativeSrc":"6921:276:30","nodeType":"YulBlock","src":"6921:276:30","statements":[{"body":{"nativeSrc":"6967:16:30","nodeType":"YulBlock","src":"6967:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6976:1:30","nodeType":"YulLiteral","src":"6976:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6979:1:30","nodeType":"YulLiteral","src":"6979:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6969:6:30","nodeType":"YulIdentifier","src":"6969:6:30"},"nativeSrc":"6969:12:30","nodeType":"YulFunctionCall","src":"6969:12:30"},"nativeSrc":"6969:12:30","nodeType":"YulExpressionStatement","src":"6969:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6942:7:30","nodeType":"YulIdentifier","src":"6942:7:30"},{"name":"headStart","nativeSrc":"6951:9:30","nodeType":"YulIdentifier","src":"6951:9:30"}],"functionName":{"name":"sub","nativeSrc":"6938:3:30","nodeType":"YulIdentifier","src":"6938:3:30"},"nativeSrc":"6938:23:30","nodeType":"YulFunctionCall","src":"6938:23:30"},{"kind":"number","nativeSrc":"6963:2:30","nodeType":"YulLiteral","src":"6963:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6934:3:30","nodeType":"YulIdentifier","src":"6934:3:30"},"nativeSrc":"6934:32:30","nodeType":"YulFunctionCall","src":"6934:32:30"},"nativeSrc":"6931:52:30","nodeType":"YulIf","src":"6931:52:30"},{"nativeSrc":"6992:33:30","nodeType":"YulAssignment","src":"6992:33:30","value":{"arguments":[{"name":"headStart","nativeSrc":"7015:9:30","nodeType":"YulIdentifier","src":"7015:9:30"}],"functionName":{"name":"calldataload","nativeSrc":"7002:12:30","nodeType":"YulIdentifier","src":"7002:12:30"},"nativeSrc":"7002:23:30","nodeType":"YulFunctionCall","src":"7002:23:30"},"variableNames":[{"name":"value0","nativeSrc":"6992:6:30","nodeType":"YulIdentifier","src":"6992:6:30"}]},{"nativeSrc":"7034:42:30","nodeType":"YulAssignment","src":"7034:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7061:9:30","nodeType":"YulIdentifier","src":"7061:9:30"},{"kind":"number","nativeSrc":"7072:2:30","nodeType":"YulLiteral","src":"7072:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7057:3:30","nodeType":"YulIdentifier","src":"7057:3:30"},"nativeSrc":"7057:18:30","nodeType":"YulFunctionCall","src":"7057:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"7044:12:30","nodeType":"YulIdentifier","src":"7044:12:30"},"nativeSrc":"7044:32:30","nodeType":"YulFunctionCall","src":"7044:32:30"},"variableNames":[{"name":"value1","nativeSrc":"7034:6:30","nodeType":"YulIdentifier","src":"7034:6:30"}]},{"nativeSrc":"7085:45:30","nodeType":"YulVariableDeclaration","src":"7085:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7115:9:30","nodeType":"YulIdentifier","src":"7115:9:30"},{"kind":"number","nativeSrc":"7126:2:30","nodeType":"YulLiteral","src":"7126:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7111:3:30","nodeType":"YulIdentifier","src":"7111:3:30"},"nativeSrc":"7111:18:30","nodeType":"YulFunctionCall","src":"7111:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"7098:12:30","nodeType":"YulIdentifier","src":"7098:12:30"},"nativeSrc":"7098:32:30","nodeType":"YulFunctionCall","src":"7098:32:30"},"variables":[{"name":"value","nativeSrc":"7089:5:30","nodeType":"YulTypedName","src":"7089:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7161:5:30","nodeType":"YulIdentifier","src":"7161:5:30"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"7139:21:30","nodeType":"YulIdentifier","src":"7139:21:30"},"nativeSrc":"7139:28:30","nodeType":"YulFunctionCall","src":"7139:28:30"},"nativeSrc":"7139:28:30","nodeType":"YulExpressionStatement","src":"7139:28:30"},{"nativeSrc":"7176:15:30","nodeType":"YulAssignment","src":"7176:15:30","value":{"name":"value","nativeSrc":"7186:5:30","nodeType":"YulIdentifier","src":"7186:5:30"},"variableNames":[{"name":"value2","nativeSrc":"7176:6:30","nodeType":"YulIdentifier","src":"7176:6:30"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_bool","nativeSrc":"6820:377:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6871:9:30","nodeType":"YulTypedName","src":"6871:9:30","type":""},{"name":"dataEnd","nativeSrc":"6882:7:30","nodeType":"YulTypedName","src":"6882:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6894:6:30","nodeType":"YulTypedName","src":"6894:6:30","type":""},{"name":"value1","nativeSrc":"6902:6:30","nodeType":"YulTypedName","src":"6902:6:30","type":""},{"name":"value2","nativeSrc":"6910:6:30","nodeType":"YulTypedName","src":"6910:6:30","type":""}],"src":"6820:377:30"},{"body":{"nativeSrc":"7471:364:30","nodeType":"YulBlock","src":"7471:364:30","statements":[{"nativeSrc":"7481:27:30","nodeType":"YulAssignment","src":"7481:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"7493:9:30","nodeType":"YulIdentifier","src":"7493:9:30"},{"kind":"number","nativeSrc":"7504:3:30","nodeType":"YulLiteral","src":"7504:3:30","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"7489:3:30","nodeType":"YulIdentifier","src":"7489:3:30"},"nativeSrc":"7489:19:30","nodeType":"YulFunctionCall","src":"7489:19:30"},"variableNames":[{"name":"tail","nativeSrc":"7481:4:30","nodeType":"YulIdentifier","src":"7481:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7524:9:30","nodeType":"YulIdentifier","src":"7524:9:30"},{"arguments":[{"name":"value0","nativeSrc":"7539:6:30","nodeType":"YulIdentifier","src":"7539:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7555:3:30","nodeType":"YulLiteral","src":"7555:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"7560:1:30","nodeType":"YulLiteral","src":"7560:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7551:3:30","nodeType":"YulIdentifier","src":"7551:3:30"},"nativeSrc":"7551:11:30","nodeType":"YulFunctionCall","src":"7551:11:30"},{"kind":"number","nativeSrc":"7564:1:30","nodeType":"YulLiteral","src":"7564:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7547:3:30","nodeType":"YulIdentifier","src":"7547:3:30"},"nativeSrc":"7547:19:30","nodeType":"YulFunctionCall","src":"7547:19:30"}],"functionName":{"name":"and","nativeSrc":"7535:3:30","nodeType":"YulIdentifier","src":"7535:3:30"},"nativeSrc":"7535:32:30","nodeType":"YulFunctionCall","src":"7535:32:30"}],"functionName":{"name":"mstore","nativeSrc":"7517:6:30","nodeType":"YulIdentifier","src":"7517:6:30"},"nativeSrc":"7517:51:30","nodeType":"YulFunctionCall","src":"7517:51:30"},"nativeSrc":"7517:51:30","nodeType":"YulExpressionStatement","src":"7517:51:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7588:9:30","nodeType":"YulIdentifier","src":"7588:9:30"},{"kind":"number","nativeSrc":"7599:2:30","nodeType":"YulLiteral","src":"7599:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7584:3:30","nodeType":"YulIdentifier","src":"7584:3:30"},"nativeSrc":"7584:18:30","nodeType":"YulFunctionCall","src":"7584:18:30"},{"name":"value1","nativeSrc":"7604:6:30","nodeType":"YulIdentifier","src":"7604:6:30"}],"functionName":{"name":"mstore","nativeSrc":"7577:6:30","nodeType":"YulIdentifier","src":"7577:6:30"},"nativeSrc":"7577:34:30","nodeType":"YulFunctionCall","src":"7577:34:30"},"nativeSrc":"7577:34:30","nodeType":"YulExpressionStatement","src":"7577:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7631:9:30","nodeType":"YulIdentifier","src":"7631:9:30"},{"kind":"number","nativeSrc":"7642:2:30","nodeType":"YulLiteral","src":"7642:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7627:3:30","nodeType":"YulIdentifier","src":"7627:3:30"},"nativeSrc":"7627:18:30","nodeType":"YulFunctionCall","src":"7627:18:30"},{"name":"value2","nativeSrc":"7647:6:30","nodeType":"YulIdentifier","src":"7647:6:30"}],"functionName":{"name":"mstore","nativeSrc":"7620:6:30","nodeType":"YulIdentifier","src":"7620:6:30"},"nativeSrc":"7620:34:30","nodeType":"YulFunctionCall","src":"7620:34:30"},"nativeSrc":"7620:34:30","nodeType":"YulExpressionStatement","src":"7620:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7674:9:30","nodeType":"YulIdentifier","src":"7674:9:30"},{"kind":"number","nativeSrc":"7685:2:30","nodeType":"YulLiteral","src":"7685:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7670:3:30","nodeType":"YulIdentifier","src":"7670:3:30"},"nativeSrc":"7670:18:30","nodeType":"YulFunctionCall","src":"7670:18:30"},{"name":"value3","nativeSrc":"7690:6:30","nodeType":"YulIdentifier","src":"7690:6:30"}],"functionName":{"name":"mstore","nativeSrc":"7663:6:30","nodeType":"YulIdentifier","src":"7663:6:30"},"nativeSrc":"7663:34:30","nodeType":"YulFunctionCall","src":"7663:34:30"},"nativeSrc":"7663:34:30","nodeType":"YulExpressionStatement","src":"7663:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7717:9:30","nodeType":"YulIdentifier","src":"7717:9:30"},{"kind":"number","nativeSrc":"7728:3:30","nodeType":"YulLiteral","src":"7728:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7713:3:30","nodeType":"YulIdentifier","src":"7713:3:30"},"nativeSrc":"7713:19:30","nodeType":"YulFunctionCall","src":"7713:19:30"},{"name":"value4","nativeSrc":"7734:6:30","nodeType":"YulIdentifier","src":"7734:6:30"}],"functionName":{"name":"mstore","nativeSrc":"7706:6:30","nodeType":"YulIdentifier","src":"7706:6:30"},"nativeSrc":"7706:35:30","nodeType":"YulFunctionCall","src":"7706:35:30"},"nativeSrc":"7706:35:30","nodeType":"YulExpressionStatement","src":"7706:35:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7761:9:30","nodeType":"YulIdentifier","src":"7761:9:30"},{"kind":"number","nativeSrc":"7772:3:30","nodeType":"YulLiteral","src":"7772:3:30","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7757:3:30","nodeType":"YulIdentifier","src":"7757:3:30"},"nativeSrc":"7757:19:30","nodeType":"YulFunctionCall","src":"7757:19:30"},{"name":"value5","nativeSrc":"7778:6:30","nodeType":"YulIdentifier","src":"7778:6:30"}],"functionName":{"name":"mstore","nativeSrc":"7750:6:30","nodeType":"YulIdentifier","src":"7750:6:30"},"nativeSrc":"7750:35:30","nodeType":"YulFunctionCall","src":"7750:35:30"},"nativeSrc":"7750:35:30","nodeType":"YulExpressionStatement","src":"7750:35:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7805:9:30","nodeType":"YulIdentifier","src":"7805:9:30"},{"kind":"number","nativeSrc":"7816:3:30","nodeType":"YulLiteral","src":"7816:3:30","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"7801:3:30","nodeType":"YulIdentifier","src":"7801:3:30"},"nativeSrc":"7801:19:30","nodeType":"YulFunctionCall","src":"7801:19:30"},{"name":"value6","nativeSrc":"7822:6:30","nodeType":"YulIdentifier","src":"7822:6:30"}],"functionName":{"name":"mstore","nativeSrc":"7794:6:30","nodeType":"YulIdentifier","src":"7794:6:30"},"nativeSrc":"7794:35:30","nodeType":"YulFunctionCall","src":"7794:35:30"},"nativeSrc":"7794:35:30","nodeType":"YulExpressionStatement","src":"7794:35:30"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7202:633:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7392:9:30","nodeType":"YulTypedName","src":"7392:9:30","type":""},{"name":"value6","nativeSrc":"7403:6:30","nodeType":"YulTypedName","src":"7403:6:30","type":""},{"name":"value5","nativeSrc":"7411:6:30","nodeType":"YulTypedName","src":"7411:6:30","type":""},{"name":"value4","nativeSrc":"7419:6:30","nodeType":"YulTypedName","src":"7419:6:30","type":""},{"name":"value3","nativeSrc":"7427:6:30","nodeType":"YulTypedName","src":"7427:6:30","type":""},{"name":"value2","nativeSrc":"7435:6:30","nodeType":"YulTypedName","src":"7435:6:30","type":""},{"name":"value1","nativeSrc":"7443:6:30","nodeType":"YulTypedName","src":"7443:6:30","type":""},{"name":"value0","nativeSrc":"7451:6:30","nodeType":"YulTypedName","src":"7451:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7462:4:30","nodeType":"YulTypedName","src":"7462:4:30","type":""}],"src":"7202:633:30"},{"body":{"nativeSrc":"7969:119:30","nodeType":"YulBlock","src":"7969:119:30","statements":[{"nativeSrc":"7979:26:30","nodeType":"YulAssignment","src":"7979:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"7991:9:30","nodeType":"YulIdentifier","src":"7991:9:30"},{"kind":"number","nativeSrc":"8002:2:30","nodeType":"YulLiteral","src":"8002:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7987:3:30","nodeType":"YulIdentifier","src":"7987:3:30"},"nativeSrc":"7987:18:30","nodeType":"YulFunctionCall","src":"7987:18:30"},"variableNames":[{"name":"tail","nativeSrc":"7979:4:30","nodeType":"YulIdentifier","src":"7979:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8021:9:30","nodeType":"YulIdentifier","src":"8021:9:30"},{"name":"value0","nativeSrc":"8032:6:30","nodeType":"YulIdentifier","src":"8032:6:30"}],"functionName":{"name":"mstore","nativeSrc":"8014:6:30","nodeType":"YulIdentifier","src":"8014:6:30"},"nativeSrc":"8014:25:30","nodeType":"YulFunctionCall","src":"8014:25:30"},"nativeSrc":"8014:25:30","nodeType":"YulExpressionStatement","src":"8014:25:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8059:9:30","nodeType":"YulIdentifier","src":"8059:9:30"},{"kind":"number","nativeSrc":"8070:2:30","nodeType":"YulLiteral","src":"8070:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8055:3:30","nodeType":"YulIdentifier","src":"8055:3:30"},"nativeSrc":"8055:18:30","nodeType":"YulFunctionCall","src":"8055:18:30"},{"name":"value1","nativeSrc":"8075:6:30","nodeType":"YulIdentifier","src":"8075:6:30"}],"functionName":{"name":"mstore","nativeSrc":"8048:6:30","nodeType":"YulIdentifier","src":"8048:6:30"},"nativeSrc":"8048:34:30","nodeType":"YulFunctionCall","src":"8048:34:30"},"nativeSrc":"8048:34:30","nodeType":"YulExpressionStatement","src":"8048:34:30"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7840:248:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7930:9:30","nodeType":"YulTypedName","src":"7930:9:30","type":""},{"name":"value1","nativeSrc":"7941:6:30","nodeType":"YulTypedName","src":"7941:6:30","type":""},{"name":"value0","nativeSrc":"7949:6:30","nodeType":"YulTypedName","src":"7949:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7960:4:30","nodeType":"YulTypedName","src":"7960:4:30","type":""}],"src":"7840:248:30"},{"body":{"nativeSrc":"8267:161:30","nodeType":"YulBlock","src":"8267:161:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8284:9:30","nodeType":"YulIdentifier","src":"8284:9:30"},{"kind":"number","nativeSrc":"8295:2:30","nodeType":"YulLiteral","src":"8295:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8277:6:30","nodeType":"YulIdentifier","src":"8277:6:30"},"nativeSrc":"8277:21:30","nodeType":"YulFunctionCall","src":"8277:21:30"},"nativeSrc":"8277:21:30","nodeType":"YulExpressionStatement","src":"8277:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8318:9:30","nodeType":"YulIdentifier","src":"8318:9:30"},{"kind":"number","nativeSrc":"8329:2:30","nodeType":"YulLiteral","src":"8329:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8314:3:30","nodeType":"YulIdentifier","src":"8314:3:30"},"nativeSrc":"8314:18:30","nodeType":"YulFunctionCall","src":"8314:18:30"},{"kind":"number","nativeSrc":"8334:2:30","nodeType":"YulLiteral","src":"8334:2:30","type":"","value":"11"}],"functionName":{"name":"mstore","nativeSrc":"8307:6:30","nodeType":"YulIdentifier","src":"8307:6:30"},"nativeSrc":"8307:30:30","nodeType":"YulFunctionCall","src":"8307:30:30"},"nativeSrc":"8307:30:30","nodeType":"YulExpressionStatement","src":"8307:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8357:9:30","nodeType":"YulIdentifier","src":"8357:9:30"},{"kind":"number","nativeSrc":"8368:2:30","nodeType":"YulLiteral","src":"8368:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8353:3:30","nodeType":"YulIdentifier","src":"8353:3:30"},"nativeSrc":"8353:18:30","nodeType":"YulFunctionCall","src":"8353:18:30"},{"hexValue":"696e76616c696420706964","kind":"string","nativeSrc":"8373:13:30","nodeType":"YulLiteral","src":"8373:13:30","type":"","value":"invalid pid"}],"functionName":{"name":"mstore","nativeSrc":"8346:6:30","nodeType":"YulIdentifier","src":"8346:6:30"},"nativeSrc":"8346:41:30","nodeType":"YulFunctionCall","src":"8346:41:30"},"nativeSrc":"8346:41:30","nodeType":"YulExpressionStatement","src":"8346:41:30"},{"nativeSrc":"8396:26:30","nodeType":"YulAssignment","src":"8396:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"8408:9:30","nodeType":"YulIdentifier","src":"8408:9:30"},{"kind":"number","nativeSrc":"8419:2:30","nodeType":"YulLiteral","src":"8419:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8404:3:30","nodeType":"YulIdentifier","src":"8404:3:30"},"nativeSrc":"8404:18:30","nodeType":"YulFunctionCall","src":"8404:18:30"},"variableNames":[{"name":"tail","nativeSrc":"8396:4:30","nodeType":"YulIdentifier","src":"8396:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8093:335:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8244:9:30","nodeType":"YulTypedName","src":"8244:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8258:4:30","nodeType":"YulTypedName","src":"8258:4:30","type":""}],"src":"8093:335:30"},{"body":{"nativeSrc":"8607:168:30","nodeType":"YulBlock","src":"8607:168:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8624:9:30","nodeType":"YulIdentifier","src":"8624:9:30"},{"kind":"number","nativeSrc":"8635:2:30","nodeType":"YulLiteral","src":"8635:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8617:6:30","nodeType":"YulIdentifier","src":"8617:6:30"},"nativeSrc":"8617:21:30","nodeType":"YulFunctionCall","src":"8617:21:30"},"nativeSrc":"8617:21:30","nodeType":"YulExpressionStatement","src":"8617:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8658:9:30","nodeType":"YulIdentifier","src":"8658:9:30"},{"kind":"number","nativeSrc":"8669:2:30","nodeType":"YulLiteral","src":"8669:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8654:3:30","nodeType":"YulIdentifier","src":"8654:3:30"},"nativeSrc":"8654:18:30","nodeType":"YulFunctionCall","src":"8654:18:30"},{"kind":"number","nativeSrc":"8674:2:30","nodeType":"YulLiteral","src":"8674:2:30","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"8647:6:30","nodeType":"YulIdentifier","src":"8647:6:30"},"nativeSrc":"8647:30:30","nodeType":"YulFunctionCall","src":"8647:30:30"},"nativeSrc":"8647:30:30","nodeType":"YulExpressionStatement","src":"8647:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8697:9:30","nodeType":"YulIdentifier","src":"8697:9:30"},{"kind":"number","nativeSrc":"8708:2:30","nodeType":"YulLiteral","src":"8708:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8693:3:30","nodeType":"YulIdentifier","src":"8693:3:30"},"nativeSrc":"8693:18:30","nodeType":"YulFunctionCall","src":"8693:18:30"},{"hexValue":"776974686472617720697320706175736564","kind":"string","nativeSrc":"8713:20:30","nodeType":"YulLiteral","src":"8713:20:30","type":"","value":"withdraw is paused"}],"functionName":{"name":"mstore","nativeSrc":"8686:6:30","nodeType":"YulIdentifier","src":"8686:6:30"},"nativeSrc":"8686:48:30","nodeType":"YulFunctionCall","src":"8686:48:30"},"nativeSrc":"8686:48:30","nodeType":"YulExpressionStatement","src":"8686:48:30"},{"nativeSrc":"8743:26:30","nodeType":"YulAssignment","src":"8743:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"8755:9:30","nodeType":"YulIdentifier","src":"8755:9:30"},{"kind":"number","nativeSrc":"8766:2:30","nodeType":"YulLiteral","src":"8766:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8751:3:30","nodeType":"YulIdentifier","src":"8751:3:30"},"nativeSrc":"8751:18:30","nodeType":"YulFunctionCall","src":"8751:18:30"},"variableNames":[{"name":"tail","nativeSrc":"8743:4:30","nodeType":"YulIdentifier","src":"8743:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8433:342:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8584:9:30","nodeType":"YulTypedName","src":"8584:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8598:4:30","nodeType":"YulTypedName","src":"8598:4:30","type":""}],"src":"8433:342:30"},{"body":{"nativeSrc":"8812:95:30","nodeType":"YulBlock","src":"8812:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8829:1:30","nodeType":"YulLiteral","src":"8829:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"8836:3:30","nodeType":"YulLiteral","src":"8836:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"8841:10:30","nodeType":"YulLiteral","src":"8841:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"8832:3:30","nodeType":"YulIdentifier","src":"8832:3:30"},"nativeSrc":"8832:20:30","nodeType":"YulFunctionCall","src":"8832:20:30"}],"functionName":{"name":"mstore","nativeSrc":"8822:6:30","nodeType":"YulIdentifier","src":"8822:6:30"},"nativeSrc":"8822:31:30","nodeType":"YulFunctionCall","src":"8822:31:30"},"nativeSrc":"8822:31:30","nodeType":"YulExpressionStatement","src":"8822:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8869:1:30","nodeType":"YulLiteral","src":"8869:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"8872:4:30","nodeType":"YulLiteral","src":"8872:4:30","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"8862:6:30","nodeType":"YulIdentifier","src":"8862:6:30"},"nativeSrc":"8862:15:30","nodeType":"YulFunctionCall","src":"8862:15:30"},"nativeSrc":"8862:15:30","nodeType":"YulExpressionStatement","src":"8862:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8893:1:30","nodeType":"YulLiteral","src":"8893:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"8896:4:30","nodeType":"YulLiteral","src":"8896:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8886:6:30","nodeType":"YulIdentifier","src":"8886:6:30"},"nativeSrc":"8886:15:30","nodeType":"YulFunctionCall","src":"8886:15:30"},"nativeSrc":"8886:15:30","nodeType":"YulExpressionStatement","src":"8886:15:30"}]},"name":"panic_error_0x32","nativeSrc":"8780:127:30","nodeType":"YulFunctionDefinition","src":"8780:127:30"},{"body":{"nativeSrc":"8944:95:30","nodeType":"YulBlock","src":"8944:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8961:1:30","nodeType":"YulLiteral","src":"8961:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"8968:3:30","nodeType":"YulLiteral","src":"8968:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"8973:10:30","nodeType":"YulLiteral","src":"8973:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"8964:3:30","nodeType":"YulIdentifier","src":"8964:3:30"},"nativeSrc":"8964:20:30","nodeType":"YulFunctionCall","src":"8964:20:30"}],"functionName":{"name":"mstore","nativeSrc":"8954:6:30","nodeType":"YulIdentifier","src":"8954:6:30"},"nativeSrc":"8954:31:30","nodeType":"YulFunctionCall","src":"8954:31:30"},"nativeSrc":"8954:31:30","nodeType":"YulExpressionStatement","src":"8954:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9001:1:30","nodeType":"YulLiteral","src":"9001:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"9004:4:30","nodeType":"YulLiteral","src":"9004:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"8994:6:30","nodeType":"YulIdentifier","src":"8994:6:30"},"nativeSrc":"8994:15:30","nodeType":"YulFunctionCall","src":"8994:15:30"},"nativeSrc":"8994:15:30","nodeType":"YulExpressionStatement","src":"8994:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9025:1:30","nodeType":"YulLiteral","src":"9025:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"9028:4:30","nodeType":"YulLiteral","src":"9028:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9018:6:30","nodeType":"YulIdentifier","src":"9018:6:30"},"nativeSrc":"9018:15:30","nodeType":"YulFunctionCall","src":"9018:15:30"},"nativeSrc":"9018:15:30","nodeType":"YulExpressionStatement","src":"9018:15:30"}]},"name":"panic_error_0x11","nativeSrc":"8912:127:30","nodeType":"YulFunctionDefinition","src":"8912:127:30"},{"body":{"nativeSrc":"9092:77:30","nodeType":"YulBlock","src":"9092:77:30","statements":[{"nativeSrc":"9102:16:30","nodeType":"YulAssignment","src":"9102:16:30","value":{"arguments":[{"name":"x","nativeSrc":"9113:1:30","nodeType":"YulIdentifier","src":"9113:1:30"},{"name":"y","nativeSrc":"9116:1:30","nodeType":"YulIdentifier","src":"9116:1:30"}],"functionName":{"name":"add","nativeSrc":"9109:3:30","nodeType":"YulIdentifier","src":"9109:3:30"},"nativeSrc":"9109:9:30","nodeType":"YulFunctionCall","src":"9109:9:30"},"variableNames":[{"name":"sum","nativeSrc":"9102:3:30","nodeType":"YulIdentifier","src":"9102:3:30"}]},{"body":{"nativeSrc":"9141:22:30","nodeType":"YulBlock","src":"9141:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9143:16:30","nodeType":"YulIdentifier","src":"9143:16:30"},"nativeSrc":"9143:18:30","nodeType":"YulFunctionCall","src":"9143:18:30"},"nativeSrc":"9143:18:30","nodeType":"YulExpressionStatement","src":"9143:18:30"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"9133:1:30","nodeType":"YulIdentifier","src":"9133:1:30"},{"name":"sum","nativeSrc":"9136:3:30","nodeType":"YulIdentifier","src":"9136:3:30"}],"functionName":{"name":"gt","nativeSrc":"9130:2:30","nodeType":"YulIdentifier","src":"9130:2:30"},"nativeSrc":"9130:10:30","nodeType":"YulFunctionCall","src":"9130:10:30"},"nativeSrc":"9127:36:30","nodeType":"YulIf","src":"9127:36:30"}]},"name":"checked_add_t_uint256","nativeSrc":"9044:125:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9075:1:30","nodeType":"YulTypedName","src":"9075:1:30","type":""},{"name":"y","nativeSrc":"9078:1:30","nodeType":"YulTypedName","src":"9078:1:30","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9084:3:30","nodeType":"YulTypedName","src":"9084:3:30","type":""}],"src":"9044:125:30"},{"body":{"nativeSrc":"9221:88:30","nodeType":"YulBlock","src":"9221:88:30","statements":[{"body":{"nativeSrc":"9252:22:30","nodeType":"YulBlock","src":"9252:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9254:16:30","nodeType":"YulIdentifier","src":"9254:16:30"},"nativeSrc":"9254:18:30","nodeType":"YulFunctionCall","src":"9254:18:30"},"nativeSrc":"9254:18:30","nodeType":"YulExpressionStatement","src":"9254:18:30"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"9237:5:30","nodeType":"YulIdentifier","src":"9237:5:30"},{"arguments":[{"kind":"number","nativeSrc":"9248:1:30","nodeType":"YulLiteral","src":"9248:1:30","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"9244:3:30","nodeType":"YulIdentifier","src":"9244:3:30"},"nativeSrc":"9244:6:30","nodeType":"YulFunctionCall","src":"9244:6:30"}],"functionName":{"name":"eq","nativeSrc":"9234:2:30","nodeType":"YulIdentifier","src":"9234:2:30"},"nativeSrc":"9234:17:30","nodeType":"YulFunctionCall","src":"9234:17:30"},"nativeSrc":"9231:43:30","nodeType":"YulIf","src":"9231:43:30"},{"nativeSrc":"9283:20:30","nodeType":"YulAssignment","src":"9283:20:30","value":{"arguments":[{"name":"value","nativeSrc":"9294:5:30","nodeType":"YulIdentifier","src":"9294:5:30"},{"kind":"number","nativeSrc":"9301:1:30","nodeType":"YulLiteral","src":"9301:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9290:3:30","nodeType":"YulIdentifier","src":"9290:3:30"},"nativeSrc":"9290:13:30","nodeType":"YulFunctionCall","src":"9290:13:30"},"variableNames":[{"name":"ret","nativeSrc":"9283:3:30","nodeType":"YulIdentifier","src":"9283:3:30"}]}]},"name":"increment_t_uint256","nativeSrc":"9174:135:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9203:5:30","nodeType":"YulTypedName","src":"9203:5:30","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"9213:3:30","nodeType":"YulTypedName","src":"9213:3:30","type":""}],"src":"9174:135:30"},{"body":{"nativeSrc":"9363:79:30","nodeType":"YulBlock","src":"9363:79:30","statements":[{"nativeSrc":"9373:17:30","nodeType":"YulAssignment","src":"9373:17:30","value":{"arguments":[{"name":"x","nativeSrc":"9385:1:30","nodeType":"YulIdentifier","src":"9385:1:30"},{"name":"y","nativeSrc":"9388:1:30","nodeType":"YulIdentifier","src":"9388:1:30"}],"functionName":{"name":"sub","nativeSrc":"9381:3:30","nodeType":"YulIdentifier","src":"9381:3:30"},"nativeSrc":"9381:9:30","nodeType":"YulFunctionCall","src":"9381:9:30"},"variableNames":[{"name":"diff","nativeSrc":"9373:4:30","nodeType":"YulIdentifier","src":"9373:4:30"}]},{"body":{"nativeSrc":"9414:22:30","nodeType":"YulBlock","src":"9414:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9416:16:30","nodeType":"YulIdentifier","src":"9416:16:30"},"nativeSrc":"9416:18:30","nodeType":"YulFunctionCall","src":"9416:18:30"},"nativeSrc":"9416:18:30","nodeType":"YulExpressionStatement","src":"9416:18:30"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"9405:4:30","nodeType":"YulIdentifier","src":"9405:4:30"},{"name":"x","nativeSrc":"9411:1:30","nodeType":"YulIdentifier","src":"9411:1:30"}],"functionName":{"name":"gt","nativeSrc":"9402:2:30","nodeType":"YulIdentifier","src":"9402:2:30"},"nativeSrc":"9402:11:30","nodeType":"YulFunctionCall","src":"9402:11:30"},"nativeSrc":"9399:37:30","nodeType":"YulIf","src":"9399:37:30"}]},"name":"checked_sub_t_uint256","nativeSrc":"9314:128:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9345:1:30","nodeType":"YulTypedName","src":"9345:1:30","type":""},{"name":"y","nativeSrc":"9348:1:30","nodeType":"YulTypedName","src":"9348:1:30","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"9354:4:30","nodeType":"YulTypedName","src":"9354:4:30","type":""}],"src":"9314:128:30"},{"body":{"nativeSrc":"9479:95:30","nodeType":"YulBlock","src":"9479:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9496:1:30","nodeType":"YulLiteral","src":"9496:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9503:3:30","nodeType":"YulLiteral","src":"9503:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"9508:10:30","nodeType":"YulLiteral","src":"9508:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9499:3:30","nodeType":"YulIdentifier","src":"9499:3:30"},"nativeSrc":"9499:20:30","nodeType":"YulFunctionCall","src":"9499:20:30"}],"functionName":{"name":"mstore","nativeSrc":"9489:6:30","nodeType":"YulIdentifier","src":"9489:6:30"},"nativeSrc":"9489:31:30","nodeType":"YulFunctionCall","src":"9489:31:30"},"nativeSrc":"9489:31:30","nodeType":"YulExpressionStatement","src":"9489:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9536:1:30","nodeType":"YulLiteral","src":"9536:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"9539:4:30","nodeType":"YulLiteral","src":"9539:4:30","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"9529:6:30","nodeType":"YulIdentifier","src":"9529:6:30"},"nativeSrc":"9529:15:30","nodeType":"YulFunctionCall","src":"9529:15:30"},"nativeSrc":"9529:15:30","nodeType":"YulExpressionStatement","src":"9529:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9560:1:30","nodeType":"YulLiteral","src":"9560:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"9563:4:30","nodeType":"YulLiteral","src":"9563:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9553:6:30","nodeType":"YulIdentifier","src":"9553:6:30"},"nativeSrc":"9553:15:30","nodeType":"YulFunctionCall","src":"9553:15:30"},"nativeSrc":"9553:15:30","nodeType":"YulExpressionStatement","src":"9553:15:30"}]},"name":"panic_error_0x31","nativeSrc":"9447:127:30","nodeType":"YulFunctionDefinition","src":"9447:127:30"},{"body":{"nativeSrc":"9753:165:30","nodeType":"YulBlock","src":"9753:165:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9770:9:30","nodeType":"YulIdentifier","src":"9770:9:30"},{"kind":"number","nativeSrc":"9781:2:30","nodeType":"YulLiteral","src":"9781:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9763:6:30","nodeType":"YulIdentifier","src":"9763:6:30"},"nativeSrc":"9763:21:30","nodeType":"YulFunctionCall","src":"9763:21:30"},"nativeSrc":"9763:21:30","nodeType":"YulExpressionStatement","src":"9763:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9804:9:30","nodeType":"YulIdentifier","src":"9804:9:30"},{"kind":"number","nativeSrc":"9815:2:30","nodeType":"YulLiteral","src":"9815:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9800:3:30","nodeType":"YulIdentifier","src":"9800:3:30"},"nativeSrc":"9800:18:30","nodeType":"YulFunctionCall","src":"9800:18:30"},{"kind":"number","nativeSrc":"9820:2:30","nodeType":"YulLiteral","src":"9820:2:30","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"9793:6:30","nodeType":"YulIdentifier","src":"9793:6:30"},"nativeSrc":"9793:30:30","nodeType":"YulFunctionCall","src":"9793:30:30"},"nativeSrc":"9793:30:30","nodeType":"YulExpressionStatement","src":"9793:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9843:9:30","nodeType":"YulIdentifier","src":"9843:9:30"},{"kind":"number","nativeSrc":"9854:2:30","nodeType":"YulLiteral","src":"9854:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9839:3:30","nodeType":"YulIdentifier","src":"9839:3:30"},"nativeSrc":"9839:18:30","nodeType":"YulFunctionCall","src":"9839:18:30"},{"hexValue":"636c61696d20697320706175736564","kind":"string","nativeSrc":"9859:17:30","nodeType":"YulLiteral","src":"9859:17:30","type":"","value":"claim is paused"}],"functionName":{"name":"mstore","nativeSrc":"9832:6:30","nodeType":"YulIdentifier","src":"9832:6:30"},"nativeSrc":"9832:45:30","nodeType":"YulFunctionCall","src":"9832:45:30"},"nativeSrc":"9832:45:30","nodeType":"YulExpressionStatement","src":"9832:45:30"},{"nativeSrc":"9886:26:30","nodeType":"YulAssignment","src":"9886:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"9898:9:30","nodeType":"YulIdentifier","src":"9898:9:30"},{"kind":"number","nativeSrc":"9909:2:30","nodeType":"YulLiteral","src":"9909:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9894:3:30","nodeType":"YulIdentifier","src":"9894:3:30"},"nativeSrc":"9894:18:30","nodeType":"YulFunctionCall","src":"9894:18:30"},"variableNames":[{"name":"tail","nativeSrc":"9886:4:30","nodeType":"YulIdentifier","src":"9886:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9579:339:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9730:9:30","nodeType":"YulTypedName","src":"9730:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9744:4:30","nodeType":"YulTypedName","src":"9744:4:30","type":""}],"src":"9579:339:30"},{"body":{"nativeSrc":"9975:116:30","nodeType":"YulBlock","src":"9975:116:30","statements":[{"nativeSrc":"9985:20:30","nodeType":"YulAssignment","src":"9985:20:30","value":{"arguments":[{"name":"x","nativeSrc":"10000:1:30","nodeType":"YulIdentifier","src":"10000:1:30"},{"name":"y","nativeSrc":"10003:1:30","nodeType":"YulIdentifier","src":"10003:1:30"}],"functionName":{"name":"mul","nativeSrc":"9996:3:30","nodeType":"YulIdentifier","src":"9996:3:30"},"nativeSrc":"9996:9:30","nodeType":"YulFunctionCall","src":"9996:9:30"},"variableNames":[{"name":"product","nativeSrc":"9985:7:30","nodeType":"YulIdentifier","src":"9985:7:30"}]},{"body":{"nativeSrc":"10063:22:30","nodeType":"YulBlock","src":"10063:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10065:16:30","nodeType":"YulIdentifier","src":"10065:16:30"},"nativeSrc":"10065:18:30","nodeType":"YulFunctionCall","src":"10065:18:30"},"nativeSrc":"10065:18:30","nodeType":"YulExpressionStatement","src":"10065:18:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"10034:1:30","nodeType":"YulIdentifier","src":"10034:1:30"}],"functionName":{"name":"iszero","nativeSrc":"10027:6:30","nodeType":"YulIdentifier","src":"10027:6:30"},"nativeSrc":"10027:9:30","nodeType":"YulFunctionCall","src":"10027:9:30"},{"arguments":[{"name":"y","nativeSrc":"10041:1:30","nodeType":"YulIdentifier","src":"10041:1:30"},{"arguments":[{"name":"product","nativeSrc":"10048:7:30","nodeType":"YulIdentifier","src":"10048:7:30"},{"name":"x","nativeSrc":"10057:1:30","nodeType":"YulIdentifier","src":"10057:1:30"}],"functionName":{"name":"div","nativeSrc":"10044:3:30","nodeType":"YulIdentifier","src":"10044:3:30"},"nativeSrc":"10044:15:30","nodeType":"YulFunctionCall","src":"10044:15:30"}],"functionName":{"name":"eq","nativeSrc":"10038:2:30","nodeType":"YulIdentifier","src":"10038:2:30"},"nativeSrc":"10038:22:30","nodeType":"YulFunctionCall","src":"10038:22:30"}],"functionName":{"name":"or","nativeSrc":"10024:2:30","nodeType":"YulIdentifier","src":"10024:2:30"},"nativeSrc":"10024:37:30","nodeType":"YulFunctionCall","src":"10024:37:30"}],"functionName":{"name":"iszero","nativeSrc":"10017:6:30","nodeType":"YulIdentifier","src":"10017:6:30"},"nativeSrc":"10017:45:30","nodeType":"YulFunctionCall","src":"10017:45:30"},"nativeSrc":"10014:71:30","nodeType":"YulIf","src":"10014:71:30"}]},"name":"checked_mul_t_uint256","nativeSrc":"9923:168:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9954:1:30","nodeType":"YulTypedName","src":"9954:1:30","type":""},{"name":"y","nativeSrc":"9957:1:30","nodeType":"YulTypedName","src":"9957:1:30","type":""}],"returnVariables":[{"name":"product","nativeSrc":"9963:7:30","nodeType":"YulTypedName","src":"9963:7:30","type":""}],"src":"9923:168:30"},{"body":{"nativeSrc":"10128:95:30","nodeType":"YulBlock","src":"10128:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10145:1:30","nodeType":"YulLiteral","src":"10145:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"10152:3:30","nodeType":"YulLiteral","src":"10152:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"10157:10:30","nodeType":"YulLiteral","src":"10157:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"10148:3:30","nodeType":"YulIdentifier","src":"10148:3:30"},"nativeSrc":"10148:20:30","nodeType":"YulFunctionCall","src":"10148:20:30"}],"functionName":{"name":"mstore","nativeSrc":"10138:6:30","nodeType":"YulIdentifier","src":"10138:6:30"},"nativeSrc":"10138:31:30","nodeType":"YulFunctionCall","src":"10138:31:30"},"nativeSrc":"10138:31:30","nodeType":"YulExpressionStatement","src":"10138:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10185:1:30","nodeType":"YulLiteral","src":"10185:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"10188:4:30","nodeType":"YulLiteral","src":"10188:4:30","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"10178:6:30","nodeType":"YulIdentifier","src":"10178:6:30"},"nativeSrc":"10178:15:30","nodeType":"YulFunctionCall","src":"10178:15:30"},"nativeSrc":"10178:15:30","nodeType":"YulExpressionStatement","src":"10178:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10209:1:30","nodeType":"YulLiteral","src":"10209:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"10212:4:30","nodeType":"YulLiteral","src":"10212:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10202:6:30","nodeType":"YulIdentifier","src":"10202:6:30"},"nativeSrc":"10202:15:30","nodeType":"YulFunctionCall","src":"10202:15:30"},"nativeSrc":"10202:15:30","nodeType":"YulExpressionStatement","src":"10202:15:30"}]},"name":"panic_error_0x12","nativeSrc":"10096:127:30","nodeType":"YulFunctionDefinition","src":"10096:127:30"},{"body":{"nativeSrc":"10274:171:30","nodeType":"YulBlock","src":"10274:171:30","statements":[{"body":{"nativeSrc":"10305:111:30","nodeType":"YulBlock","src":"10305:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10326:1:30","nodeType":"YulLiteral","src":"10326:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"10333:3:30","nodeType":"YulLiteral","src":"10333:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"10338:10:30","nodeType":"YulLiteral","src":"10338:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"10329:3:30","nodeType":"YulIdentifier","src":"10329:3:30"},"nativeSrc":"10329:20:30","nodeType":"YulFunctionCall","src":"10329:20:30"}],"functionName":{"name":"mstore","nativeSrc":"10319:6:30","nodeType":"YulIdentifier","src":"10319:6:30"},"nativeSrc":"10319:31:30","nodeType":"YulFunctionCall","src":"10319:31:30"},"nativeSrc":"10319:31:30","nodeType":"YulExpressionStatement","src":"10319:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10370:1:30","nodeType":"YulLiteral","src":"10370:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"10373:4:30","nodeType":"YulLiteral","src":"10373:4:30","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"10363:6:30","nodeType":"YulIdentifier","src":"10363:6:30"},"nativeSrc":"10363:15:30","nodeType":"YulFunctionCall","src":"10363:15:30"},"nativeSrc":"10363:15:30","nodeType":"YulExpressionStatement","src":"10363:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10398:1:30","nodeType":"YulLiteral","src":"10398:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"10401:4:30","nodeType":"YulLiteral","src":"10401:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10391:6:30","nodeType":"YulIdentifier","src":"10391:6:30"},"nativeSrc":"10391:15:30","nodeType":"YulFunctionCall","src":"10391:15:30"},"nativeSrc":"10391:15:30","nodeType":"YulExpressionStatement","src":"10391:15:30"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"10294:1:30","nodeType":"YulIdentifier","src":"10294:1:30"}],"functionName":{"name":"iszero","nativeSrc":"10287:6:30","nodeType":"YulIdentifier","src":"10287:6:30"},"nativeSrc":"10287:9:30","nodeType":"YulFunctionCall","src":"10287:9:30"},"nativeSrc":"10284:132:30","nodeType":"YulIf","src":"10284:132:30"},{"nativeSrc":"10425:14:30","nodeType":"YulAssignment","src":"10425:14:30","value":{"arguments":[{"name":"x","nativeSrc":"10434:1:30","nodeType":"YulIdentifier","src":"10434:1:30"},{"name":"y","nativeSrc":"10437:1:30","nodeType":"YulIdentifier","src":"10437:1:30"}],"functionName":{"name":"div","nativeSrc":"10430:3:30","nodeType":"YulIdentifier","src":"10430:3:30"},"nativeSrc":"10430:9:30","nodeType":"YulFunctionCall","src":"10430:9:30"},"variableNames":[{"name":"r","nativeSrc":"10425:1:30","nodeType":"YulIdentifier","src":"10425:1:30"}]}]},"name":"checked_div_t_uint256","nativeSrc":"10228:217:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10259:1:30","nodeType":"YulTypedName","src":"10259:1:30","type":""},{"name":"y","nativeSrc":"10262:1:30","nodeType":"YulTypedName","src":"10262:1:30","type":""}],"returnVariables":[{"name":"r","nativeSrc":"10268:1:30","nodeType":"YulTypedName","src":"10268:1:30","type":""}],"src":"10228:217:30"},{"body":{"nativeSrc":"10624:229:30","nodeType":"YulBlock","src":"10624:229:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10641:9:30","nodeType":"YulIdentifier","src":"10641:9:30"},{"kind":"number","nativeSrc":"10652:2:30","nodeType":"YulLiteral","src":"10652:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10634:6:30","nodeType":"YulIdentifier","src":"10634:6:30"},"nativeSrc":"10634:21:30","nodeType":"YulFunctionCall","src":"10634:21:30"},"nativeSrc":"10634:21:30","nodeType":"YulExpressionStatement","src":"10634:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10675:9:30","nodeType":"YulIdentifier","src":"10675:9:30"},{"kind":"number","nativeSrc":"10686:2:30","nodeType":"YulLiteral","src":"10686:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10671:3:30","nodeType":"YulIdentifier","src":"10671:3:30"},"nativeSrc":"10671:18:30","nodeType":"YulFunctionCall","src":"10671:18:30"},{"kind":"number","nativeSrc":"10691:2:30","nodeType":"YulLiteral","src":"10691:2:30","type":"","value":"39"}],"functionName":{"name":"mstore","nativeSrc":"10664:6:30","nodeType":"YulIdentifier","src":"10664:6:30"},"nativeSrc":"10664:30:30","nodeType":"YulFunctionCall","src":"10664:30:30"},"nativeSrc":"10664:30:30","nodeType":"YulExpressionStatement","src":"10664:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10714:9:30","nodeType":"YulIdentifier","src":"10714:9:30"},{"kind":"number","nativeSrc":"10725:2:30","nodeType":"YulLiteral","src":"10725:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10710:3:30","nodeType":"YulIdentifier","src":"10710:3:30"},"nativeSrc":"10710:18:30","nodeType":"YulFunctionCall","src":"10710:18:30"},{"hexValue":"737461727420626c6f636b206d757374206265206c657373207468616e20656e","kind":"string","nativeSrc":"10730:34:30","nodeType":"YulLiteral","src":"10730:34:30","type":"","value":"start block must be less than en"}],"functionName":{"name":"mstore","nativeSrc":"10703:6:30","nodeType":"YulIdentifier","src":"10703:6:30"},"nativeSrc":"10703:62:30","nodeType":"YulFunctionCall","src":"10703:62:30"},"nativeSrc":"10703:62:30","nodeType":"YulExpressionStatement","src":"10703:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10785:9:30","nodeType":"YulIdentifier","src":"10785:9:30"},{"kind":"number","nativeSrc":"10796:2:30","nodeType":"YulLiteral","src":"10796:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10781:3:30","nodeType":"YulIdentifier","src":"10781:3:30"},"nativeSrc":"10781:18:30","nodeType":"YulFunctionCall","src":"10781:18:30"},{"hexValue":"6420626c6f636b","kind":"string","nativeSrc":"10801:9:30","nodeType":"YulLiteral","src":"10801:9:30","type":"","value":"d block"}],"functionName":{"name":"mstore","nativeSrc":"10774:6:30","nodeType":"YulIdentifier","src":"10774:6:30"},"nativeSrc":"10774:37:30","nodeType":"YulFunctionCall","src":"10774:37:30"},"nativeSrc":"10774:37:30","nodeType":"YulExpressionStatement","src":"10774:37:30"},{"nativeSrc":"10820:27:30","nodeType":"YulAssignment","src":"10820:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"10832:9:30","nodeType":"YulIdentifier","src":"10832:9:30"},{"kind":"number","nativeSrc":"10843:3:30","nodeType":"YulLiteral","src":"10843:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10828:3:30","nodeType":"YulIdentifier","src":"10828:3:30"},"nativeSrc":"10828:19:30","nodeType":"YulFunctionCall","src":"10828:19:30"},"variableNames":[{"name":"tail","nativeSrc":"10820:4:30","nodeType":"YulIdentifier","src":"10820:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10450:403:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10601:9:30","nodeType":"YulTypedName","src":"10601:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10615:4:30","nodeType":"YulTypedName","src":"10615:4:30","type":""}],"src":"10450:403:30"},{"body":{"nativeSrc":"11032:226:30","nodeType":"YulBlock","src":"11032:226:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11049:9:30","nodeType":"YulIdentifier","src":"11049:9:30"},{"kind":"number","nativeSrc":"11060:2:30","nodeType":"YulLiteral","src":"11060:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11042:6:30","nodeType":"YulIdentifier","src":"11042:6:30"},"nativeSrc":"11042:21:30","nodeType":"YulFunctionCall","src":"11042:21:30"},"nativeSrc":"11042:21:30","nodeType":"YulExpressionStatement","src":"11042:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11083:9:30","nodeType":"YulIdentifier","src":"11083:9:30"},{"kind":"number","nativeSrc":"11094:2:30","nodeType":"YulLiteral","src":"11094:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11079:3:30","nodeType":"YulIdentifier","src":"11079:3:30"},"nativeSrc":"11079:18:30","nodeType":"YulFunctionCall","src":"11079:18:30"},{"kind":"number","nativeSrc":"11099:2:30","nodeType":"YulLiteral","src":"11099:2:30","type":"","value":"36"}],"functionName":{"name":"mstore","nativeSrc":"11072:6:30","nodeType":"YulIdentifier","src":"11072:6:30"},"nativeSrc":"11072:30:30","nodeType":"YulFunctionCall","src":"11072:30:30"},"nativeSrc":"11072:30:30","nodeType":"YulExpressionStatement","src":"11072:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11122:9:30","nodeType":"YulIdentifier","src":"11122:9:30"},{"kind":"number","nativeSrc":"11133:2:30","nodeType":"YulLiteral","src":"11133:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11118:3:30","nodeType":"YulIdentifier","src":"11118:3:30"},"nativeSrc":"11118:18:30","nodeType":"YulFunctionCall","src":"11118:18:30"},{"hexValue":"7263632070657220626c6f636b206d7573742062652067726561746572207468","kind":"string","nativeSrc":"11138:34:30","nodeType":"YulLiteral","src":"11138:34:30","type":"","value":"rcc per block must be greater th"}],"functionName":{"name":"mstore","nativeSrc":"11111:6:30","nodeType":"YulIdentifier","src":"11111:6:30"},"nativeSrc":"11111:62:30","nodeType":"YulFunctionCall","src":"11111:62:30"},"nativeSrc":"11111:62:30","nodeType":"YulExpressionStatement","src":"11111:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11193:9:30","nodeType":"YulIdentifier","src":"11193:9:30"},{"kind":"number","nativeSrc":"11204:2:30","nodeType":"YulLiteral","src":"11204:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11189:3:30","nodeType":"YulIdentifier","src":"11189:3:30"},"nativeSrc":"11189:18:30","nodeType":"YulFunctionCall","src":"11189:18:30"},{"hexValue":"616e2030","kind":"string","nativeSrc":"11209:6:30","nodeType":"YulLiteral","src":"11209:6:30","type":"","value":"an 0"}],"functionName":{"name":"mstore","nativeSrc":"11182:6:30","nodeType":"YulIdentifier","src":"11182:6:30"},"nativeSrc":"11182:34:30","nodeType":"YulFunctionCall","src":"11182:34:30"},"nativeSrc":"11182:34:30","nodeType":"YulExpressionStatement","src":"11182:34:30"},{"nativeSrc":"11225:27:30","nodeType":"YulAssignment","src":"11225:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"11237:9:30","nodeType":"YulIdentifier","src":"11237:9:30"},{"kind":"number","nativeSrc":"11248:3:30","nodeType":"YulLiteral","src":"11248:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11233:3:30","nodeType":"YulIdentifier","src":"11233:3:30"},"nativeSrc":"11233:19:30","nodeType":"YulFunctionCall","src":"11233:19:30"},"variableNames":[{"name":"tail","nativeSrc":"11225:4:30","nodeType":"YulIdentifier","src":"11225:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10858:400:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11009:9:30","nodeType":"YulTypedName","src":"11009:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11023:4:30","nodeType":"YulTypedName","src":"11023:4:30","type":""}],"src":"10858:400:30"},{"body":{"nativeSrc":"11371:101:30","nodeType":"YulBlock","src":"11371:101:30","statements":[{"nativeSrc":"11381:26:30","nodeType":"YulAssignment","src":"11381:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"11393:9:30","nodeType":"YulIdentifier","src":"11393:9:30"},{"kind":"number","nativeSrc":"11404:2:30","nodeType":"YulLiteral","src":"11404:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11389:3:30","nodeType":"YulIdentifier","src":"11389:3:30"},"nativeSrc":"11389:18:30","nodeType":"YulFunctionCall","src":"11389:18:30"},"variableNames":[{"name":"tail","nativeSrc":"11381:4:30","nodeType":"YulIdentifier","src":"11381:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11423:9:30","nodeType":"YulIdentifier","src":"11423:9:30"},{"arguments":[{"name":"value0","nativeSrc":"11438:6:30","nodeType":"YulIdentifier","src":"11438:6:30"},{"kind":"number","nativeSrc":"11446:18:30","nodeType":"YulLiteral","src":"11446:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"11434:3:30","nodeType":"YulIdentifier","src":"11434:3:30"},"nativeSrc":"11434:31:30","nodeType":"YulFunctionCall","src":"11434:31:30"}],"functionName":{"name":"mstore","nativeSrc":"11416:6:30","nodeType":"YulIdentifier","src":"11416:6:30"},"nativeSrc":"11416:50:30","nodeType":"YulFunctionCall","src":"11416:50:30"},"nativeSrc":"11416:50:30","nodeType":"YulExpressionStatement","src":"11416:50:30"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"11263:209:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11340:9:30","nodeType":"YulTypedName","src":"11340:9:30","type":""},{"name":"value0","nativeSrc":"11351:6:30","nodeType":"YulTypedName","src":"11351:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11362:4:30","nodeType":"YulTypedName","src":"11362:4:30","type":""}],"src":"11263:209:30"},{"body":{"nativeSrc":"11651:157:30","nodeType":"YulBlock","src":"11651:157:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11668:9:30","nodeType":"YulIdentifier","src":"11668:9:30"},{"kind":"number","nativeSrc":"11679:2:30","nodeType":"YulLiteral","src":"11679:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11661:6:30","nodeType":"YulIdentifier","src":"11661:6:30"},"nativeSrc":"11661:21:30","nodeType":"YulFunctionCall","src":"11661:21:30"},"nativeSrc":"11661:21:30","nodeType":"YulExpressionStatement","src":"11661:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11702:9:30","nodeType":"YulIdentifier","src":"11702:9:30"},{"kind":"number","nativeSrc":"11713:2:30","nodeType":"YulLiteral","src":"11713:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11698:3:30","nodeType":"YulIdentifier","src":"11698:3:30"},"nativeSrc":"11698:18:30","nodeType":"YulFunctionCall","src":"11698:18:30"},{"kind":"number","nativeSrc":"11718:1:30","nodeType":"YulLiteral","src":"11718:1:30","type":"","value":"8"}],"functionName":{"name":"mstore","nativeSrc":"11691:6:30","nodeType":"YulIdentifier","src":"11691:6:30"},"nativeSrc":"11691:29:30","nodeType":"YulFunctionCall","src":"11691:29:30"},"nativeSrc":"11691:29:30","nodeType":"YulExpressionStatement","src":"11691:29:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11740:9:30","nodeType":"YulIdentifier","src":"11740:9:30"},{"kind":"number","nativeSrc":"11751:2:30","nodeType":"YulLiteral","src":"11751:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11736:3:30","nodeType":"YulIdentifier","src":"11736:3:30"},"nativeSrc":"11736:18:30","nodeType":"YulFunctionCall","src":"11736:18:30"},{"hexValue":"6f766572666c6f77","kind":"string","nativeSrc":"11756:10:30","nodeType":"YulLiteral","src":"11756:10:30","type":"","value":"overflow"}],"functionName":{"name":"mstore","nativeSrc":"11729:6:30","nodeType":"YulIdentifier","src":"11729:6:30"},"nativeSrc":"11729:38:30","nodeType":"YulFunctionCall","src":"11729:38:30"},"nativeSrc":"11729:38:30","nodeType":"YulExpressionStatement","src":"11729:38:30"},{"nativeSrc":"11776:26:30","nodeType":"YulAssignment","src":"11776:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"11788:9:30","nodeType":"YulIdentifier","src":"11788:9:30"},{"kind":"number","nativeSrc":"11799:2:30","nodeType":"YulLiteral","src":"11799:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11784:3:30","nodeType":"YulIdentifier","src":"11784:3:30"},"nativeSrc":"11784:18:30","nodeType":"YulFunctionCall","src":"11784:18:30"},"variableNames":[{"name":"tail","nativeSrc":"11776:4:30","nodeType":"YulIdentifier","src":"11776:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11477:331:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11628:9:30","nodeType":"YulTypedName","src":"11628:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11642:4:30","nodeType":"YulTypedName","src":"11642:4:30","type":""}],"src":"11477:331:30"},{"body":{"nativeSrc":"11987:224:30","nodeType":"YulBlock","src":"11987:224:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12004:9:30","nodeType":"YulIdentifier","src":"12004:9:30"},{"kind":"number","nativeSrc":"12015:2:30","nodeType":"YulLiteral","src":"12015:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11997:6:30","nodeType":"YulIdentifier","src":"11997:6:30"},"nativeSrc":"11997:21:30","nodeType":"YulFunctionCall","src":"11997:21:30"},"nativeSrc":"11997:21:30","nodeType":"YulExpressionStatement","src":"11997:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12038:9:30","nodeType":"YulIdentifier","src":"12038:9:30"},{"kind":"number","nativeSrc":"12049:2:30","nodeType":"YulLiteral","src":"12049:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12034:3:30","nodeType":"YulIdentifier","src":"12034:3:30"},"nativeSrc":"12034:18:30","nodeType":"YulFunctionCall","src":"12034:18:30"},{"kind":"number","nativeSrc":"12054:2:30","nodeType":"YulLiteral","src":"12054:2:30","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"12027:6:30","nodeType":"YulIdentifier","src":"12027:6:30"},"nativeSrc":"12027:30:30","nodeType":"YulFunctionCall","src":"12027:30:30"},"nativeSrc":"12027:30:30","nodeType":"YulExpressionStatement","src":"12027:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12077:9:30","nodeType":"YulIdentifier","src":"12077:9:30"},{"kind":"number","nativeSrc":"12088:2:30","nodeType":"YulLiteral","src":"12088:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12073:3:30","nodeType":"YulIdentifier","src":"12073:3:30"},"nativeSrc":"12073:18:30","nodeType":"YulFunctionCall","src":"12073:18:30"},{"hexValue":"77697468647261772068617320616c7265616479206265656e20756e70617573","kind":"string","nativeSrc":"12093:34:30","nodeType":"YulLiteral","src":"12093:34:30","type":"","value":"withdraw has already been unpaus"}],"functionName":{"name":"mstore","nativeSrc":"12066:6:30","nodeType":"YulIdentifier","src":"12066:6:30"},"nativeSrc":"12066:62:30","nodeType":"YulFunctionCall","src":"12066:62:30"},"nativeSrc":"12066:62:30","nodeType":"YulExpressionStatement","src":"12066:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12148:9:30","nodeType":"YulIdentifier","src":"12148:9:30"},{"kind":"number","nativeSrc":"12159:2:30","nodeType":"YulLiteral","src":"12159:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12144:3:30","nodeType":"YulIdentifier","src":"12144:3:30"},"nativeSrc":"12144:18:30","nodeType":"YulFunctionCall","src":"12144:18:30"},{"hexValue":"6564","kind":"string","nativeSrc":"12164:4:30","nodeType":"YulLiteral","src":"12164:4:30","type":"","value":"ed"}],"functionName":{"name":"mstore","nativeSrc":"12137:6:30","nodeType":"YulIdentifier","src":"12137:6:30"},"nativeSrc":"12137:32:30","nodeType":"YulFunctionCall","src":"12137:32:30"},"nativeSrc":"12137:32:30","nodeType":"YulExpressionStatement","src":"12137:32:30"},{"nativeSrc":"12178:27:30","nodeType":"YulAssignment","src":"12178:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"12190:9:30","nodeType":"YulIdentifier","src":"12190:9:30"},{"kind":"number","nativeSrc":"12201:3:30","nodeType":"YulLiteral","src":"12201:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12186:3:30","nodeType":"YulIdentifier","src":"12186:3:30"},"nativeSrc":"12186:19:30","nodeType":"YulFunctionCall","src":"12186:19:30"},"variableNames":[{"name":"tail","nativeSrc":"12178:4:30","nodeType":"YulIdentifier","src":"12178:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11813:398:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11964:9:30","nodeType":"YulTypedName","src":"11964:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11978:4:30","nodeType":"YulTypedName","src":"11978:4:30","type":""}],"src":"11813:398:30"},{"body":{"nativeSrc":"12390:163:30","nodeType":"YulBlock","src":"12390:163:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12407:9:30","nodeType":"YulIdentifier","src":"12407:9:30"},{"kind":"number","nativeSrc":"12418:2:30","nodeType":"YulLiteral","src":"12418:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12400:6:30","nodeType":"YulIdentifier","src":"12400:6:30"},"nativeSrc":"12400:21:30","nodeType":"YulFunctionCall","src":"12400:21:30"},"nativeSrc":"12400:21:30","nodeType":"YulExpressionStatement","src":"12400:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12441:9:30","nodeType":"YulIdentifier","src":"12441:9:30"},{"kind":"number","nativeSrc":"12452:2:30","nodeType":"YulLiteral","src":"12452:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12437:3:30","nodeType":"YulIdentifier","src":"12437:3:30"},"nativeSrc":"12437:18:30","nodeType":"YulFunctionCall","src":"12437:18:30"},{"kind":"number","nativeSrc":"12457:2:30","nodeType":"YulLiteral","src":"12457:2:30","type":"","value":"13"}],"functionName":{"name":"mstore","nativeSrc":"12430:6:30","nodeType":"YulIdentifier","src":"12430:6:30"},"nativeSrc":"12430:30:30","nodeType":"YulFunctionCall","src":"12430:30:30"},"nativeSrc":"12430:30:30","nodeType":"YulExpressionStatement","src":"12430:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12480:9:30","nodeType":"YulIdentifier","src":"12480:9:30"},{"kind":"number","nativeSrc":"12491:2:30","nodeType":"YulLiteral","src":"12491:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12476:3:30","nodeType":"YulIdentifier","src":"12476:3:30"},"nativeSrc":"12476:18:30","nodeType":"YulFunctionCall","src":"12476:18:30"},{"hexValue":"696e76616c69642072616e6765","kind":"string","nativeSrc":"12496:15:30","nodeType":"YulLiteral","src":"12496:15:30","type":"","value":"invalid range"}],"functionName":{"name":"mstore","nativeSrc":"12469:6:30","nodeType":"YulIdentifier","src":"12469:6:30"},"nativeSrc":"12469:43:30","nodeType":"YulFunctionCall","src":"12469:43:30"},"nativeSrc":"12469:43:30","nodeType":"YulExpressionStatement","src":"12469:43:30"},{"nativeSrc":"12521:26:30","nodeType":"YulAssignment","src":"12521:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"12533:9:30","nodeType":"YulIdentifier","src":"12533:9:30"},{"kind":"number","nativeSrc":"12544:2:30","nodeType":"YulLiteral","src":"12544:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12529:3:30","nodeType":"YulIdentifier","src":"12529:3:30"},"nativeSrc":"12529:18:30","nodeType":"YulFunctionCall","src":"12529:18:30"},"variableNames":[{"name":"tail","nativeSrc":"12521:4:30","nodeType":"YulIdentifier","src":"12521:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12216:337:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12367:9:30","nodeType":"YulTypedName","src":"12367:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12381:4:30","nodeType":"YulTypedName","src":"12381:4:30","type":""}],"src":"12216:337:30"},{"body":{"nativeSrc":"12732:169:30","nodeType":"YulBlock","src":"12732:169:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12749:9:30","nodeType":"YulIdentifier","src":"12749:9:30"},{"kind":"number","nativeSrc":"12760:2:30","nodeType":"YulLiteral","src":"12760:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12742:6:30","nodeType":"YulIdentifier","src":"12742:6:30"},"nativeSrc":"12742:21:30","nodeType":"YulFunctionCall","src":"12742:21:30"},"nativeSrc":"12742:21:30","nodeType":"YulExpressionStatement","src":"12742:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12783:9:30","nodeType":"YulIdentifier","src":"12783:9:30"},{"kind":"number","nativeSrc":"12794:2:30","nodeType":"YulLiteral","src":"12794:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12779:3:30","nodeType":"YulIdentifier","src":"12779:3:30"},"nativeSrc":"12779:18:30","nodeType":"YulFunctionCall","src":"12779:18:30"},{"kind":"number","nativeSrc":"12799:2:30","nodeType":"YulLiteral","src":"12799:2:30","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"12772:6:30","nodeType":"YulIdentifier","src":"12772:6:30"},"nativeSrc":"12772:30:30","nodeType":"YulFunctionCall","src":"12772:30:30"},"nativeSrc":"12772:30:30","nodeType":"YulExpressionStatement","src":"12772:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12822:9:30","nodeType":"YulIdentifier","src":"12822:9:30"},{"kind":"number","nativeSrc":"12833:2:30","nodeType":"YulLiteral","src":"12833:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12818:3:30","nodeType":"YulIdentifier","src":"12818:3:30"},"nativeSrc":"12818:18:30","nodeType":"YulFunctionCall","src":"12818:18:30"},{"hexValue":"6d756c7469706c696572206f766572666c6f77","kind":"string","nativeSrc":"12838:21:30","nodeType":"YulLiteral","src":"12838:21:30","type":"","value":"multiplier overflow"}],"functionName":{"name":"mstore","nativeSrc":"12811:6:30","nodeType":"YulIdentifier","src":"12811:6:30"},"nativeSrc":"12811:49:30","nodeType":"YulFunctionCall","src":"12811:49:30"},"nativeSrc":"12811:49:30","nodeType":"YulExpressionStatement","src":"12811:49:30"},{"nativeSrc":"12869:26:30","nodeType":"YulAssignment","src":"12869:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"12881:9:30","nodeType":"YulIdentifier","src":"12881:9:30"},{"kind":"number","nativeSrc":"12892:2:30","nodeType":"YulLiteral","src":"12892:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12877:3:30","nodeType":"YulIdentifier","src":"12877:3:30"},"nativeSrc":"12877:18:30","nodeType":"YulFunctionCall","src":"12877:18:30"},"variableNames":[{"name":"tail","nativeSrc":"12869:4:30","nodeType":"YulIdentifier","src":"12869:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12558:343:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12709:9:30","nodeType":"YulTypedName","src":"12709:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12723:4:30","nodeType":"YulTypedName","src":"12723:4:30","type":""}],"src":"12558:343:30"},{"body":{"nativeSrc":"13080:182:30","nodeType":"YulBlock","src":"13080:182:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13097:9:30","nodeType":"YulIdentifier","src":"13097:9:30"},{"kind":"number","nativeSrc":"13108:2:30","nodeType":"YulLiteral","src":"13108:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13090:6:30","nodeType":"YulIdentifier","src":"13090:6:30"},"nativeSrc":"13090:21:30","nodeType":"YulFunctionCall","src":"13090:21:30"},"nativeSrc":"13090:21:30","nodeType":"YulExpressionStatement","src":"13090:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13131:9:30","nodeType":"YulIdentifier","src":"13131:9:30"},{"kind":"number","nativeSrc":"13142:2:30","nodeType":"YulLiteral","src":"13142:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13127:3:30","nodeType":"YulIdentifier","src":"13127:3:30"},"nativeSrc":"13127:18:30","nodeType":"YulFunctionCall","src":"13127:18:30"},{"kind":"number","nativeSrc":"13147:2:30","nodeType":"YulLiteral","src":"13147:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13120:6:30","nodeType":"YulIdentifier","src":"13120:6:30"},"nativeSrc":"13120:30:30","nodeType":"YulFunctionCall","src":"13120:30:30"},"nativeSrc":"13120:30:30","nodeType":"YulExpressionStatement","src":"13120:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13170:9:30","nodeType":"YulIdentifier","src":"13170:9:30"},{"kind":"number","nativeSrc":"13181:2:30","nodeType":"YulLiteral","src":"13181:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13166:3:30","nodeType":"YulIdentifier","src":"13166:3:30"},"nativeSrc":"13166:18:30","nodeType":"YulFunctionCall","src":"13166:18:30"},{"hexValue":"4e6f7420656e6f756768207374616b696e6720746f6b656e2062616c616e6365","kind":"string","nativeSrc":"13186:34:30","nodeType":"YulLiteral","src":"13186:34:30","type":"","value":"Not enough staking token balance"}],"functionName":{"name":"mstore","nativeSrc":"13159:6:30","nodeType":"YulIdentifier","src":"13159:6:30"},"nativeSrc":"13159:62:30","nodeType":"YulFunctionCall","src":"13159:62:30"},"nativeSrc":"13159:62:30","nodeType":"YulExpressionStatement","src":"13159:62:30"},{"nativeSrc":"13230:26:30","nodeType":"YulAssignment","src":"13230:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"13242:9:30","nodeType":"YulIdentifier","src":"13242:9:30"},{"kind":"number","nativeSrc":"13253:2:30","nodeType":"YulLiteral","src":"13253:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13238:3:30","nodeType":"YulIdentifier","src":"13238:3:30"},"nativeSrc":"13238:18:30","nodeType":"YulFunctionCall","src":"13238:18:30"},"variableNames":[{"name":"tail","nativeSrc":"13230:4:30","nodeType":"YulIdentifier","src":"13230:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_a40f5adcc0f327ea4569b64219d34444458f98e534070c4ae22df0b574107ecf__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12906:356:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13057:9:30","nodeType":"YulTypedName","src":"13057:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13071:4:30","nodeType":"YulTypedName","src":"13071:4:30","type":""}],"src":"12906:356:30"},{"body":{"nativeSrc":"13441:158:30","nodeType":"YulBlock","src":"13441:158:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13458:9:30","nodeType":"YulIdentifier","src":"13458:9:30"},{"kind":"number","nativeSrc":"13469:2:30","nodeType":"YulLiteral","src":"13469:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13451:6:30","nodeType":"YulIdentifier","src":"13451:6:30"},"nativeSrc":"13451:21:30","nodeType":"YulFunctionCall","src":"13451:21:30"},"nativeSrc":"13451:21:30","nodeType":"YulExpressionStatement","src":"13451:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13492:9:30","nodeType":"YulIdentifier","src":"13492:9:30"},{"kind":"number","nativeSrc":"13503:2:30","nodeType":"YulLiteral","src":"13503:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13488:3:30","nodeType":"YulIdentifier","src":"13488:3:30"},"nativeSrc":"13488:18:30","nodeType":"YulFunctionCall","src":"13488:18:30"},{"kind":"number","nativeSrc":"13508:1:30","nodeType":"YulLiteral","src":"13508:1:30","type":"","value":"9"}],"functionName":{"name":"mstore","nativeSrc":"13481:6:30","nodeType":"YulIdentifier","src":"13481:6:30"},"nativeSrc":"13481:29:30","nodeType":"YulFunctionCall","src":"13481:29:30"},"nativeSrc":"13481:29:30","nodeType":"YulExpressionStatement","src":"13481:29:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13530:9:30","nodeType":"YulIdentifier","src":"13530:9:30"},{"kind":"number","nativeSrc":"13541:2:30","nodeType":"YulLiteral","src":"13541:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13526:3:30","nodeType":"YulIdentifier","src":"13526:3:30"},"nativeSrc":"13526:18:30","nodeType":"YulFunctionCall","src":"13526:18:30"},{"hexValue":"6f766572666c6f7732","kind":"string","nativeSrc":"13546:11:30","nodeType":"YulLiteral","src":"13546:11:30","type":"","value":"overflow2"}],"functionName":{"name":"mstore","nativeSrc":"13519:6:30","nodeType":"YulIdentifier","src":"13519:6:30"},"nativeSrc":"13519:39:30","nodeType":"YulFunctionCall","src":"13519:39:30"},"nativeSrc":"13519:39:30","nodeType":"YulExpressionStatement","src":"13519:39:30"},{"nativeSrc":"13567:26:30","nodeType":"YulAssignment","src":"13567:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"13579:9:30","nodeType":"YulIdentifier","src":"13579:9:30"},{"kind":"number","nativeSrc":"13590:2:30","nodeType":"YulLiteral","src":"13590:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13575:3:30","nodeType":"YulIdentifier","src":"13575:3:30"},"nativeSrc":"13575:18:30","nodeType":"YulFunctionCall","src":"13575:18:30"},"variableNames":[{"name":"tail","nativeSrc":"13567:4:30","nodeType":"YulIdentifier","src":"13567:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_bc46be7e88dad9c850cfc31962eb9871149b07b0ba227a4233d18e86f3aa2886__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13267:332:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13418:9:30","nodeType":"YulTypedName","src":"13418:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13432:4:30","nodeType":"YulTypedName","src":"13432:4:30","type":""}],"src":"13267:332:30"},{"body":{"nativeSrc":"13778:158:30","nodeType":"YulBlock","src":"13778:158:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13795:9:30","nodeType":"YulIdentifier","src":"13795:9:30"},{"kind":"number","nativeSrc":"13806:2:30","nodeType":"YulLiteral","src":"13806:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13788:6:30","nodeType":"YulIdentifier","src":"13788:6:30"},"nativeSrc":"13788:21:30","nodeType":"YulFunctionCall","src":"13788:21:30"},"nativeSrc":"13788:21:30","nodeType":"YulExpressionStatement","src":"13788:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13829:9:30","nodeType":"YulIdentifier","src":"13829:9:30"},{"kind":"number","nativeSrc":"13840:2:30","nodeType":"YulLiteral","src":"13840:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13825:3:30","nodeType":"YulIdentifier","src":"13825:3:30"},"nativeSrc":"13825:18:30","nodeType":"YulFunctionCall","src":"13825:18:30"},{"kind":"number","nativeSrc":"13845:1:30","nodeType":"YulLiteral","src":"13845:1:30","type":"","value":"9"}],"functionName":{"name":"mstore","nativeSrc":"13818:6:30","nodeType":"YulIdentifier","src":"13818:6:30"},"nativeSrc":"13818:29:30","nodeType":"YulFunctionCall","src":"13818:29:30"},"nativeSrc":"13818:29:30","nodeType":"YulExpressionStatement","src":"13818:29:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13867:9:30","nodeType":"YulIdentifier","src":"13867:9:30"},{"kind":"number","nativeSrc":"13878:2:30","nodeType":"YulLiteral","src":"13878:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13863:3:30","nodeType":"YulIdentifier","src":"13863:3:30"},"nativeSrc":"13863:18:30","nodeType":"YulFunctionCall","src":"13863:18:30"},{"hexValue":"6f766572666c6f7733","kind":"string","nativeSrc":"13883:11:30","nodeType":"YulLiteral","src":"13883:11:30","type":"","value":"overflow3"}],"functionName":{"name":"mstore","nativeSrc":"13856:6:30","nodeType":"YulIdentifier","src":"13856:6:30"},"nativeSrc":"13856:39:30","nodeType":"YulFunctionCall","src":"13856:39:30"},"nativeSrc":"13856:39:30","nodeType":"YulExpressionStatement","src":"13856:39:30"},{"nativeSrc":"13904:26:30","nodeType":"YulAssignment","src":"13904:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"13916:9:30","nodeType":"YulIdentifier","src":"13916:9:30"},{"kind":"number","nativeSrc":"13927:2:30","nodeType":"YulLiteral","src":"13927:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13912:3:30","nodeType":"YulIdentifier","src":"13912:3:30"},"nativeSrc":"13912:18:30","nodeType":"YulFunctionCall","src":"13912:18:30"},"variableNames":[{"name":"tail","nativeSrc":"13904:4:30","nodeType":"YulIdentifier","src":"13904:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_f5e521e2c65f04ddc979b259b7b59d4bb841d693fe0fe14d56a3ec19243b969a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13604:332:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13755:9:30","nodeType":"YulTypedName","src":"13755:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13769:4:30","nodeType":"YulTypedName","src":"13769:4:30","type":""}],"src":"13604:332:30"},{"body":{"nativeSrc":"14115:181:30","nodeType":"YulBlock","src":"14115:181:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14132:9:30","nodeType":"YulIdentifier","src":"14132:9:30"},{"kind":"number","nativeSrc":"14143:2:30","nodeType":"YulLiteral","src":"14143:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14125:6:30","nodeType":"YulIdentifier","src":"14125:6:30"},"nativeSrc":"14125:21:30","nodeType":"YulFunctionCall","src":"14125:21:30"},"nativeSrc":"14125:21:30","nodeType":"YulExpressionStatement","src":"14125:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14166:9:30","nodeType":"YulIdentifier","src":"14166:9:30"},{"kind":"number","nativeSrc":"14177:2:30","nodeType":"YulLiteral","src":"14177:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14162:3:30","nodeType":"YulIdentifier","src":"14162:3:30"},"nativeSrc":"14162:18:30","nodeType":"YulFunctionCall","src":"14162:18:30"},{"kind":"number","nativeSrc":"14182:2:30","nodeType":"YulLiteral","src":"14182:2:30","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"14155:6:30","nodeType":"YulIdentifier","src":"14155:6:30"},"nativeSrc":"14155:30:30","nodeType":"YulFunctionCall","src":"14155:30:30"},"nativeSrc":"14155:30:30","nodeType":"YulExpressionStatement","src":"14155:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14205:9:30","nodeType":"YulIdentifier","src":"14205:9:30"},{"kind":"number","nativeSrc":"14216:2:30","nodeType":"YulLiteral","src":"14216:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14201:3:30","nodeType":"YulIdentifier","src":"14201:3:30"},"nativeSrc":"14201:18:30","nodeType":"YulFunctionCall","src":"14201:18:30"},{"hexValue":"74686520666972737420706f6f6c206d7573742062652045544820706f6f6c","kind":"string","nativeSrc":"14221:33:30","nodeType":"YulLiteral","src":"14221:33:30","type":"","value":"the first pool must be ETH pool"}],"functionName":{"name":"mstore","nativeSrc":"14194:6:30","nodeType":"YulIdentifier","src":"14194:6:30"},"nativeSrc":"14194:61:30","nodeType":"YulFunctionCall","src":"14194:61:30"},"nativeSrc":"14194:61:30","nodeType":"YulExpressionStatement","src":"14194:61:30"},{"nativeSrc":"14264:26:30","nodeType":"YulAssignment","src":"14264:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"14276:9:30","nodeType":"YulIdentifier","src":"14276:9:30"},{"kind":"number","nativeSrc":"14287:2:30","nodeType":"YulLiteral","src":"14287:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14272:3:30","nodeType":"YulIdentifier","src":"14272:3:30"},"nativeSrc":"14272:18:30","nodeType":"YulFunctionCall","src":"14272:18:30"},"variableNames":[{"name":"tail","nativeSrc":"14264:4:30","nodeType":"YulIdentifier","src":"14264:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13941:355:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14092:9:30","nodeType":"YulTypedName","src":"14092:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14106:4:30","nodeType":"YulTypedName","src":"14106:4:30","type":""}],"src":"13941:355:30"},{"body":{"nativeSrc":"14475:180:30","nodeType":"YulBlock","src":"14475:180:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14492:9:30","nodeType":"YulIdentifier","src":"14492:9:30"},{"kind":"number","nativeSrc":"14503:2:30","nodeType":"YulLiteral","src":"14503:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14485:6:30","nodeType":"YulIdentifier","src":"14485:6:30"},"nativeSrc":"14485:21:30","nodeType":"YulFunctionCall","src":"14485:21:30"},"nativeSrc":"14485:21:30","nodeType":"YulExpressionStatement","src":"14485:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14526:9:30","nodeType":"YulIdentifier","src":"14526:9:30"},{"kind":"number","nativeSrc":"14537:2:30","nodeType":"YulLiteral","src":"14537:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14522:3:30","nodeType":"YulIdentifier","src":"14522:3:30"},"nativeSrc":"14522:18:30","nodeType":"YulFunctionCall","src":"14522:18:30"},{"kind":"number","nativeSrc":"14542:2:30","nodeType":"YulLiteral","src":"14542:2:30","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"14515:6:30","nodeType":"YulIdentifier","src":"14515:6:30"},"nativeSrc":"14515:30:30","nodeType":"YulFunctionCall","src":"14515:30:30"},"nativeSrc":"14515:30:30","nodeType":"YulExpressionStatement","src":"14515:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14565:9:30","nodeType":"YulIdentifier","src":"14565:9:30"},{"kind":"number","nativeSrc":"14576:2:30","nodeType":"YulLiteral","src":"14576:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14561:3:30","nodeType":"YulIdentifier","src":"14561:3:30"},"nativeSrc":"14561:18:30","nodeType":"YulFunctionCall","src":"14561:18:30"},{"hexValue":"696e76616c6964207769746864726177206c6f636b656420626c6f636b73","kind":"string","nativeSrc":"14581:32:30","nodeType":"YulLiteral","src":"14581:32:30","type":"","value":"invalid withdraw locked blocks"}],"functionName":{"name":"mstore","nativeSrc":"14554:6:30","nodeType":"YulIdentifier","src":"14554:6:30"},"nativeSrc":"14554:60:30","nodeType":"YulFunctionCall","src":"14554:60:30"},"nativeSrc":"14554:60:30","nodeType":"YulExpressionStatement","src":"14554:60:30"},{"nativeSrc":"14623:26:30","nodeType":"YulAssignment","src":"14623:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"14635:9:30","nodeType":"YulIdentifier","src":"14635:9:30"},{"kind":"number","nativeSrc":"14646:2:30","nodeType":"YulLiteral","src":"14646:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14631:3:30","nodeType":"YulIdentifier","src":"14631:3:30"},"nativeSrc":"14631:18:30","nodeType":"YulFunctionCall","src":"14631:18:30"},"variableNames":[{"name":"tail","nativeSrc":"14623:4:30","nodeType":"YulIdentifier","src":"14623:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14301:354:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14452:9:30","nodeType":"YulTypedName","src":"14452:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14466:4:30","nodeType":"YulTypedName","src":"14466:4:30","type":""}],"src":"14301:354:30"},{"body":{"nativeSrc":"14834:163:30","nodeType":"YulBlock","src":"14834:163:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14851:9:30","nodeType":"YulIdentifier","src":"14851:9:30"},{"kind":"number","nativeSrc":"14862:2:30","nodeType":"YulLiteral","src":"14862:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14844:6:30","nodeType":"YulIdentifier","src":"14844:6:30"},"nativeSrc":"14844:21:30","nodeType":"YulFunctionCall","src":"14844:21:30"},"nativeSrc":"14844:21:30","nodeType":"YulExpressionStatement","src":"14844:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14885:9:30","nodeType":"YulIdentifier","src":"14885:9:30"},{"kind":"number","nativeSrc":"14896:2:30","nodeType":"YulLiteral","src":"14896:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14881:3:30","nodeType":"YulIdentifier","src":"14881:3:30"},"nativeSrc":"14881:18:30","nodeType":"YulFunctionCall","src":"14881:18:30"},{"kind":"number","nativeSrc":"14901:2:30","nodeType":"YulLiteral","src":"14901:2:30","type":"","value":"13"}],"functionName":{"name":"mstore","nativeSrc":"14874:6:30","nodeType":"YulIdentifier","src":"14874:6:30"},"nativeSrc":"14874:30:30","nodeType":"YulFunctionCall","src":"14874:30:30"},"nativeSrc":"14874:30:30","nodeType":"YulExpressionStatement","src":"14874:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14924:9:30","nodeType":"YulIdentifier","src":"14924:9:30"},{"kind":"number","nativeSrc":"14935:2:30","nodeType":"YulLiteral","src":"14935:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14920:3:30","nodeType":"YulIdentifier","src":"14920:3:30"},"nativeSrc":"14920:18:30","nodeType":"YulFunctionCall","src":"14920:18:30"},{"hexValue":"616c726561647920656e646564","kind":"string","nativeSrc":"14940:15:30","nodeType":"YulLiteral","src":"14940:15:30","type":"","value":"already ended"}],"functionName":{"name":"mstore","nativeSrc":"14913:6:30","nodeType":"YulIdentifier","src":"14913:6:30"},"nativeSrc":"14913:43:30","nodeType":"YulFunctionCall","src":"14913:43:30"},"nativeSrc":"14913:43:30","nodeType":"YulExpressionStatement","src":"14913:43:30"},{"nativeSrc":"14965:26:30","nodeType":"YulAssignment","src":"14965:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"14977:9:30","nodeType":"YulIdentifier","src":"14977:9:30"},{"kind":"number","nativeSrc":"14988:2:30","nodeType":"YulLiteral","src":"14988:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14973:3:30","nodeType":"YulIdentifier","src":"14973:3:30"},"nativeSrc":"14973:18:30","nodeType":"YulFunctionCall","src":"14973:18:30"},"variableNames":[{"name":"tail","nativeSrc":"14965:4:30","nodeType":"YulIdentifier","src":"14965:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14660:337:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14811:9:30","nodeType":"YulTypedName","src":"14811:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14825:4:30","nodeType":"YulTypedName","src":"14825:4:30","type":""}],"src":"14660:337:30"},{"body":{"nativeSrc":"15176:171:30","nodeType":"YulBlock","src":"15176:171:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15193:9:30","nodeType":"YulIdentifier","src":"15193:9:30"},{"kind":"number","nativeSrc":"15204:2:30","nodeType":"YulLiteral","src":"15204:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15186:6:30","nodeType":"YulIdentifier","src":"15186:6:30"},"nativeSrc":"15186:21:30","nodeType":"YulFunctionCall","src":"15186:21:30"},"nativeSrc":"15186:21:30","nodeType":"YulExpressionStatement","src":"15186:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15227:9:30","nodeType":"YulIdentifier","src":"15227:9:30"},{"kind":"number","nativeSrc":"15238:2:30","nodeType":"YulLiteral","src":"15238:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15223:3:30","nodeType":"YulIdentifier","src":"15223:3:30"},"nativeSrc":"15223:18:30","nodeType":"YulFunctionCall","src":"15223:18:30"},{"kind":"number","nativeSrc":"15243:2:30","nodeType":"YulLiteral","src":"15243:2:30","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"15216:6:30","nodeType":"YulIdentifier","src":"15216:6:30"},"nativeSrc":"15216:30:30","nodeType":"YulFunctionCall","src":"15216:30:30"},"nativeSrc":"15216:30:30","nodeType":"YulExpressionStatement","src":"15216:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15266:9:30","nodeType":"YulIdentifier","src":"15266:9:30"},{"kind":"number","nativeSrc":"15277:2:30","nodeType":"YulLiteral","src":"15277:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15262:3:30","nodeType":"YulIdentifier","src":"15262:3:30"},"nativeSrc":"15262:18:30","nodeType":"YulFunctionCall","src":"15262:18:30"},{"hexValue":"496e76616c6964205243432070657220626c6f636b","kind":"string","nativeSrc":"15282:23:30","nodeType":"YulLiteral","src":"15282:23:30","type":"","value":"Invalid RCC per block"}],"functionName":{"name":"mstore","nativeSrc":"15255:6:30","nodeType":"YulIdentifier","src":"15255:6:30"},"nativeSrc":"15255:51:30","nodeType":"YulFunctionCall","src":"15255:51:30"},"nativeSrc":"15255:51:30","nodeType":"YulExpressionStatement","src":"15255:51:30"},{"nativeSrc":"15315:26:30","nodeType":"YulAssignment","src":"15315:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"15327:9:30","nodeType":"YulIdentifier","src":"15327:9:30"},{"kind":"number","nativeSrc":"15338:2:30","nodeType":"YulLiteral","src":"15338:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15323:3:30","nodeType":"YulIdentifier","src":"15323:3:30"},"nativeSrc":"15323:18:30","nodeType":"YulFunctionCall","src":"15323:18:30"},"variableNames":[{"name":"tail","nativeSrc":"15315:4:30","nodeType":"YulIdentifier","src":"15315:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_31d5b1c22ea6e76334ac16bb5682be30c83b68d64d59c704e05e7e51c06d2e57__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15002:345:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15153:9:30","nodeType":"YulTypedName","src":"15153:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15167:4:30","nodeType":"YulTypedName","src":"15167:4:30","type":""}],"src":"15002:345:30"},{"body":{"nativeSrc":"15526:167:30","nodeType":"YulBlock","src":"15526:167:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15543:9:30","nodeType":"YulIdentifier","src":"15543:9:30"},{"kind":"number","nativeSrc":"15554:2:30","nodeType":"YulLiteral","src":"15554:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15536:6:30","nodeType":"YulIdentifier","src":"15536:6:30"},"nativeSrc":"15536:21:30","nodeType":"YulFunctionCall","src":"15536:21:30"},"nativeSrc":"15536:21:30","nodeType":"YulExpressionStatement","src":"15536:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15577:9:30","nodeType":"YulIdentifier","src":"15577:9:30"},{"kind":"number","nativeSrc":"15588:2:30","nodeType":"YulLiteral","src":"15588:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15573:3:30","nodeType":"YulIdentifier","src":"15573:3:30"},"nativeSrc":"15573:18:30","nodeType":"YulFunctionCall","src":"15573:18:30"},{"kind":"number","nativeSrc":"15593:2:30","nodeType":"YulLiteral","src":"15593:2:30","type":"","value":"17"}],"functionName":{"name":"mstore","nativeSrc":"15566:6:30","nodeType":"YulIdentifier","src":"15566:6:30"},"nativeSrc":"15566:30:30","nodeType":"YulFunctionCall","src":"15566:30:30"},"nativeSrc":"15566:30:30","nodeType":"YulExpressionStatement","src":"15566:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15616:9:30","nodeType":"YulIdentifier","src":"15616:9:30"},{"kind":"number","nativeSrc":"15627:2:30","nodeType":"YulLiteral","src":"15627:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15612:3:30","nodeType":"YulIdentifier","src":"15612:3:30"},"nativeSrc":"15612:18:30","nodeType":"YulFunctionCall","src":"15612:18:30"},{"hexValue":"496e76616c696420656e6420626c6f636b","kind":"string","nativeSrc":"15632:19:30","nodeType":"YulLiteral","src":"15632:19:30","type":"","value":"Invalid end block"}],"functionName":{"name":"mstore","nativeSrc":"15605:6:30","nodeType":"YulIdentifier","src":"15605:6:30"},"nativeSrc":"15605:47:30","nodeType":"YulFunctionCall","src":"15605:47:30"},"nativeSrc":"15605:47:30","nodeType":"YulExpressionStatement","src":"15605:47:30"},{"nativeSrc":"15661:26:30","nodeType":"YulAssignment","src":"15661:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"15673:9:30","nodeType":"YulIdentifier","src":"15673:9:30"},{"kind":"number","nativeSrc":"15684:2:30","nodeType":"YulLiteral","src":"15684:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15669:3:30","nodeType":"YulIdentifier","src":"15669:3:30"},"nativeSrc":"15669:18:30","nodeType":"YulFunctionCall","src":"15669:18:30"},"variableNames":[{"name":"tail","nativeSrc":"15661:4:30","nodeType":"YulIdentifier","src":"15661:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_11d6ed57bc2b60051e8a3bda6c3bc12d844aa2380e7d2f1336e05a70bb63dc7e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15352:341:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15503:9:30","nodeType":"YulTypedName","src":"15503:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15517:4:30","nodeType":"YulTypedName","src":"15517:4:30","type":""}],"src":"15352:341:30"},{"body":{"nativeSrc":"15872:165:30","nodeType":"YulBlock","src":"15872:165:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15889:9:30","nodeType":"YulIdentifier","src":"15889:9:30"},{"kind":"number","nativeSrc":"15900:2:30","nodeType":"YulLiteral","src":"15900:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15882:6:30","nodeType":"YulIdentifier","src":"15882:6:30"},"nativeSrc":"15882:21:30","nodeType":"YulFunctionCall","src":"15882:21:30"},"nativeSrc":"15882:21:30","nodeType":"YulExpressionStatement","src":"15882:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15923:9:30","nodeType":"YulIdentifier","src":"15923:9:30"},{"kind":"number","nativeSrc":"15934:2:30","nodeType":"YulLiteral","src":"15934:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15919:3:30","nodeType":"YulIdentifier","src":"15919:3:30"},"nativeSrc":"15919:18:30","nodeType":"YulFunctionCall","src":"15919:18:30"},{"kind":"number","nativeSrc":"15939:2:30","nodeType":"YulLiteral","src":"15939:2:30","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"15912:6:30","nodeType":"YulIdentifier","src":"15912:6:30"},"nativeSrc":"15912:30:30","nodeType":"YulFunctionCall","src":"15912:30:30"},"nativeSrc":"15912:30:30","nodeType":"YulExpressionStatement","src":"15912:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15962:9:30","nodeType":"YulIdentifier","src":"15962:9:30"},{"kind":"number","nativeSrc":"15973:2:30","nodeType":"YulLiteral","src":"15973:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15958:3:30","nodeType":"YulIdentifier","src":"15958:3:30"},"nativeSrc":"15958:18:30","nodeType":"YulFunctionCall","src":"15958:18:30"},{"hexValue":"696e76616c696420706f6f6c206964","kind":"string","nativeSrc":"15978:17:30","nodeType":"YulLiteral","src":"15978:17:30","type":"","value":"invalid pool id"}],"functionName":{"name":"mstore","nativeSrc":"15951:6:30","nodeType":"YulIdentifier","src":"15951:6:30"},"nativeSrc":"15951:45:30","nodeType":"YulFunctionCall","src":"15951:45:30"},"nativeSrc":"15951:45:30","nodeType":"YulExpressionStatement","src":"15951:45:30"},{"nativeSrc":"16005:26:30","nodeType":"YulAssignment","src":"16005:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"16017:9:30","nodeType":"YulIdentifier","src":"16017:9:30"},{"kind":"number","nativeSrc":"16028:2:30","nodeType":"YulLiteral","src":"16028:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16013:3:30","nodeType":"YulIdentifier","src":"16013:3:30"},"nativeSrc":"16013:18:30","nodeType":"YulFunctionCall","src":"16013:18:30"},"variableNames":[{"name":"tail","nativeSrc":"16005:4:30","nodeType":"YulIdentifier","src":"16005:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15698:339:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15849:9:30","nodeType":"YulTypedName","src":"15849:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15863:4:30","nodeType":"YulTypedName","src":"15863:4:30","type":""}],"src":"15698:339:30"},{"body":{"nativeSrc":"16216:181:30","nodeType":"YulBlock","src":"16216:181:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16233:9:30","nodeType":"YulIdentifier","src":"16233:9:30"},{"kind":"number","nativeSrc":"16244:2:30","nodeType":"YulLiteral","src":"16244:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16226:6:30","nodeType":"YulIdentifier","src":"16226:6:30"},"nativeSrc":"16226:21:30","nodeType":"YulFunctionCall","src":"16226:21:30"},"nativeSrc":"16226:21:30","nodeType":"YulExpressionStatement","src":"16226:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16267:9:30","nodeType":"YulIdentifier","src":"16267:9:30"},{"kind":"number","nativeSrc":"16278:2:30","nodeType":"YulLiteral","src":"16278:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16263:3:30","nodeType":"YulIdentifier","src":"16263:3:30"},"nativeSrc":"16263:18:30","nodeType":"YulFunctionCall","src":"16263:18:30"},{"kind":"number","nativeSrc":"16283:2:30","nodeType":"YulLiteral","src":"16283:2:30","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"16256:6:30","nodeType":"YulIdentifier","src":"16256:6:30"},"nativeSrc":"16256:30:30","nodeType":"YulFunctionCall","src":"16256:30:30"},"nativeSrc":"16256:30:30","nodeType":"YulExpressionStatement","src":"16256:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16306:9:30","nodeType":"YulIdentifier","src":"16306:9:30"},{"kind":"number","nativeSrc":"16317:2:30","nodeType":"YulLiteral","src":"16317:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16302:3:30","nodeType":"YulIdentifier","src":"16302:3:30"},"nativeSrc":"16302:18:30","nodeType":"YulFunctionCall","src":"16302:18:30"},{"hexValue":"6465706f736974206e6f7420737570706f727420455448207374616b696e67","kind":"string","nativeSrc":"16322:33:30","nodeType":"YulLiteral","src":"16322:33:30","type":"","value":"deposit not support ETH staking"}],"functionName":{"name":"mstore","nativeSrc":"16295:6:30","nodeType":"YulIdentifier","src":"16295:6:30"},"nativeSrc":"16295:61:30","nodeType":"YulFunctionCall","src":"16295:61:30"},"nativeSrc":"16295:61:30","nodeType":"YulExpressionStatement","src":"16295:61:30"},{"nativeSrc":"16365:26:30","nodeType":"YulAssignment","src":"16365:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"16377:9:30","nodeType":"YulIdentifier","src":"16377:9:30"},{"kind":"number","nativeSrc":"16388:2:30","nodeType":"YulLiteral","src":"16388:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16373:3:30","nodeType":"YulIdentifier","src":"16373:3:30"},"nativeSrc":"16373:18:30","nodeType":"YulFunctionCall","src":"16373:18:30"},"variableNames":[{"name":"tail","nativeSrc":"16365:4:30","nodeType":"YulIdentifier","src":"16365:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16042:355:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16193:9:30","nodeType":"YulTypedName","src":"16193:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16207:4:30","nodeType":"YulTypedName","src":"16207:4:30","type":""}],"src":"16042:355:30"},{"body":{"nativeSrc":"16576:172:30","nodeType":"YulBlock","src":"16576:172:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16593:9:30","nodeType":"YulIdentifier","src":"16593:9:30"},{"kind":"number","nativeSrc":"16604:2:30","nodeType":"YulLiteral","src":"16604:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16586:6:30","nodeType":"YulIdentifier","src":"16586:6:30"},"nativeSrc":"16586:21:30","nodeType":"YulFunctionCall","src":"16586:21:30"},"nativeSrc":"16586:21:30","nodeType":"YulExpressionStatement","src":"16586:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16627:9:30","nodeType":"YulIdentifier","src":"16627:9:30"},{"kind":"number","nativeSrc":"16638:2:30","nodeType":"YulLiteral","src":"16638:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16623:3:30","nodeType":"YulIdentifier","src":"16623:3:30"},"nativeSrc":"16623:18:30","nodeType":"YulFunctionCall","src":"16623:18:30"},{"kind":"number","nativeSrc":"16643:2:30","nodeType":"YulLiteral","src":"16643:2:30","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"16616:6:30","nodeType":"YulIdentifier","src":"16616:6:30"},"nativeSrc":"16616:30:30","nodeType":"YulFunctionCall","src":"16616:30:30"},"nativeSrc":"16616:30:30","nodeType":"YulExpressionStatement","src":"16616:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16666:9:30","nodeType":"YulIdentifier","src":"16666:9:30"},{"kind":"number","nativeSrc":"16677:2:30","nodeType":"YulLiteral","src":"16677:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16662:3:30","nodeType":"YulIdentifier","src":"16662:3:30"},"nativeSrc":"16662:18:30","nodeType":"YulFunctionCall","src":"16662:18:30"},{"hexValue":"696e76616c6964206465706f73697420616d6f756e74","kind":"string","nativeSrc":"16682:24:30","nodeType":"YulLiteral","src":"16682:24:30","type":"","value":"invalid deposit amount"}],"functionName":{"name":"mstore","nativeSrc":"16655:6:30","nodeType":"YulIdentifier","src":"16655:6:30"},"nativeSrc":"16655:52:30","nodeType":"YulFunctionCall","src":"16655:52:30"},"nativeSrc":"16655:52:30","nodeType":"YulExpressionStatement","src":"16655:52:30"},{"nativeSrc":"16716:26:30","nodeType":"YulAssignment","src":"16716:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"16728:9:30","nodeType":"YulIdentifier","src":"16728:9:30"},{"kind":"number","nativeSrc":"16739:2:30","nodeType":"YulLiteral","src":"16739:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16724:3:30","nodeType":"YulIdentifier","src":"16724:3:30"},"nativeSrc":"16724:18:30","nodeType":"YulFunctionCall","src":"16724:18:30"},"variableNames":[{"name":"tail","nativeSrc":"16716:4:30","nodeType":"YulIdentifier","src":"16716:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16402:346:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16553:9:30","nodeType":"YulTypedName","src":"16553:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16567:4:30","nodeType":"YulTypedName","src":"16567:4:30","type":""}],"src":"16402:346:30"},{"body":{"nativeSrc":"16927:169:30","nodeType":"YulBlock","src":"16927:169:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16944:9:30","nodeType":"YulIdentifier","src":"16944:9:30"},{"kind":"number","nativeSrc":"16955:2:30","nodeType":"YulLiteral","src":"16955:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16937:6:30","nodeType":"YulIdentifier","src":"16937:6:30"},"nativeSrc":"16937:21:30","nodeType":"YulFunctionCall","src":"16937:21:30"},"nativeSrc":"16937:21:30","nodeType":"YulExpressionStatement","src":"16937:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16978:9:30","nodeType":"YulIdentifier","src":"16978:9:30"},{"kind":"number","nativeSrc":"16989:2:30","nodeType":"YulLiteral","src":"16989:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16974:3:30","nodeType":"YulIdentifier","src":"16974:3:30"},"nativeSrc":"16974:18:30","nodeType":"YulFunctionCall","src":"16974:18:30"},{"kind":"number","nativeSrc":"16994:2:30","nodeType":"YulLiteral","src":"16994:2:30","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"16967:6:30","nodeType":"YulIdentifier","src":"16967:6:30"},"nativeSrc":"16967:30:30","nodeType":"YulFunctionCall","src":"16967:30:30"},"nativeSrc":"16967:30:30","nodeType":"YulExpressionStatement","src":"16967:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17017:9:30","nodeType":"YulIdentifier","src":"17017:9:30"},{"kind":"number","nativeSrc":"17028:2:30","nodeType":"YulLiteral","src":"17028:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17013:3:30","nodeType":"YulIdentifier","src":"17013:3:30"},"nativeSrc":"17013:18:30","nodeType":"YulFunctionCall","src":"17013:18:30"},{"hexValue":"496e76616c696420737461727420626c6f636b","kind":"string","nativeSrc":"17033:21:30","nodeType":"YulLiteral","src":"17033:21:30","type":"","value":"Invalid start block"}],"functionName":{"name":"mstore","nativeSrc":"17006:6:30","nodeType":"YulIdentifier","src":"17006:6:30"},"nativeSrc":"17006:49:30","nodeType":"YulFunctionCall","src":"17006:49:30"},"nativeSrc":"17006:49:30","nodeType":"YulExpressionStatement","src":"17006:49:30"},{"nativeSrc":"17064:26:30","nodeType":"YulAssignment","src":"17064:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"17076:9:30","nodeType":"YulIdentifier","src":"17076:9:30"},{"kind":"number","nativeSrc":"17087:2:30","nodeType":"YulLiteral","src":"17087:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17072:3:30","nodeType":"YulIdentifier","src":"17072:3:30"},"nativeSrc":"17072:18:30","nodeType":"YulFunctionCall","src":"17072:18:30"},"variableNames":[{"name":"tail","nativeSrc":"17064:4:30","nodeType":"YulIdentifier","src":"17064:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_6931c31d4f12cf701d2bae3519754547c6c993e2548333d63706fa6eb15e9c7c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16753:343:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16904:9:30","nodeType":"YulTypedName","src":"16904:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16918:4:30","nodeType":"YulTypedName","src":"16918:4:30","type":""}],"src":"16753:343:30"},{"body":{"nativeSrc":"17275:180:30","nodeType":"YulBlock","src":"17275:180:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17292:9:30","nodeType":"YulIdentifier","src":"17292:9:30"},{"kind":"number","nativeSrc":"17303:2:30","nodeType":"YulLiteral","src":"17303:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17285:6:30","nodeType":"YulIdentifier","src":"17285:6:30"},"nativeSrc":"17285:21:30","nodeType":"YulFunctionCall","src":"17285:21:30"},"nativeSrc":"17285:21:30","nodeType":"YulExpressionStatement","src":"17285:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17326:9:30","nodeType":"YulIdentifier","src":"17326:9:30"},{"kind":"number","nativeSrc":"17337:2:30","nodeType":"YulLiteral","src":"17337:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17322:3:30","nodeType":"YulIdentifier","src":"17322:3:30"},"nativeSrc":"17322:18:30","nodeType":"YulFunctionCall","src":"17322:18:30"},{"kind":"number","nativeSrc":"17342:2:30","nodeType":"YulLiteral","src":"17342:2:30","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"17315:6:30","nodeType":"YulIdentifier","src":"17315:6:30"},"nativeSrc":"17315:30:30","nodeType":"YulFunctionCall","src":"17315:30:30"},"nativeSrc":"17315:30:30","nodeType":"YulExpressionStatement","src":"17315:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17365:9:30","nodeType":"YulIdentifier","src":"17365:9:30"},{"kind":"number","nativeSrc":"17376:2:30","nodeType":"YulLiteral","src":"17376:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17361:3:30","nodeType":"YulIdentifier","src":"17361:3:30"},"nativeSrc":"17361:18:30","nodeType":"YulFunctionCall","src":"17361:18:30"},{"hexValue":"45544820706f6f6c206d7573742062652063726561746564206669727374","kind":"string","nativeSrc":"17381:32:30","nodeType":"YulLiteral","src":"17381:32:30","type":"","value":"ETH pool must be created first"}],"functionName":{"name":"mstore","nativeSrc":"17354:6:30","nodeType":"YulIdentifier","src":"17354:6:30"},"nativeSrc":"17354:60:30","nodeType":"YulFunctionCall","src":"17354:60:30"},"nativeSrc":"17354:60:30","nodeType":"YulExpressionStatement","src":"17354:60:30"},{"nativeSrc":"17423:26:30","nodeType":"YulAssignment","src":"17423:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"17435:9:30","nodeType":"YulIdentifier","src":"17435:9:30"},{"kind":"number","nativeSrc":"17446:2:30","nodeType":"YulLiteral","src":"17446:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17431:3:30","nodeType":"YulIdentifier","src":"17431:3:30"},"nativeSrc":"17431:18:30","nodeType":"YulFunctionCall","src":"17431:18:30"},"variableNames":[{"name":"tail","nativeSrc":"17423:4:30","nodeType":"YulIdentifier","src":"17423:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17101:354:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17252:9:30","nodeType":"YulTypedName","src":"17252:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17266:4:30","nodeType":"YulTypedName","src":"17266:4:30","type":""}],"src":"17101:354:30"},{"body":{"nativeSrc":"17634:169:30","nodeType":"YulBlock","src":"17634:169:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17651:9:30","nodeType":"YulIdentifier","src":"17651:9:30"},{"kind":"number","nativeSrc":"17662:2:30","nodeType":"YulLiteral","src":"17662:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17644:6:30","nodeType":"YulIdentifier","src":"17644:6:30"},"nativeSrc":"17644:21:30","nodeType":"YulFunctionCall","src":"17644:21:30"},"nativeSrc":"17644:21:30","nodeType":"YulExpressionStatement","src":"17644:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17685:9:30","nodeType":"YulIdentifier","src":"17685:9:30"},{"kind":"number","nativeSrc":"17696:2:30","nodeType":"YulLiteral","src":"17696:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17681:3:30","nodeType":"YulIdentifier","src":"17681:3:30"},"nativeSrc":"17681:18:30","nodeType":"YulFunctionCall","src":"17681:18:30"},{"kind":"number","nativeSrc":"17701:2:30","nodeType":"YulLiteral","src":"17701:2:30","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"17674:6:30","nodeType":"YulIdentifier","src":"17674:6:30"},"nativeSrc":"17674:30:30","nodeType":"YulFunctionCall","src":"17674:30:30"},"nativeSrc":"17674:30:30","nodeType":"YulExpressionStatement","src":"17674:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17724:9:30","nodeType":"YulIdentifier","src":"17724:9:30"},{"kind":"number","nativeSrc":"17735:2:30","nodeType":"YulLiteral","src":"17735:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17720:3:30","nodeType":"YulIdentifier","src":"17720:3:30"},"nativeSrc":"17720:18:30","nodeType":"YulFunctionCall","src":"17720:18:30"},{"hexValue":"696e76616c696420706f6f6c20776569676874","kind":"string","nativeSrc":"17740:21:30","nodeType":"YulLiteral","src":"17740:21:30","type":"","value":"invalid pool weight"}],"functionName":{"name":"mstore","nativeSrc":"17713:6:30","nodeType":"YulIdentifier","src":"17713:6:30"},"nativeSrc":"17713:49:30","nodeType":"YulFunctionCall","src":"17713:49:30"},"nativeSrc":"17713:49:30","nodeType":"YulExpressionStatement","src":"17713:49:30"},{"nativeSrc":"17771:26:30","nodeType":"YulAssignment","src":"17771:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"17783:9:30","nodeType":"YulIdentifier","src":"17783:9:30"},{"kind":"number","nativeSrc":"17794:2:30","nodeType":"YulLiteral","src":"17794:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17779:3:30","nodeType":"YulIdentifier","src":"17779:3:30"},"nativeSrc":"17779:18:30","nodeType":"YulFunctionCall","src":"17779:18:30"},"variableNames":[{"name":"tail","nativeSrc":"17771:4:30","nodeType":"YulIdentifier","src":"17771:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17460:343:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17611:9:30","nodeType":"YulTypedName","src":"17611:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17625:4:30","nodeType":"YulTypedName","src":"17625:4:30","type":""}],"src":"17460:343:30"},{"body":{"nativeSrc":"17982:176:30","nodeType":"YulBlock","src":"17982:176:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17999:9:30","nodeType":"YulIdentifier","src":"17999:9:30"},{"kind":"number","nativeSrc":"18010:2:30","nodeType":"YulLiteral","src":"18010:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17992:6:30","nodeType":"YulIdentifier","src":"17992:6:30"},"nativeSrc":"17992:21:30","nodeType":"YulFunctionCall","src":"17992:21:30"},"nativeSrc":"17992:21:30","nodeType":"YulExpressionStatement","src":"17992:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18033:9:30","nodeType":"YulIdentifier","src":"18033:9:30"},{"kind":"number","nativeSrc":"18044:2:30","nodeType":"YulLiteral","src":"18044:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18029:3:30","nodeType":"YulIdentifier","src":"18029:3:30"},"nativeSrc":"18029:18:30","nodeType":"YulFunctionCall","src":"18029:18:30"},{"kind":"number","nativeSrc":"18049:2:30","nodeType":"YulLiteral","src":"18049:2:30","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"18022:6:30","nodeType":"YulIdentifier","src":"18022:6:30"},"nativeSrc":"18022:30:30","nodeType":"YulFunctionCall","src":"18022:30:30"},"nativeSrc":"18022:30:30","nodeType":"YulExpressionStatement","src":"18022:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18072:9:30","nodeType":"YulIdentifier","src":"18072:9:30"},{"kind":"number","nativeSrc":"18083:2:30","nodeType":"YulLiteral","src":"18083:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18068:3:30","nodeType":"YulIdentifier","src":"18068:3:30"},"nativeSrc":"18068:18:30","nodeType":"YulFunctionCall","src":"18068:18:30"},{"hexValue":"746f74616c20706f6f6c20776569676874206f766572666c6f77","kind":"string","nativeSrc":"18088:28:30","nodeType":"YulLiteral","src":"18088:28:30","type":"","value":"total pool weight overflow"}],"functionName":{"name":"mstore","nativeSrc":"18061:6:30","nodeType":"YulIdentifier","src":"18061:6:30"},"nativeSrc":"18061:56:30","nodeType":"YulFunctionCall","src":"18061:56:30"},"nativeSrc":"18061:56:30","nodeType":"YulExpressionStatement","src":"18061:56:30"},{"nativeSrc":"18126:26:30","nodeType":"YulAssignment","src":"18126:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"18138:9:30","nodeType":"YulIdentifier","src":"18138:9:30"},{"kind":"number","nativeSrc":"18149:2:30","nodeType":"YulLiteral","src":"18149:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18134:3:30","nodeType":"YulIdentifier","src":"18134:3:30"},"nativeSrc":"18134:18:30","nodeType":"YulFunctionCall","src":"18134:18:30"},"variableNames":[{"name":"tail","nativeSrc":"18126:4:30","nodeType":"YulIdentifier","src":"18126:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_7d2ab1273c3a1faf917e7dccd29abed8d9f4b4c4744abaa01dfcf902cef0a4df__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17808:350:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17959:9:30","nodeType":"YulTypedName","src":"17959:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17973:4:30","nodeType":"YulTypedName","src":"17973:4:30","type":""}],"src":"17808:350:30"},{"body":{"nativeSrc":"18354:14:30","nodeType":"YulBlock","src":"18354:14:30","statements":[{"nativeSrc":"18356:10:30","nodeType":"YulAssignment","src":"18356:10:30","value":{"name":"pos","nativeSrc":"18363:3:30","nodeType":"YulIdentifier","src":"18363:3:30"},"variableNames":[{"name":"end","nativeSrc":"18356:3:30","nodeType":"YulIdentifier","src":"18356:3:30"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"18163:205:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18338:3:30","nodeType":"YulTypedName","src":"18338:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18346:3:30","nodeType":"YulTypedName","src":"18346:3:30","type":""}],"src":"18163:205:30"},{"body":{"nativeSrc":"18547:174:30","nodeType":"YulBlock","src":"18547:174:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18564:9:30","nodeType":"YulIdentifier","src":"18564:9:30"},{"kind":"number","nativeSrc":"18575:2:30","nodeType":"YulLiteral","src":"18575:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18557:6:30","nodeType":"YulIdentifier","src":"18557:6:30"},"nativeSrc":"18557:21:30","nodeType":"YulFunctionCall","src":"18557:21:30"},"nativeSrc":"18557:21:30","nodeType":"YulExpressionStatement","src":"18557:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18598:9:30","nodeType":"YulIdentifier","src":"18598:9:30"},{"kind":"number","nativeSrc":"18609:2:30","nodeType":"YulLiteral","src":"18609:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18594:3:30","nodeType":"YulIdentifier","src":"18594:3:30"},"nativeSrc":"18594:18:30","nodeType":"YulFunctionCall","src":"18594:18:30"},{"kind":"number","nativeSrc":"18614:2:30","nodeType":"YulLiteral","src":"18614:2:30","type":"","value":"24"}],"functionName":{"name":"mstore","nativeSrc":"18587:6:30","nodeType":"YulIdentifier","src":"18587:6:30"},"nativeSrc":"18587:30:30","nodeType":"YulFunctionCall","src":"18587:30:30"},"nativeSrc":"18587:30:30","nodeType":"YulExpressionStatement","src":"18587:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18637:9:30","nodeType":"YulIdentifier","src":"18637:9:30"},{"kind":"number","nativeSrc":"18648:2:30","nodeType":"YulLiteral","src":"18648:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18633:3:30","nodeType":"YulIdentifier","src":"18633:3:30"},"nativeSrc":"18633:18:30","nodeType":"YulFunctionCall","src":"18633:18:30"},{"hexValue":"455448207472616e736665722063616c6c206661696c6564","kind":"string","nativeSrc":"18653:26:30","nodeType":"YulLiteral","src":"18653:26:30","type":"","value":"ETH transfer call failed"}],"functionName":{"name":"mstore","nativeSrc":"18626:6:30","nodeType":"YulIdentifier","src":"18626:6:30"},"nativeSrc":"18626:54:30","nodeType":"YulFunctionCall","src":"18626:54:30"},"nativeSrc":"18626:54:30","nodeType":"YulExpressionStatement","src":"18626:54:30"},{"nativeSrc":"18689:26:30","nodeType":"YulAssignment","src":"18689:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"18701:9:30","nodeType":"YulIdentifier","src":"18701:9:30"},{"kind":"number","nativeSrc":"18712:2:30","nodeType":"YulLiteral","src":"18712:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18697:3:30","nodeType":"YulIdentifier","src":"18697:3:30"},"nativeSrc":"18697:18:30","nodeType":"YulFunctionCall","src":"18697:18:30"},"variableNames":[{"name":"tail","nativeSrc":"18689:4:30","nodeType":"YulIdentifier","src":"18689:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18373:348:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18524:9:30","nodeType":"YulTypedName","src":"18524:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18538:4:30","nodeType":"YulTypedName","src":"18538:4:30","type":""}],"src":"18373:348:30"},{"body":{"nativeSrc":"18804:167:30","nodeType":"YulBlock","src":"18804:167:30","statements":[{"body":{"nativeSrc":"18850:16:30","nodeType":"YulBlock","src":"18850:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18859:1:30","nodeType":"YulLiteral","src":"18859:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"18862:1:30","nodeType":"YulLiteral","src":"18862:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"18852:6:30","nodeType":"YulIdentifier","src":"18852:6:30"},"nativeSrc":"18852:12:30","nodeType":"YulFunctionCall","src":"18852:12:30"},"nativeSrc":"18852:12:30","nodeType":"YulExpressionStatement","src":"18852:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18825:7:30","nodeType":"YulIdentifier","src":"18825:7:30"},{"name":"headStart","nativeSrc":"18834:9:30","nodeType":"YulIdentifier","src":"18834:9:30"}],"functionName":{"name":"sub","nativeSrc":"18821:3:30","nodeType":"YulIdentifier","src":"18821:3:30"},"nativeSrc":"18821:23:30","nodeType":"YulFunctionCall","src":"18821:23:30"},{"kind":"number","nativeSrc":"18846:2:30","nodeType":"YulLiteral","src":"18846:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"18817:3:30","nodeType":"YulIdentifier","src":"18817:3:30"},"nativeSrc":"18817:32:30","nodeType":"YulFunctionCall","src":"18817:32:30"},"nativeSrc":"18814:52:30","nodeType":"YulIf","src":"18814:52:30"},{"nativeSrc":"18875:29:30","nodeType":"YulVariableDeclaration","src":"18875:29:30","value":{"arguments":[{"name":"headStart","nativeSrc":"18894:9:30","nodeType":"YulIdentifier","src":"18894:9:30"}],"functionName":{"name":"mload","nativeSrc":"18888:5:30","nodeType":"YulIdentifier","src":"18888:5:30"},"nativeSrc":"18888:16:30","nodeType":"YulFunctionCall","src":"18888:16:30"},"variables":[{"name":"value","nativeSrc":"18879:5:30","nodeType":"YulTypedName","src":"18879:5:30","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"18935:5:30","nodeType":"YulIdentifier","src":"18935:5:30"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"18913:21:30","nodeType":"YulIdentifier","src":"18913:21:30"},"nativeSrc":"18913:28:30","nodeType":"YulFunctionCall","src":"18913:28:30"},"nativeSrc":"18913:28:30","nodeType":"YulExpressionStatement","src":"18913:28:30"},{"nativeSrc":"18950:15:30","nodeType":"YulAssignment","src":"18950:15:30","value":{"name":"value","nativeSrc":"18960:5:30","nodeType":"YulIdentifier","src":"18960:5:30"},"variableNames":[{"name":"value0","nativeSrc":"18950:6:30","nodeType":"YulIdentifier","src":"18950:6:30"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"18726:245:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18770:9:30","nodeType":"YulTypedName","src":"18770:9:30","type":""},{"name":"dataEnd","nativeSrc":"18781:7:30","nodeType":"YulTypedName","src":"18781:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18793:6:30","nodeType":"YulTypedName","src":"18793:6:30","type":""}],"src":"18726:245:30"},{"body":{"nativeSrc":"19150:228:30","nodeType":"YulBlock","src":"19150:228:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19167:9:30","nodeType":"YulIdentifier","src":"19167:9:30"},{"kind":"number","nativeSrc":"19178:2:30","nodeType":"YulLiteral","src":"19178:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19160:6:30","nodeType":"YulIdentifier","src":"19160:6:30"},"nativeSrc":"19160:21:30","nodeType":"YulFunctionCall","src":"19160:21:30"},"nativeSrc":"19160:21:30","nodeType":"YulExpressionStatement","src":"19160:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19201:9:30","nodeType":"YulIdentifier","src":"19201:9:30"},{"kind":"number","nativeSrc":"19212:2:30","nodeType":"YulLiteral","src":"19212:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19197:3:30","nodeType":"YulIdentifier","src":"19197:3:30"},"nativeSrc":"19197:18:30","nodeType":"YulFunctionCall","src":"19197:18:30"},{"kind":"number","nativeSrc":"19217:2:30","nodeType":"YulLiteral","src":"19217:2:30","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"19190:6:30","nodeType":"YulIdentifier","src":"19190:6:30"},"nativeSrc":"19190:30:30","nodeType":"YulFunctionCall","src":"19190:30:30"},"nativeSrc":"19190:30:30","nodeType":"YulExpressionStatement","src":"19190:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19240:9:30","nodeType":"YulIdentifier","src":"19240:9:30"},{"kind":"number","nativeSrc":"19251:2:30","nodeType":"YulLiteral","src":"19251:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19236:3:30","nodeType":"YulIdentifier","src":"19236:3:30"},"nativeSrc":"19236:18:30","nodeType":"YulFunctionCall","src":"19236:18:30"},{"hexValue":"455448207472616e73666572206f7065726174696f6e20646964206e6f742073","kind":"string","nativeSrc":"19256:34:30","nodeType":"YulLiteral","src":"19256:34:30","type":"","value":"ETH transfer operation did not s"}],"functionName":{"name":"mstore","nativeSrc":"19229:6:30","nodeType":"YulIdentifier","src":"19229:6:30"},"nativeSrc":"19229:62:30","nodeType":"YulFunctionCall","src":"19229:62:30"},"nativeSrc":"19229:62:30","nodeType":"YulExpressionStatement","src":"19229:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19311:9:30","nodeType":"YulIdentifier","src":"19311:9:30"},{"kind":"number","nativeSrc":"19322:2:30","nodeType":"YulLiteral","src":"19322:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19307:3:30","nodeType":"YulIdentifier","src":"19307:3:30"},"nativeSrc":"19307:18:30","nodeType":"YulFunctionCall","src":"19307:18:30"},{"hexValue":"756363656564","kind":"string","nativeSrc":"19327:8:30","nodeType":"YulLiteral","src":"19327:8:30","type":"","value":"ucceed"}],"functionName":{"name":"mstore","nativeSrc":"19300:6:30","nodeType":"YulIdentifier","src":"19300:6:30"},"nativeSrc":"19300:36:30","nodeType":"YulFunctionCall","src":"19300:36:30"},"nativeSrc":"19300:36:30","nodeType":"YulExpressionStatement","src":"19300:36:30"},{"nativeSrc":"19345:27:30","nodeType":"YulAssignment","src":"19345:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"19357:9:30","nodeType":"YulIdentifier","src":"19357:9:30"},{"kind":"number","nativeSrc":"19368:3:30","nodeType":"YulLiteral","src":"19368:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"19353:3:30","nodeType":"YulIdentifier","src":"19353:3:30"},"nativeSrc":"19353:19:30","nodeType":"YulFunctionCall","src":"19353:19:30"},"variableNames":[{"name":"tail","nativeSrc":"19345:4:30","nodeType":"YulIdentifier","src":"19345:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18976:402:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19127:9:30","nodeType":"YulTypedName","src":"19127:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19141:4:30","nodeType":"YulTypedName","src":"19141:4:30","type":""}],"src":"18976:402:30"},{"body":{"nativeSrc":"19512:145:30","nodeType":"YulBlock","src":"19512:145:30","statements":[{"nativeSrc":"19522:26:30","nodeType":"YulAssignment","src":"19522:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"19534:9:30","nodeType":"YulIdentifier","src":"19534:9:30"},{"kind":"number","nativeSrc":"19545:2:30","nodeType":"YulLiteral","src":"19545:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19530:3:30","nodeType":"YulIdentifier","src":"19530:3:30"},"nativeSrc":"19530:18:30","nodeType":"YulFunctionCall","src":"19530:18:30"},"variableNames":[{"name":"tail","nativeSrc":"19522:4:30","nodeType":"YulIdentifier","src":"19522:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19564:9:30","nodeType":"YulIdentifier","src":"19564:9:30"},{"arguments":[{"name":"value0","nativeSrc":"19579:6:30","nodeType":"YulIdentifier","src":"19579:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"19595:3:30","nodeType":"YulLiteral","src":"19595:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"19600:1:30","nodeType":"YulLiteral","src":"19600:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"19591:3:30","nodeType":"YulIdentifier","src":"19591:3:30"},"nativeSrc":"19591:11:30","nodeType":"YulFunctionCall","src":"19591:11:30"},{"kind":"number","nativeSrc":"19604:1:30","nodeType":"YulLiteral","src":"19604:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"19587:3:30","nodeType":"YulIdentifier","src":"19587:3:30"},"nativeSrc":"19587:19:30","nodeType":"YulFunctionCall","src":"19587:19:30"}],"functionName":{"name":"and","nativeSrc":"19575:3:30","nodeType":"YulIdentifier","src":"19575:3:30"},"nativeSrc":"19575:32:30","nodeType":"YulFunctionCall","src":"19575:32:30"}],"functionName":{"name":"mstore","nativeSrc":"19557:6:30","nodeType":"YulIdentifier","src":"19557:6:30"},"nativeSrc":"19557:51:30","nodeType":"YulFunctionCall","src":"19557:51:30"},"nativeSrc":"19557:51:30","nodeType":"YulExpressionStatement","src":"19557:51:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19628:9:30","nodeType":"YulIdentifier","src":"19628:9:30"},{"kind":"number","nativeSrc":"19639:2:30","nodeType":"YulLiteral","src":"19639:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19624:3:30","nodeType":"YulIdentifier","src":"19624:3:30"},"nativeSrc":"19624:18:30","nodeType":"YulFunctionCall","src":"19624:18:30"},{"name":"value1","nativeSrc":"19644:6:30","nodeType":"YulIdentifier","src":"19644:6:30"}],"functionName":{"name":"mstore","nativeSrc":"19617:6:30","nodeType":"YulIdentifier","src":"19617:6:30"},"nativeSrc":"19617:34:30","nodeType":"YulFunctionCall","src":"19617:34:30"},"nativeSrc":"19617:34:30","nodeType":"YulExpressionStatement","src":"19617:34:30"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"19383:274:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19473:9:30","nodeType":"YulTypedName","src":"19473:9:30","type":""},{"name":"value1","nativeSrc":"19484:6:30","nodeType":"YulTypedName","src":"19484:6:30","type":""},{"name":"value0","nativeSrc":"19492:6:30","nodeType":"YulTypedName","src":"19492:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19503:4:30","nodeType":"YulTypedName","src":"19503:4:30","type":""}],"src":"19383:274:30"},{"body":{"nativeSrc":"19763:102:30","nodeType":"YulBlock","src":"19763:102:30","statements":[{"nativeSrc":"19773:26:30","nodeType":"YulAssignment","src":"19773:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"19785:9:30","nodeType":"YulIdentifier","src":"19785:9:30"},{"kind":"number","nativeSrc":"19796:2:30","nodeType":"YulLiteral","src":"19796:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19781:3:30","nodeType":"YulIdentifier","src":"19781:3:30"},"nativeSrc":"19781:18:30","nodeType":"YulFunctionCall","src":"19781:18:30"},"variableNames":[{"name":"tail","nativeSrc":"19773:4:30","nodeType":"YulIdentifier","src":"19773:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19815:9:30","nodeType":"YulIdentifier","src":"19815:9:30"},{"arguments":[{"name":"value0","nativeSrc":"19830:6:30","nodeType":"YulIdentifier","src":"19830:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"19846:3:30","nodeType":"YulLiteral","src":"19846:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"19851:1:30","nodeType":"YulLiteral","src":"19851:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"19842:3:30","nodeType":"YulIdentifier","src":"19842:3:30"},"nativeSrc":"19842:11:30","nodeType":"YulFunctionCall","src":"19842:11:30"},{"kind":"number","nativeSrc":"19855:1:30","nodeType":"YulLiteral","src":"19855:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"19838:3:30","nodeType":"YulIdentifier","src":"19838:3:30"},"nativeSrc":"19838:19:30","nodeType":"YulFunctionCall","src":"19838:19:30"}],"functionName":{"name":"and","nativeSrc":"19826:3:30","nodeType":"YulIdentifier","src":"19826:3:30"},"nativeSrc":"19826:32:30","nodeType":"YulFunctionCall","src":"19826:32:30"}],"functionName":{"name":"mstore","nativeSrc":"19808:6:30","nodeType":"YulIdentifier","src":"19808:6:30"},"nativeSrc":"19808:51:30","nodeType":"YulFunctionCall","src":"19808:51:30"},"nativeSrc":"19808:51:30","nodeType":"YulExpressionStatement","src":"19808:51:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"19662:203:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19732:9:30","nodeType":"YulTypedName","src":"19732:9:30","type":""},{"name":"value0","nativeSrc":"19743:6:30","nodeType":"YulTypedName","src":"19743:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19754:4:30","nodeType":"YulTypedName","src":"19754:4:30","type":""}],"src":"19662:203:30"},{"body":{"nativeSrc":"19951:103:30","nodeType":"YulBlock","src":"19951:103:30","statements":[{"body":{"nativeSrc":"19997:16:30","nodeType":"YulBlock","src":"19997:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20006:1:30","nodeType":"YulLiteral","src":"20006:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"20009:1:30","nodeType":"YulLiteral","src":"20009:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19999:6:30","nodeType":"YulIdentifier","src":"19999:6:30"},"nativeSrc":"19999:12:30","nodeType":"YulFunctionCall","src":"19999:12:30"},"nativeSrc":"19999:12:30","nodeType":"YulExpressionStatement","src":"19999:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19972:7:30","nodeType":"YulIdentifier","src":"19972:7:30"},{"name":"headStart","nativeSrc":"19981:9:30","nodeType":"YulIdentifier","src":"19981:9:30"}],"functionName":{"name":"sub","nativeSrc":"19968:3:30","nodeType":"YulIdentifier","src":"19968:3:30"},"nativeSrc":"19968:23:30","nodeType":"YulFunctionCall","src":"19968:23:30"},{"kind":"number","nativeSrc":"19993:2:30","nodeType":"YulLiteral","src":"19993:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"19964:3:30","nodeType":"YulIdentifier","src":"19964:3:30"},"nativeSrc":"19964:32:30","nodeType":"YulFunctionCall","src":"19964:32:30"},"nativeSrc":"19961:52:30","nodeType":"YulIf","src":"19961:52:30"},{"nativeSrc":"20022:26:30","nodeType":"YulAssignment","src":"20022:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"20038:9:30","nodeType":"YulIdentifier","src":"20038:9:30"}],"functionName":{"name":"mload","nativeSrc":"20032:5:30","nodeType":"YulIdentifier","src":"20032:5:30"},"nativeSrc":"20032:16:30","nodeType":"YulFunctionCall","src":"20032:16:30"},"variableNames":[{"name":"value0","nativeSrc":"20022:6:30","nodeType":"YulIdentifier","src":"20022:6:30"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"19870:184:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19917:9:30","nodeType":"YulTypedName","src":"19917:9:30","type":""},{"name":"dataEnd","nativeSrc":"19928:7:30","nodeType":"YulTypedName","src":"19928:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19940:6:30","nodeType":"YulTypedName","src":"19940:6:30","type":""}],"src":"19870:184:30"},{"body":{"nativeSrc":"20140:103:30","nodeType":"YulBlock","src":"20140:103:30","statements":[{"body":{"nativeSrc":"20186:16:30","nodeType":"YulBlock","src":"20186:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20195:1:30","nodeType":"YulLiteral","src":"20195:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"20198:1:30","nodeType":"YulLiteral","src":"20198:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"20188:6:30","nodeType":"YulIdentifier","src":"20188:6:30"},"nativeSrc":"20188:12:30","nodeType":"YulFunctionCall","src":"20188:12:30"},"nativeSrc":"20188:12:30","nodeType":"YulExpressionStatement","src":"20188:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20161:7:30","nodeType":"YulIdentifier","src":"20161:7:30"},{"name":"headStart","nativeSrc":"20170:9:30","nodeType":"YulIdentifier","src":"20170:9:30"}],"functionName":{"name":"sub","nativeSrc":"20157:3:30","nodeType":"YulIdentifier","src":"20157:3:30"},"nativeSrc":"20157:23:30","nodeType":"YulFunctionCall","src":"20157:23:30"},{"kind":"number","nativeSrc":"20182:2:30","nodeType":"YulLiteral","src":"20182:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"20153:3:30","nodeType":"YulIdentifier","src":"20153:3:30"},"nativeSrc":"20153:32:30","nodeType":"YulFunctionCall","src":"20153:32:30"},"nativeSrc":"20150:52:30","nodeType":"YulIf","src":"20150:52:30"},{"nativeSrc":"20211:26:30","nodeType":"YulAssignment","src":"20211:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"20227:9:30","nodeType":"YulIdentifier","src":"20227:9:30"}],"functionName":{"name":"mload","nativeSrc":"20221:5:30","nodeType":"YulIdentifier","src":"20221:5:30"},"nativeSrc":"20221:16:30","nodeType":"YulFunctionCall","src":"20221:16:30"},"variableNames":[{"name":"value0","nativeSrc":"20211:6:30","nodeType":"YulIdentifier","src":"20211:6:30"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"20059:184:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20106:9:30","nodeType":"YulTypedName","src":"20106:9:30","type":""},{"name":"dataEnd","nativeSrc":"20117:7:30","nodeType":"YulTypedName","src":"20117:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20129:6:30","nodeType":"YulTypedName","src":"20129:6:30","type":""}],"src":"20059:184:30"},{"body":{"nativeSrc":"20405:218:30","nodeType":"YulBlock","src":"20405:218:30","statements":[{"nativeSrc":"20415:26:30","nodeType":"YulAssignment","src":"20415:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"20427:9:30","nodeType":"YulIdentifier","src":"20427:9:30"},{"kind":"number","nativeSrc":"20438:2:30","nodeType":"YulLiteral","src":"20438:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20423:3:30","nodeType":"YulIdentifier","src":"20423:3:30"},"nativeSrc":"20423:18:30","nodeType":"YulFunctionCall","src":"20423:18:30"},"variableNames":[{"name":"tail","nativeSrc":"20415:4:30","nodeType":"YulIdentifier","src":"20415:4:30"}]},{"nativeSrc":"20450:29:30","nodeType":"YulVariableDeclaration","src":"20450:29:30","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"20468:3:30","nodeType":"YulLiteral","src":"20468:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"20473:1:30","nodeType":"YulLiteral","src":"20473:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"20464:3:30","nodeType":"YulIdentifier","src":"20464:3:30"},"nativeSrc":"20464:11:30","nodeType":"YulFunctionCall","src":"20464:11:30"},{"kind":"number","nativeSrc":"20477:1:30","nodeType":"YulLiteral","src":"20477:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"20460:3:30","nodeType":"YulIdentifier","src":"20460:3:30"},"nativeSrc":"20460:19:30","nodeType":"YulFunctionCall","src":"20460:19:30"},"variables":[{"name":"_1","nativeSrc":"20454:2:30","nodeType":"YulTypedName","src":"20454:2:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20495:9:30","nodeType":"YulIdentifier","src":"20495:9:30"},{"arguments":[{"name":"value0","nativeSrc":"20510:6:30","nodeType":"YulIdentifier","src":"20510:6:30"},{"name":"_1","nativeSrc":"20518:2:30","nodeType":"YulIdentifier","src":"20518:2:30"}],"functionName":{"name":"and","nativeSrc":"20506:3:30","nodeType":"YulIdentifier","src":"20506:3:30"},"nativeSrc":"20506:15:30","nodeType":"YulFunctionCall","src":"20506:15:30"}],"functionName":{"name":"mstore","nativeSrc":"20488:6:30","nodeType":"YulIdentifier","src":"20488:6:30"},"nativeSrc":"20488:34:30","nodeType":"YulFunctionCall","src":"20488:34:30"},"nativeSrc":"20488:34:30","nodeType":"YulExpressionStatement","src":"20488:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20542:9:30","nodeType":"YulIdentifier","src":"20542:9:30"},{"kind":"number","nativeSrc":"20553:2:30","nodeType":"YulLiteral","src":"20553:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20538:3:30","nodeType":"YulIdentifier","src":"20538:3:30"},"nativeSrc":"20538:18:30","nodeType":"YulFunctionCall","src":"20538:18:30"},{"arguments":[{"name":"value1","nativeSrc":"20562:6:30","nodeType":"YulIdentifier","src":"20562:6:30"},{"name":"_1","nativeSrc":"20570:2:30","nodeType":"YulIdentifier","src":"20570:2:30"}],"functionName":{"name":"and","nativeSrc":"20558:3:30","nodeType":"YulIdentifier","src":"20558:3:30"},"nativeSrc":"20558:15:30","nodeType":"YulFunctionCall","src":"20558:15:30"}],"functionName":{"name":"mstore","nativeSrc":"20531:6:30","nodeType":"YulIdentifier","src":"20531:6:30"},"nativeSrc":"20531:43:30","nodeType":"YulFunctionCall","src":"20531:43:30"},"nativeSrc":"20531:43:30","nodeType":"YulExpressionStatement","src":"20531:43:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20594:9:30","nodeType":"YulIdentifier","src":"20594:9:30"},{"kind":"number","nativeSrc":"20605:2:30","nodeType":"YulLiteral","src":"20605:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20590:3:30","nodeType":"YulIdentifier","src":"20590:3:30"},"nativeSrc":"20590:18:30","nodeType":"YulFunctionCall","src":"20590:18:30"},{"name":"value2","nativeSrc":"20610:6:30","nodeType":"YulIdentifier","src":"20610:6:30"}],"functionName":{"name":"mstore","nativeSrc":"20583:6:30","nodeType":"YulIdentifier","src":"20583:6:30"},"nativeSrc":"20583:34:30","nodeType":"YulFunctionCall","src":"20583:34:30"},"nativeSrc":"20583:34:30","nodeType":"YulExpressionStatement","src":"20583:34:30"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"20248:375:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20358:9:30","nodeType":"YulTypedName","src":"20358:9:30","type":""},{"name":"value2","nativeSrc":"20369:6:30","nodeType":"YulTypedName","src":"20369:6:30","type":""},{"name":"value1","nativeSrc":"20377:6:30","nodeType":"YulTypedName","src":"20377:6:30","type":""},{"name":"value0","nativeSrc":"20385:6:30","nodeType":"YulTypedName","src":"20385:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20396:4:30","nodeType":"YulTypedName","src":"20396:4:30","type":""}],"src":"20248:375:30"},{"body":{"nativeSrc":"20802:176:30","nodeType":"YulBlock","src":"20802:176:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20819:9:30","nodeType":"YulIdentifier","src":"20819:9:30"},{"kind":"number","nativeSrc":"20830:2:30","nodeType":"YulLiteral","src":"20830:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"20812:6:30","nodeType":"YulIdentifier","src":"20812:6:30"},"nativeSrc":"20812:21:30","nodeType":"YulFunctionCall","src":"20812:21:30"},"nativeSrc":"20812:21:30","nodeType":"YulExpressionStatement","src":"20812:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20853:9:30","nodeType":"YulIdentifier","src":"20853:9:30"},{"kind":"number","nativeSrc":"20864:2:30","nodeType":"YulLiteral","src":"20864:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20849:3:30","nodeType":"YulIdentifier","src":"20849:3:30"},"nativeSrc":"20849:18:30","nodeType":"YulFunctionCall","src":"20849:18:30"},{"kind":"number","nativeSrc":"20869:2:30","nodeType":"YulLiteral","src":"20869:2:30","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"20842:6:30","nodeType":"YulIdentifier","src":"20842:6:30"},"nativeSrc":"20842:30:30","nodeType":"YulFunctionCall","src":"20842:30:30"},"nativeSrc":"20842:30:30","nodeType":"YulExpressionStatement","src":"20842:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20892:9:30","nodeType":"YulIdentifier","src":"20892:9:30"},{"kind":"number","nativeSrc":"20903:2:30","nodeType":"YulLiteral","src":"20903:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20888:3:30","nodeType":"YulIdentifier","src":"20888:3:30"},"nativeSrc":"20888:18:30","nodeType":"YulFunctionCall","src":"20888:18:30"},{"hexValue":"75736572207374616b6520616d6f756e74206f766572666c6f77","kind":"string","nativeSrc":"20908:28:30","nodeType":"YulLiteral","src":"20908:28:30","type":"","value":"user stake amount overflow"}],"functionName":{"name":"mstore","nativeSrc":"20881:6:30","nodeType":"YulIdentifier","src":"20881:6:30"},"nativeSrc":"20881:56:30","nodeType":"YulFunctionCall","src":"20881:56:30"},"nativeSrc":"20881:56:30","nodeType":"YulExpressionStatement","src":"20881:56:30"},{"nativeSrc":"20946:26:30","nodeType":"YulAssignment","src":"20946:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"20958:9:30","nodeType":"YulIdentifier","src":"20958:9:30"},{"kind":"number","nativeSrc":"20969:2:30","nodeType":"YulLiteral","src":"20969:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20954:3:30","nodeType":"YulIdentifier","src":"20954:3:30"},"nativeSrc":"20954:18:30","nodeType":"YulFunctionCall","src":"20954:18:30"},"variableNames":[{"name":"tail","nativeSrc":"20946:4:30","nodeType":"YulIdentifier","src":"20946:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20628:350:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20779:9:30","nodeType":"YulTypedName","src":"20779:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20793:4:30","nodeType":"YulTypedName","src":"20793:4:30","type":""}],"src":"20628:350:30"},{"body":{"nativeSrc":"21157:227:30","nodeType":"YulBlock","src":"21157:227:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21174:9:30","nodeType":"YulIdentifier","src":"21174:9:30"},{"kind":"number","nativeSrc":"21185:2:30","nodeType":"YulLiteral","src":"21185:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21167:6:30","nodeType":"YulIdentifier","src":"21167:6:30"},"nativeSrc":"21167:21:30","nodeType":"YulFunctionCall","src":"21167:21:30"},"nativeSrc":"21167:21:30","nodeType":"YulExpressionStatement","src":"21167:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21208:9:30","nodeType":"YulIdentifier","src":"21208:9:30"},{"kind":"number","nativeSrc":"21219:2:30","nodeType":"YulLiteral","src":"21219:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21204:3:30","nodeType":"YulIdentifier","src":"21204:3:30"},"nativeSrc":"21204:18:30","nodeType":"YulFunctionCall","src":"21204:18:30"},{"kind":"number","nativeSrc":"21224:2:30","nodeType":"YulLiteral","src":"21224:2:30","type":"","value":"37"}],"functionName":{"name":"mstore","nativeSrc":"21197:6:30","nodeType":"YulIdentifier","src":"21197:6:30"},"nativeSrc":"21197:30:30","nodeType":"YulFunctionCall","src":"21197:30:30"},"nativeSrc":"21197:30:30","nodeType":"YulExpressionStatement","src":"21197:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21247:9:30","nodeType":"YulIdentifier","src":"21247:9:30"},{"kind":"number","nativeSrc":"21258:2:30","nodeType":"YulLiteral","src":"21258:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21243:3:30","nodeType":"YulIdentifier","src":"21243:3:30"},"nativeSrc":"21243:18:30","nodeType":"YulFunctionCall","src":"21243:18:30"},{"hexValue":"616363756d756c617465207265776172647320706572207374616b65206f7665","kind":"string","nativeSrc":"21263:34:30","nodeType":"YulLiteral","src":"21263:34:30","type":"","value":"accumulate rewards per stake ove"}],"functionName":{"name":"mstore","nativeSrc":"21236:6:30","nodeType":"YulIdentifier","src":"21236:6:30"},"nativeSrc":"21236:62:30","nodeType":"YulFunctionCall","src":"21236:62:30"},"nativeSrc":"21236:62:30","nodeType":"YulExpressionStatement","src":"21236:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21318:9:30","nodeType":"YulIdentifier","src":"21318:9:30"},{"kind":"number","nativeSrc":"21329:2:30","nodeType":"YulLiteral","src":"21329:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21314:3:30","nodeType":"YulIdentifier","src":"21314:3:30"},"nativeSrc":"21314:18:30","nodeType":"YulFunctionCall","src":"21314:18:30"},{"hexValue":"72666c6f77","kind":"string","nativeSrc":"21334:7:30","nodeType":"YulLiteral","src":"21334:7:30","type":"","value":"rflow"}],"functionName":{"name":"mstore","nativeSrc":"21307:6:30","nodeType":"YulIdentifier","src":"21307:6:30"},"nativeSrc":"21307:35:30","nodeType":"YulFunctionCall","src":"21307:35:30"},"nativeSrc":"21307:35:30","nodeType":"YulExpressionStatement","src":"21307:35:30"},{"nativeSrc":"21351:27:30","nodeType":"YulAssignment","src":"21351:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"21363:9:30","nodeType":"YulIdentifier","src":"21363:9:30"},{"kind":"number","nativeSrc":"21374:3:30","nodeType":"YulLiteral","src":"21374:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21359:3:30","nodeType":"YulIdentifier","src":"21359:3:30"},"nativeSrc":"21359:19:30","nodeType":"YulFunctionCall","src":"21359:19:30"},"variableNames":[{"name":"tail","nativeSrc":"21351:4:30","nodeType":"YulIdentifier","src":"21351:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20983:401:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21134:9:30","nodeType":"YulTypedName","src":"21134:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21148:4:30","nodeType":"YulTypedName","src":"21148:4:30","type":""}],"src":"20983:401:30"},{"body":{"nativeSrc":"21563:174:30","nodeType":"YulBlock","src":"21563:174:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21580:9:30","nodeType":"YulIdentifier","src":"21580:9:30"},{"kind":"number","nativeSrc":"21591:2:30","nodeType":"YulLiteral","src":"21591:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21573:6:30","nodeType":"YulIdentifier","src":"21573:6:30"},"nativeSrc":"21573:21:30","nodeType":"YulFunctionCall","src":"21573:21:30"},"nativeSrc":"21573:21:30","nodeType":"YulExpressionStatement","src":"21573:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21614:9:30","nodeType":"YulIdentifier","src":"21614:9:30"},{"kind":"number","nativeSrc":"21625:2:30","nodeType":"YulLiteral","src":"21625:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21610:3:30","nodeType":"YulIdentifier","src":"21610:3:30"},"nativeSrc":"21610:18:30","nodeType":"YulFunctionCall","src":"21610:18:30"},{"kind":"number","nativeSrc":"21630:2:30","nodeType":"YulLiteral","src":"21630:2:30","type":"","value":"24"}],"functionName":{"name":"mstore","nativeSrc":"21603:6:30","nodeType":"YulIdentifier","src":"21603:6:30"},"nativeSrc":"21603:30:30","nodeType":"YulFunctionCall","src":"21603:30:30"},"nativeSrc":"21603:30:30","nodeType":"YulExpressionStatement","src":"21603:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21653:9:30","nodeType":"YulIdentifier","src":"21653:9:30"},{"kind":"number","nativeSrc":"21664:2:30","nodeType":"YulLiteral","src":"21664:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21649:3:30","nodeType":"YulIdentifier","src":"21649:3:30"},"nativeSrc":"21649:18:30","nodeType":"YulFunctionCall","src":"21649:18:30"},{"hexValue":"70656e64696e672072657761726473206f766572666c6f77","kind":"string","nativeSrc":"21669:26:30","nodeType":"YulLiteral","src":"21669:26:30","type":"","value":"pending rewards overflow"}],"functionName":{"name":"mstore","nativeSrc":"21642:6:30","nodeType":"YulIdentifier","src":"21642:6:30"},"nativeSrc":"21642:54:30","nodeType":"YulFunctionCall","src":"21642:54:30"},"nativeSrc":"21642:54:30","nodeType":"YulExpressionStatement","src":"21642:54:30"},{"nativeSrc":"21705:26:30","nodeType":"YulAssignment","src":"21705:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"21717:9:30","nodeType":"YulIdentifier","src":"21717:9:30"},{"kind":"number","nativeSrc":"21728:2:30","nodeType":"YulLiteral","src":"21728:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21713:3:30","nodeType":"YulIdentifier","src":"21713:3:30"},"nativeSrc":"21713:18:30","nodeType":"YulFunctionCall","src":"21713:18:30"},"variableNames":[{"name":"tail","nativeSrc":"21705:4:30","nodeType":"YulIdentifier","src":"21705:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21389:348:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21540:9:30","nodeType":"YulTypedName","src":"21540:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21554:4:30","nodeType":"YulTypedName","src":"21554:4:30","type":""}],"src":"21389:348:30"},{"body":{"nativeSrc":"21916:182:30","nodeType":"YulBlock","src":"21916:182:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21933:9:30","nodeType":"YulIdentifier","src":"21933:9:30"},{"kind":"number","nativeSrc":"21944:2:30","nodeType":"YulLiteral","src":"21944:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21926:6:30","nodeType":"YulIdentifier","src":"21926:6:30"},"nativeSrc":"21926:21:30","nodeType":"YulFunctionCall","src":"21926:21:30"},"nativeSrc":"21926:21:30","nodeType":"YulExpressionStatement","src":"21926:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21967:9:30","nodeType":"YulIdentifier","src":"21967:9:30"},{"kind":"number","nativeSrc":"21978:2:30","nodeType":"YulLiteral","src":"21978:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21963:3:30","nodeType":"YulIdentifier","src":"21963:3:30"},"nativeSrc":"21963:18:30","nodeType":"YulFunctionCall","src":"21963:18:30"},{"kind":"number","nativeSrc":"21983:2:30","nodeType":"YulLiteral","src":"21983:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21956:6:30","nodeType":"YulIdentifier","src":"21956:6:30"},"nativeSrc":"21956:30:30","nodeType":"YulFunctionCall","src":"21956:30:30"},"nativeSrc":"21956:30:30","nodeType":"YulExpressionStatement","src":"21956:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22006:9:30","nodeType":"YulIdentifier","src":"22006:9:30"},{"kind":"number","nativeSrc":"22017:2:30","nodeType":"YulLiteral","src":"22017:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22002:3:30","nodeType":"YulIdentifier","src":"22002:3:30"},"nativeSrc":"22002:18:30","nodeType":"YulFunctionCall","src":"22002:18:30"},{"hexValue":"616363756d756c617465207374616b6520616d6f756e74206f766572666c6f77","kind":"string","nativeSrc":"22022:34:30","nodeType":"YulLiteral","src":"22022:34:30","type":"","value":"accumulate stake amount overflow"}],"functionName":{"name":"mstore","nativeSrc":"21995:6:30","nodeType":"YulIdentifier","src":"21995:6:30"},"nativeSrc":"21995:62:30","nodeType":"YulFunctionCall","src":"21995:62:30"},"nativeSrc":"21995:62:30","nodeType":"YulExpressionStatement","src":"21995:62:30"},{"nativeSrc":"22066:26:30","nodeType":"YulAssignment","src":"22066:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"22078:9:30","nodeType":"YulIdentifier","src":"22078:9:30"},{"kind":"number","nativeSrc":"22089:2:30","nodeType":"YulLiteral","src":"22089:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22074:3:30","nodeType":"YulIdentifier","src":"22074:3:30"},"nativeSrc":"22074:18:30","nodeType":"YulFunctionCall","src":"22074:18:30"},"variableNames":[{"name":"tail","nativeSrc":"22066:4:30","nodeType":"YulIdentifier","src":"22066:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21742:356:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21893:9:30","nodeType":"YulTypedName","src":"21893:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21907:4:30","nodeType":"YulTypedName","src":"21907:4:30","type":""}],"src":"21742:356:30"},{"body":{"nativeSrc":"22277:177:30","nodeType":"YulBlock","src":"22277:177:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22294:9:30","nodeType":"YulIdentifier","src":"22294:9:30"},{"kind":"number","nativeSrc":"22305:2:30","nodeType":"YulLiteral","src":"22305:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"22287:6:30","nodeType":"YulIdentifier","src":"22287:6:30"},"nativeSrc":"22287:21:30","nodeType":"YulFunctionCall","src":"22287:21:30"},"nativeSrc":"22287:21:30","nodeType":"YulExpressionStatement","src":"22287:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22328:9:30","nodeType":"YulIdentifier","src":"22328:9:30"},{"kind":"number","nativeSrc":"22339:2:30","nodeType":"YulLiteral","src":"22339:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22324:3:30","nodeType":"YulIdentifier","src":"22324:3:30"},"nativeSrc":"22324:18:30","nodeType":"YulFunctionCall","src":"22324:18:30"},{"kind":"number","nativeSrc":"22344:2:30","nodeType":"YulLiteral","src":"22344:2:30","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"22317:6:30","nodeType":"YulIdentifier","src":"22317:6:30"},"nativeSrc":"22317:30:30","nodeType":"YulFunctionCall","src":"22317:30:30"},"nativeSrc":"22317:30:30","nodeType":"YulExpressionStatement","src":"22317:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22367:9:30","nodeType":"YulIdentifier","src":"22367:9:30"},{"kind":"number","nativeSrc":"22378:2:30","nodeType":"YulLiteral","src":"22378:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22363:3:30","nodeType":"YulIdentifier","src":"22363:3:30"},"nativeSrc":"22363:18:30","nodeType":"YulFunctionCall","src":"22363:18:30"},{"hexValue":"7374616b6520746f6b656e20616d6f756e74206f766572666c6f77","kind":"string","nativeSrc":"22383:29:30","nodeType":"YulLiteral","src":"22383:29:30","type":"","value":"stake token amount overflow"}],"functionName":{"name":"mstore","nativeSrc":"22356:6:30","nodeType":"YulIdentifier","src":"22356:6:30"},"nativeSrc":"22356:57:30","nodeType":"YulFunctionCall","src":"22356:57:30"},"nativeSrc":"22356:57:30","nodeType":"YulExpressionStatement","src":"22356:57:30"},{"nativeSrc":"22422:26:30","nodeType":"YulAssignment","src":"22422:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"22434:9:30","nodeType":"YulIdentifier","src":"22434:9:30"},{"kind":"number","nativeSrc":"22445:2:30","nodeType":"YulLiteral","src":"22445:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22430:3:30","nodeType":"YulIdentifier","src":"22430:3:30"},"nativeSrc":"22430:18:30","nodeType":"YulFunctionCall","src":"22430:18:30"},"variableNames":[{"name":"tail","nativeSrc":"22422:4:30","nodeType":"YulIdentifier","src":"22422:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22103:351:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22254:9:30","nodeType":"YulTypedName","src":"22254:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22268:4:30","nodeType":"YulTypedName","src":"22268:4:30","type":""}],"src":"22103:351:30"},{"body":{"nativeSrc":"22633:228:30","nodeType":"YulBlock","src":"22633:228:30","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22650:9:30","nodeType":"YulIdentifier","src":"22650:9:30"},{"kind":"number","nativeSrc":"22661:2:30","nodeType":"YulLiteral","src":"22661:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"22643:6:30","nodeType":"YulIdentifier","src":"22643:6:30"},"nativeSrc":"22643:21:30","nodeType":"YulFunctionCall","src":"22643:21:30"},"nativeSrc":"22643:21:30","nodeType":"YulExpressionStatement","src":"22643:21:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22684:9:30","nodeType":"YulIdentifier","src":"22684:9:30"},{"kind":"number","nativeSrc":"22695:2:30","nodeType":"YulLiteral","src":"22695:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22680:3:30","nodeType":"YulIdentifier","src":"22680:3:30"},"nativeSrc":"22680:18:30","nodeType":"YulFunctionCall","src":"22680:18:30"},{"kind":"number","nativeSrc":"22700:2:30","nodeType":"YulLiteral","src":"22700:2:30","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"22673:6:30","nodeType":"YulIdentifier","src":"22673:6:30"},"nativeSrc":"22673:30:30","nodeType":"YulFunctionCall","src":"22673:30:30"},"nativeSrc":"22673:30:30","nodeType":"YulExpressionStatement","src":"22673:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22723:9:30","nodeType":"YulIdentifier","src":"22723:9:30"},{"kind":"number","nativeSrc":"22734:2:30","nodeType":"YulLiteral","src":"22734:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22719:3:30","nodeType":"YulIdentifier","src":"22719:3:30"},"nativeSrc":"22719:18:30","nodeType":"YulFunctionCall","src":"22719:18:30"},{"hexValue":"75736572207374416d6f756e74206d756c206163635243435065725354206f76","kind":"string","nativeSrc":"22739:34:30","nodeType":"YulLiteral","src":"22739:34:30","type":"","value":"user stAmount mul accRCCPerST ov"}],"functionName":{"name":"mstore","nativeSrc":"22712:6:30","nodeType":"YulIdentifier","src":"22712:6:30"},"nativeSrc":"22712:62:30","nodeType":"YulFunctionCall","src":"22712:62:30"},"nativeSrc":"22712:62:30","nodeType":"YulExpressionStatement","src":"22712:62:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22794:9:30","nodeType":"YulIdentifier","src":"22794:9:30"},{"kind":"number","nativeSrc":"22805:2:30","nodeType":"YulLiteral","src":"22805:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22790:3:30","nodeType":"YulIdentifier","src":"22790:3:30"},"nativeSrc":"22790:18:30","nodeType":"YulFunctionCall","src":"22790:18:30"},{"hexValue":"6572666c6f77","kind":"string","nativeSrc":"22810:8:30","nodeType":"YulLiteral","src":"22810:8:30","type":"","value":"erflow"}],"functionName":{"name":"mstore","nativeSrc":"22783:6:30","nodeType":"YulIdentifier","src":"22783:6:30"},"nativeSrc":"22783:36:30","nodeType":"YulFunctionCall","src":"22783:36:30"},"nativeSrc":"22783:36:30","nodeType":"YulExpressionStatement","src":"22783:36:30"},{"nativeSrc":"22828:27:30","nodeType":"YulAssignment","src":"22828:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"22840:9:30","nodeType":"YulIdentifier","src":"22840:9:30"},{"kind":"number","nativeSrc":"22851:3:30","nodeType":"YulLiteral","src":"22851:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22836:3:30","nodeType":"YulIdentifier","src":"22836:3:30"},"nativeSrc":"22836:19:30","nodeType":"YulFunctionCall","src":"22836:19:30"},"variableNames":[{"name":"tail","nativeSrc":"22828:4:30","nodeType":"YulIdentifier","src":"22828:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22459:402:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22610:9:30","nodeType":"YulTypedName","src":"22610:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22624:4:30","nodeType":"YulTypedName","src":"22624:4:30","type":""}],"src":"22459:402:30"},{"body":{"nativeSrc":"22995:145:30","nodeType":"YulBlock","src":"22995:145:30","statements":[{"nativeSrc":"23005:26:30","nodeType":"YulAssignment","src":"23005:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"23017:9:30","nodeType":"YulIdentifier","src":"23017:9:30"},{"kind":"number","nativeSrc":"23028:2:30","nodeType":"YulLiteral","src":"23028:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23013:3:30","nodeType":"YulIdentifier","src":"23013:3:30"},"nativeSrc":"23013:18:30","nodeType":"YulFunctionCall","src":"23013:18:30"},"variableNames":[{"name":"tail","nativeSrc":"23005:4:30","nodeType":"YulIdentifier","src":"23005:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"23047:9:30","nodeType":"YulIdentifier","src":"23047:9:30"},{"arguments":[{"name":"value0","nativeSrc":"23062:6:30","nodeType":"YulIdentifier","src":"23062:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"23078:3:30","nodeType":"YulLiteral","src":"23078:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"23083:1:30","nodeType":"YulLiteral","src":"23083:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"23074:3:30","nodeType":"YulIdentifier","src":"23074:3:30"},"nativeSrc":"23074:11:30","nodeType":"YulFunctionCall","src":"23074:11:30"},{"kind":"number","nativeSrc":"23087:1:30","nodeType":"YulLiteral","src":"23087:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"23070:3:30","nodeType":"YulIdentifier","src":"23070:3:30"},"nativeSrc":"23070:19:30","nodeType":"YulFunctionCall","src":"23070:19:30"}],"functionName":{"name":"and","nativeSrc":"23058:3:30","nodeType":"YulIdentifier","src":"23058:3:30"},"nativeSrc":"23058:32:30","nodeType":"YulFunctionCall","src":"23058:32:30"}],"functionName":{"name":"mstore","nativeSrc":"23040:6:30","nodeType":"YulIdentifier","src":"23040:6:30"},"nativeSrc":"23040:51:30","nodeType":"YulFunctionCall","src":"23040:51:30"},"nativeSrc":"23040:51:30","nodeType":"YulExpressionStatement","src":"23040:51:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23111:9:30","nodeType":"YulIdentifier","src":"23111:9:30"},{"kind":"number","nativeSrc":"23122:2:30","nodeType":"YulLiteral","src":"23122:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23107:3:30","nodeType":"YulIdentifier","src":"23107:3:30"},"nativeSrc":"23107:18:30","nodeType":"YulFunctionCall","src":"23107:18:30"},{"name":"value1","nativeSrc":"23127:6:30","nodeType":"YulIdentifier","src":"23127:6:30"}],"functionName":{"name":"mstore","nativeSrc":"23100:6:30","nodeType":"YulIdentifier","src":"23100:6:30"},"nativeSrc":"23100:34:30","nodeType":"YulFunctionCall","src":"23100:34:30"},"nativeSrc":"23100:34:30","nodeType":"YulExpressionStatement","src":"23100:34:30"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"22866:274:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22956:9:30","nodeType":"YulTypedName","src":"22956:9:30","type":""},{"name":"value1","nativeSrc":"22967:6:30","nodeType":"YulTypedName","src":"22967:6:30","type":""},{"name":"value0","nativeSrc":"22975:6:30","nodeType":"YulTypedName","src":"22975:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22986:4:30","nodeType":"YulTypedName","src":"22986:4:30","type":""}],"src":"22866:274:30"},{"body":{"nativeSrc":"23282:150:30","nodeType":"YulBlock","src":"23282:150:30","statements":[{"nativeSrc":"23292:27:30","nodeType":"YulVariableDeclaration","src":"23292:27:30","value":{"arguments":[{"name":"value0","nativeSrc":"23312:6:30","nodeType":"YulIdentifier","src":"23312:6:30"}],"functionName":{"name":"mload","nativeSrc":"23306:5:30","nodeType":"YulIdentifier","src":"23306:5:30"},"nativeSrc":"23306:13:30","nodeType":"YulFunctionCall","src":"23306:13:30"},"variables":[{"name":"length","nativeSrc":"23296:6:30","nodeType":"YulTypedName","src":"23296:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"23367:6:30","nodeType":"YulIdentifier","src":"23367:6:30"},{"kind":"number","nativeSrc":"23375:4:30","nodeType":"YulLiteral","src":"23375:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"23363:3:30","nodeType":"YulIdentifier","src":"23363:3:30"},"nativeSrc":"23363:17:30","nodeType":"YulFunctionCall","src":"23363:17:30"},{"name":"pos","nativeSrc":"23382:3:30","nodeType":"YulIdentifier","src":"23382:3:30"},{"name":"length","nativeSrc":"23387:6:30","nodeType":"YulIdentifier","src":"23387:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"23328:34:30","nodeType":"YulIdentifier","src":"23328:34:30"},"nativeSrc":"23328:66:30","nodeType":"YulFunctionCall","src":"23328:66:30"},"nativeSrc":"23328:66:30","nodeType":"YulExpressionStatement","src":"23328:66:30"},{"nativeSrc":"23403:23:30","nodeType":"YulAssignment","src":"23403:23:30","value":{"arguments":[{"name":"pos","nativeSrc":"23414:3:30","nodeType":"YulIdentifier","src":"23414:3:30"},{"name":"length","nativeSrc":"23419:6:30","nodeType":"YulIdentifier","src":"23419:6:30"}],"functionName":{"name":"add","nativeSrc":"23410:3:30","nodeType":"YulIdentifier","src":"23410:3:30"},"nativeSrc":"23410:16:30","nodeType":"YulFunctionCall","src":"23410:16:30"},"variableNames":[{"name":"end","nativeSrc":"23403:3:30","nodeType":"YulIdentifier","src":"23403:3:30"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"23145:287:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23258:3:30","nodeType":"YulTypedName","src":"23258:3:30","type":""},{"name":"value0","nativeSrc":"23263:6:30","nodeType":"YulTypedName","src":"23263:6:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23274:3:30","nodeType":"YulTypedName","src":"23274:3:30","type":""}],"src":"23145:287:30"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$2298t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2298__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_bool(value_1)\n        value4 := value_1\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$2298(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"invalid pid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"withdraw is paused\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"claim is paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"start block must be less than en\")\n        mstore(add(headStart, 96), \"d block\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"rcc per block must be greater th\")\n        mstore(add(headStart, 96), \"an 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 8)\n        mstore(add(headStart, 64), \"overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"withdraw has already been unpaus\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"invalid range\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"multiplier overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a40f5adcc0f327ea4569b64219d34444458f98e534070c4ae22df0b574107ecf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Not enough staking token balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bc46be7e88dad9c850cfc31962eb9871149b07b0ba227a4233d18e86f3aa2886__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"overflow2\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f5e521e2c65f04ddc979b259b7b59d4bb841d693fe0fe14d56a3ec19243b969a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"overflow3\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"the first pool must be ETH pool\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"invalid withdraw locked blocks\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"already ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_31d5b1c22ea6e76334ac16bb5682be30c83b68d64d59c704e05e7e51c06d2e57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid RCC per block\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_11d6ed57bc2b60051e8a3bda6c3bc12d844aa2380e7d2f1336e05a70bb63dc7e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid end block\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"invalid pool id\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"deposit not support ETH staking\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"invalid deposit amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6931c31d4f12cf701d2bae3519754547c6c993e2548333d63706fa6eb15e9c7c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid start block\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ETH pool must be created first\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"invalid pool weight\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7d2ab1273c3a1faf917e7dccd29abed8d9f4b4c4744abaa01dfcf902cef0a4df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"total pool weight overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ETH transfer call failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ETH transfer operation did not s\")\n        mstore(add(headStart, 96), \"ucceed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"user stake amount overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"accumulate rewards per stake ove\")\n        mstore(add(headStart, 96), \"rflow\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"pending rewards overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"accumulate stake amount overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"stake token amount overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"user stAmount mul accRCCPerST ov\")\n        mstore(add(headStart, 96), \"erflow\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"636":[{"length":32,"start":10611},{"length":32,"start":10652},{"length":32,"start":11160}]},"linkReferences":{},"object":"6080604052600436106102745760003560e01c80638dbb1e3a1161014e578063bed66c08116100bb578063f35e4a6e11610077578063f35e4a6e146107c2578063f5485d32146107e2578063f6326fb314610802578063fad07ece1461080a578063fe3131121461082a578063ff4233571461088957005b8063bed66c0814610722578063bfc3ebba146105d4578063c713aa9414610742578063d547741f14610762578063d86c044414610782578063e2bbb158146107a257005b8063ab5e124a1161010a578063ab5e124a14610647578063ad3cb1cc14610666578063ae35a8d5146106a4578063b3944d52146106b9578063b6d9d919146106ce578063b908afa8146106ee57005b80638dbb1e3a1461057457806391d14854146105945780639e2c8a5b146105b4578063a217fddf146105d4578063a27d9279146105e9578063a72d5bf41461060957005b806341721ab7116101ec5780635c975abb116101a85780635c975abb146104c65780636155e3de146104fd578063630b5ba11461051257806370ff01731461052757806375b238fc1461053d57806380cce73f1461055f57005b806341721ab71461042857806348cd4cb1146104485780634ec81af11461045e5780634f1ef2861461047e57806351eb05a61461049157806352d1902d146104b157005b80632e1a7d4d1161023b5780632e1a7d4d1461032c5780632f2ff15d1461034c5780632f3ffb9f1461036c57806336568abe1461038657806337849b3c146103a6578063379607f51461040857005b806301ffc9a71461027d57806302559004146102b2578063083c6323146102d657806311548234146102ec578063248a9ca31461030c57005b3661027b57005b005b34801561028957600080fd5b5061029d6102983660046132cb565b6108be565b60405190151581526020015b60405180910390f35b3480156102be57600080fd5b506102c860045481565b6040519081526020016102a9565b3480156102e257600080fd5b506102c860015481565b3480156102f857600080fd5b506102c861030736600461330a565b6108f5565b34801561031857600080fd5b506102c861032736600461333a565b610951565b34801561033857600080fd5b5061027b61034736600461333a565b610973565b34801561035857600080fd5b5061027b61036736600461330a565b610bd4565b34801561037857600080fd5b5060035461029d9060ff1681565b34801561039257600080fd5b5061027b6103a136600461330a565b610bf6565b3480156103b257600080fd5b506103ed6103c136600461330a565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b604080519384526020840192909252908201526060016102a9565b34801561041457600080fd5b5061027b61042336600461333a565b610c2e565b34801561043457600080fd5b506102c8610443366004613353565b610d9d565b34801561045457600080fd5b506102c860005481565b34801561046a57600080fd5b5061027b61047936600461338b565b610eb5565b61027b61048c3660046133dc565b6110fb565b34801561049d57600080fd5b5061027b6104ac36600461333a565b61111a565b3480156104bd57600080fd5b506102c86112ed565b3480156104d257600080fd5b507fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1661029d565b34801561050957600080fd5b5061027b61130a565b34801561051e57600080fd5b5061027b6113b8565b34801561053357600080fd5b506102c860025481565b34801561054957600080fd5b506102c860008051602061379583398151915281565b34801561056b57600080fd5b5061027b6113d7565b34801561058057600080fd5b506102c861058f3660046134a0565b611463565b3480156105a057600080fd5b5061029d6105af36600461330a565b611569565b3480156105c057600080fd5b5061027b6105cf3660046134a0565b6115a1565b3480156105e057600080fd5b506102c8600081565b3480156105f557600080fd5b506102c861060436600461330a565b611859565b34801561061557600080fd5b5060035461062f906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020016102a9565b34801561065357600080fd5b5060035461029d90610100900460ff1681565b34801561067257600080fd5b50610697604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102a991906134e6565b3480156106b057600080fd5b5061027b611892565b3480156106c557600080fd5b506005546102c8565b3480156106da57600080fd5b5061027b6106e9366004613527565b61192a565b3480156106fa57600080fd5b506102c87ff47fc0c09ebbfe308d89b8035681a1164b9882bcfd49eb89861067738a30f5ab81565b34801561072e57600080fd5b5061027b61073d36600461333a565b611cb2565b34801561074e57600080fd5b5061027b61075d36600461333a565b611d46565b34801561076e57600080fd5b5061027b61077d36600461330a565b611dd8565b34801561078e57600080fd5b5061027b61079d36600461357d565b611df4565b3480156107ae57600080fd5b5061027b6107bd3660046134a0565b611efa565b3480156107ce57600080fd5b5061027b6107dd36600461333a565b612028565b3480156107ee57600080fd5b5061027b6107fd3660046135a9565b6120b9565b61027b61212b565b34801561081657600080fd5b5061027b6108253660046135c6565b61220e565b34801561083657600080fd5b5061084a61084536600461333a565b6123d2565b604080516001600160a01b0390981688526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0016102a9565b34801561089557600080fd5b506108a96108a436600461330a565b61242b565b604080519283526020830191909152016102a9565b60006001600160e01b03198216637965db0b60e01b14806108ef57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600554600090839081106109245760405162461bcd60e51b815260040161091b906135ff565b60405180910390fd5b60008481526006602090815260408083206001600160a01b038716845290915290205491505b5092915050565b60009081526000805160206137d5833981519152602052604090206001015490565b61097b61252b565b60035460ff161561099e5760405162461bcd60e51b815260040161091b90613624565b600554819081106109c15760405162461bcd60e51b815260040161091b906135ff565b6000600583815481106109d6576109d6613650565b6000918252602080832086845260068252604080852033865290925290832060079092020192509080805b6003840154811015610a835743846003018281548110610a2357610a23613650565b90600052602060002090600202016001015411610a8357836003018181548110610a4f57610a4f613650565b90600052602060002090600202016000015483610a6c919061367c565b925081610a788161368f565b925050600101610a01565b5060005b6003840154610a979083906136a8565b811015610b045760038401610aac838361367c565b81548110610abc57610abc613650565b9060005260206000209060020201846003018281548110610adf57610adf613650565b6000918252602090912082546002909202019081556001918201549082015501610a87565b5060005b81811015610b4c5783600301805480610b2357610b236136bb565b600082815260208120600260001990930192830201818155600190810191909155915501610b08565b508115610b875783546001600160a01b0316610b7157610b6c3383612570565b610b87565b8354610b87906001600160a01b0316338461268b565b4386336001600160a01b03167f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca9485604051610bc491815260200190565b60405180910390a4505050505050565b610bdd82610951565b610be6816126ea565b610bf083836126f4565b50505050565b6001600160a01b0381163314610c1f5760405163334bd91960e11b815260040160405180910390fd5b610c298282612799565b505050565b610c3661252b565b60055481908110610c595760405162461bcd60e51b815260040161091b906135ff565b600354610100900460ff1615610ca35760405162461bcd60e51b815260206004820152600f60248201526e18db185a5b481a5cc81c185d5cd959608a1b604482015260640161091b565b600060058381548110610cb857610cb8613650565b60009182526020808320868452600682526040808520338652909252922060079091029091019150610ce98461111a565b60008160020154826001015484600301548460000154610d0991906136d1565b610d1391906136a8565b610d1d919061367c565b90508015610d365760006002830155610d363382612815565b60038301548254670de0b6b3a764000091610d50916136d1565b610d5a91906136fe565b6001830155604051818152859033907f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf79060200160405180910390a35050505050565b60008060058581548110610db357610db3613650565b600091825260208083208884526006825260408085206001600160a01b038a1686529092529220600360079092029092019081015460048201546002830154929450909186108015610e0457508015155b15610e68576000610e19856002015488611463565b90506000600454866001015483610e3091906136d1565b610e3a91906136fe565b905082610e4f82670de0b6b3a76400006136d1565b610e5991906136fe565b610e63908561367c565b935050505b600283015460018401548454670de0b6b3a764000090610e899086906136d1565b610e9391906136fe565b610e9d91906136a8565b610ea7919061367c565b9450505050505b9392505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610efb5750825b905060008267ffffffffffffffff166001148015610f185750303b155b905081158015610f26575080155b15610f445760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610f6e57845460ff60401b1916600160401b1785555b86881115610fce5760405162461bcd60e51b815260206004820152602760248201527f737461727420626c6f636b206d757374206265206c657373207468616e20656e6044820152666420626c6f636b60c81b606482015260840161091b565b6000861161102a5760405162461bcd60e51b8152602060048201526024808201527f7263632070657220626c6f636b206d75737420626520677265617465722074686044820152630616e20360e41b606482015260840161091b565b611032612950565b61103a612950565b611042612958565b61104d6000336126f4565b506110787ff47fc0c09ebbfe308d89b8035681a1164b9882bcfd49eb89861067738a30f5ab336126f4565b50611091600080516020613795833981519152336126f4565b5061109b896120b9565b60008890556001879055600286905583156110f057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b611103612968565b61110c82612a0d565b6111168282612a37565b5050565b6005548190811061113d5760405162461bcd60e51b815260040161091b906135ff565b60006005838154811061115257611152613650565b906000526020600020906007020190508060020154431161117257505050565b6004810154600081900361118c5750436002909101555050565b6000806111ab84600101546111a5866002015443611463565b90612af4565b91509150816111cc5760405162461bcd60e51b815260040161091b90613720565b6004546111da908290612b3f565b9092509050816111fc5760405162461bcd60e51b815260040161091b90613720565b600484015480156112a657600080611215846001612af4565b91509150816112365760405162461bcd60e51b815260040161091b90613720565b6112408184612b3f565b9092509050816112625760405162461bcd60e51b815260040161091b90613720565b60008061127c838a60030154612b7290919063ffffffff16565b915091508161129d5760405162461bcd60e51b815260040161091b90613720565b60038901555050505b436002860181905560405183815288907ff5d2d72d9b25d6853afd7d0554a113b705234b6a68bb36b7f143662994632411906020015b60405180910390a350505050505050565b60006112f7612b8d565b506000805160206137b583398151915290565b600080516020613795833981519152611322816126ea565b60035460ff1661137f5760405162461bcd60e51b815260206004820152602260248201527f77697468647261772068617320616c7265616479206265656e20756e70617573604482015261195960f21b606482015260840161091b565b6003805460ff191660011790556040517f2523dfdafa00190f21a4cbd0c25179c8dd3cb34a6c17fea952ecca8fa8332c0e90600090a150565b60055460005b81811015611116576113cf8161111a565b6001016113be565b6000805160206137958339815191526113ef816126ea565b6003805460ff19811660ff918216159081179092551615611436576040517f2523dfdafa00190f21a4cbd0c25179c8dd3cb34a6c17fea952ecca8fa8332c0e90600090a150565b6040517f027c975733baceca09666fae356a901e083676848aaf9710150079385daae74390600090a15b50565b6000818311156114a55760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642072616e676560981b604482015260640161091b565b6000548310156114b55760005492505b6001548211156114c55760015491505b60006114d184846136a8565b1161150e5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642072616e676560981b604482015260640161091b565b600061152260025485856111a591906136a8565b925090508061094a5760405162461bcd60e51b81526020600482015260136024820152726d756c7469706c696572206f766572666c6f7760681b604482015260640161091b565b60009182526000805160206137d5833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6115a961252b565b60035460ff16156115cc5760405162461bcd60e51b815260040161091b90613624565b600554829081106115ef5760405162461bcd60e51b815260040161091b906135ff565b60006005848154811061160457611604613650565b60009182526020808320878452600682526040808520338652909252922080546007909202909201925084111561167d5760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f756768207374616b696e6720746f6b656e2062616c616e6365604482015260640161091b565b6116868561111a565b60038201548154600091829161169b91612af4565b91509150816116bc5760405162461bcd60e51b815260040161091b90613720565b6116c7816001612b3f565b9092509050816117055760405162461bcd60e51b815260206004820152600960248201526837bb32b9333637bb9960b91b604482015260640161091b565b6001830154611715908290612bd6565b9092509050816117535760405162461bcd60e51b81526020600482015260096024820152686f766572666c6f773360b81b604482015260640161091b565b8015611773578083600201600082825461176d919061367c565b90915550505b85156117e3578583600001600082825461178d91906136a8565b925050819055508260030160405180604001604052808881526020018660060154436117b9919061367c565b90528154600181810184556000938452602093849020835160029093020191825592909101519101555b858460040160008282546117f791906136a8565b909155505060038401548354670de0b6b3a764000091611816916136d1565b61182091906136fe565b6001840155604051868152879033907fc80277265097707f6f12a4ac4c09d46c9926e2eea2536f63616cb04d9fcad7d6906020016112dc565b6005546000908390811061187f5760405162461bcd60e51b815260040161091b906135ff565b61188a848443610d9d565b949350505050565b6000805160206137958339815191526118aa816126ea565b6003805460ff610100808304821615810261ff00199093169290921792839055910416156118fe576040517f443bf540e8151617cd5c39a681cc35a5a22be078b6f0cf16e5bd822b4c4b61ff90600090a150565b6040517f07c8faf23a72a53eb5c2c466dc81386a58b2a27d0cc3c7c580a3c12e372ba31390600090a150565b600080516020613795833981519152611942816126ea565b600554156119d55760006001600160a01b0316600560008154811061196957611969613650565b60009182526020909120600790910201546001600160a01b0316146119d05760405162461bcd60e51b815260206004820152601f60248201527f74686520666972737420706f6f6c206d7573742062652045544820706f6f6c00604482015260640161091b565b611a2c565b6001600160a01b03861615611a2c5760405162461bcd60e51b815260206004820152601f60248201527f74686520666972737420706f6f6c206d7573742062652045544820706f6f6c00604482015260640161091b565b60008311611a7c5760405162461bcd60e51b815260206004820152601e60248201527f696e76616c6964207769746864726177206c6f636b656420626c6f636b730000604482015260640161091b565b6001544310611abd5760405162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e48195b991959609a1b604482015260640161091b565b8115611acb57611acb6113b8565b600080544311611add57600054611adf565b435b90508560046000828254611af3919061367c565b90915550506040805160e0810182526001600160a01b0389811680835260208084018b81528486018781526000606087018181526080880182815260a089018f815260c08a018f815260058054600181018255955299517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600790950294850180546001600160a01b03191691909a161790985593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db183015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db382015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db482015592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db584015592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db6909201919091558251888152918201879052839289927f0fa296fce13e7a0e622b3a892e66220c248337289483a3cfa4130cde0caa1346910160405180910390a450505050505050565b600080516020613795833981519152611cca816126ea565b60008211611d125760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964205243432070657220626c6f636b60581b604482015260640161091b565b600282905560405182907f4c70925b625536dd633f6bd2d615c67fddc2e7c63c31164047a981a0df3fee5490600090a25050565b600080516020613795833981519152611d5e816126ea565b816000541115611da45760405162461bcd60e51b8152602060048201526011602482015270496e76616c696420656e6420626c6f636b60781b604482015260640161091b565b600182905560405182907f1132c5baccb51da3d049fabc819697dc845fa224ad59d9b555507d6446b4085090600090a25050565b611de182610951565b611dea816126ea565b610bf08383612799565b60055483908110611e175760405162461bcd60e51b815260040161091b906135ff565b600080516020613795833981519152611e2f816126ea565b6005548510611e725760405162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a59081c1bdbdb081a59608a1b604482015260640161091b565b8360058681548110611e8657611e86613650565b9060005260206000209060070201600501819055508260058681548110611eaf57611eaf613650565b9060005260206000209060070201600601819055508284867f30dffdedaa3e3b4849298233f7cd71d229956e875ab09270498c96b7cf9181fd60405160405180910390a45050505050565b60035460ff1615611f1d5760405162461bcd60e51b815260040161091b90613624565b60055482908110611f405760405162461bcd60e51b815260040161091b906135ff565b82600003611f905760405162461bcd60e51b815260206004820152601f60248201527f6465706f736974206e6f7420737570706f727420455448207374616b696e6700604482015260640161091b565b600060058481548110611fa557611fa5613650565b90600052602060002090600702019050806005015483116120015760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a590819195c1bdcda5d08185b5bdd5b9d60521b604482015260640161091b565b821561201e57805461201e906001600160a01b0316333086612bf8565b610bf08484612c31565b600080516020613795833981519152612040816126ea565b6001548211156120885760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420737461727420626c6f636b60681b604482015260640161091b565b600082815560405183917f63b90b79f11a0f132bcb2c4a4ddd44abda45c1308a83b2919318df7f5f8b7be491a25050565b6000805160206137958339815191526120d1816126ea565b6003805462010000600160b01b031916620100006001600160a01b0385811682029290921792839055604051920416907f153aae53b92218044bd5f43922617c6b253e50ac98a41b44c3acb5625ded348890600090a25050565b61213361252b565b6000600560008154811061214957612149613650565b6000918252602090912060079091020180549091506001600160a01b0316156121b45760405162461bcd60e51b815260206004820152601e60248201527f45544820706f6f6c206d75737420626520637265617465642066697273740000604482015260640161091b565b600581015434908110156122035760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a590819195c1bdcda5d08185b5bdd5b9d60521b604482015260640161091b565b611116600082612c31565b600080516020613795833981519152612226816126ea565b60055484106122695760405162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a59081c1bdbdb081a59608a1b604482015260640161091b565b600083116122af5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081c1bdbdb081dd95a59da1d606a1b604482015260640161091b565b81156122bd576122bd6113b8565b6000806122d585600454612b7290919063ffffffff16565b91509150816123265760405162461bcd60e51b815260206004820152601a60248201527f746f74616c20706f6f6c20776569676874206f766572666c6f77000000000000604482015260640161091b565b6005868154811061233957612339613650565b9060005260206000209060070201600101548161235691906136a8565b600481905550846005878154811061237057612370613650565b906000526020600020906007020160010181905550857f4b8fa3d6a87cb21d1bf4978bf60628ae358a28ac7f39de1751a481c6dd957617866004546040516123c2929190918252602082015260400190565b60405180910390a2505050505050565b600581815481106123e257600080fd5b600091825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601546001600160a01b039095169650929491939092919087565b6000808360058054905081106124535760405162461bcd60e51b815260040161091b906135ff565b60008581526006602090815260408083206001600160a01b03881684529091528120905b6003820154811015612521574382600301828154811061249957612499613650565b906000526020600020906002020160010154116124e5578160030181815481106124c5576124c5613650565b906000526020600020906002020160000154846124e2919061367c565b93505b8160030181815481106124fa576124fa613650565b90600052602060002090600202016000015485612517919061367c565b9450600101612477565b5050509250929050565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff161561256e5760405163d93c066560e01b815260040160405180910390fd5b565b600080836001600160a01b03168360405160006040518083038185875af1925050503d80600081146125be576040519150601f19603f3d011682016040523d82523d6000602084013e6125c3565b606091505b5091509150816126155760405162461bcd60e51b815260206004820152601860248201527f455448207472616e736665722063616c6c206661696c65640000000000000000604482015260640161091b565b805115610bf057808060200190518101906126309190613742565b610bf05760405162461bcd60e51b815260206004820152602660248201527f455448207472616e73666572206f7065726174696f6e20646964206e6f7420736044820152651d58d8d9595960d21b606482015260840161091b565b6040516001600160a01b03838116602483015260448201839052610c2991859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050612fd0565b6114608133613041565b60006000805160206137d583398151915261270f8484611569565b61278f576000848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556127453390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506108ef565b60009150506108ef565b60006000805160206137d58339815191526127b48484611569565b1561278f576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506108ef565b6003546040516370a0823160e01b81523060048201526000916201000090046001600160a01b0316906370a0823190602401602060405180830381865afa158015612864573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612888919061375f565b90508082116129105760035460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201859052620100009092049091169063a9059cbb906044015b6020604051808303816000875af11580156128ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf09190613742565b60035460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201849052620100009092049091169063a9059cbb906044016128cd565b61256e61307a565b61296061307a565b61256e6130c3565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806129ef57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166129e36000805160206137b5833981519152546001600160a01b031690565b6001600160a01b031614155b1561256e5760405163703e46dd60e11b815260040160405180910390fd5b7ff47fc0c09ebbfe308d89b8035681a1164b9882bcfd49eb89861067738a30f5ab611116816126ea565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612a91575060408051601f3d908101601f19168201909252612a8e9181019061375f565b60015b612ab957604051634c9c8ce360e01b81526001600160a01b038316600482015260240161091b565b6000805160206137b58339815191528114612aea57604051632a87526960e21b81526004810182905260240161091b565b610c2983836130f6565b60008083600003612b0b5750600190506000612b38565b83830283858281612b1e57612b1e6136e8565b0414612b31576000809250925050612b38565b6001925090505b9250929050565b60008082600003612b5557506000905080612b38565b6001838581612b6657612b666136e8565b04915091509250929050565b60008083830184811015612b31576000809250925050612b38565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461256e5760405163703e46dd60e11b815260040160405180910390fd5b60008083831115612bec57506000905080612b38565b50600193919092039150565b6040516001600160a01b038481166024830152838116604483015260648201839052610bf09186918216906323b872dd906084016126b8565b600060058381548110612c4657612c46613650565b60009182526020808320868452600682526040808520338652909252922060079091029091019150612c778461111a565b805415612e3457600382015481546000918291612c9391612af4565b9150915081612ce45760405162461bcd60e51b815260206004820152601a60248201527f75736572207374616b6520616d6f756e74206f766572666c6f77000000000000604482015260640161091b565b612cf681670de0b6b3a7640000612b3f565b909250905081612d565760405162461bcd60e51b815260206004820152602560248201527f616363756d756c617465207265776172647320706572207374616b65206f766560448201526472666c6f7760d81b606482015260840161091b565b600080612d70856001015484612bd690919063ffffffff16565b9150915081612dbc5760405162461bcd60e51b815260206004820152601860248201527770656e64696e672072657761726473206f766572666c6f7760401b604482015260640161091b565b8015612e2f57600080612ddc838860020154612b7290919063ffffffff16565b9150915081612e285760405162461bcd60e51b815260206004820152601860248201527770656e64696e672072657761726473206f766572666c6f7760401b604482015260640161091b565b6002870155505b505050505b8215612ea15780546000908190612e4c908690612b72565b9150915081612e9d5760405162461bcd60e51b815260206004820181905260248201527f616363756d756c617465207374616b6520616d6f756e74206f766572666c6f77604482015260640161091b565b8255505b600080612ebb858560040154612b7290919063ffffffff16565b9150915081612f0c5760405162461bcd60e51b815260206004820152601b60248201527f7374616b6520746f6b656e20616d6f756e74206f766572666c6f770000000000604482015260640161091b565b60048401819055600384015483546000918291612f2891612af4565b9150915081612f885760405162461bcd60e51b815260206004820152602660248201527f75736572207374416d6f756e74206d756c206163635243435065725354206f766044820152656572666c6f7760d01b606482015260840161091b565b60018501819055604051878152889033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a35050505050505050565b600080602060008451602086016000885af180612ff3576040513d6000823e3d81fd5b50506000513d9150811561300b578060011415613018565b6001600160a01b0384163b155b15610bf057604051635274afe760e01b81526001600160a01b038516600482015260240161091b565b61304b8282611569565b6111165760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161091b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661256e57604051631afcd79f60e31b815260040160405180910390fd5b6130cb61307a565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff19169055565b6130ff8261314c565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561314457610c2982826131b1565b611116613227565b806001600160a01b03163b60000361318257604051634c9c8ce360e01b81526001600160a01b038216600482015260240161091b565b6000805160206137b583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516131ce9190613778565b600060405180830381855af49150503d8060008114613209576040519150601f19603f3d011682016040523d82523d6000602084013e61320e565b606091505b509150915061321e858383613246565b95945050505050565b341561256e5760405163b398979f60e01b815260040160405180910390fd5b60608261325b57613256826132a2565b610eae565b815115801561327257506001600160a01b0384163b155b1561329b57604051639996b31560e01b81526001600160a01b038516600482015260240161091b565b5080610eae565b8051156132b25780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6000602082840312156132dd57600080fd5b81356001600160e01b031981168114610eae57600080fd5b6001600160a01b038116811461146057600080fd5b6000806040838503121561331d57600080fd5b82359150602083013561332f816132f5565b809150509250929050565b60006020828403121561334c57600080fd5b5035919050565b60008060006060848603121561336857600080fd5b83359250602084013561337a816132f5565b929592945050506040919091013590565b600080600080608085870312156133a157600080fd5b84356133ac816132f5565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156133ef57600080fd5b82356133fa816132f5565b9150602083013567ffffffffffffffff8082111561341757600080fd5b818501915085601f83011261342b57600080fd5b81358181111561343d5761343d6133c6565b604051601f8201601f19908116603f01168101908382118183101715613465576134656133c6565b8160405282815288602084870101111561347e57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156134b357600080fd5b50508035926020909101359150565b60005b838110156134dd5781810151838201526020016134c5565b50506000910152565b60208152600082518060208401526135058160408501602087016134c2565b601f01601f19169190910160400192915050565b801515811461146057600080fd5b600080600080600060a0868803121561353f57600080fd5b853561354a816132f5565b9450602086013593506040860135925060608601359150608086013561356f81613519565b809150509295509295909350565b60008060006060848603121561359257600080fd5b505081359360208301359350604090920135919050565b6000602082840312156135bb57600080fd5b8135610eae816132f5565b6000806000606084860312156135db57600080fd5b833592506020840135915060408401356135f481613519565b809150509250925092565b6020808252600b908201526a1a5b9d985b1a59081c1a5960aa1b604082015260600190565b6020808252601290820152711dda5d1a191c985dc81a5cc81c185d5cd95960721b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156108ef576108ef613666565b6000600182016136a1576136a1613666565b5060010190565b818103818111156108ef576108ef613666565b634e487b7160e01b600052603160045260246000fd5b80820281158282048414176108ef576108ef613666565b634e487b7160e01b600052601260045260246000fd5b60008261371b57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600890820152676f766572666c6f7760c01b604082015260600190565b60006020828403121561375457600080fd5b8151610eae81613519565b60006020828403121561377157600080fd5b5051919050565b6000825161378a8184602087016134c2565b919091019291505056fe589d473ba17c0f47d494622893831497bad25919b9afb8e33e9521b8963fccde360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a264697066735822122020fc11adb91303623bd9da8f1ff96a7a881482f5dd4e6ca3791f4970abcf31bf64736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x274 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DBB1E3A GT PUSH2 0x14E JUMPI DUP1 PUSH4 0xBED66C08 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xF35E4A6E GT PUSH2 0x77 JUMPI DUP1 PUSH4 0xF35E4A6E EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xF5485D32 EQ PUSH2 0x7E2 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x802 JUMPI DUP1 PUSH4 0xFAD07ECE EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0xFE313112 EQ PUSH2 0x82A JUMPI DUP1 PUSH4 0xFF423357 EQ PUSH2 0x889 JUMPI STOP JUMPDEST DUP1 PUSH4 0xBED66C08 EQ PUSH2 0x722 JUMPI DUP1 PUSH4 0xBFC3EBBA EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0xC713AA94 EQ PUSH2 0x742 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x762 JUMPI DUP1 PUSH4 0xD86C0444 EQ PUSH2 0x782 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x7A2 JUMPI STOP JUMPDEST DUP1 PUSH4 0xAB5E124A GT PUSH2 0x10A JUMPI DUP1 PUSH4 0xAB5E124A EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0xAE35A8D5 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xB3944D52 EQ PUSH2 0x6B9 JUMPI DUP1 PUSH4 0xB6D9D919 EQ PUSH2 0x6CE JUMPI DUP1 PUSH4 0xB908AFA8 EQ PUSH2 0x6EE JUMPI STOP JUMPDEST DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x9E2C8A5B EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0xA27D9279 EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xA72D5BF4 EQ PUSH2 0x609 JUMPI STOP JUMPDEST DUP1 PUSH4 0x41721AB7 GT PUSH2 0x1EC JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x6155E3DE EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x70FF0173 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x80CCE73F EQ PUSH2 0x55F JUMPI STOP JUMPDEST DUP1 PUSH4 0x41721AB7 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x4EC81AF1 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x4B1 JUMPI STOP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x23B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x2F3FFB9F EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x37849B3C EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x408 JUMPI STOP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x2559004 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x83C6323 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x11548234 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x30C JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x27B JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29D PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x32CB JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x29D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x423 CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0xD9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0x338B JUMP JUMPDEST PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0x27B PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x33DC JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x111A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x12ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0x29D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x130A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x13B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x13D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x58F CALLDATASIZE PUSH1 0x4 PUSH2 0x34A0 JUMP JUMPDEST PUSH2 0x1463 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29D PUSH2 0x5AF CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x1569 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x5CF CALLDATASIZE PUSH1 0x4 PUSH2 0x34A0 JUMP JUMPDEST PUSH2 0x15A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x604 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x1859 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x62F SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x29D SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x697 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x34E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x1892 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x6E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3527 JUMP JUMPDEST PUSH2 0x192A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH32 0xF47FC0C09EBBFE308D89B8035681A1164B9882BCFD49EB89861067738A30F5AB DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x73D CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x1CB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x75D CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x1D46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x77D CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x1DD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x79D CALLDATASIZE PUSH1 0x4 PUSH2 0x357D JUMP JUMPDEST PUSH2 0x1DF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x7BD CALLDATASIZE PUSH1 0x4 PUSH2 0x34A0 JUMP JUMPDEST PUSH2 0x1EFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x7DD CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x2028 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x7FD CALLDATASIZE PUSH1 0x4 PUSH2 0x35A9 JUMP JUMPDEST PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x27B PUSH2 0x212B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x825 CALLDATASIZE PUSH1 0x4 PUSH2 0x35C6 JUMP JUMPDEST PUSH2 0x220E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84A PUSH2 0x845 CALLDATASIZE PUSH1 0x4 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x23D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x2A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A9 PUSH2 0x8A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x8EF JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x97B PUSH2 0x252B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9D6 JUMPI PUSH2 0x9D6 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP4 KECCAK256 PUSH1 0x7 SWAP1 SWAP3 MUL ADD SWAP3 POP SWAP1 DUP1 DUP1 JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD DUP2 LT ISZERO PUSH2 0xA83 JUMPI NUMBER DUP5 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA23 JUMPI PUSH2 0xA23 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0xA83 JUMPI DUP4 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA4F JUMPI PUSH2 0xA4F PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP4 PUSH2 0xA6C SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP3 POP DUP2 PUSH2 0xA78 DUP2 PUSH2 0x368F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xA01 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0xA97 SWAP1 DUP4 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x3 DUP5 ADD PUSH2 0xAAC DUP4 DUP4 PUSH2 0x367C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xABC JUMPI PUSH2 0xABC PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD DUP5 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xADF JUMPI PUSH2 0xADF PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP1 DUP3 ADD SSTORE ADD PUSH2 0xA87 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB4C JUMPI DUP4 PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH2 0xB23 JUMPI PUSH2 0xB23 PUSH2 0x36BB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x2 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SSTORE ADD PUSH2 0xB08 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0xB87 JUMPI DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB71 JUMPI PUSH2 0xB6C CALLER DUP4 PUSH2 0x2570 JUMP JUMPDEST PUSH2 0xB87 JUMP JUMPDEST DUP4 SLOAD PUSH2 0xB87 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x268B JUMP JUMPDEST NUMBER DUP7 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94 DUP6 PUSH1 0x40 MLOAD PUSH2 0xBC4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBDD DUP3 PUSH2 0x951 JUMP JUMPDEST PUSH2 0xBE6 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0xBF0 DUP4 DUP4 PUSH2 0x26F4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC29 DUP3 DUP3 PUSH2 0x2799 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC36 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x18DB185A5B481A5CC81C185D5CD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCB8 JUMPI PUSH2 0xCB8 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xCE9 DUP5 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xD09 SWAP2 SWAP1 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD36 JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0xD36 CALLER DUP3 PUSH2 0x2815 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP3 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0xD50 SWAP2 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0xD5A SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xDB3 JUMPI PUSH2 0xDB3 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x3 PUSH1 0x7 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP1 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP7 LT DUP1 ISZERO PUSH2 0xE04 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE68 JUMPI PUSH1 0x0 PUSH2 0xE19 DUP6 PUSH1 0x2 ADD SLOAD DUP9 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP7 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0xE3A SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0xE4F DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0xE59 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0xE63 SWAP1 DUP6 PUSH2 0x367C JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 DUP5 ADD SLOAD DUP5 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0xE89 SWAP1 DUP7 SWAP1 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0xE93 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0xE9D SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST PUSH2 0xEA7 SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xEFB JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xF18 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xF26 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xF44 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xF6E JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST DUP7 DUP9 GT ISZERO PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x737461727420626C6F636B206D757374206265206C657373207468616E20656E PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6420626C6F636B PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP7 GT PUSH2 0x102A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x7263632070657220626C6F636B206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0x1032 PUSH2 0x2950 JUMP JUMPDEST PUSH2 0x103A PUSH2 0x2950 JUMP JUMPDEST PUSH2 0x1042 PUSH2 0x2958 JUMP JUMPDEST PUSH2 0x104D PUSH1 0x0 CALLER PUSH2 0x26F4 JUMP JUMPDEST POP PUSH2 0x1078 PUSH32 0xF47FC0C09EBBFE308D89B8035681A1164B9882BCFD49EB89861067738A30F5AB CALLER PUSH2 0x26F4 JUMP JUMPDEST POP PUSH2 0x1091 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x26F4 JUMP JUMPDEST POP PUSH2 0x109B DUP10 PUSH2 0x20B9 JUMP JUMPDEST PUSH1 0x0 DUP9 SWAP1 SSTORE PUSH1 0x1 DUP8 SWAP1 SSTORE PUSH1 0x2 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0x10F0 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1103 PUSH2 0x2968 JUMP JUMPDEST PUSH2 0x110C DUP3 PUSH2 0x2A0D JUMP JUMPDEST PUSH2 0x1116 DUP3 DUP3 PUSH2 0x2A37 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x113D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1152 JUMPI PUSH2 0x1152 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1172 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0x118C JUMPI POP NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11AB DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x11A5 DUP7 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x1463 JUMP JUMPDEST SWAP1 PUSH2 0x2AF4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3720 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x11DA SWAP1 DUP3 SWAP1 PUSH2 0x2B3F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x11FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3720 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD DUP1 ISZERO PUSH2 0x12A6 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1215 DUP5 PUSH1 0x1 PUSH2 0x2AF4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3720 JUMP JUMPDEST PUSH2 0x1240 DUP2 DUP5 PUSH2 0x2B3F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1262 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3720 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x127C DUP4 DUP11 PUSH1 0x3 ADD SLOAD PUSH2 0x2B72 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x129D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3720 JUMP JUMPDEST PUSH1 0x3 DUP10 ADD SSTORE POP POP POP JUMPDEST NUMBER PUSH1 0x2 DUP7 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP9 SWAP1 PUSH32 0xF5D2D72D9B25D6853AFD7D0554A113B705234B6A68BB36B7F143662994632411 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F7 PUSH2 0x2B8D JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1322 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x137F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77697468647261772068617320616C7265616479206265656E20756E70617573 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2523DFDAFA00190F21A4CBD0C25179C8DD3CB34A6C17FEA952ECCA8FA8332C0E SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1116 JUMPI PUSH2 0x13CF DUP2 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x13EF DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP2 DUP3 AND ISZERO SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE AND ISZERO PUSH2 0x1436 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2523DFDAFA00190F21A4CBD0C25179C8DD3CB34A6C17FEA952ECCA8FA8332C0E SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x27C975733BACECA09666FAE356A901E083676848AAF9710150079385DAAE743 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x14A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C69642072616E6765 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 SLOAD DUP4 LT ISZERO PUSH2 0x14B5 JUMPI PUSH1 0x0 SLOAD SWAP3 POP JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x14C5 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP5 DUP5 PUSH2 0x36A8 JUMP JUMPDEST GT PUSH2 0x150E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C69642072616E6765 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1522 PUSH1 0x2 SLOAD DUP6 DUP6 PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP1 PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x6D756C7469706C696572206F766572666C6F77 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x15A9 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x15EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1604 JUMPI PUSH2 0x1604 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x7 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP5 GT ISZERO PUSH2 0x167D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207374616B696E6720746F6B656E2062616C616E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0x1686 DUP6 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x169B SWAP2 PUSH2 0x2AF4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x16BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3720 JUMP JUMPDEST PUSH2 0x16C7 DUP2 PUSH1 0x1 PUSH2 0x2B3F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1705 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x37BB32B9333637BB99 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x1715 SWAP1 DUP3 SWAP1 PUSH2 0x2BD6 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6F766572666C6F7733 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1773 JUMPI DUP1 DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x176D SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP6 ISZERO PUSH2 0x17E3 JUMPI DUP6 DUP4 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x178D SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x6 ADD SLOAD NUMBER PUSH2 0x17B9 SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE JUMPDEST DUP6 DUP5 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17F7 SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP5 ADD SLOAD DUP4 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1816 SWAP2 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x1820 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE DUP8 SWAP1 CALLER SWAP1 PUSH32 0xC80277265097707F6F12A4AC4C09D46C9926E2EEA2536F63616CB04D9FCAD7D6 SWAP1 PUSH1 0x20 ADD PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x187F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH2 0x188A DUP5 DUP5 NUMBER PUSH2 0xD9D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x18AA DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH2 0x100 DUP1 DUP4 DIV DUP3 AND ISZERO DUP2 MUL PUSH2 0xFF00 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE SWAP2 DIV AND ISZERO PUSH2 0x18FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x443BF540E8151617CD5C39A681CC35A5A22BE078B6F0CF16E5BD822B4C4B61FF SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7C8FAF23A72A53EB5C2C466DC81386A58B2A27D0CC3C7C580A3C12E372BA313 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1942 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x5 SLOAD ISZERO PUSH2 0x19D5 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1969 JUMPI PUSH2 0x1969 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520666972737420706F6F6C206D7573742062652045544820706F6F6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x1A2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520666972737420706F6F6C206D7573742062652045544820706F6F6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1A7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207769746864726177206C6F636B656420626C6F636B730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 SLOAD NUMBER LT PUSH2 0x1ABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x185B1C9958591E48195B991959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1ACB JUMPI PUSH2 0x1ACB PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD NUMBER GT PUSH2 0x1ADD JUMPI PUSH1 0x0 SLOAD PUSH2 0x1ADF JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP DUP6 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1AF3 SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP12 DUP2 MSTORE DUP5 DUP7 ADD DUP8 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP9 ADD DUP3 DUP2 MSTORE PUSH1 0xA0 DUP10 ADD DUP16 DUP2 MSTORE PUSH1 0xC0 DUP11 ADD DUP16 DUP2 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP6 MSTORE SWAP10 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 PUSH1 0x7 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP11 AND OR SWAP1 SWAP9 SSTORE SWAP4 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP4 ADD SSTORE SWAP2 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 DUP3 ADD SSTORE SWAP3 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5 DUP5 ADD SSTORE SWAP3 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB6 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP4 SWAP3 DUP10 SWAP3 PUSH32 0xFA296FCE13E7A0E622B3A892E66220C248337289483A3CFA4130CDE0CAA1346 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1CCA DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1D12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964205243432070657220626C6F636B PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x4C70925B625536DD633F6BD2D615C67FDDC2E7C63C31164047A981A0DF3FEE54 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1D5E DUP2 PUSH2 0x26EA JUMP JUMPDEST DUP2 PUSH1 0x0 SLOAD GT ISZERO PUSH2 0x1DA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420656E6420626C6F636B PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x1132C5BACCB51DA3D049FABC819697DC845FA224AD59D9B555507D6446B40850 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1DE1 DUP3 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x1DEA DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0xBF0 DUP4 DUP4 PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1E17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1E2F DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x5 SLOAD DUP6 LT PUSH2 0x1E72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081C1BDBDB081A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP4 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1E86 JUMPI PUSH2 0x1E86 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1EAF JUMPI PUSH2 0x1EAF PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP5 DUP7 PUSH32 0x30DFFDEDAA3E3B4849298233F7CD71D229956E875AB09270498C96B7CF9181FD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1F1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x1F40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0x1F90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6465706F736974206E6F7420737570706F727420455448207374616B696E6700 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FA5 JUMPI PUSH2 0x1FA5 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP1 PUSH1 0x5 ADD SLOAD DUP4 GT PUSH2 0x2001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1A5B9D985B1A590819195C1BDCDA5D08185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP3 ISZERO PUSH2 0x201E JUMPI DUP1 SLOAD PUSH2 0x201E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x2BF8 JUMP JUMPDEST PUSH2 0xBF0 DUP5 DUP5 PUSH2 0x2C31 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2040 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x2088 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C696420737461727420626C6F636B PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP2 PUSH32 0x63B90B79F11A0F132BCB2C4A4DDD44ABDA45C1308A83B2919318DF7F5F8B7BE4 SWAP2 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x20D1 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DIV AND SWAP1 PUSH32 0x153AAE53B92218044BD5F43922617C6B253E50AC98A41B44C3ACB5625DED3488 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x2149 JUMPI PUSH2 0x2149 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x21B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45544820706F6F6C206D75737420626520637265617465642066697273740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD CALLVALUE SWAP1 DUP2 LT ISZERO PUSH2 0x2203 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1A5B9D985B1A590819195C1BDCDA5D08185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0x1116 PUSH1 0x0 DUP3 PUSH2 0x2C31 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3795 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2226 DUP2 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x5 SLOAD DUP5 LT PUSH2 0x2269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081C1BDBDB081A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x22AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1A5B9D985B1A59081C1BDBDB081DD95A59DA1D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP2 ISZERO PUSH2 0x22BD JUMPI PUSH2 0x22BD PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22D5 DUP6 PUSH1 0x4 SLOAD PUSH2 0x2B72 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2326 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F74616C20706F6F6C20776569676874206F766572666C6F77000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2339 JUMPI PUSH2 0x2339 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 PUSH2 0x2356 SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x5 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x2370 JUMPI PUSH2 0x2370 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 PUSH32 0x4B8FA3D6A87CB21D1BF4978BF60628AE358A28AC7F39DE1751A481C6DD957617 DUP7 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x23C2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x23E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP7 POP SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x2453 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP1 PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x2521 JUMPI NUMBER DUP3 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2499 JUMPI PUSH2 0x2499 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0x24E5 JUMPI DUP2 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x24C5 JUMPI PUSH2 0x24C5 PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 PUSH2 0x24E2 SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP4 POP JUMPDEST DUP2 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x24FA JUMPI PUSH2 0x24FA PUSH2 0x3650 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x2517 SWAP2 SWAP1 PUSH2 0x367C JUMP JUMPDEST SWAP5 POP PUSH1 0x1 ADD PUSH2 0x2477 JUMP JUMPDEST POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x256E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2615 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E736665722063616C6C206661696C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xBF0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2630 SWAP2 SWAP1 PUSH2 0x3742 JUMP JUMPDEST PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448207472616E73666572206F7065726174696F6E20646964206E6F742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1D58D8D95959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xC29 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2FD0 JUMP JUMPDEST PUSH2 0x1460 DUP2 CALLER PUSH2 0x3041 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x270F DUP5 DUP5 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x278F JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2745 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x27B4 DUP5 DUP5 PUSH2 0x1569 JUMP JUMPDEST ISZERO PUSH2 0x278F JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2864 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2888 SWAP2 SWAP1 PUSH2 0x375F JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT PUSH2 0x2910 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH3 0x10000 SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF0 SWAP2 SWAP1 PUSH2 0x3742 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH3 0x10000 SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x28CD JUMP JUMPDEST PUSH2 0x256E PUSH2 0x307A JUMP JUMPDEST PUSH2 0x2960 PUSH2 0x307A JUMP JUMPDEST PUSH2 0x256E PUSH2 0x30C3 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x29EF JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29E3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x256E JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF47FC0C09EBBFE308D89B8035681A1164B9882BCFD49EB89861067738A30F5AB PUSH2 0x1116 DUP2 PUSH2 0x26EA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2A91 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2A8E SWAP2 DUP2 ADD SWAP1 PUSH2 0x375F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2AB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x2AEA JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0xC29 DUP4 DUP4 PUSH2 0x30F6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 SUB PUSH2 0x2B0B JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x2B38 JUMP JUMPDEST DUP4 DUP4 MUL DUP4 DUP6 DUP3 DUP2 PUSH2 0x2B1E JUMPI PUSH2 0x2B1E PUSH2 0x36E8 JUMP JUMPDEST DIV EQ PUSH2 0x2B31 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x2B38 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 SUB PUSH2 0x2B55 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x2B38 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x2B66 JUMPI PUSH2 0x2B66 PUSH2 0x36E8 JUMP JUMPDEST DIV SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x2B31 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x2B38 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x256E JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x2BEC JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x2B38 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xBF0 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2C46 JUMPI PUSH2 0x2C46 PUSH2 0x3650 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x2C77 DUP5 PUSH2 0x111A JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x2E34 JUMPI PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x2C93 SWAP2 PUSH2 0x2AF4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2CE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x75736572207374616B6520616D6F756E74206F766572666C6F77000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0x2CF6 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2B3F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x2D56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616363756D756C617465207265776172647320706572207374616B65206F7665 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x72666C6F77 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D70 DUP6 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0x2BD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2DBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x70656E64696E672072657761726473206F766572666C6F77 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E2F JUMPI PUSH1 0x0 DUP1 PUSH2 0x2DDC DUP4 DUP9 PUSH1 0x2 ADD SLOAD PUSH2 0x2B72 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2E28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x70656E64696E672072657761726473206F766572666C6F77 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SSTORE POP JUMPDEST POP POP POP POP JUMPDEST DUP3 ISZERO PUSH2 0x2EA1 JUMPI DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x2E4C SWAP1 DUP7 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2E9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616363756D756C617465207374616B6520616D6F756E74206F766572666C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST DUP3 SSTORE POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EBB DUP6 DUP6 PUSH1 0x4 ADD SLOAD PUSH2 0x2B72 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2F0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374616B6520746F6B656E20616D6F756E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x4 DUP5 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP5 ADD SLOAD DUP4 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x2F28 SWAP2 PUSH2 0x2AF4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2F88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x75736572207374416D6F756E74206D756C206163635243435065725354206F76 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6572666C6F77 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 DUP6 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE DUP9 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x2FF3 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x300B JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x3018 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x91B JUMP JUMPDEST PUSH2 0x304B DUP3 DUP3 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x1116 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x91B JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x256E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30CB PUSH2 0x307A JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x30FF DUP3 PUSH2 0x314C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x3144 JUMPI PUSH2 0xC29 DUP3 DUP3 PUSH2 0x31B1 JUMP JUMPDEST PUSH2 0x1116 PUSH2 0x3227 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x3182 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x37B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x31CE SWAP2 SWAP1 PUSH2 0x3778 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3209 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x320E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x321E DUP6 DUP4 DUP4 PUSH2 0x3246 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x256E JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x325B JUMPI PUSH2 0x3256 DUP3 PUSH2 0x32A2 JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x3272 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x329B JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x91B JUMP JUMPDEST POP DUP1 PUSH2 0xEAE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x32B2 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xEAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x331D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x332F DUP2 PUSH2 0x32F5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x334C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x337A DUP2 PUSH2 0x32F5 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x33A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x33AC DUP2 PUSH2 0x32F5 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x33FA DUP2 PUSH2 0x32F5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x342B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x343D JUMPI PUSH2 0x343D PUSH2 0x33C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3465 JUMPI PUSH2 0x3465 PUSH2 0x33C6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x347E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x34C5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3505 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x34C2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x353F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x354A DUP2 PUSH2 0x32F5 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x356F DUP2 PUSH2 0x3519 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEAE DUP2 PUSH2 0x32F5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x35DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x35F4 DUP2 PUSH2 0x3519 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x1A5B9D985B1A59081C1A59 PUSH1 0xAA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DC81A5CC81C185D5CD959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8EF JUMPI PUSH2 0x8EF PUSH2 0x3666 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x36A1 JUMPI PUSH2 0x36A1 PUSH2 0x3666 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8EF JUMPI PUSH2 0x8EF PUSH2 0x3666 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8EF JUMPI PUSH2 0x8EF PUSH2 0x3666 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x371B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x6F766572666C6F77 PUSH1 0xC0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xEAE DUP2 PUSH2 0x3519 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x378A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x34C2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PC SWAP14 SELFBALANCE EXTCODESIZE LOG1 PUSH29 0xF47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE360894 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC02DD7BC7DEC4DCEEDDA775 0xE5 DUP14 0xD5 COINBASE 0xE0 DUP11 GT PUSH13 0x6C53815C0BD028192F7B626800 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xFC GT 0xAD 0xB9 SGT SUB PUSH3 0x3BD9DA DUP16 0x1F 0xF9 PUSH11 0x7A881482F5DD4E6CA3791F 0x49 PUSH17 0xABCF31BF64736F6C634300081600330000 ","sourceMap":"921:26978:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;-1:-1:-1;3443:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:30;;463:22;445:41;;433:2;418:18;3443:202:0;;;;;;;;2078:30:27;;;;;;;;;;;;;;;;;;;643:25:30;;;631:2;616:18;2078:30:27;497:177:30;1763:23:27;;;;;;;;;;;;;;;;14238:175;;;;;;;;;;-1:-1:-1;14238:175:27;;;;;:::i;:::-;;:::i;4759:191:0:-;;;;;;;;;;-1:-1:-1;4759:191:0;;;;;:::i;:::-;;:::i;21766:1350:27:-;;;;;;;;;;-1:-1:-1;21766:1350:27;;;;;:::i;:::-;;:::i;5246:136:0:-;;;;;;;;;;-1:-1:-1;5246:136:0;;;;;:::i;:::-;;:::i;1893:26:27:-;;;;;;;;;;-1:-1:-1;1893:26:27;;;;;;;;6348:245:0;;;;;;;;;;-1:-1:-1;6348:245:0;;;;;:::i;:::-;;:::i;2250:68:27:-;;;;;;;;;;-1:-1:-1;2250:68:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2209:25:30;;;2265:2;2250:18;;2243:34;;;;2293:18;;;2286:34;2197:2;2182:18;2250:68:27;2007:319:30;23320:725:27;;;;;;;;;;-1:-1:-1;23320:725:27;;;;;:::i;:::-;;:::i;13024:1146::-;;;;;;;;;;-1:-1:-1;13024:1146:27;;;;;:::i;:::-;;:::i;1685:25::-;;;;;;;;;;;;;;;;4800:823;;;;;;;;;;-1:-1:-1;4800:823:27;;;;;:::i;:::-;;:::i;4161:214:2:-;;;;;;:::i;:::-;;:::i;15569:2058:27:-;;;;;;;;;;-1:-1:-1;15569:2058:27;;;;;:::i;:::-;;:::i;3708:134:2:-;;;;;;;;;;;;;:::i;2692:145:4:-;;;;;;;;;;-1:-1:-1;1270:23:4;2821:9;;;2692:145;;6196:193:27;;;;;;;;;;;;;:::i;17731:622::-;;;;;;;;;;;;;:::i;1826:26::-;;;;;;;;;;;;;;;;1230:60;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1230:60:27;;6473:239;;;;;;;;;;;;;:::i;12150:502::-;;;;;;;;;;-1:-1:-1;12150:502:27;;;;;:::i;:::-;;:::i;3732:207:0:-;;;;;;;;;;-1:-1:-1;3732:207:0;;;;;:::i;:::-;;:::i;20001:1459:27:-;;;;;;;;;;-1:-1:-1;20001:1459:27;;;;;:::i;:::-;;:::i;2317:49:0:-;;;;;;;;;;-1:-1:-1;2317:49:0;2362:4;2317:49;;12728:204:27;;;;;;;;;;-1:-1:-1;12728:204:27;;;;;:::i;:::-;;:::i;2003:17::-;;;;;;;;;;-1:-1:-1;2003:17:27;;;;;;;-1:-1:-1;;;;;2003:17:27;;;;;;-1:-1:-1;;;;;4816:32:30;;;4798:51;;4786:2;4771:18;2003:17:27;4637:218:30;1957:23:27;;;;;;;;;;-1:-1:-1;1957:23:27;;;;;;;;;;;1819:58:2;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;6718:221:27:-;;;;;;;;;;;;;:::i;11846:90::-;;;;;;;;;;-1:-1:-1;11918:4:27;:11;11846:90;;8168:1926;;;;;;;;;;-1:-1:-1;8168:1926:27;;;;;:::i;:::-;;:::i;1296:72::-;;;;;;;;;;;;1335:33;1296:72;;7759:220;;;;;;;;;;-1:-1:-1;7759:220:27;;;;;:::i;:::-;;:::i;7448:205::-;;;;;;;;;;-1:-1:-1;7448:205:27;;;;;:::i;:::-;;:::i;5662:138:0:-;;;;;;;;;;-1:-1:-1;5662:138:0;;;;;:::i;:::-;;:::i;10450:441:27:-;;;;;;;;;;-1:-1:-1;10450:441:27;;;;;:::i;:::-;;:::i;19137:670::-;;;;;;;;;;-1:-1:-1;19137:670:27;;;;;:::i;:::-;;:::i;7137:219::-;;;;;;;;;;-1:-1:-1;7137:219:27;;;;;:::i;:::-;;:::i;6004:110::-;;;;;;;;;;-1:-1:-1;6004:110:27;;;;;:::i;:::-;;:::i;18426:392::-;;;:::i;10989:690::-;;;;;;;;;;-1:-1:-1;10989:690:27;;;;;:::i;:::-;;:::i;2115:30::-;;;;;;;;;;-1:-1:-1;2115:30:27;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;7535:32:30;;;7517:51;;7599:2;7584:18;;7577:34;;;;7627:18;;;7620:34;;;;7685:2;7670:18;;7663:34;;;;7728:3;7713:19;;7706:35;7555:3;7757:19;;7750:35;7816:3;7801:19;;7794:35;7504:3;7489:19;2115:30:27;7202:633:30;14548:635:27;;;;;;;;;;-1:-1:-1;14548:635:27;;;;;:::i;:::-;;:::i;:::-;;;;8014:25:30;;;8070:2;8055:18;;8048:34;;;;7987:18;14548:635:27;7840:248:30;3443:202:0;3528:4;-1:-1:-1;;;;;;3551:47:0;;-1:-1:-1;;;3551:47:0;;:87;;-1:-1:-1;;;;;;;;;;1134:40:5;;;3602:36:0;3544:94;3443:202;-1:-1:-1;;3443:202:0:o;14238:175:27:-;4254:4;:11;14351:7;;14336:4;;4247:18;;4239:42;;;;-1:-1:-1;;;4239:42:27;;;;;;;:::i;:::-;;;;;;;;;14377:10:::1;::::0;;;:4:::1;:10;::::0;;;;;;;-1:-1:-1;;;;;14377:17:27;::::1;::::0;;;;;;;:29;;-1:-1:-1;4291:1:27::1;14238:175:::0;;;;;:::o;4759:191:0:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:0;;;;;:24;;;;4759:191::o;21766:1350:27:-;2316:19:4;:17;:19::i;:::-;4459:14:27::1;::::0;::::1;;4458:15;4450:46;;;;-1:-1:-1::0;;;4450:46:27::1;;;;;;;:::i;:::-;4254:4:::2;:11:::0;21864:4;;4247:18;::::2;4239:42;;;;-1:-1:-1::0;;;4239:42:27::2;;;;;;;:::i;:::-;21880:30:::3;21913:4;21918;21913:10;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;21966;;;:4:::3;:10:::0;;;;;;21977::::3;21966:22:::0;;;;;;;;21913:10:::3;::::0;;::::3;;::::0;-1:-1:-1;21966:22:27;21913:10;;22115:270:::3;22139:14;::::0;::::3;:21:::0;22135:25;::::3;22115:270;;;22224:12;22185:5;:14;;22200:1;22185:17;;;;;;;;:::i;:::-;;;;;;;;;;;:36;;;:51;22256:5;22181:95;22327:5;:14;;22342:1;22327:17;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;22308:16;:43;;;;:::i;:::-;22289:62:::0;-1:-1:-1;22365:9:27;::::3;::::0;::::3;:::i;:::-;::::0;-1:-1:-1;;22162:3:27::3;;22115:270;;;;22462:9;22457:134;22481:14;::::0;::::3;:21:::0;:31:::3;::::0;22505:7;;22481:31:::3;:::i;:::-;22477:1;:35;22457:134;;;22553:14;::::0;::::3;22568:11;22572:7:::0;22568:1;:11:::3;:::i;:::-;22553:27;;;;;;;;:::i;:::-;;;;;;;;;;;22533:5;:14;;22548:1;22533:17;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:47;;:17:::3;::::0;;::::3;;:47:::0;;;::::3;::::0;;::::3;::::0;;;::::3;::::0;22514:3:::3;22457:134;;;;22605:9;22600:83;22624:7;22620:1;:11;22600:83;;;22652:5;:14;;:20;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;::::3;-1:-1:-1::0;;22652:20:27;;;;;::::3;;::::0;;;::::3;::::0;;::::3;::::0;;;;;;22633:3:::3;22600:83;;;-1:-1:-1::0;22696:20:27;;22692:345:::3;;22736:23:::0;;-1:-1:-1;;;;;22736:23:27::3;22732:295;;22795:46;22812:10;22824:16;22795;:46::i;:::-;22732:295;;;22887:23:::0;;22880:132:::3;::::0;-1:-1:-1;;;;;22887:23:27::3;22946:10;22978:16:::0;22880:44:::3;:132::i;:::-;23096:12;23072:4;23060:10;-1:-1:-1::0;;;;;23051:58:27::3;;23078:16;23051:58;;;;643:25:30::0;;631:2;616:18;;497:177;23051:58:27::3;;;;;;;;21870:1246;;;;4506:1:::2;21766:1350:::0;:::o;5246:136:0:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;-1:-1:-1;;;;;6441:34:0;;966:10:3;6441:34:0;6437:102;;6498:30;;-1:-1:-1;;;6498:30:0;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;23320:725:27:-;2316:19:4;:17;:19::i;:::-;4254:4:27::1;:11:::0;23393:4;;4247:18;::::1;4239:42;;;;-1:-1:-1::0;;;4239:42:27::1;;;;;;;:::i;:::-;4353:11:::2;::::0;::::2;::::0;::::2;;;4352:12;4344:40;;;::::0;-1:-1:-1;;;4344:40:27;;9781:2:30;4344:40:27::2;::::0;::::2;9763:21:30::0;9820:2;9800:18;;;9793:30;-1:-1:-1;;;9839:18:30;;;9832:45;9894:18;;4344:40:27::2;9579:339:30::0;4344:40:27::2;23428:30:::3;23461:4;23466;23461:10;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;23514;;;:4:::3;:10:::0;;;;;;23525::::3;23514:22:::0;;;;;;;23461:10:::3;::::0;;::::3;::::0;;::::3;::::0;-1:-1:-1;23546:16:27::3;23519:4:::0;23546:10:::3;:16::i;:::-;23572:19;23710:5;:20;;;23674:5;:21;;;23627:5;:31;;;23595:5;:17;;;:63;;;;:::i;:::-;23594:101;;;;:::i;:::-;:136;;;;:::i;:::-;23572:158:::0;-1:-1:-1;23744:15:27;;23740:125:::3;;23798:1;23775:20;::::0;::::3;:24:::0;23813:41:::3;23830:10;23842:11:::0;23813:16:::3;:41::i;:::-;23931:31;::::0;::::3;::::0;23911:17;;23979:7:::3;::::0;23911:51:::3;::::0;::::3;:::i;:::-;23910:77;;;;:::i;:::-;23874:21;::::0;::::3;:113:::0;24002:36:::3;::::0;643:25:30;;;24020:4:27;;24008:10:::3;::::0;24002:36:::3;::::0;631:2:30;616:18;24002:36:27::3;;;;;;;23418:627;;;2345:1:4::1;23320:725:27::0;:::o;13024:1146::-;13162:7;13181:30;13214:4;13219:7;13214:13;;;;;;;;:::i;:::-;;;;;;;;;13270;;;:4;:13;;;;;;-1:-1:-1;;;;;13270:20:27;;;;;;;;;13336:31;13214:13;;;;;;;13336:31;;;;13396:22;;;;13558:21;;;;13214:13;;-1:-1:-1;13336:31:27;;13543:36;;:53;;;;-1:-1:-1;13583:13:27;;;13543:53;13539:454;;;13612:18;13633:96;13664:5;:21;;;13703:12;13633:13;:96::i;:::-;13612:117;;13743:18;13814:15;;13778:5;:16;;;13765:10;:29;;;;:::i;:::-;13764:65;;;;:::i;:::-;13743:86;-1:-1:-1;13974:8:27;13932:22;13743:86;13946:7;13932:22;:::i;:::-;13931:51;;;;:::i;:::-;13887:95;;:25;:95;:::i;:::-;13843:139;;13598:395;;13539:454;14143:20;;;;14107:21;;;;14022:17;;14084:7;;14022:45;;14042:25;;14022:45;:::i;:::-;14021:71;;;;:::i;:::-;:107;;;;:::i;:::-;:142;;;;:::i;:::-;14002:161;;;;;;13024:1146;;;;;;:::o;4800:823::-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;4998:9:27::1;4983:11;:24;;4962:110;;;::::0;-1:-1:-1;;;4962:110:27;;10652:2:30;4962:110:27::1;::::0;::::1;10634:21:30::0;10691:2;10671:18;;;10664:30;10730:34;10710:18;;;10703:62;-1:-1:-1;;;10781:18:30;;;10774:37;10828:19;;4962:110:27::1;10450:403:30::0;4962:110:27::1;5105:1;5090:12;:16;5082:65;;;::::0;-1:-1:-1;;;5082:65:27;;11060:2:30;5082:65:27::1;::::0;::::1;11042:21:30::0;11099:2;11079:18;;;11072:30;11138:34;11118:18;;;11111:62;-1:-1:-1;;;11189:18:30;;;11182:34;11233:19;;5082:65:27::1;10858:400:30::0;5082:65:27::1;5220:22;:20;:22::i;:::-;5252:24;:22;:24::i;:::-;5286:17;:15;:17::i;:::-;5361:42;2362:4:0;5392:10:27;5361;:42::i;:::-;;5413:36;1335:33;5438:10;5413;:36::i;:::-;;5459:34;-1:-1:-1::0;;;;;;;;;;;5482:10:27::1;5459;:34::i;:::-;;5504:12;5511:4;5504:6;:12::i;:::-;5526:10;:24:::0;;;5560:8:::1;:20:::0;;;5590:11:::1;:26:::0;;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;11416:50:30;;5142:14:1;;11404:2:30;11389:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;4800:823:27;;;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;15569:2058:27:-;4254:4;:11;15619:4;;4247:18;;4239:42;;;;-1:-1:-1;;;4239:42:27;;;;;;;:::i;:::-;15635:30:::1;15668:4;15673;15668:10;;;;;;;;:::i;:::-;;;;;;;;;;;15635:43;;15741:5;:21;;;15725:12;:37;15721:74;;15778:7;4161:214:2::0;;:::o;15721:74:27:-:1;15831:22;::::0;::::1;::::0;15804:24:::1;15927:21:::0;;;15923:108:::1;;-1:-1:-1::0;15988:12:27::1;15964:21;::::0;;::::1;:36:::0;4161:214:2;;:::o;15923:108:27:-:1;16249:13;16264:16:::0;16284:109:::1;16376:5;:16;;;16284:84;16311:5;:21;;;16346:12;16284:13;:84::i;:::-;:91:::0;::::1;:109::i;:::-;16248:145;;;;16411:8;16403:29;;;;-1:-1:-1::0;;;16403:29:27::1;;;;;;;:::i;:::-;16577:15;::::0;16561:32:::1;::::0;:8;;:15:::1;:32::i;:::-;16538:55:::0;;-1:-1:-1;16538:55:27;-1:-1:-1;16538:55:27;16603:29:::1;;;;-1:-1:-1::0;;;16603:29:27::1;;;;;;;:::i;:::-;16718:22;::::0;::::1;::::0;16790:12;;16786:679:::1;;16869:13;::::0;16905:18:::1;:8:::0;16921:1:::1;16905:15;:18::i;:::-;16868:55;;;;16945:8;16937:29;;;;-1:-1:-1::0;;;16937:29:27::1;;;;;;;:::i;:::-;17078:26;:9:::0;17095:8;17078:16:::1;:26::i;:::-;17054:50:::0;;-1:-1:-1;17054:50:27;-1:-1:-1;17054:50:27;17118:29:::1;;;;-1:-1:-1::0;;;17118:29:27::1;;;;;;;:::i;:::-;17203:13;17218:33:::0;17255:83:::1;17328:9;17255:5;:48;;;:72;;:83;;;;:::i;:::-;17202:136;;;;17360:8;17352:29;;;;-1:-1:-1::0;;;17352:29:27::1;;;;;;;:::i;:::-;17395:31;::::0;::::1;:59:::0;-1:-1:-1;;;16786:679:27::1;17543:12;17519:21;::::0;::::1;:36:::0;;;17571:49:::1;::::0;643:25:30;;;17582:4:27;;17571:49:::1;::::0;631:2:30;616:18;17571:49:27::1;;;;;;;;15625:2002;;;;;15569:2058:::0;;:::o;3708:134:2:-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;6196:193:27:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;6267:14:27::1;::::0;::::1;;6259:61;;;::::0;-1:-1:-1;;;6259:61:27;;12015:2:30;6259:61:27::1;::::0;::::1;11997:21:30::0;12054:2;12034:18;;;12027:30;12093:34;12073:18;;;12066:62;-1:-1:-1;;;12144:18:30;;;12137:32;12186:19;;6259:61:27::1;11813:398:30::0;6259:61:27::1;6330:14;:21:::0;;-1:-1:-1;;6330:21:27::1;6347:4;6330:21;::::0;;6366:16:::1;::::0;::::1;::::0;6330:14:::1;::::0;6366:16:::1;6196:193:::0;:::o;17731:622::-;18251:4;:11;18234:14;18272:75;18296:6;18292:1;:10;18272:75;;;18323:13;18334:1;18323:10;:13::i;:::-;18304:3;;18272:75;;6473:239;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;6562:14:27::1;::::0;;-1:-1:-1;;6544:32:27;::::1;6562:14;::::0;;::::1;6561:15;6544:32:::0;;::::1;::::0;;;6590:14;6586:120:::1;;;6625:16;::::0;::::1;::::0;;;::::1;6473:239:::0;:::o;6586:120::-:1;6677:18;::::0;::::1;::::0;;;::::1;6586:120;6473:239:::0;:::o;12150:502::-;12244:18;12291:3;12282:5;:12;;12274:38;;;;-1:-1:-1;;;12274:38:27;;12418:2:30;12274:38:27;;;12400:21:30;12457:2;12437:18;;;12430:30;-1:-1:-1;;;12476:18:30;;;12469:43;12529:18;;12274:38:27;12216:337:30;12274:38:27;12334:10;;12326:5;:18;12322:67;;;12368:10;;12360:18;;12322:67;12408:8;;12402:3;:14;12398:59;;;12438:8;;12432:14;;12398:59;12488:1;12474:11;12480:5;12474:3;:11;:::i;:::-;:15;12466:41;;;;-1:-1:-1;;;12466:41:27;;12418:2:30;12466:41:27;;;12400:21:30;12457:2;12437:18;;;12430:30;-1:-1:-1;;;12476:18:30;;;12469:43;12529:18;;12466:41:27;12216:337:30;12466:41:27;12517:12;12563:33;12584:11;;12570:5;12564:3;:11;;;;:::i;12563:33::-;12539:57;-1:-1:-1;12539:57:27;-1:-1:-1;12539:57:27;12606:39;;;;-1:-1:-1;;;12606:39:27;;12760:2:30;12606:39:27;;;12742:21:30;12799:2;12779:18;;;12772:30;-1:-1:-1;;;12818:18:30;;;12811:49;12877:18;;12606:39:27;12558:343:30;3732:207:0;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:0;;;;;;;;-1:-1:-1;;;;;3901:31:0;;;;;;;;;;;;;;;3732:207::o;20001:1459:27:-;2316:19:4;:17;:19::i;:::-;4459:14:27::1;::::0;::::1;;4458:15;4450:46;;;;-1:-1:-1::0;;;4450:46:27::1;;;;;;;:::i;:::-;4254:4:::2;:11:::0;20123:4;;4247:18;::::2;4239:42;;;;-1:-1:-1::0;;;4239:42:27::2;;;;;;;:::i;:::-;20139:30:::3;20172:4;20177;20172:10;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;20225;;;:4:::3;:10:::0;;;;;;20236::::3;20225:22:::0;;;;;;;20279:17;;20172:10:::3;::::0;;::::3;::::0;;::::3;::::0;-1:-1:-1;20279:28:27;-1:-1:-1;20279:28:27::3;20258:107;;;::::0;-1:-1:-1;;;20258:107:27;;13108:2:30;20258:107:27::3;::::0;::::3;13090:21:30::0;;;13127:18;;;13120:30;13186:34;13166:18;;;13159:62;13238:18;;20258:107:27::3;12906:356:30::0;20258:107:27::3;20375:16;20386:4;20375:10;:16::i;:::-;20477:31;::::0;::::3;::::0;20439:17;;20402:12:::3;::::0;;;20439:79:::3;::::0;:24:::3;:79::i;:::-;20401:117;;;;20536:7;20528:28;;;;-1:-1:-1::0;;;20528:28:27::3;;;;;;;:::i;:::-;20591:21;:11:::0;20610:1:::3;20591:18;:21::i;:::-;20566:46:::0;;-1:-1:-1;20566:46:27;-1:-1:-1;20566:46:27;20622:29:::3;;;::::0;-1:-1:-1;;;20622:29:27;;13469:2:30;20622:29:27::3;::::0;::::3;13451:21:30::0;13508:1;13488:18;;;13481:29;-1:-1:-1;;;13526:18:30;;;13519:39;13575:18;;20622:29:27::3;13267:332:30::0;20622:29:27::3;20705:21;::::0;::::3;::::0;20686:41:::3;::::0;:11;;:18:::3;:41::i;:::-;20661:66:::0;;-1:-1:-1;20661:66:27;-1:-1:-1;20661:66:27;20737:29:::3;;;::::0;-1:-1:-1;;;20737:29:27;;13806:2:30;20737:29:27::3;::::0;::::3;13788:21:30::0;13845:1;13825:18;;;13818:29;-1:-1:-1;;;13863:18:30;;;13856:39;13912:18;;20737:29:27::3;13604:332:30::0;20737:29:27::3;20780:15:::0;;20776:81:::3;;20835:11;20811:5;:20;;;:35;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;20776:81:27::3;20903:11:::0;;20899:300:::3;;20951:7;20930:5;:17;;;:28;;;;;;;:::i;:::-;;;;;;;;20972:5;:14;;21009:165;;;;;;;;21066:7;21009:165;;;;21130:5;:25;;;21115:12;:40;;;;:::i;:::-;21009:165:::0;;20972:216;;::::3;::::0;;::::3;::::0;;-1:-1:-1;20972:216:27;;;::::3;::::0;;;;;;::::3;::::0;;::::3;;::::0;;;;;;::::3;::::0;;::::3;::::0;20899:300:::3;21267:7;21241:5;:22;;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;21341:31:27::3;::::0;::::3;::::0;21321:17;;21389:7:::3;::::0;21321:51:::3;::::0;::::3;:::i;:::-;21320:77;;;;:::i;:::-;21284:21;::::0;::::3;:113:::0;21412:41:::3;::::0;643:25:30;;;21439:4:27;;21427:10:::3;::::0;21412:41:::3;::::0;631:2:30;616:18;21412:41:27::3;497:177:30::0;12728:204:27;4254:4;:11;12846:7;;12828;;4247:18;;4239:42;;;;-1:-1:-1;;;4239:42:27;;;;;;;:::i;:::-;12872:53:::1;12896:7;12905:5;12912:12;12872:23;:53::i;:::-;12865:60:::0;12728:204;-1:-1:-1;;;;12728:204:27:o;6718:221::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;6801:11:27::1;::::0;;::::1;;::::0;;::::1;::::0;::::1;6800:12;6786:26:::0;::::1;-1:-1:-1::0;;6786:26:27;;::::1;::::0;;;::::1;::::0;;;;6826:11;::::1;;6822:111;;;6858:13;::::0;::::1;::::0;;;::::1;6473:239:::0;:::o;6822:111::-:1;6907:15;::::0;::::1;::::0;;;::::1;6718:221:::0;:::o;8168:1926::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;8674:4:27::1;:11:::0;:15;8670:332:::1;;8767:3;-1:-1:-1::0;;;;;8730:41:27::1;:4;8735:1;8730:7;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:25:::0;-1:-1:-1;;;;;8730:25:27::1;:41;8705:131;;;::::0;-1:-1:-1;;;8705:131:27;;14143:2:30;8705:131:27::1;::::0;::::1;14125:21:30::0;14182:2;14162:18;;;14155:30;14221:33;14201:18;;;14194:61;14272:18;;8705:131:27::1;13941:355:30::0;8705:131:27::1;8670:332;;;-1:-1:-1::0;;;;;8892:34:27;::::1;::::0;8867:124:::1;;;::::0;-1:-1:-1;;;8867:124:27;;14143:2:30;8867:124:27::1;::::0;::::1;14125:21:30::0;14182:2;14162:18;;;14155:30;14221:33;14201:18;;;14194:61;14272:18;;8867:124:27::1;13941:355:30::0;8867:124:27::1;9134:1;9111:20;:24;9103:67;;;::::0;-1:-1:-1;;;9103:67:27;;14503:2:30;9103:67:27::1;::::0;::::1;14485:21:30::0;14542:2;14522:18;;;14515:30;14581:32;14561:18;;;14554:60;14631:18;;9103:67:27::1;14301:354:30::0;9103:67:27::1;9241:8;;9226:12;:23;9218:49;;;::::0;-1:-1:-1;;;9218:49:27;;14862:2:30;9218:49:27::1;::::0;::::1;14844:21:30::0;14901:2;14881:18;;;14874:30;-1:-1:-1;;;14920:18:30;;;14913:43;14973:18;;9218:49:27::1;14660:337:30::0;9218:49:27::1;9281:11;9277:59;;;9308:17;:15;:17::i;:::-;9345:23;9386:10:::0;::::1;9371:12;:25;:77;;9438:10;;9371:77;;;9411:12;9371:77;9345:103;;9477:11;9458:15;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9521:373:27::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;9521:373:27;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;9521:373:27;;;;;;;;;;;;;;;;;;;;;;;;9498:4:::1;:406:::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;9498:406:27::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9919:168;;8014:25:30;;;8055:18;;;8048:34;;;9521:373:27;;;;9919:168:::1;::::0;7987:18:30;9919:168:27::1;;;;;;;8540:1554;8168:1926:::0;;;;;;:::o;7759:220::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;7866:1:27::1;7851:12;:16;7843:50;;;::::0;-1:-1:-1;;;7843:50:27;;15204:2:30;7843:50:27::1;::::0;::::1;15186:21:30::0;15243:2;15223:18;;;15216:30;-1:-1:-1;;;15262:18:30;;;15255:51;15323:18;;7843:50:27::1;15002:345:30::0;7843:50:27::1;7903:11;:26:::0;;;7944:28:::1;::::0;7917:12;;7944:28:::1;::::0;;;::::1;7759:220:::0;;:::o;7448:205::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;7548:9:27::1;7534:10;;:23;;7526:53;;;::::0;-1:-1:-1;;;7526:53:27;;15554:2:30;7526:53:27::1;::::0;::::1;15536:21:30::0;15593:2;15573:18;;;15566:30;-1:-1:-1;;;15612:18:30;;;15605:47;15669:18;;7526:53:27::1;15352:341:30::0;7526:53:27::1;7589:8;:20:::0;;;7624:22:::1;::::0;7600:9;;7624:22:::1;::::0;;;::::1;7448:205:::0;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;10450:441:27:-:0;4254:4;:11;10590:7;;4247:18;;4239:42;;;;-1:-1:-1;;;4239:42:27;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3191:16:0::1;3202:4;3191:10;:16::i;:::-;10648:4:27::2;:11:::0;10638:21;::::2;10630:49;;;::::0;-1:-1:-1;;;10630:49:27;;15900:2:30;10630:49:27::2;::::0;::::2;15882:21:30::0;15939:2;15919:18;;;15912:30;-1:-1:-1;;;15958:18:30;;;15951:45;16013:18;;10630:49:27::2;15698:339:30::0;10630:49:27::2;10722:17;10689:4;10694:7;10689:13;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;:50;;;;10785:20;10749:4;10754:7;10749:13;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;:56;;;;10863:20;10844:17;10835:7;10820:64;;;;;;;;;;4291:1:::1;10450:441:::0;;;;:::o;19137:670::-;4459:14;;;;4458:15;4450:46;;;;-1:-1:-1;;;4450:46:27;;;;;;;:::i;:::-;4254:4:::1;:11:::0;19245:4;;4247:18;::::1;4239:42;;;;-1:-1:-1::0;;;4239:42:27::1;;;;;;;:::i;:::-;19395:4:::2;19403:1;19395:9:::0;19387:53:::2;;;::::0;-1:-1:-1;;;19387:53:27;;16244:2:30;19387:53:27::2;::::0;::::2;16226:21:30::0;16283:2;16263:18;;;16256:30;16322:33;16302:18;;;16295:61;16373:18;;19387:53:27::2;16042:355:30::0;19387:53:27::2;19450:30;19483:4;19488;19483:10;;;;;;;;:::i;:::-;;;;;;;;;;;19450:43;;19521:5;:22;;;19511:7;:32;19503:67;;;::::0;-1:-1:-1;;;19503:67:27;;16604:2:30;19503:67:27::2;::::0;::::2;16586:21:30::0;16643:2;16623:18;;;16616:30;-1:-1:-1;;;16662:18:30;;;16655:52;16724:18;;19503:67:27::2;16402:346:30::0;19503:67:27::2;19584:11:::0;;19580:188:::2;;19618:23:::0;;19611:146:::2;::::0;-1:-1:-1;;;;;19618:23:27::2;19677:10;19713:4;19736:7:::0;19611:48:::2;:146::i;:::-;19777:23;19786:4;19792:7;19777:8;:23::i;7137:219::-:0;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;7242:8:27::1;;7227:11;:23;;7219:55;;;::::0;-1:-1:-1;;;7219:55:27;;16955:2:30;7219:55:27::1;::::0;::::1;16937:21:30::0;16994:2;16974:18;;;16967:30;-1:-1:-1;;;17013:18:30;;;17006:49;17072:18;;7219:55:27::1;16753:343:30::0;7219:55:27::1;7284:10;:24:::0;;;7323:26:::1;::::0;7297:11;;7323:26:::1;::::0;::::1;7137:219:::0;;:::o;6004:110::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;6071:3:27::1;:10:::0;;-1:-1:-1;;;;;;6071:10:27::1;::::0;-1:-1:-1;;;;;6071:10:27;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;6096:11:::1;::::0;6103:3;::::1;;::::0;6096:11:::1;::::0;-1:-1:-1;;6096:11:27::1;6004:110:::0;;:::o;18426:392::-;2316:19:4;:17;:19::i;:::-;18487:30:27::1;18520:4;1408:1;18520:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;18564:23:::0;;18520:13;;-1:-1:-1;;;;;;18564:23:27::1;:39:::0;18543:116:::1;;;::::0;-1:-1:-1;;;18543:116:27;;17303:2:30;18543:116:27::1;::::0;::::1;17285:21:30::0;17342:2;17322:18;;;17315:30;17381:32;17361:18;;;17354:60;17431:18;;18543:116:27::1;17101:354:30::0;18543:116:27::1;18726:22;::::0;::::1;::::0;18688:9:::1;::::0;18715:33;::::1;;18707:68;;;::::0;-1:-1:-1;;;18707:68:27;;16604:2:30;18707:68:27::1;::::0;::::1;16586:21:30::0;16643:2;16623:18;;;16616:30;-1:-1:-1;;;16662:18:30;;;16655:52;16724:18;;18707:68:27::1;16402:346:30::0;18707:68:27::1;18785:26;1408:1;18803:7;18785:8;:26::i;10989:690::-:0;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;11154:4:27::1;:11:::0;11144:21;::::1;11136:49;;;::::0;-1:-1:-1;;;11136:49:27;;15900:2:30;11136:49:27::1;::::0;::::1;15882:21:30::0;15939:2;15919:18;;;15912:30;-1:-1:-1;;;15958:18:30;;;15951:45;16013:18;;11136:49:27::1;15698:339:30::0;11136:49:27::1;11217:1;11203:11;:15;11195:47;;;::::0;-1:-1:-1;;;11195:47:27;;17662:2:30;11195:47:27::1;::::0;::::1;17644:21:30::0;17701:2;17681:18;;;17674:30;-1:-1:-1;;;17720:18:30;;;17713:49;17779:18;;11195:47:27::1;17460:343:30::0;11195:47:27::1;11256:11;11252:59;;;11283:17;:15;:17::i;:::-;11321:12;11335:29:::0;11368:57:::1;11404:11;11368:15;;:22;;:57;;;;:::i;:::-;11320:105;;;;11443:7;11435:46;;;::::0;-1:-1:-1;;;11435:46:27;;18010:2:30;11435:46:27::1;::::0;::::1;17992:21:30::0;18049:2;18029:18;;;18022:30;18088:28;18068:18;;;18061:56;18134:18;;11435:46:27::1;17808:350:30::0;11435:46:27::1;11533:4;11538:7;11533:13;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;11509:21;:48;;;;:::i;:::-;11491:15;:66;;;;11594:11;11567:4;11572:7;11567:13;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;:38;;;;11634:7;11620:52;11643:11;11656:15;;11620:52;;;;;;8014:25:30::0;;;8070:2;8055:18;;8048:34;8002:2;7987:18;;7840:248;11620:52:27::1;;;;;;;;11126:553;;10989:690:::0;;;;:::o;2115:30::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2115:30:27;;;;-1:-1:-1;2115:30:27;;;;;;;;;:::o;14548:635::-;14697:21;14720:29;14671:7;4254:4;:11;;;;4247:4;:18;4239:42;;;;-1:-1:-1;;;4239:42:27;;;;;;;:::i;:::-;14765:30:::1;14798:13:::0;;;:4:::1;:13;::::0;;;;;;;-1:-1:-1;;;;;14798:20:27;::::1;::::0;;;;;;;;14828:349:::1;14852:14;::::0;::::1;:21:::0;14848:25;::::1;14828:349;;;14938:12;14898:5;:14;;14913:1;14898:17;;;;;;;;:::i;:::-;;;;;;;;;;;:36;;;:52;14894:203;;15058:5;:14;;15073:1;15058:17;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;15014:21;:68;;;;:::i;:::-;14970:112;;14894:203;15142:5;:14;;15157:1;15142:17;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;15126:13;:40;;;;:::i;:::-;15110:56:::0;-1:-1:-1;14875:3:27::1;;14828:349;;;;14755:428;14548:635:::0;;;;;;:::o;2905:128:4:-;1270:23;2821:9;;;2966:61;;;3001:15;;-1:-1:-1;;;3001:15:4;;;;;;;;;;;2966:61;2905:128::o;27362:464:27:-;27495:12;27509:17;27538:3;-1:-1:-1;;;;;27530:17:27;27555:7;27530:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27494:95;;;;27607:7;27599:44;;;;-1:-1:-1;;;27599:44:27;;18575:2:30;27599:44:27;;;18557:21:30;18614:2;18594:18;;;18587:30;18653:26;18633:18;;;18626:54;18697:18;;27599:44:27;18373:348:30;27599:44:27;27657:11;;:15;27653:167;;27724:4;27713:24;;;;;;;;;;;;:::i;:::-;27688:121;;;;-1:-1:-1;;;27688:121:27;;19178:2:30;27688:121:27;;;19160:21:30;19217:2;19197:18;;;19190:30;19256:34;19236:18;;;19229:62;-1:-1:-1;;;19307:18:30;;;19300:36;19353:19;;27688:121:27;18976:402:30;1219:160:18;1328:43;;-1:-1:-1;;;;;19575:32:30;;;1328:43:18;;;19557:51:30;19624:18;;;19617:34;;;1301:71:18;;1321:5;;1343:14;;;;;19530:18:30;;1328:43:18;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1328:43:18;;;;;;;;;;;1301:19;:71::i;4148:103:0:-;4214:30;4225:4;966:10:3;4214::0;:30::i;7270:387::-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:0;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:0;;;;;;;;;:38;;-1:-1:-1;;7475:38:0;7509:4;7475:38;;;7559:12;966:10:3;;887:96;7559:12:0;-1:-1:-1;;;;;7532:40:0;7550:7;-1:-1:-1;;;;;7532:40:0;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7892:388;7970:4;-1:-1:-1;;;;;;;;;;;8059:22:0;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:14;;;;;;;;;;;-1:-1:-1;;;;;8097:31:0;;;;;;;;;;:39;;-1:-1:-1;;8097:39:0;;;8155:40;966:10:3;;8097:14:0;;8155:40;;8131:5;8155:40;8216:4;8209:11;;;;;26632:266:27;26724:3;;:28;;-1:-1:-1;;;26724:28:27;;26746:4;26724:28;;;4798:51:30;26707:14:27;;26724:3;;;-1:-1:-1;;;;;26724:3:27;;:13;;4771:18:30;;26724:28:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26707:45;;26777:6;26766:7;:17;26762:130;;26799:3;;:26;;-1:-1:-1;;;26799:26:27;;-1:-1:-1;;;;;19575:32:30;;;26799:26:27;;;19557:51:30;19624:18;;;19617:34;;;26799:3:27;;;;;;;;:12;;19530:18:30;;26799:26:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;26762:130::-;26856:3;;:25;;-1:-1:-1;;;26856:25:27;;-1:-1:-1;;;;;19575:32:30;;;26856:25:27;;;19557:51:30;19624:18;;;19617:34;;;26856:3:27;;;;;;;;:12;;19530:18:30;;26856:25:27;19383:274:30;3231:65:0;6931:20:1;:18;:20::i;1836:97:4:-;6931:20:1;:18;:20::i;:::-;1899:27:4::1;:25;:27::i;4603:312:2:-:0;4683:4;-1:-1:-1;;;;;4692:6:2;4675:23;;;:120;;;4789:6;-1:-1:-1;;;;;4753:42:2;:32;-1:-1:-1;;;;;;;;;;;1519:53:13;-1:-1:-1;;;;;1519:53:13;;1441:138;4753:32:2;-1:-1:-1;;;;;4753:42:2;;;4675:120;4658:251;;;4869:29;;-1:-1:-1;;;4869:29:2;;;;;;;;;;;5703:111:27;1335:33;3191:16:0;3202:4;3191:10;:16::i;6057:538:2:-;6174:17;-1:-1:-1;;;;;6156:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6156:52:2;;;;;;;;-1:-1:-1;;6156:52:2;;;;;;;;;;;;:::i;:::-;;;6152:437;;6518:60;;-1:-1:-1;;;6518:60:2;;-1:-1:-1;;;;;4816:32:30;;6518:60:2;;;4798:51:30;4771:18;;6518:60:2;4637:218:30;6152:437:2;-1:-1:-1;;;;;;;;;;;6250:40:2;;6246:120;;6317:34;;-1:-1:-1;;;6317:34:2;;;;;643:25:30;;;616:18;;6317:34:2;497:177:30;6246:120:2;6379:54;6409:17;6428:4;6379:29;:54::i;1264:508:25:-;1325:12;1339:14;1623:1;1628;1623:6;1619:28;;-1:-1:-1;1639:4:25;;-1:-1:-1;1645:1:25;1631:16;;1619:28;1673:5;;;1677:1;1673;:5;:1;1696:5;;;;:::i;:::-;;:10;1692:33;;1716:5;1723:1;1708:17;;;;;;;1692:33;1747:4;;-1:-1:-1;1753:1:25;-1:-1:-1;1264:508:25;;;;;;:::o;1896:205::-;1957:12;1971:14;2025:1;2030;2025:6;2021:29;;-1:-1:-1;2041:5:25;;-1:-1:-1;2041:5:25;2033:17;;2021:29;2072:4;2082:1;2078;:5;;;;;:::i;:::-;;2064:20;;;;1896:205;;;;;:::o;586:231::-;647:12;;723:5;;;746;;;742:28;;;761:5;768:1;753:17;;;;;;;5032:213:2;5106:4;-1:-1:-1;;;;;5115:6:2;5098:23;;5094:145;;5199:29;;-1:-1:-1;;;5199:29:2;;;;;;;;;;;937:204:25;998:12;1012:14;1070:1;1066;:5;1062:28;;;-1:-1:-1;1081:5:25;;-1:-1:-1;1081:5:25;1073:17;;1062:28;-1:-1:-1;1112:4:25;;1118:5;;;;;-1:-1:-1;937:204:25:o;1618:188:18:-;1745:53;;-1:-1:-1;;;;;20506:15:30;;;1745:53:18;;;20488:34:30;20558:15;;;20538:18;;;20531:43;20590:18;;;20583:34;;;1718:81:18;;1738:5;;1760:18;;;;;20423::30;;1745:53:18;20248:375:30;24356:2023:27;24424:30;24457:4;24462;24457:10;;;;;;;;:::i;:::-;;;;;;;;;24510;;;:4;:10;;;;;;24521;24510:22;;;;;;;24457:10;;;;;;;;-1:-1:-1;24542:16:27;24515:4;24542:10;:16::i;:::-;24614:17;;:21;24610:873;;24734:31;;;;24692:17;;24652:13;;;;24692:87;;:24;:87::i;:::-;24651:128;;;;24801:8;24793:47;;;;-1:-1:-1;;;24793:47:27;;20830:2:30;24793:47:27;;;20812:21:30;20869:2;20849:18;;;20842:30;20908:28;20888:18;;;20881:56;20954:18;;24793:47:27;20628:350:30;24793:47:27;24882:29;:13;24903:7;24882:20;:29::i;:::-;24854:57;;-1:-1:-1;24854:57:27;-1:-1:-1;24854:57:27;24925:58;;;;-1:-1:-1;;;24925:58:27;;21185:2:30;24925:58:27;;;21167:21:30;21224:2;21204:18;;;21197:30;21263:34;21243:18;;;21236:62;-1:-1:-1;;;21314:18:30;;;21307:35;21359:19;;24925:58:27;20983:401:30;24925:58:27;24999:13;25014:19;25037:73;25075:5;:21;;;25037:13;:20;;:73;;;;:::i;:::-;24998:112;;;;25132:8;25124:45;;;;-1:-1:-1;;;25124:45:27;;21591:2:30;25124:45:27;;;21573:21:30;21630:2;21610:18;;;21603:30;-1:-1:-1;;;21649:18:30;;;21642:54;21713:18;;25124:45:27;21389:348:30;25124:45:27;25187:15;;25183:290;;25223:13;25238:19;25261:82;25331:11;25261:5;:41;;;:69;;:82;;;;:::i;:::-;25222:121;;;;25369:8;25361:45;;;;-1:-1:-1;;;25361:45:27;;21591:2:30;25361:45:27;;;21573:21:30;21630:2;21610:18;;;21603:30;-1:-1:-1;;;21649:18:30;;;21642:54;21713:18;;25361:45:27;21389:348:30;25361:45:27;25424:20;;;:34;-1:-1:-1;25183:290:27;24637:846;;;;24610:873;25538:11;;25534:262;;25639:17;;25566:13;;;;25607:63;;:7;;:14;:63::i;:::-;25565:105;;;;25692:8;25684:53;;;;-1:-1:-1;;;25684:53:27;;21944:2:30;25684:53:27;;;21926:21:30;;;21963:18;;;21956:30;22022:34;22002:18;;;21995:62;22074:18;;25684:53:27;21742:356:30;25684:53:27;25751:34;;-1:-1:-1;25534:262:27;25851:13;25866:25;25895:64;25951:7;25895:5;:35;;;:55;;:64;;;;:::i;:::-;25850:109;;;;25977:8;25969:48;;;;-1:-1:-1;;;25969:48:27;;22305:2:30;25969:48:27;;;22287:21:30;22344:2;22324:18;;;22317:30;22383:29;22363:18;;;22356:57;22430:18;;25969:48:27;22103:351:30;25969:48:27;26027:22;;;:42;;;26162:31;;;;26124:17;;26081:13;;;;26124:79;;:24;:79::i;:::-;26080:123;;;;26221:8;26213:59;;;;-1:-1:-1;;;26213:59:27;;22661:2:30;26213:59:27;;;22643:21:30;22700:2;22680:18;;;22673:30;22739:34;22719:18;;;22712:62;-1:-1:-1;;;22790:18:30;;;22783:36;22836:19;;26213:59:27;22459:402:30;26213:59:27;26282:21;;;:40;;;26338:34;;643:25:30;;;26358:4:27;;26346:10;;26338:34;;631:2:30;616:18;26338:34:27;;;;;;;24414:1965;;;;;;24356:2023;;:::o;7686:720:18:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;-1:-1:-1;;8232:1:18;8226:8;8182:16;;-1:-1:-1;8258:15:18;;:68;;8310:11;8325:1;8310:16;;8258:68;;;-1:-1:-1;;;;;8276:26:18;;;:31;8258:68;8254:146;;;8349:40;;-1:-1:-1;;;8349:40:18;;-1:-1:-1;;;;;4816:32:30;;8349:40:18;;;4798:51:30;4771:18;;8349:40:18;4637:218:30;4381:197:0;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:0;;-1:-1:-1;;;;;19575:32:30;;4514:47:0;;;19557:51:30;19624:18;;;19617:34;;;19530:18;;4514:47:0;19383:274:30;7084:141:1;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1939:156:4;6931:20:1;:18;:20::i;:::-;1270:23:4;2071:17;;-1:-1:-1;;2071:17:4::1;::::0;;1939:156::o;2264:344:13:-;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:13;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;1671:281::-;1748:17;-1:-1:-1;;;;;1748:29:13;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:13;;-1:-1:-1;;;;;4816:32:30;;1805:47:13;;;4798:51:30;4771:18;;1805:47:13;4637:218:30;1744:119:13;-1:-1:-1;;;;;;;;;;;1872:73:13;;-1:-1:-1;;;;;;1872:73:13;-1:-1:-1;;;;;1872:73:13;;;;;;;;;;1671:281::o;3916:253:19:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:19;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:19:o;6113:122:13:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:13;;;;;;;;;;;4437:582:19;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:19;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:19;;-1:-1:-1;;;;;4816:32:30;;4933:24:19;;;4798:51:30;4771:18;;4933:24:19;4637:218:30;4853:119:19;-1:-1:-1;4992:10:19;4985:17;;5559:487;5690:17;;:21;5686:354;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;-1:-1:-1;;;6010:19:19;;;;;;;;;;;14:286:30;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:30;;209:43;;199:71;;266:1;263;256:12;679:131;-1:-1:-1;;;;;754:31:30;;744:42;;734:70;;800:1;797;790:12;815:315;883:6;891;944:2;932:9;923:7;919:23;915:32;912:52;;;960:1;957;950:12;912:52;996:9;983:23;973:33;;1056:2;1045:9;1041:18;1028:32;1069:31;1094:5;1069:31;:::i;:::-;1119:5;1109:15;;;815:315;;;;;:::o;1135:180::-;1194:6;1247:2;1235:9;1226:7;1222:23;1218:32;1215:52;;;1263:1;1260;1253:12;1215:52;-1:-1:-1;1286:23:30;;1135:180;-1:-1:-1;1135:180:30:o;2331:383::-;2408:6;2416;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2529:9;2516:23;2506:33;;2589:2;2578:9;2574:18;2561:32;2602:31;2627:5;2602:31;:::i;:::-;2331:383;;2652:5;;-1:-1:-1;;;2704:2:30;2689:18;;;;2676:32;;2331:383::o;2719:467::-;2820:6;2828;2836;2844;2897:3;2885:9;2876:7;2872:23;2868:33;2865:53;;;2914:1;2911;2904:12;2865:53;2953:9;2940:23;2972:31;2997:5;2972:31;:::i;:::-;3022:5;3074:2;3059:18;;3046:32;;-1:-1:-1;3125:2:30;3110:18;;3097:32;;3176:2;3161:18;3148:32;;-1:-1:-1;2719:467:30;-1:-1:-1;;;2719:467:30:o;3191:127::-;3252:10;3247:3;3243:20;3240:1;3233:31;3283:4;3280:1;3273:15;3307:4;3304:1;3297:15;3323:1056;3400:6;3408;3461:2;3449:9;3440:7;3436:23;3432:32;3429:52;;;3477:1;3474;3467:12;3429:52;3516:9;3503:23;3535:31;3560:5;3535:31;:::i;:::-;3585:5;-1:-1:-1;3641:2:30;3626:18;;3613:32;3664:18;3694:14;;;3691:34;;;3721:1;3718;3711:12;3691:34;3759:6;3748:9;3744:22;3734:32;;3804:7;3797:4;3793:2;3789:13;3785:27;3775:55;;3826:1;3823;3816:12;3775:55;3862:2;3849:16;3884:2;3880;3877:10;3874:36;;;3890:18;;:::i;:::-;3965:2;3959:9;3933:2;4019:13;;-1:-1:-1;;4015:22:30;;;4039:2;4011:31;4007:40;3995:53;;;4063:18;;;4083:22;;;4060:46;4057:72;;;4109:18;;:::i;:::-;4149:10;4145:2;4138:22;4184:2;4176:6;4169:18;4224:7;4219:2;4214;4210;4206:11;4202:20;4199:33;4196:53;;;4245:1;4242;4235:12;4196:53;4301:2;4296;4292;4288:11;4283:2;4275:6;4271:15;4258:46;4346:1;4341:2;4336;4328:6;4324:15;4320:24;4313:35;4367:6;4357:16;;;;;;;3323:1056;;;;;:::o;4384:248::-;4452:6;4460;4513:2;4501:9;4492:7;4488:23;4484:32;4481:52;;;4529:1;4526;4519:12;4481:52;-1:-1:-1;;4552:23:30;;;4622:2;4607:18;;;4594:32;;-1:-1:-1;4384:248:30:o;4860:250::-;4945:1;4955:113;4969:6;4966:1;4963:13;4955:113;;;5045:11;;;5039:18;5026:11;;;5019:39;4991:2;4984:10;4955:113;;;-1:-1:-1;;5102:1:30;5084:16;;5077:27;4860:250::o;5115:396::-;5264:2;5253:9;5246:21;5227:4;5296:6;5290:13;5339:6;5334:2;5323:9;5319:18;5312:34;5355:79;5427:6;5422:2;5411:9;5407:18;5402:2;5394:6;5390:15;5355:79;:::i;:::-;5495:2;5474:15;-1:-1:-1;;5470:29:30;5455:45;;;;5502:2;5451:54;;5115:396;-1:-1:-1;;5115:396:30:o;5516:118::-;5602:5;5595:13;5588:21;5581:5;5578:32;5568:60;;5624:1;5621;5614:12;5639:588;5731:6;5739;5747;5755;5763;5816:3;5804:9;5795:7;5791:23;5787:33;5784:53;;;5833:1;5830;5823:12;5784:53;5872:9;5859:23;5891:31;5916:5;5891:31;:::i;:::-;5941:5;-1:-1:-1;5993:2:30;5978:18;;5965:32;;-1:-1:-1;6044:2:30;6029:18;;6016:32;;-1:-1:-1;6095:2:30;6080:18;;6067:32;;-1:-1:-1;6151:3:30;6136:19;;6123:33;6165:30;6123:33;6165:30;:::i;:::-;6214:7;6204:17;;;5639:588;;;;;;;;:::o;6232:316::-;6309:6;6317;6325;6378:2;6366:9;6357:7;6353:23;6349:32;6346:52;;;6394:1;6391;6384:12;6346:52;-1:-1:-1;;6417:23:30;;;6487:2;6472:18;;6459:32;;-1:-1:-1;6538:2:30;6523:18;;;6510:32;;6232:316;-1:-1:-1;6232:316:30:o;6553:262::-;6627:6;6680:2;6668:9;6659:7;6655:23;6651:32;6648:52;;;6696:1;6693;6686:12;6648:52;6735:9;6722:23;6754:31;6779:5;6754:31;:::i;6820:377::-;6894:6;6902;6910;6963:2;6951:9;6942:7;6938:23;6934:32;6931:52;;;6979:1;6976;6969:12;6931:52;7015:9;7002:23;6992:33;;7072:2;7061:9;7057:18;7044:32;7034:42;;7126:2;7115:9;7111:18;7098:32;7139:28;7161:5;7139:28;:::i;:::-;7186:5;7176:15;;;6820:377;;;;;:::o;8093:335::-;8295:2;8277:21;;;8334:2;8314:18;;;8307:30;-1:-1:-1;;;8368:2:30;8353:18;;8346:41;8419:2;8404:18;;8093:335::o;8433:342::-;8635:2;8617:21;;;8674:2;8654:18;;;8647:30;-1:-1:-1;;;8708:2:30;8693:18;;8686:48;8766:2;8751:18;;8433:342::o;8780:127::-;8841:10;8836:3;8832:20;8829:1;8822:31;8872:4;8869:1;8862:15;8896:4;8893:1;8886:15;8912:127;8973:10;8968:3;8964:20;8961:1;8954:31;9004:4;9001:1;8994:15;9028:4;9025:1;9018:15;9044:125;9109:9;;;9130:10;;;9127:36;;;9143:18;;:::i;9174:135::-;9213:3;9234:17;;;9231:43;;9254:18;;:::i;:::-;-1:-1:-1;9301:1:30;9290:13;;9174:135::o;9314:128::-;9381:9;;;9402:11;;;9399:37;;;9416:18;;:::i;9447:127::-;9508:10;9503:3;9499:20;9496:1;9489:31;9539:4;9536:1;9529:15;9563:4;9560:1;9553:15;9923:168;9996:9;;;10027;;10044:15;;;10038:22;;10024:37;10014:71;;10065:18;;:::i;10096:127::-;10157:10;10152:3;10148:20;10145:1;10138:31;10188:4;10185:1;10178:15;10212:4;10209:1;10202:15;10228:217;10268:1;10294;10284:132;;10338:10;10333:3;10329:20;10326:1;10319:31;10373:4;10370:1;10363:15;10401:4;10398:1;10391:15;10284:132;-1:-1:-1;10430:9:30;;10228:217::o;11477:331::-;11679:2;11661:21;;;11718:1;11698:18;;;11691:29;-1:-1:-1;;;11751:2:30;11736:18;;11729:38;11799:2;11784:18;;11477:331::o;18726:245::-;18793:6;18846:2;18834:9;18825:7;18821:23;18817:32;18814:52;;;18862:1;18859;18852:12;18814:52;18894:9;18888:16;18913:28;18935:5;18913:28;:::i;19870:184::-;19940:6;19993:2;19981:9;19972:7;19968:23;19964:32;19961:52;;;20009:1;20006;19999:12;19961:52;-1:-1:-1;20032:16:30;;19870:184;-1:-1:-1;19870:184:30:o;23145:287::-;23274:3;23312:6;23306:13;23328:66;23387:6;23382:3;23375:4;23367:6;23363:17;23328:66;:::i;:::-;23410:16;;;;;23145:287;-1:-1:-1;;23145:287:30:o"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","ETH_PID()":"bfc3ebba","RCC()":"a72d5bf4","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","UPGRADE_ROLE()":"b908afa8","addPool(address,uint256,uint256,uint256,bool)":"b6d9d919","claim(uint256)":"379607f5","claimPaused()":"ab5e124a","deposit(uint256,uint256)":"e2bbb158","depositETH()":"f6326fb3","endBlock()":"083c6323","getMultiplier(uint256,uint256)":"8dbb1e3a","getPendingRCC(uint256,address)":"a27d9279","getPoolLength()":"b3944d52","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,uint256,uint256,uint256)":"4ec81af1","massUpdatePools()":"630b5ba1","pauseWithdraw()":"6155e3de","paused()":"5c975abb","pendingRCCByBlockNumber(uint256,address,uint256)":"41721ab7","pool(uint256)":"fe313112","proxiableUUID()":"52d1902d","rccPerBlock()":"70ff0173","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setEndBlock(uint256)":"c713aa94","setPoolWeight(uint256,uint256,bool)":"fad07ece","setRCC(address)":"f5485d32","setRCCPerBlock(uint256)":"bed66c08","setStartBlock(uint256)":"f35e4a6e","stakingBalance(uint256,address)":"11548234","startBlock()":"48cd4cb1","supportsInterface(bytes4)":"01ffc9a7","toggleClaimPause()":"ae35a8d5","toggleWithdrawPause()":"80cce73f","totalPoolWeight()":"02559004","unstake(uint256,uint256)":"9e2c8a5b","updatePool(uint256)":"51eb05a6","updatePool(uint256,uint256,uint256)":"d86c0444","upgradeToAndCall(address,bytes)":"4f1ef286","user(uint256,address)":"37849b3c","withdraw(uint256)":"2e1a7d4d","withdrawAmount(uint256,address)":"ff423357","withdrawPaused()":"2f3ffb9f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakeTokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolWeight\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minDepositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unStakeLockedBlocks\",\"type\":\"uint256\"}],\"name\":\"AddPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"RccReward\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pid\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GetRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PausedClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PausedWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RequestUnstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"SetEndBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPoolWeight\",\"type\":\"uint256\"}],\"name\":\"SetPoolWeight\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"RCC\",\"type\":\"address\"}],\"name\":\"SetRCC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rccPerBlock\",\"type\":\"uint256\"}],\"name\":\"SetRCCPerBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"}],\"name\":\"SetStartBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pid\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pid\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UnpausedClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UnpausedWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRCC\",\"type\":\"uint256\"}],\"name\":\"UpdatePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"minDepositAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unStakeLockedBlocks\",\"type\":\"uint256\"}],\"name\":\"UpdatePoolInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ETH_PID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RCC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minDepositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unStakeLockedBlocks\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getPendingRCC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_RCC\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rccPerBlock\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"pendingRCCByBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulateRewardsPerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minDepositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unStakeLockedBlocks\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rccPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"}],\"name\":\"setEndBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolWeight\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"setPoolWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_RCC\",\"type\":\"address\"}],\"name\":\"setRCC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rccPerBlock\",\"type\":\"uint256\"}],\"name\":\"setRCCPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"name\":\"setStartBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"stakingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleClaimPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleWithdrawPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPoolWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minDepositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unStakeLockedBlocks\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"user\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishedRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"withdrawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingWithdrawAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"claim(uint256)\":{\"params\":{\"_pid\":\"Id of the pool to be claimed from \\u7d22\\u53d6\\u3001\\u4e3b\\u5f20\\u3001\\u7d22\\u8d54 TODO: \\u8fd9\\u6bb5\\u903b\\u8f91\\u8c01\\u8c03\\u7528\\uff1f\"}},\"deposit(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount of staking tokens to be deposited\",\"_pid\":\"Id of the pool to be deposited to\"}},\"getMultiplier(uint256,uint256)\":{\"params\":{\"_from\":\"From block number (included)\",\"_to\":\"To block number (exluded)\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unstake(uint256,uint256)\":{\"params\":{\"_amount\":\"amount of staking tokens to be withdrawn\",\"_pid\":\"Id of the pool to be withdrawn from\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdraw(uint256)\":{\"params\":{\"_pid\":\"Id of the pool to be withdrawn from \\u529f\\u80fd: \\u63d0\\u53d6\\u4e00\\u4e2a\\u6c60\\u5b50\\u91cc\\u6240\\u6709\\u7684\\u4ee3\\u5e01 - \\u63d0\\u53d6\\u6c60\\u5b50\\u91cc\\u6240\\u6709\\u7684\\u4ee3\\u5e01\\uff1b - \\u62ff\\u8d70\\u6240\\u6709\\u7684\\u5956\\u52b1\\uff1b - \\u66f4\\u65b0\\u6c60\\u5b50 - \\u53d1\\u5c04\\u4e8b\\u4ef6\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPool(address,uint256,uint256,uint256,bool)\":{\"notice\":\"Add a new staking to pool. Can only be called by admin DO NOT add the same staking token more than once. RCC rewards will be messed up if you do\"},\"claim(uint256)\":{\"notice\":\"Claim RCC tokens reward\"},\"deposit(uint256,uint256)\":{\"notice\":\"Deposit staking token for RCC rewards Before depositing, user needs approve this contract to be able to spend or transfer their staking tokens\"},\"depositETH()\":{\"notice\":\"Deposit staking ETH for RCC rewards\"},\"getMultiplier(uint256,uint256)\":{\"notice\":\"Return reward multiplier over given _from to _to block. [_from, _to)\"},\"getPendingRCC(uint256,address)\":{\"notice\":\"Get pending RCC amount of user in pool\"},\"getPoolLength()\":{\"notice\":\"Get the length/amount of pool\"},\"initialize(address,uint256,uint256,uint256)\":{\"notice\":\"Set RCC token address. Set basic info when deploying. - \\u6267\\u884c\\u521d\\u59cb\\u5316\\u52a8\\u4f5c - \\u8bbe\\u7f6e\\u89d2\\u8272\\u6743\\u9650 - \\u8bbe\\u7f6e\\u4ee3\\u5e01\\u5956\\u52b1\\u76f8\\u5173\\u4fe1\\u606f\"},\"massUpdatePools()\":{\"notice\":\"Update reward variables for all pools. Be careful of gas spending!\"},\"pauseWithdraw()\":{\"notice\":\"Pause withdraw. Can only be called by admin.\"},\"pendingRCCByBlockNumber(uint256,address,uint256)\":{\"notice\":\"Get pending RCC amount of user by block number in pool\"},\"setEndBlock(uint256)\":{\"notice\":\"Update staking end block. Can only be called by admin.\"},\"setPoolWeight(uint256,uint256,bool)\":{\"notice\":\"Update the given pool's weight. Can only be called by admin.\"},\"setRCC(address)\":{\"notice\":\"Set RCC token address. Can only be called by admin\"},\"setRCCPerBlock(uint256)\":{\"notice\":\"Update the RCC reward amount per block. Can only be called by admin.\"},\"setStartBlock(uint256)\":{\"notice\":\"Update staking start block. Can only be called by admin.\"},\"stakingBalance(uint256,address)\":{\"notice\":\"Get the staking amount of user\"},\"toggleWithdrawPause()\":{\"notice\":\"Unpause withdraw. Can only be called by admin.\"},\"unstake(uint256,uint256)\":{\"notice\":\"Unstake staking tokens\"},\"updatePool(uint256)\":{\"notice\":\"Update reward variables of the given pool to be up-to-date. \\u4e3b\\u8981\\u662f\\u66f4\\u65b0 - \\u6c60\\u5b50\\u91cc\\u6bcf\\u5355\\u4f4d\\u4ee3\\u5e01\\u7d2f\\u8ba1\\u53d1\\u653e\\u7684\\u5956\\u52b1\\uff1b - \\u6700\\u540e\\u53d1\\u653e\\u5956\\u52b1\\u533a\\u5757\\u7684number\\uff1b - \\u66f4\\u65b0\\u6574\\u4e2a\\u6c60\\u5b50\\uff0c\\u7d2f\\u8ba1\\u5e94\\u8be5\\u65b9\\u6cd5\\u7684\\u5956\\u52b1\\uff1b\"},\"updatePool(uint256,uint256,uint256)\":{\"notice\":\"Update the given pool's info (minDepositAmount and unStakeLockedBlocks). Can only be called by admin. \\u8fd9\\u5c31\\u662f\\u51fd\\u6570\\u7b7e\\u540d\\u7684\\u4f5c\\u7528\\uff0c\\u51fd\\u6570\\u91cd\\u540d\\u6ca1\\u4e8b\\u513f\\uff0c\\u8fd8\\u6709\\u53c2\\u6570\\u8fd4\\u56de\\u503c\\u5565\\u7684\\u5462\\uff1b\\u3001 \\u66f4\\u65b0\\u6c60\\u5b50\\u5e72\\u4e86\\u5565\\u4e8b\\u513f - \\u6539\\u4e86\\u6700\\u5c0f\\u5b58\\u5165\\u91d1\\u989d - \\u4e0d\\u80fd\\u63d0\\u53d6\\u7684\\u533a\\u5757\\u9501\\u5b9a\\u533a\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw the unlock unstake amount\"},\"withdrawAmount(uint256,address)\":{\"notice\":\"Get the withdraw amount info, including the locked unstake amount and the unlocked unstake amount\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RCCStake.sol\":\"RCCStake\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/RCCStake.sol\":{\"keccak256\":\"0x4ee768431751b6446bff5f1588b566dedac2b60265faf0c32704f82662880dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3af22fed0a7f7ff75dd8438495986717d8418561a2bac3503c5a2694b5b11da\",\"dweb:/ipfs/QmRxSSkXgvNRHfqW9koeBGFMjFzNSAa43SzKqtusweRvx2\"]},\"contracts/RCCStakeLib.sol\":{\"keccak256\":\"0x5421475b110c9316e1507fe52bc8971028ce11b0356e3f322dd1a4abf69a8348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27c90fe51fa54bf81feb48b582270f031499313959f2b3e0c9e406a04e91eac2\",\"dweb:/ipfs/QmR2HpXQvvHsBCRoymjYGmcnVA2NHLiYH5aVPVzYharUqZ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":6648,"contract":"contracts/RCCStake.sol:RCCStake","label":"startBlock","offset":0,"slot":"0","type":"t_uint256"},{"astId":6650,"contract":"contracts/RCCStake.sol:RCCStake","label":"endBlock","offset":0,"slot":"1","type":"t_uint256"},{"astId":6652,"contract":"contracts/RCCStake.sol:RCCStake","label":"rccPerBlock","offset":0,"slot":"2","type":"t_uint256"},{"astId":6654,"contract":"contracts/RCCStake.sol:RCCStake","label":"withdrawPaused","offset":0,"slot":"3","type":"t_bool"},{"astId":6656,"contract":"contracts/RCCStake.sol:RCCStake","label":"claimPaused","offset":1,"slot":"3","type":"t_bool"},{"astId":6659,"contract":"contracts/RCCStake.sol:RCCStake","label":"RCC","offset":2,"slot":"3","type":"t_contract(IERC20)2298"},{"astId":6661,"contract":"contracts/RCCStake.sol:RCCStake","label":"totalPoolWeight","offset":0,"slot":"4","type":"t_uint256"},{"astId":6665,"contract":"contracts/RCCStake.sol:RCCStake","label":"pool","offset":0,"slot":"5","type":"t_array(t_struct(Pool)8577_storage)dyn_storage"},{"astId":6672,"contract":"contracts/RCCStake.sol:RCCStake","label":"user","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_address,t_struct(User)8593_storage))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Pool)8577_storage)dyn_storage":{"base":"t_struct(Pool)8577_storage","encoding":"dynamic_array","label":"struct RCCStakeLib.Pool[]","numberOfBytes":"32"},"t_array(t_struct(UnStakeRequest)8582_storage)dyn_storage":{"base":"t_struct(UnStakeRequest)8582_storage","encoding":"dynamic_array","label":"struct RCCStakeLib.UnStakeRequest[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)2298":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_struct(User)8593_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct RCCStakeLib.User)","numberOfBytes":"32","value":"t_struct(User)8593_storage"},"t_mapping(t_uint256,t_mapping(t_address,t_struct(User)8593_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => struct RCCStakeLib.User))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(User)8593_storage)"},"t_struct(Pool)8577_storage":{"encoding":"inplace","label":"struct RCCStakeLib.Pool","members":[{"astId":8564,"contract":"contracts/RCCStake.sol:RCCStake","label":"stakeTokenAddress","offset":0,"slot":"0","type":"t_address"},{"astId":8566,"contract":"contracts/RCCStake.sol:RCCStake","label":"poolWeight","offset":0,"slot":"1","type":"t_uint256"},{"astId":8568,"contract":"contracts/RCCStake.sol:RCCStake","label":"lastRewardBlock","offset":0,"slot":"2","type":"t_uint256"},{"astId":8570,"contract":"contracts/RCCStake.sol:RCCStake","label":"accumulateRewardsPerStake","offset":0,"slot":"3","type":"t_uint256"},{"astId":8572,"contract":"contracts/RCCStake.sol:RCCStake","label":"stakeTokenAmount","offset":0,"slot":"4","type":"t_uint256"},{"astId":8574,"contract":"contracts/RCCStake.sol:RCCStake","label":"minDepositAmount","offset":0,"slot":"5","type":"t_uint256"},{"astId":8576,"contract":"contracts/RCCStake.sol:RCCStake","label":"unStakeLockedBlocks","offset":0,"slot":"6","type":"t_uint256"}],"numberOfBytes":"224"},"t_struct(UnStakeRequest)8582_storage":{"encoding":"inplace","label":"struct RCCStakeLib.UnStakeRequest","members":[{"astId":8579,"contract":"contracts/RCCStake.sol:RCCStake","label":"amount","offset":0,"slot":"0","type":"t_uint256"},{"astId":8581,"contract":"contracts/RCCStake.sol:RCCStake","label":"unlockBlocksCounts","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(User)8593_storage":{"encoding":"inplace","label":"struct RCCStakeLib.User","members":[{"astId":8584,"contract":"contracts/RCCStake.sol:RCCStake","label":"stakeAmount","offset":0,"slot":"0","type":"t_uint256"},{"astId":8586,"contract":"contracts/RCCStake.sol:RCCStake","label":"finishedRewards","offset":0,"slot":"1","type":"t_uint256"},{"astId":8588,"contract":"contracts/RCCStake.sol:RCCStake","label":"pendingRewards","offset":0,"slot":"2","type":"t_uint256"},{"astId":8592,"contract":"contracts/RCCStake.sol:RCCStake","label":"requests","offset":0,"slot":"3","type":"t_array(t_struct(UnStakeRequest)8582_storage)dyn_storage"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/RCCStakeLib.sol":{"RCCStakeLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb68f121fb476d8128b8d0eef74f295b54716e570a899e30fd1fdda8f11d847664736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH9 0xF121FB476D8128B8D0 0xEE 0xF7 0x4F 0x29 JUMPDEST SLOAD PUSH18 0x6E570A899E30FD1FDDA8F11D847664736F6C PUSH4 0x43000816 STOP CALLER ","sourceMap":"57:994:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;57:994:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb68f121fb476d8128b8d0eef74f295b54716e570a899e30fd1fdda8f11d847664736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH9 0xF121FB476D8128B8D0 0xEE 0xF7 0x4F 0x29 JUMPDEST SLOAD PUSH18 0x6E570A899E30FD1FDDA8F11D847664736F6C PUSH4 0x43000816 STOP CALLER ","sourceMap":"57:994:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RCCStakeLib.sol\":\"RCCStakeLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RCCStakeLib.sol\":{\"keccak256\":\"0x5421475b110c9316e1507fe52bc8971028ce11b0356e3f322dd1a4abf69a8348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27c90fe51fa54bf81feb48b582270f031499313959f2b3e0c9e406a04e91eac2\",\"dweb:/ipfs/QmR2HpXQvvHsBCRoymjYGmcnVA2NHLiYH5aVPVzYharUqZ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/RccToken.sol":{"RccToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1757":{"entryPoint":null,"id":1757,"parameterSlots":2,"returnSlots":0},"@_8615":{"entryPoint":null,"id":8615,"parameterSlots":0,"returnSlots":0},"@_mint_2060":{"entryPoint":149,"id":2060,"parameterSlots":2,"returnSlots":0},"@_update_2027":{"entryPoint":215,"id":2027,"parameterSlots":3,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":893,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":604,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":689,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":544,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":522,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3690:30","nodeType":"YulBlock","src":"0:3690:30","statements":[{"nativeSrc":"6:3:30","nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nativeSrc":"46:95:30","nodeType":"YulBlock","src":"46:95:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:30","nodeType":"YulLiteral","src":"63:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:30","nodeType":"YulLiteral","src":"70:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:30","nodeType":"YulLiteral","src":"75:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:30","nodeType":"YulIdentifier","src":"66:3:30"},"nativeSrc":"66:20:30","nodeType":"YulFunctionCall","src":"66:20:30"}],"functionName":{"name":"mstore","nativeSrc":"56:6:30","nodeType":"YulIdentifier","src":"56:6:30"},"nativeSrc":"56:31:30","nodeType":"YulFunctionCall","src":"56:31:30"},"nativeSrc":"56:31:30","nodeType":"YulExpressionStatement","src":"56:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:30","nodeType":"YulLiteral","src":"103:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:30","nodeType":"YulLiteral","src":"106:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:30","nodeType":"YulIdentifier","src":"96:6:30"},"nativeSrc":"96:15:30","nodeType":"YulFunctionCall","src":"96:15:30"},"nativeSrc":"96:15:30","nodeType":"YulExpressionStatement","src":"96:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:30","nodeType":"YulLiteral","src":"127:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:30","nodeType":"YulLiteral","src":"130:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:30","nodeType":"YulIdentifier","src":"120:6:30"},"nativeSrc":"120:15:30","nodeType":"YulFunctionCall","src":"120:15:30"},"nativeSrc":"120:15:30","nodeType":"YulExpressionStatement","src":"120:15:30"}]},"name":"panic_error_0x41","nativeSrc":"14:127:30","nodeType":"YulFunctionDefinition","src":"14:127:30"},{"body":{"nativeSrc":"201:325:30","nodeType":"YulBlock","src":"201:325:30","statements":[{"nativeSrc":"211:22:30","nodeType":"YulAssignment","src":"211:22:30","value":{"arguments":[{"kind":"number","nativeSrc":"225:1:30","nodeType":"YulLiteral","src":"225:1:30","type":"","value":"1"},{"name":"data","nativeSrc":"228:4:30","nodeType":"YulIdentifier","src":"228:4:30"}],"functionName":{"name":"shr","nativeSrc":"221:3:30","nodeType":"YulIdentifier","src":"221:3:30"},"nativeSrc":"221:12:30","nodeType":"YulFunctionCall","src":"221:12:30"},"variableNames":[{"name":"length","nativeSrc":"211:6:30","nodeType":"YulIdentifier","src":"211:6:30"}]},{"nativeSrc":"242:38:30","nodeType":"YulVariableDeclaration","src":"242:38:30","value":{"arguments":[{"name":"data","nativeSrc":"272:4:30","nodeType":"YulIdentifier","src":"272:4:30"},{"kind":"number","nativeSrc":"278:1:30","nodeType":"YulLiteral","src":"278:1:30","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"268:3:30","nodeType":"YulIdentifier","src":"268:3:30"},"nativeSrc":"268:12:30","nodeType":"YulFunctionCall","src":"268:12:30"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"246:18:30","nodeType":"YulTypedName","src":"246:18:30","type":""}]},{"body":{"nativeSrc":"319:31:30","nodeType":"YulBlock","src":"319:31:30","statements":[{"nativeSrc":"321:27:30","nodeType":"YulAssignment","src":"321:27:30","value":{"arguments":[{"name":"length","nativeSrc":"335:6:30","nodeType":"YulIdentifier","src":"335:6:30"},{"kind":"number","nativeSrc":"343:4:30","nodeType":"YulLiteral","src":"343:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"331:3:30","nodeType":"YulIdentifier","src":"331:3:30"},"nativeSrc":"331:17:30","nodeType":"YulFunctionCall","src":"331:17:30"},"variableNames":[{"name":"length","nativeSrc":"321:6:30","nodeType":"YulIdentifier","src":"321:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"299:18:30","nodeType":"YulIdentifier","src":"299:18:30"}],"functionName":{"name":"iszero","nativeSrc":"292:6:30","nodeType":"YulIdentifier","src":"292:6:30"},"nativeSrc":"292:26:30","nodeType":"YulFunctionCall","src":"292:26:30"},"nativeSrc":"289:61:30","nodeType":"YulIf","src":"289:61:30"},{"body":{"nativeSrc":"409:111:30","nodeType":"YulBlock","src":"409:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"430:1:30","nodeType":"YulLiteral","src":"430:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"437:3:30","nodeType":"YulLiteral","src":"437:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"442:10:30","nodeType":"YulLiteral","src":"442:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"433:3:30","nodeType":"YulIdentifier","src":"433:3:30"},"nativeSrc":"433:20:30","nodeType":"YulFunctionCall","src":"433:20:30"}],"functionName":{"name":"mstore","nativeSrc":"423:6:30","nodeType":"YulIdentifier","src":"423:6:30"},"nativeSrc":"423:31:30","nodeType":"YulFunctionCall","src":"423:31:30"},"nativeSrc":"423:31:30","nodeType":"YulExpressionStatement","src":"423:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"474:1:30","nodeType":"YulLiteral","src":"474:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"477:4:30","nodeType":"YulLiteral","src":"477:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"467:6:30","nodeType":"YulIdentifier","src":"467:6:30"},"nativeSrc":"467:15:30","nodeType":"YulFunctionCall","src":"467:15:30"},"nativeSrc":"467:15:30","nodeType":"YulExpressionStatement","src":"467:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"502:1:30","nodeType":"YulLiteral","src":"502:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"505:4:30","nodeType":"YulLiteral","src":"505:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"495:6:30","nodeType":"YulIdentifier","src":"495:6:30"},"nativeSrc":"495:15:30","nodeType":"YulFunctionCall","src":"495:15:30"},"nativeSrc":"495:15:30","nodeType":"YulExpressionStatement","src":"495:15:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"365:18:30","nodeType":"YulIdentifier","src":"365:18:30"},{"arguments":[{"name":"length","nativeSrc":"388:6:30","nodeType":"YulIdentifier","src":"388:6:30"},{"kind":"number","nativeSrc":"396:2:30","nodeType":"YulLiteral","src":"396:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"385:2:30","nodeType":"YulIdentifier","src":"385:2:30"},"nativeSrc":"385:14:30","nodeType":"YulFunctionCall","src":"385:14:30"}],"functionName":{"name":"eq","nativeSrc":"362:2:30","nodeType":"YulIdentifier","src":"362:2:30"},"nativeSrc":"362:38:30","nodeType":"YulFunctionCall","src":"362:38:30"},"nativeSrc":"359:161:30","nodeType":"YulIf","src":"359:161:30"}]},"name":"extract_byte_array_length","nativeSrc":"146:380:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"181:4:30","nodeType":"YulTypedName","src":"181:4:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"190:6:30","nodeType":"YulTypedName","src":"190:6:30","type":""}],"src":"146:380:30"},{"body":{"nativeSrc":"587:65:30","nodeType":"YulBlock","src":"587:65:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"604:1:30","nodeType":"YulLiteral","src":"604:1:30","type":"","value":"0"},{"name":"ptr","nativeSrc":"607:3:30","nodeType":"YulIdentifier","src":"607:3:30"}],"functionName":{"name":"mstore","nativeSrc":"597:6:30","nodeType":"YulIdentifier","src":"597:6:30"},"nativeSrc":"597:14:30","nodeType":"YulFunctionCall","src":"597:14:30"},"nativeSrc":"597:14:30","nodeType":"YulExpressionStatement","src":"597:14:30"},{"nativeSrc":"620:26:30","nodeType":"YulAssignment","src":"620:26:30","value":{"arguments":[{"kind":"number","nativeSrc":"638:1:30","nodeType":"YulLiteral","src":"638:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"641:4:30","nodeType":"YulLiteral","src":"641:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"628:9:30","nodeType":"YulIdentifier","src":"628:9:30"},"nativeSrc":"628:18:30","nodeType":"YulFunctionCall","src":"628:18:30"},"variableNames":[{"name":"data","nativeSrc":"620:4:30","nodeType":"YulIdentifier","src":"620:4:30"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"531:121:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"570:3:30","nodeType":"YulTypedName","src":"570:3:30","type":""}],"returnVariables":[{"name":"data","nativeSrc":"578:4:30","nodeType":"YulTypedName","src":"578:4:30","type":""}],"src":"531:121:30"},{"body":{"nativeSrc":"738:462:30","nodeType":"YulBlock","src":"738:462:30","statements":[{"body":{"nativeSrc":"771:423:30","nodeType":"YulBlock","src":"771:423:30","statements":[{"nativeSrc":"785:11:30","nodeType":"YulVariableDeclaration","src":"785:11:30","value":{"kind":"number","nativeSrc":"795:1:30","nodeType":"YulLiteral","src":"795:1:30","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"789:2:30","nodeType":"YulTypedName","src":"789:2:30","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"816:1:30","nodeType":"YulLiteral","src":"816:1:30","type":"","value":"0"},{"name":"array","nativeSrc":"819:5:30","nodeType":"YulIdentifier","src":"819:5:30"}],"functionName":{"name":"mstore","nativeSrc":"809:6:30","nodeType":"YulIdentifier","src":"809:6:30"},"nativeSrc":"809:16:30","nodeType":"YulFunctionCall","src":"809:16:30"},"nativeSrc":"809:16:30","nodeType":"YulExpressionStatement","src":"809:16:30"},{"nativeSrc":"838:30:30","nodeType":"YulVariableDeclaration","src":"838:30:30","value":{"arguments":[{"kind":"number","nativeSrc":"860:1:30","nodeType":"YulLiteral","src":"860:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"863:4:30","nodeType":"YulLiteral","src":"863:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"850:9:30","nodeType":"YulIdentifier","src":"850:9:30"},"nativeSrc":"850:18:30","nodeType":"YulFunctionCall","src":"850:18:30"},"variables":[{"name":"data","nativeSrc":"842:4:30","nodeType":"YulTypedName","src":"842:4:30","type":""}]},{"nativeSrc":"881:57:30","nodeType":"YulVariableDeclaration","src":"881:57:30","value":{"arguments":[{"name":"data","nativeSrc":"904:4:30","nodeType":"YulIdentifier","src":"904:4:30"},{"arguments":[{"kind":"number","nativeSrc":"914:1:30","nodeType":"YulLiteral","src":"914:1:30","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"921:10:30","nodeType":"YulIdentifier","src":"921:10:30"},{"kind":"number","nativeSrc":"933:2:30","nodeType":"YulLiteral","src":"933:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"917:3:30","nodeType":"YulIdentifier","src":"917:3:30"},"nativeSrc":"917:19:30","nodeType":"YulFunctionCall","src":"917:19:30"}],"functionName":{"name":"shr","nativeSrc":"910:3:30","nodeType":"YulIdentifier","src":"910:3:30"},"nativeSrc":"910:27:30","nodeType":"YulFunctionCall","src":"910:27:30"}],"functionName":{"name":"add","nativeSrc":"900:3:30","nodeType":"YulIdentifier","src":"900:3:30"},"nativeSrc":"900:38:30","nodeType":"YulFunctionCall","src":"900:38:30"},"variables":[{"name":"deleteStart","nativeSrc":"885:11:30","nodeType":"YulTypedName","src":"885:11:30","type":""}]},{"body":{"nativeSrc":"975:23:30","nodeType":"YulBlock","src":"975:23:30","statements":[{"nativeSrc":"977:19:30","nodeType":"YulAssignment","src":"977:19:30","value":{"name":"data","nativeSrc":"992:4:30","nodeType":"YulIdentifier","src":"992:4:30"},"variableNames":[{"name":"deleteStart","nativeSrc":"977:11:30","nodeType":"YulIdentifier","src":"977:11:30"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"957:10:30","nodeType":"YulIdentifier","src":"957:10:30"},{"kind":"number","nativeSrc":"969:4:30","nodeType":"YulLiteral","src":"969:4:30","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"954:2:30","nodeType":"YulIdentifier","src":"954:2:30"},"nativeSrc":"954:20:30","nodeType":"YulFunctionCall","src":"954:20:30"},"nativeSrc":"951:47:30","nodeType":"YulIf","src":"951:47:30"},{"nativeSrc":"1011:41:30","nodeType":"YulVariableDeclaration","src":"1011:41:30","value":{"arguments":[{"name":"data","nativeSrc":"1025:4:30","nodeType":"YulIdentifier","src":"1025:4:30"},{"arguments":[{"kind":"number","nativeSrc":"1035:1:30","nodeType":"YulLiteral","src":"1035:1:30","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1042:3:30","nodeType":"YulIdentifier","src":"1042:3:30"},{"kind":"number","nativeSrc":"1047:2:30","nodeType":"YulLiteral","src":"1047:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1038:3:30","nodeType":"YulIdentifier","src":"1038:3:30"},"nativeSrc":"1038:12:30","nodeType":"YulFunctionCall","src":"1038:12:30"}],"functionName":{"name":"shr","nativeSrc":"1031:3:30","nodeType":"YulIdentifier","src":"1031:3:30"},"nativeSrc":"1031:20:30","nodeType":"YulFunctionCall","src":"1031:20:30"}],"functionName":{"name":"add","nativeSrc":"1021:3:30","nodeType":"YulIdentifier","src":"1021:3:30"},"nativeSrc":"1021:31:30","nodeType":"YulFunctionCall","src":"1021:31:30"},"variables":[{"name":"_2","nativeSrc":"1015:2:30","nodeType":"YulTypedName","src":"1015:2:30","type":""}]},{"nativeSrc":"1065:24:30","nodeType":"YulVariableDeclaration","src":"1065:24:30","value":{"name":"deleteStart","nativeSrc":"1078:11:30","nodeType":"YulIdentifier","src":"1078:11:30"},"variables":[{"name":"start","nativeSrc":"1069:5:30","nodeType":"YulTypedName","src":"1069:5:30","type":""}]},{"body":{"nativeSrc":"1163:21:30","nodeType":"YulBlock","src":"1163:21:30","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1172:5:30","nodeType":"YulIdentifier","src":"1172:5:30"},{"name":"_1","nativeSrc":"1179:2:30","nodeType":"YulIdentifier","src":"1179:2:30"}],"functionName":{"name":"sstore","nativeSrc":"1165:6:30","nodeType":"YulIdentifier","src":"1165:6:30"},"nativeSrc":"1165:17:30","nodeType":"YulFunctionCall","src":"1165:17:30"},"nativeSrc":"1165:17:30","nodeType":"YulExpressionStatement","src":"1165:17:30"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1113:5:30","nodeType":"YulIdentifier","src":"1113:5:30"},{"name":"_2","nativeSrc":"1120:2:30","nodeType":"YulIdentifier","src":"1120:2:30"}],"functionName":{"name":"lt","nativeSrc":"1110:2:30","nodeType":"YulIdentifier","src":"1110:2:30"},"nativeSrc":"1110:13:30","nodeType":"YulFunctionCall","src":"1110:13:30"},"nativeSrc":"1102:82:30","nodeType":"YulForLoop","post":{"nativeSrc":"1124:26:30","nodeType":"YulBlock","src":"1124:26:30","statements":[{"nativeSrc":"1126:22:30","nodeType":"YulAssignment","src":"1126:22:30","value":{"arguments":[{"name":"start","nativeSrc":"1139:5:30","nodeType":"YulIdentifier","src":"1139:5:30"},{"kind":"number","nativeSrc":"1146:1:30","nodeType":"YulLiteral","src":"1146:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1135:3:30","nodeType":"YulIdentifier","src":"1135:3:30"},"nativeSrc":"1135:13:30","nodeType":"YulFunctionCall","src":"1135:13:30"},"variableNames":[{"name":"start","nativeSrc":"1126:5:30","nodeType":"YulIdentifier","src":"1126:5:30"}]}]},"pre":{"nativeSrc":"1106:3:30","nodeType":"YulBlock","src":"1106:3:30","statements":[]},"src":"1102:82:30"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"754:3:30","nodeType":"YulIdentifier","src":"754:3:30"},{"kind":"number","nativeSrc":"759:2:30","nodeType":"YulLiteral","src":"759:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"751:2:30","nodeType":"YulIdentifier","src":"751:2:30"},"nativeSrc":"751:11:30","nodeType":"YulFunctionCall","src":"751:11:30"},"nativeSrc":"748:446:30","nodeType":"YulIf","src":"748:446:30"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"657:543:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"710:5:30","nodeType":"YulTypedName","src":"710:5:30","type":""},{"name":"len","nativeSrc":"717:3:30","nodeType":"YulTypedName","src":"717:3:30","type":""},{"name":"startIndex","nativeSrc":"722:10:30","nodeType":"YulTypedName","src":"722:10:30","type":""}],"src":"657:543:30"},{"body":{"nativeSrc":"1290:81:30","nodeType":"YulBlock","src":"1290:81:30","statements":[{"nativeSrc":"1300:65:30","nodeType":"YulAssignment","src":"1300:65:30","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1315:4:30","nodeType":"YulIdentifier","src":"1315:4:30"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1333:1:30","nodeType":"YulLiteral","src":"1333:1:30","type":"","value":"3"},{"name":"len","nativeSrc":"1336:3:30","nodeType":"YulIdentifier","src":"1336:3:30"}],"functionName":{"name":"shl","nativeSrc":"1329:3:30","nodeType":"YulIdentifier","src":"1329:3:30"},"nativeSrc":"1329:11:30","nodeType":"YulFunctionCall","src":"1329:11:30"},{"arguments":[{"kind":"number","nativeSrc":"1346:1:30","nodeType":"YulLiteral","src":"1346:1:30","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1342:3:30","nodeType":"YulIdentifier","src":"1342:3:30"},"nativeSrc":"1342:6:30","nodeType":"YulFunctionCall","src":"1342:6:30"}],"functionName":{"name":"shr","nativeSrc":"1325:3:30","nodeType":"YulIdentifier","src":"1325:3:30"},"nativeSrc":"1325:24:30","nodeType":"YulFunctionCall","src":"1325:24:30"}],"functionName":{"name":"not","nativeSrc":"1321:3:30","nodeType":"YulIdentifier","src":"1321:3:30"},"nativeSrc":"1321:29:30","nodeType":"YulFunctionCall","src":"1321:29:30"}],"functionName":{"name":"and","nativeSrc":"1311:3:30","nodeType":"YulIdentifier","src":"1311:3:30"},"nativeSrc":"1311:40:30","nodeType":"YulFunctionCall","src":"1311:40:30"},{"arguments":[{"kind":"number","nativeSrc":"1357:1:30","nodeType":"YulLiteral","src":"1357:1:30","type":"","value":"1"},{"name":"len","nativeSrc":"1360:3:30","nodeType":"YulIdentifier","src":"1360:3:30"}],"functionName":{"name":"shl","nativeSrc":"1353:3:30","nodeType":"YulIdentifier","src":"1353:3:30"},"nativeSrc":"1353:11:30","nodeType":"YulFunctionCall","src":"1353:11:30"}],"functionName":{"name":"or","nativeSrc":"1308:2:30","nodeType":"YulIdentifier","src":"1308:2:30"},"nativeSrc":"1308:57:30","nodeType":"YulFunctionCall","src":"1308:57:30"},"variableNames":[{"name":"used","nativeSrc":"1300:4:30","nodeType":"YulIdentifier","src":"1300:4:30"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1205:166:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1267:4:30","nodeType":"YulTypedName","src":"1267:4:30","type":""},{"name":"len","nativeSrc":"1273:3:30","nodeType":"YulTypedName","src":"1273:3:30","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1281:4:30","nodeType":"YulTypedName","src":"1281:4:30","type":""}],"src":"1205:166:30"},{"body":{"nativeSrc":"1472:1249:30","nodeType":"YulBlock","src":"1472:1249:30","statements":[{"nativeSrc":"1482:24:30","nodeType":"YulVariableDeclaration","src":"1482:24:30","value":{"arguments":[{"name":"src","nativeSrc":"1502:3:30","nodeType":"YulIdentifier","src":"1502:3:30"}],"functionName":{"name":"mload","nativeSrc":"1496:5:30","nodeType":"YulIdentifier","src":"1496:5:30"},"nativeSrc":"1496:10:30","nodeType":"YulFunctionCall","src":"1496:10:30"},"variables":[{"name":"newLen","nativeSrc":"1486:6:30","nodeType":"YulTypedName","src":"1486:6:30","type":""}]},{"body":{"nativeSrc":"1549:22:30","nodeType":"YulBlock","src":"1549:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1551:16:30","nodeType":"YulIdentifier","src":"1551:16:30"},"nativeSrc":"1551:18:30","nodeType":"YulFunctionCall","src":"1551:18:30"},"nativeSrc":"1551:18:30","nodeType":"YulExpressionStatement","src":"1551:18:30"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"1521:6:30","nodeType":"YulIdentifier","src":"1521:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1537:2:30","nodeType":"YulLiteral","src":"1537:2:30","type":"","value":"64"},{"kind":"number","nativeSrc":"1541:1:30","nodeType":"YulLiteral","src":"1541:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1533:3:30","nodeType":"YulIdentifier","src":"1533:3:30"},"nativeSrc":"1533:10:30","nodeType":"YulFunctionCall","src":"1533:10:30"},{"kind":"number","nativeSrc":"1545:1:30","nodeType":"YulLiteral","src":"1545:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1529:3:30","nodeType":"YulIdentifier","src":"1529:3:30"},"nativeSrc":"1529:18:30","nodeType":"YulFunctionCall","src":"1529:18:30"}],"functionName":{"name":"gt","nativeSrc":"1518:2:30","nodeType":"YulIdentifier","src":"1518:2:30"},"nativeSrc":"1518:30:30","nodeType":"YulFunctionCall","src":"1518:30:30"},"nativeSrc":"1515:56:30","nodeType":"YulIf","src":"1515:56:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"1624:4:30","nodeType":"YulIdentifier","src":"1624:4:30"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"1662:4:30","nodeType":"YulIdentifier","src":"1662:4:30"}],"functionName":{"name":"sload","nativeSrc":"1656:5:30","nodeType":"YulIdentifier","src":"1656:5:30"},"nativeSrc":"1656:11:30","nodeType":"YulFunctionCall","src":"1656:11:30"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"1630:25:30","nodeType":"YulIdentifier","src":"1630:25:30"},"nativeSrc":"1630:38:30","nodeType":"YulFunctionCall","src":"1630:38:30"},{"name":"newLen","nativeSrc":"1670:6:30","nodeType":"YulIdentifier","src":"1670:6:30"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1580:43:30","nodeType":"YulIdentifier","src":"1580:43:30"},"nativeSrc":"1580:97:30","nodeType":"YulFunctionCall","src":"1580:97:30"},"nativeSrc":"1580:97:30","nodeType":"YulExpressionStatement","src":"1580:97:30"},{"nativeSrc":"1686:18:30","nodeType":"YulVariableDeclaration","src":"1686:18:30","value":{"kind":"number","nativeSrc":"1703:1:30","nodeType":"YulLiteral","src":"1703:1:30","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"1690:9:30","nodeType":"YulTypedName","src":"1690:9:30","type":""}]},{"nativeSrc":"1713:23:30","nodeType":"YulVariableDeclaration","src":"1713:23:30","value":{"kind":"number","nativeSrc":"1732:4:30","nodeType":"YulLiteral","src":"1732:4:30","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"1717:11:30","nodeType":"YulTypedName","src":"1717:11:30","type":""}]},{"nativeSrc":"1745:17:30","nodeType":"YulAssignment","src":"1745:17:30","value":{"kind":"number","nativeSrc":"1758:4:30","nodeType":"YulLiteral","src":"1758:4:30","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"1745:9:30","nodeType":"YulIdentifier","src":"1745:9:30"}]},{"cases":[{"body":{"nativeSrc":"1808:656:30","nodeType":"YulBlock","src":"1808:656:30","statements":[{"nativeSrc":"1822:35:30","nodeType":"YulVariableDeclaration","src":"1822:35:30","value":{"arguments":[{"name":"newLen","nativeSrc":"1841:6:30","nodeType":"YulIdentifier","src":"1841:6:30"},{"arguments":[{"kind":"number","nativeSrc":"1853:2:30","nodeType":"YulLiteral","src":"1853:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1849:3:30","nodeType":"YulIdentifier","src":"1849:3:30"},"nativeSrc":"1849:7:30","nodeType":"YulFunctionCall","src":"1849:7:30"}],"functionName":{"name":"and","nativeSrc":"1837:3:30","nodeType":"YulIdentifier","src":"1837:3:30"},"nativeSrc":"1837:20:30","nodeType":"YulFunctionCall","src":"1837:20:30"},"variables":[{"name":"loopEnd","nativeSrc":"1826:7:30","nodeType":"YulTypedName","src":"1826:7:30","type":""}]},{"nativeSrc":"1870:49:30","nodeType":"YulVariableDeclaration","src":"1870:49:30","value":{"arguments":[{"name":"slot","nativeSrc":"1914:4:30","nodeType":"YulIdentifier","src":"1914:4:30"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"1884:29:30","nodeType":"YulIdentifier","src":"1884:29:30"},"nativeSrc":"1884:35:30","nodeType":"YulFunctionCall","src":"1884:35:30"},"variables":[{"name":"dstPtr","nativeSrc":"1874:6:30","nodeType":"YulTypedName","src":"1874:6:30","type":""}]},{"nativeSrc":"1932:10:30","nodeType":"YulVariableDeclaration","src":"1932:10:30","value":{"kind":"number","nativeSrc":"1941:1:30","nodeType":"YulLiteral","src":"1941:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1936:1:30","nodeType":"YulTypedName","src":"1936:1:30","type":""}]},{"body":{"nativeSrc":"2019:172:30","nodeType":"YulBlock","src":"2019:172:30","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2044:6:30","nodeType":"YulIdentifier","src":"2044:6:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2062:3:30","nodeType":"YulIdentifier","src":"2062:3:30"},{"name":"srcOffset","nativeSrc":"2067:9:30","nodeType":"YulIdentifier","src":"2067:9:30"}],"functionName":{"name":"add","nativeSrc":"2058:3:30","nodeType":"YulIdentifier","src":"2058:3:30"},"nativeSrc":"2058:19:30","nodeType":"YulFunctionCall","src":"2058:19:30"}],"functionName":{"name":"mload","nativeSrc":"2052:5:30","nodeType":"YulIdentifier","src":"2052:5:30"},"nativeSrc":"2052:26:30","nodeType":"YulFunctionCall","src":"2052:26:30"}],"functionName":{"name":"sstore","nativeSrc":"2037:6:30","nodeType":"YulIdentifier","src":"2037:6:30"},"nativeSrc":"2037:42:30","nodeType":"YulFunctionCall","src":"2037:42:30"},"nativeSrc":"2037:42:30","nodeType":"YulExpressionStatement","src":"2037:42:30"},{"nativeSrc":"2096:24:30","nodeType":"YulAssignment","src":"2096:24:30","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2110:6:30","nodeType":"YulIdentifier","src":"2110:6:30"},{"kind":"number","nativeSrc":"2118:1:30","nodeType":"YulLiteral","src":"2118:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2106:3:30","nodeType":"YulIdentifier","src":"2106:3:30"},"nativeSrc":"2106:14:30","nodeType":"YulFunctionCall","src":"2106:14:30"},"variableNames":[{"name":"dstPtr","nativeSrc":"2096:6:30","nodeType":"YulIdentifier","src":"2096:6:30"}]},{"nativeSrc":"2137:40:30","nodeType":"YulAssignment","src":"2137:40:30","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2154:9:30","nodeType":"YulIdentifier","src":"2154:9:30"},{"name":"srcOffset_1","nativeSrc":"2165:11:30","nodeType":"YulIdentifier","src":"2165:11:30"}],"functionName":{"name":"add","nativeSrc":"2150:3:30","nodeType":"YulIdentifier","src":"2150:3:30"},"nativeSrc":"2150:27:30","nodeType":"YulFunctionCall","src":"2150:27:30"},"variableNames":[{"name":"srcOffset","nativeSrc":"2137:9:30","nodeType":"YulIdentifier","src":"2137:9:30"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1966:1:30","nodeType":"YulIdentifier","src":"1966:1:30"},{"name":"loopEnd","nativeSrc":"1969:7:30","nodeType":"YulIdentifier","src":"1969:7:30"}],"functionName":{"name":"lt","nativeSrc":"1963:2:30","nodeType":"YulIdentifier","src":"1963:2:30"},"nativeSrc":"1963:14:30","nodeType":"YulFunctionCall","src":"1963:14:30"},"nativeSrc":"1955:236:30","nodeType":"YulForLoop","post":{"nativeSrc":"1978:28:30","nodeType":"YulBlock","src":"1978:28:30","statements":[{"nativeSrc":"1980:24:30","nodeType":"YulAssignment","src":"1980:24:30","value":{"arguments":[{"name":"i","nativeSrc":"1989:1:30","nodeType":"YulIdentifier","src":"1989:1:30"},{"name":"srcOffset_1","nativeSrc":"1992:11:30","nodeType":"YulIdentifier","src":"1992:11:30"}],"functionName":{"name":"add","nativeSrc":"1985:3:30","nodeType":"YulIdentifier","src":"1985:3:30"},"nativeSrc":"1985:19:30","nodeType":"YulFunctionCall","src":"1985:19:30"},"variableNames":[{"name":"i","nativeSrc":"1980:1:30","nodeType":"YulIdentifier","src":"1980:1:30"}]}]},"pre":{"nativeSrc":"1959:3:30","nodeType":"YulBlock","src":"1959:3:30","statements":[]},"src":"1955:236:30"},{"body":{"nativeSrc":"2239:166:30","nodeType":"YulBlock","src":"2239:166:30","statements":[{"nativeSrc":"2257:43:30","nodeType":"YulVariableDeclaration","src":"2257:43:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2284:3:30","nodeType":"YulIdentifier","src":"2284:3:30"},{"name":"srcOffset","nativeSrc":"2289:9:30","nodeType":"YulIdentifier","src":"2289:9:30"}],"functionName":{"name":"add","nativeSrc":"2280:3:30","nodeType":"YulIdentifier","src":"2280:3:30"},"nativeSrc":"2280:19:30","nodeType":"YulFunctionCall","src":"2280:19:30"}],"functionName":{"name":"mload","nativeSrc":"2274:5:30","nodeType":"YulIdentifier","src":"2274:5:30"},"nativeSrc":"2274:26:30","nodeType":"YulFunctionCall","src":"2274:26:30"},"variables":[{"name":"lastValue","nativeSrc":"2261:9:30","nodeType":"YulTypedName","src":"2261:9:30","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2324:6:30","nodeType":"YulIdentifier","src":"2324:6:30"},{"arguments":[{"name":"lastValue","nativeSrc":"2336:9:30","nodeType":"YulIdentifier","src":"2336:9:30"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2363:1:30","nodeType":"YulLiteral","src":"2363:1:30","type":"","value":"3"},{"name":"newLen","nativeSrc":"2366:6:30","nodeType":"YulIdentifier","src":"2366:6:30"}],"functionName":{"name":"shl","nativeSrc":"2359:3:30","nodeType":"YulIdentifier","src":"2359:3:30"},"nativeSrc":"2359:14:30","nodeType":"YulFunctionCall","src":"2359:14:30"},{"kind":"number","nativeSrc":"2375:3:30","nodeType":"YulLiteral","src":"2375:3:30","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2355:3:30","nodeType":"YulIdentifier","src":"2355:3:30"},"nativeSrc":"2355:24:30","nodeType":"YulFunctionCall","src":"2355:24:30"},{"arguments":[{"kind":"number","nativeSrc":"2385:1:30","nodeType":"YulLiteral","src":"2385:1:30","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2381:3:30","nodeType":"YulIdentifier","src":"2381:3:30"},"nativeSrc":"2381:6:30","nodeType":"YulFunctionCall","src":"2381:6:30"}],"functionName":{"name":"shr","nativeSrc":"2351:3:30","nodeType":"YulIdentifier","src":"2351:3:30"},"nativeSrc":"2351:37:30","nodeType":"YulFunctionCall","src":"2351:37:30"}],"functionName":{"name":"not","nativeSrc":"2347:3:30","nodeType":"YulIdentifier","src":"2347:3:30"},"nativeSrc":"2347:42:30","nodeType":"YulFunctionCall","src":"2347:42:30"}],"functionName":{"name":"and","nativeSrc":"2332:3:30","nodeType":"YulIdentifier","src":"2332:3:30"},"nativeSrc":"2332:58:30","nodeType":"YulFunctionCall","src":"2332:58:30"}],"functionName":{"name":"sstore","nativeSrc":"2317:6:30","nodeType":"YulIdentifier","src":"2317:6:30"},"nativeSrc":"2317:74:30","nodeType":"YulFunctionCall","src":"2317:74:30"},"nativeSrc":"2317:74:30","nodeType":"YulExpressionStatement","src":"2317:74:30"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2210:7:30","nodeType":"YulIdentifier","src":"2210:7:30"},{"name":"newLen","nativeSrc":"2219:6:30","nodeType":"YulIdentifier","src":"2219:6:30"}],"functionName":{"name":"lt","nativeSrc":"2207:2:30","nodeType":"YulIdentifier","src":"2207:2:30"},"nativeSrc":"2207:19:30","nodeType":"YulFunctionCall","src":"2207:19:30"},"nativeSrc":"2204:201:30","nodeType":"YulIf","src":"2204:201:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2425:4:30","nodeType":"YulIdentifier","src":"2425:4:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2439:1:30","nodeType":"YulLiteral","src":"2439:1:30","type":"","value":"1"},{"name":"newLen","nativeSrc":"2442:6:30","nodeType":"YulIdentifier","src":"2442:6:30"}],"functionName":{"name":"shl","nativeSrc":"2435:3:30","nodeType":"YulIdentifier","src":"2435:3:30"},"nativeSrc":"2435:14:30","nodeType":"YulFunctionCall","src":"2435:14:30"},{"kind":"number","nativeSrc":"2451:1:30","nodeType":"YulLiteral","src":"2451:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2431:3:30","nodeType":"YulIdentifier","src":"2431:3:30"},"nativeSrc":"2431:22:30","nodeType":"YulFunctionCall","src":"2431:22:30"}],"functionName":{"name":"sstore","nativeSrc":"2418:6:30","nodeType":"YulIdentifier","src":"2418:6:30"},"nativeSrc":"2418:36:30","nodeType":"YulFunctionCall","src":"2418:36:30"},"nativeSrc":"2418:36:30","nodeType":"YulExpressionStatement","src":"2418:36:30"}]},"nativeSrc":"1801:663:30","nodeType":"YulCase","src":"1801:663:30","value":{"kind":"number","nativeSrc":"1806:1:30","nodeType":"YulLiteral","src":"1806:1:30","type":"","value":"1"}},{"body":{"nativeSrc":"2481:234:30","nodeType":"YulBlock","src":"2481:234:30","statements":[{"nativeSrc":"2495:14:30","nodeType":"YulVariableDeclaration","src":"2495:14:30","value":{"kind":"number","nativeSrc":"2508:1:30","nodeType":"YulLiteral","src":"2508:1:30","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2499:5:30","nodeType":"YulTypedName","src":"2499:5:30","type":""}]},{"body":{"nativeSrc":"2544:67:30","nodeType":"YulBlock","src":"2544:67:30","statements":[{"nativeSrc":"2562:35:30","nodeType":"YulAssignment","src":"2562:35:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2581:3:30","nodeType":"YulIdentifier","src":"2581:3:30"},{"name":"srcOffset","nativeSrc":"2586:9:30","nodeType":"YulIdentifier","src":"2586:9:30"}],"functionName":{"name":"add","nativeSrc":"2577:3:30","nodeType":"YulIdentifier","src":"2577:3:30"},"nativeSrc":"2577:19:30","nodeType":"YulFunctionCall","src":"2577:19:30"}],"functionName":{"name":"mload","nativeSrc":"2571:5:30","nodeType":"YulIdentifier","src":"2571:5:30"},"nativeSrc":"2571:26:30","nodeType":"YulFunctionCall","src":"2571:26:30"},"variableNames":[{"name":"value","nativeSrc":"2562:5:30","nodeType":"YulIdentifier","src":"2562:5:30"}]}]},"condition":{"name":"newLen","nativeSrc":"2525:6:30","nodeType":"YulIdentifier","src":"2525:6:30"},"nativeSrc":"2522:89:30","nodeType":"YulIf","src":"2522:89:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2631:4:30","nodeType":"YulIdentifier","src":"2631:4:30"},{"arguments":[{"name":"value","nativeSrc":"2690:5:30","nodeType":"YulIdentifier","src":"2690:5:30"},{"name":"newLen","nativeSrc":"2697:6:30","nodeType":"YulIdentifier","src":"2697:6:30"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2637:52:30","nodeType":"YulIdentifier","src":"2637:52:30"},"nativeSrc":"2637:67:30","nodeType":"YulFunctionCall","src":"2637:67:30"}],"functionName":{"name":"sstore","nativeSrc":"2624:6:30","nodeType":"YulIdentifier","src":"2624:6:30"},"nativeSrc":"2624:81:30","nodeType":"YulFunctionCall","src":"2624:81:30"},"nativeSrc":"2624:81:30","nodeType":"YulExpressionStatement","src":"2624:81:30"}]},"nativeSrc":"2473:242:30","nodeType":"YulCase","src":"2473:242:30","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"1781:6:30","nodeType":"YulIdentifier","src":"1781:6:30"},{"kind":"number","nativeSrc":"1789:2:30","nodeType":"YulLiteral","src":"1789:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1778:2:30","nodeType":"YulIdentifier","src":"1778:2:30"},"nativeSrc":"1778:14:30","nodeType":"YulFunctionCall","src":"1778:14:30"},"nativeSrc":"1771:944:30","nodeType":"YulSwitch","src":"1771:944:30"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1376:1345:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1457:4:30","nodeType":"YulTypedName","src":"1457:4:30","type":""},{"name":"src","nativeSrc":"1463:3:30","nodeType":"YulTypedName","src":"1463:3:30","type":""}],"src":"1376:1345:30"},{"body":{"nativeSrc":"2827:102:30","nodeType":"YulBlock","src":"2827:102:30","statements":[{"nativeSrc":"2837:26:30","nodeType":"YulAssignment","src":"2837:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2849:9:30","nodeType":"YulIdentifier","src":"2849:9:30"},{"kind":"number","nativeSrc":"2860:2:30","nodeType":"YulLiteral","src":"2860:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2845:3:30","nodeType":"YulIdentifier","src":"2845:3:30"},"nativeSrc":"2845:18:30","nodeType":"YulFunctionCall","src":"2845:18:30"},"variableNames":[{"name":"tail","nativeSrc":"2837:4:30","nodeType":"YulIdentifier","src":"2837:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2879:9:30","nodeType":"YulIdentifier","src":"2879:9:30"},{"arguments":[{"name":"value0","nativeSrc":"2894:6:30","nodeType":"YulIdentifier","src":"2894:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2910:3:30","nodeType":"YulLiteral","src":"2910:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"2915:1:30","nodeType":"YulLiteral","src":"2915:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2906:3:30","nodeType":"YulIdentifier","src":"2906:3:30"},"nativeSrc":"2906:11:30","nodeType":"YulFunctionCall","src":"2906:11:30"},{"kind":"number","nativeSrc":"2919:1:30","nodeType":"YulLiteral","src":"2919:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2902:3:30","nodeType":"YulIdentifier","src":"2902:3:30"},"nativeSrc":"2902:19:30","nodeType":"YulFunctionCall","src":"2902:19:30"}],"functionName":{"name":"and","nativeSrc":"2890:3:30","nodeType":"YulIdentifier","src":"2890:3:30"},"nativeSrc":"2890:32:30","nodeType":"YulFunctionCall","src":"2890:32:30"}],"functionName":{"name":"mstore","nativeSrc":"2872:6:30","nodeType":"YulIdentifier","src":"2872:6:30"},"nativeSrc":"2872:51:30","nodeType":"YulFunctionCall","src":"2872:51:30"},"nativeSrc":"2872:51:30","nodeType":"YulExpressionStatement","src":"2872:51:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2726:203:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2796:9:30","nodeType":"YulTypedName","src":"2796:9:30","type":""},{"name":"value0","nativeSrc":"2807:6:30","nodeType":"YulTypedName","src":"2807:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2818:4:30","nodeType":"YulTypedName","src":"2818:4:30","type":""}],"src":"2726:203:30"},{"body":{"nativeSrc":"2982:174:30","nodeType":"YulBlock","src":"2982:174:30","statements":[{"nativeSrc":"2992:16:30","nodeType":"YulAssignment","src":"2992:16:30","value":{"arguments":[{"name":"x","nativeSrc":"3003:1:30","nodeType":"YulIdentifier","src":"3003:1:30"},{"name":"y","nativeSrc":"3006:1:30","nodeType":"YulIdentifier","src":"3006:1:30"}],"functionName":{"name":"add","nativeSrc":"2999:3:30","nodeType":"YulIdentifier","src":"2999:3:30"},"nativeSrc":"2999:9:30","nodeType":"YulFunctionCall","src":"2999:9:30"},"variableNames":[{"name":"sum","nativeSrc":"2992:3:30","nodeType":"YulIdentifier","src":"2992:3:30"}]},{"body":{"nativeSrc":"3039:111:30","nodeType":"YulBlock","src":"3039:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3060:1:30","nodeType":"YulLiteral","src":"3060:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3067:3:30","nodeType":"YulLiteral","src":"3067:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"3072:10:30","nodeType":"YulLiteral","src":"3072:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3063:3:30","nodeType":"YulIdentifier","src":"3063:3:30"},"nativeSrc":"3063:20:30","nodeType":"YulFunctionCall","src":"3063:20:30"}],"functionName":{"name":"mstore","nativeSrc":"3053:6:30","nodeType":"YulIdentifier","src":"3053:6:30"},"nativeSrc":"3053:31:30","nodeType":"YulFunctionCall","src":"3053:31:30"},"nativeSrc":"3053:31:30","nodeType":"YulExpressionStatement","src":"3053:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3104:1:30","nodeType":"YulLiteral","src":"3104:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"3107:4:30","nodeType":"YulLiteral","src":"3107:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3097:6:30","nodeType":"YulIdentifier","src":"3097:6:30"},"nativeSrc":"3097:15:30","nodeType":"YulFunctionCall","src":"3097:15:30"},"nativeSrc":"3097:15:30","nodeType":"YulExpressionStatement","src":"3097:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3132:1:30","nodeType":"YulLiteral","src":"3132:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3135:4:30","nodeType":"YulLiteral","src":"3135:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3125:6:30","nodeType":"YulIdentifier","src":"3125:6:30"},"nativeSrc":"3125:15:30","nodeType":"YulFunctionCall","src":"3125:15:30"},"nativeSrc":"3125:15:30","nodeType":"YulExpressionStatement","src":"3125:15:30"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"3023:1:30","nodeType":"YulIdentifier","src":"3023:1:30"},{"name":"sum","nativeSrc":"3026:3:30","nodeType":"YulIdentifier","src":"3026:3:30"}],"functionName":{"name":"gt","nativeSrc":"3020:2:30","nodeType":"YulIdentifier","src":"3020:2:30"},"nativeSrc":"3020:10:30","nodeType":"YulFunctionCall","src":"3020:10:30"},"nativeSrc":"3017:133:30","nodeType":"YulIf","src":"3017:133:30"}]},"name":"checked_add_t_uint256","nativeSrc":"2934:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"2965:1:30","nodeType":"YulTypedName","src":"2965:1:30","type":""},{"name":"y","nativeSrc":"2968:1:30","nodeType":"YulTypedName","src":"2968:1:30","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"2974:3:30","nodeType":"YulTypedName","src":"2974:3:30","type":""}],"src":"2934:222:30"},{"body":{"nativeSrc":"3318:188:30","nodeType":"YulBlock","src":"3318:188:30","statements":[{"nativeSrc":"3328:26:30","nodeType":"YulAssignment","src":"3328:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3340:9:30","nodeType":"YulIdentifier","src":"3340:9:30"},{"kind":"number","nativeSrc":"3351:2:30","nodeType":"YulLiteral","src":"3351:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3336:3:30","nodeType":"YulIdentifier","src":"3336:3:30"},"nativeSrc":"3336:18:30","nodeType":"YulFunctionCall","src":"3336:18:30"},"variableNames":[{"name":"tail","nativeSrc":"3328:4:30","nodeType":"YulIdentifier","src":"3328:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3370:9:30","nodeType":"YulIdentifier","src":"3370:9:30"},{"arguments":[{"name":"value0","nativeSrc":"3385:6:30","nodeType":"YulIdentifier","src":"3385:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3401:3:30","nodeType":"YulLiteral","src":"3401:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"3406:1:30","nodeType":"YulLiteral","src":"3406:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3397:3:30","nodeType":"YulIdentifier","src":"3397:3:30"},"nativeSrc":"3397:11:30","nodeType":"YulFunctionCall","src":"3397:11:30"},{"kind":"number","nativeSrc":"3410:1:30","nodeType":"YulLiteral","src":"3410:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3393:3:30","nodeType":"YulIdentifier","src":"3393:3:30"},"nativeSrc":"3393:19:30","nodeType":"YulFunctionCall","src":"3393:19:30"}],"functionName":{"name":"and","nativeSrc":"3381:3:30","nodeType":"YulIdentifier","src":"3381:3:30"},"nativeSrc":"3381:32:30","nodeType":"YulFunctionCall","src":"3381:32:30"}],"functionName":{"name":"mstore","nativeSrc":"3363:6:30","nodeType":"YulIdentifier","src":"3363:6:30"},"nativeSrc":"3363:51:30","nodeType":"YulFunctionCall","src":"3363:51:30"},"nativeSrc":"3363:51:30","nodeType":"YulExpressionStatement","src":"3363:51:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3434:9:30","nodeType":"YulIdentifier","src":"3434:9:30"},{"kind":"number","nativeSrc":"3445:2:30","nodeType":"YulLiteral","src":"3445:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3430:3:30","nodeType":"YulIdentifier","src":"3430:3:30"},"nativeSrc":"3430:18:30","nodeType":"YulFunctionCall","src":"3430:18:30"},{"name":"value1","nativeSrc":"3450:6:30","nodeType":"YulIdentifier","src":"3450:6:30"}],"functionName":{"name":"mstore","nativeSrc":"3423:6:30","nodeType":"YulIdentifier","src":"3423:6:30"},"nativeSrc":"3423:34:30","nodeType":"YulFunctionCall","src":"3423:34:30"},"nativeSrc":"3423:34:30","nodeType":"YulExpressionStatement","src":"3423:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3477:9:30","nodeType":"YulIdentifier","src":"3477:9:30"},{"kind":"number","nativeSrc":"3488:2:30","nodeType":"YulLiteral","src":"3488:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3473:3:30","nodeType":"YulIdentifier","src":"3473:3:30"},"nativeSrc":"3473:18:30","nodeType":"YulFunctionCall","src":"3473:18:30"},{"name":"value2","nativeSrc":"3493:6:30","nodeType":"YulIdentifier","src":"3493:6:30"}],"functionName":{"name":"mstore","nativeSrc":"3466:6:30","nodeType":"YulIdentifier","src":"3466:6:30"},"nativeSrc":"3466:34:30","nodeType":"YulFunctionCall","src":"3466:34:30"},"nativeSrc":"3466:34:30","nodeType":"YulExpressionStatement","src":"3466:34:30"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"3161:345:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3271:9:30","nodeType":"YulTypedName","src":"3271:9:30","type":""},{"name":"value2","nativeSrc":"3282:6:30","nodeType":"YulTypedName","src":"3282:6:30","type":""},{"name":"value1","nativeSrc":"3290:6:30","nodeType":"YulTypedName","src":"3290:6:30","type":""},{"name":"value0","nativeSrc":"3298:6:30","nodeType":"YulTypedName","src":"3298:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3309:4:30","nodeType":"YulTypedName","src":"3309:4:30","type":""}],"src":"3161:345:30"},{"body":{"nativeSrc":"3612:76:30","nodeType":"YulBlock","src":"3612:76:30","statements":[{"nativeSrc":"3622:26:30","nodeType":"YulAssignment","src":"3622:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3634:9:30","nodeType":"YulIdentifier","src":"3634:9:30"},{"kind":"number","nativeSrc":"3645:2:30","nodeType":"YulLiteral","src":"3645:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3630:3:30","nodeType":"YulIdentifier","src":"3630:3:30"},"nativeSrc":"3630:18:30","nodeType":"YulFunctionCall","src":"3630:18:30"},"variableNames":[{"name":"tail","nativeSrc":"3622:4:30","nodeType":"YulIdentifier","src":"3622:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3664:9:30","nodeType":"YulIdentifier","src":"3664:9:30"},{"name":"value0","nativeSrc":"3675:6:30","nodeType":"YulIdentifier","src":"3675:6:30"}],"functionName":{"name":"mstore","nativeSrc":"3657:6:30","nodeType":"YulIdentifier","src":"3657:6:30"},"nativeSrc":"3657:25:30","nodeType":"YulFunctionCall","src":"3657:25:30"},"nativeSrc":"3657:25:30","nodeType":"YulExpressionStatement","src":"3657:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3511:177:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3581:9:30","nodeType":"YulTypedName","src":"3581:9:30","type":""},{"name":"value0","nativeSrc":"3592:6:30","nodeType":"YulTypedName","src":"3592:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3603:4:30","nodeType":"YulTypedName","src":"3603:4:30","type":""}],"src":"3511:177:30"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051806040016040528060088152602001672931b1aa37b5b2b760c11b8152506040518060400160405280600381526020016252434360e81b8152508160039081620000609190620002b1565b5060046200006f8282620002b1565b5050506200008f336a084595161401484a0000006200009560201b60201c565b620003a5565b6001600160a01b038216620000c55760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000d360008383620000d7565b5050565b6001600160a01b03831662000106578060026000828254620000fa91906200037d565b909155506200017a9050565b6001600160a01b038316600090815260208190526040902054818110156200015b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000bc565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200019857600280548290039055620001b7565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001fd91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023557607f821691505b6020821081036200025657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ac576000816000526020600020601f850160051c81016020861015620002875750805b601f850160051c820191505b81811015620002a85782815560010162000293565b5050505b505050565b81516001600160401b03811115620002cd57620002cd6200020a565b620002e581620002de845462000220565b846200025c565b602080601f8311600181146200031d5760008415620003045750858301515b600019600386901b1c1916600185901b178555620002a8565b600085815260208120601f198616915b828110156200034e578886015182559484019460019091019084016200032d565b50858210156200036d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200039f57634e487b7160e01b600052601160045260246000fd5b92915050565b61072280620003b56000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146100fe57806370a082311461010d57806395d89b4114610136578063a9059cbb1461013e578063dd62ed3e1461015157600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100eb575b600080fd5b6100a061018a565b6040516100ad919061056b565b60405180910390f35b6100c96100c43660046105d6565b61021c565b60405190151581526020016100ad565b6002545b6040519081526020016100ad565b6100c96100f9366004610600565b610236565b604051601281526020016100ad565b6100dd61011b36600461063c565b6001600160a01b031660009081526020819052604090205490565b6100a061025a565b6100c961014c3660046105d6565b610269565b6100dd61015f36600461065e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461019990610691565b80601f01602080910402602001604051908101604052809291908181526020018280546101c590610691565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b60003361022a818585610277565b60019150505b92915050565b600033610244858285610289565b61024f85858561030d565b506001949350505050565b60606004805461019990610691565b60003361022a81858561030d565b610284838383600161036c565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561030757818110156102f857604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103078484848403600061036c565b50505050565b6001600160a01b03831661033757604051634b637e8f60e11b8152600060048201526024016102ef565b6001600160a01b0382166103615760405163ec442f0560e01b8152600060048201526024016102ef565b610284838383610441565b6001600160a01b0384166103965760405163e602df0560e01b8152600060048201526024016102ef565b6001600160a01b0383166103c057604051634a1406b160e11b8152600060048201526024016102ef565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561030757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161043391815260200190565b60405180910390a350505050565b6001600160a01b03831661046c57806002600082825461046191906106cb565b909155506104de9050565b6001600160a01b038316600090815260208190526040902054818110156104bf5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102ef565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166104fa57600280548290039055610519565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161055e91815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b818110156105995785810183015185820160400152820161057d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105d157600080fd5b919050565b600080604083850312156105e957600080fd5b6105f2836105ba565b946020939093013593505050565b60008060006060848603121561061557600080fd5b61061e846105ba565b925061062c602085016105ba565b9150604084013590509250925092565b60006020828403121561064e57600080fd5b610657826105ba565b9392505050565b6000806040838503121561067157600080fd5b61067a836105ba565b9150610688602084016105ba565b90509250929050565b600181811c908216806106a557607f821691505b6020821081036106c557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561023057634e487b7160e01b600052601160045260246000fdfea2646970667358221220958d3f1dd1f6f0c07fa2daddd4f3d895e514b5838da6d8ea2a797e781eb09b1564736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x2931B1AA37B5B2B7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x524343 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x60 SWAP2 SWAP1 PUSH3 0x2B1 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x6F DUP3 DUP3 PUSH3 0x2B1 JUMP JUMPDEST POP POP POP PUSH3 0x8F CALLER PUSH11 0x84595161401484A000000 PUSH3 0x95 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xC5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xD3 PUSH1 0x0 DUP4 DUP4 PUSH3 0xD7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x106 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xFA SWAP2 SWAP1 PUSH3 0x37D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x17A SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x15B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x198 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x1B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x1FD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x235 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x256 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2AC JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x287 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2A8 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x293 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2CD JUMPI PUSH3 0x2CD PUSH3 0x20A JUMP JUMPDEST PUSH3 0x2E5 DUP2 PUSH3 0x2DE DUP5 SLOAD PUSH3 0x220 JUMP JUMPDEST DUP5 PUSH3 0x25C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x31D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x304 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2A8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x34E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x32D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x36D JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x39F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x722 DUP1 PUSH3 0x3B5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x600 JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xDD PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x25A JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x691 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x691 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x212 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x244 DUP6 DUP3 DUP6 PUSH2 0x289 JUMP JUMPDEST PUSH2 0x24F DUP6 DUP6 DUP6 PUSH2 0x30D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x307 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x307 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x36C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x307 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x46C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x6CB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4DE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4FA JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x519 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x55E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x599 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x57D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F2 DUP4 PUSH2 0x5BA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61E DUP5 PUSH2 0x5BA JUMP JUMPDEST SWAP3 POP PUSH2 0x62C PUSH1 0x20 DUP6 ADD PUSH2 0x5BA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x657 DUP3 PUSH2 0x5BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67A DUP4 PUSH2 0x5BA JUMP JUMPDEST SWAP2 POP PUSH2 0x688 PUSH1 0x20 DUP5 ADD PUSH2 0x5BA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6A5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6C5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x230 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 DUP14 EXTCODEHASH SAR 0xD1 0xF6 CREATE 0xC0 PUSH32 0xA2DADDD4F3D895E514B5838DA6D8EA2A797E781EB09B1564736F6C6343000816 STOP CALLER ","sourceMap":"115:214:29:-:0;;;148:179;;;;;;;;;;1601:113:15;;;;;;;;;;;;;-1:-1:-1;;;1601:113:15;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:15;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:15;:17;1700:7;1690;:17;:::i;:::-;;1601:113;;258:55:29::1;264:10;276:36;258:5;;;:55;;:::i;:::-;115:214:::0;;7458:208:15;-1:-1:-1;;;;;7528:21:15;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:15;;7601:1;7572:32;;;2872:51:30;2845:18;;7572:32:15;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:15;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:15;;-1:-1:-1;6093:540:15;;-1:-1:-1;;;;;6307:15:15;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:15;;-1:-1:-1;;;;;3381:32:30;;6386:50:15;;;3363:51:30;3430:18;;;3423:34;;;3473:18;;;3466:34;;;3336:18;;6386:50:15;3161:345:30;6336:115:15;-1:-1:-1;;;;;6571:15:15;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:15;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:15;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:15;7092:4;-1:-1:-1;;;;;7083:25:15;;7102:5;7083:25;;;;3657::30;;3645:2;3630:18;;3511:177;7083:25:15;;;;;;;;6008:1107;;;:::o;14:127:30:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:30;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;748:446;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:30;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:30;;;2571:26;2522:89;-1:-1:-1;;1333:1:30;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:30;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:30;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:30;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:30:o;2934:222::-;2999:9;;;3020:10;;;3017:133;;;3072:10;3067:3;3063:20;3060:1;3053:31;3107:4;3104:1;3097:15;3135:4;3132:1;3125:15;3017:133;2934:222;;;;:::o;3511:177::-;115:214:29;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_2111":{"entryPoint":631,"id":2111,"parameterSlots":3,"returnSlots":0},"@_approve_2171":{"entryPoint":876,"id":2171,"parameterSlots":4,"returnSlots":0},"@_msgSender_3005":{"entryPoint":null,"id":3005,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2219":{"entryPoint":649,"id":2219,"parameterSlots":3,"returnSlots":0},"@_transfer_1950":{"entryPoint":781,"id":1950,"parameterSlots":3,"returnSlots":0},"@_update_2027":{"entryPoint":1089,"id":2027,"parameterSlots":3,"returnSlots":0},"@allowance_1847":{"entryPoint":null,"id":1847,"parameterSlots":2,"returnSlots":1},"@approve_1871":{"entryPoint":540,"id":1871,"parameterSlots":2,"returnSlots":1},"@balanceOf_1806":{"entryPoint":null,"id":1806,"parameterSlots":1,"returnSlots":1},"@decimals_1784":{"entryPoint":null,"id":1784,"parameterSlots":0,"returnSlots":1},"@name_1766":{"entryPoint":394,"id":1766,"parameterSlots":0,"returnSlots":1},"@symbol_1775":{"entryPoint":602,"id":1775,"parameterSlots":0,"returnSlots":1},"@totalSupply_1793":{"entryPoint":null,"id":1793,"parameterSlots":0,"returnSlots":1},"@transferFrom_1903":{"entryPoint":566,"id":1903,"parameterSlots":3,"returnSlots":1},"@transfer_1830":{"entryPoint":617,"id":1830,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1466,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1596,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1630,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1536,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1494,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1739,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1681,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:3523:30","nodeType":"YulBlock","src":"0:3523:30","statements":[{"nativeSrc":"6:3:30","nodeType":"YulBlock","src":"6:3:30","statements":[]},{"body":{"nativeSrc":"135:427:30","nodeType":"YulBlock","src":"135:427:30","statements":[{"nativeSrc":"145:12:30","nodeType":"YulVariableDeclaration","src":"145:12:30","value":{"kind":"number","nativeSrc":"155:2:30","nodeType":"YulLiteral","src":"155:2:30","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"149:2:30","nodeType":"YulTypedName","src":"149:2:30","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"173:9:30","nodeType":"YulIdentifier","src":"173:9:30"},{"kind":"number","nativeSrc":"184:2:30","nodeType":"YulLiteral","src":"184:2:30","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"166:6:30","nodeType":"YulIdentifier","src":"166:6:30"},"nativeSrc":"166:21:30","nodeType":"YulFunctionCall","src":"166:21:30"},"nativeSrc":"166:21:30","nodeType":"YulExpressionStatement","src":"166:21:30"},{"nativeSrc":"196:27:30","nodeType":"YulVariableDeclaration","src":"196:27:30","value":{"arguments":[{"name":"value0","nativeSrc":"216:6:30","nodeType":"YulIdentifier","src":"216:6:30"}],"functionName":{"name":"mload","nativeSrc":"210:5:30","nodeType":"YulIdentifier","src":"210:5:30"},"nativeSrc":"210:13:30","nodeType":"YulFunctionCall","src":"210:13:30"},"variables":[{"name":"length","nativeSrc":"200:6:30","nodeType":"YulTypedName","src":"200:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"243:9:30","nodeType":"YulIdentifier","src":"243:9:30"},{"kind":"number","nativeSrc":"254:2:30","nodeType":"YulLiteral","src":"254:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"239:3:30","nodeType":"YulIdentifier","src":"239:3:30"},"nativeSrc":"239:18:30","nodeType":"YulFunctionCall","src":"239:18:30"},{"name":"length","nativeSrc":"259:6:30","nodeType":"YulIdentifier","src":"259:6:30"}],"functionName":{"name":"mstore","nativeSrc":"232:6:30","nodeType":"YulIdentifier","src":"232:6:30"},"nativeSrc":"232:34:30","nodeType":"YulFunctionCall","src":"232:34:30"},"nativeSrc":"232:34:30","nodeType":"YulExpressionStatement","src":"232:34:30"},{"nativeSrc":"275:10:30","nodeType":"YulVariableDeclaration","src":"275:10:30","value":{"kind":"number","nativeSrc":"284:1:30","nodeType":"YulLiteral","src":"284:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"279:1:30","nodeType":"YulTypedName","src":"279:1:30","type":""}]},{"body":{"nativeSrc":"344:90:30","nodeType":"YulBlock","src":"344:90:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"373:9:30","nodeType":"YulIdentifier","src":"373:9:30"},{"name":"i","nativeSrc":"384:1:30","nodeType":"YulIdentifier","src":"384:1:30"}],"functionName":{"name":"add","nativeSrc":"369:3:30","nodeType":"YulIdentifier","src":"369:3:30"},"nativeSrc":"369:17:30","nodeType":"YulFunctionCall","src":"369:17:30"},{"kind":"number","nativeSrc":"388:2:30","nodeType":"YulLiteral","src":"388:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"365:3:30","nodeType":"YulIdentifier","src":"365:3:30"},"nativeSrc":"365:26:30","nodeType":"YulFunctionCall","src":"365:26:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"407:6:30","nodeType":"YulIdentifier","src":"407:6:30"},{"name":"i","nativeSrc":"415:1:30","nodeType":"YulIdentifier","src":"415:1:30"}],"functionName":{"name":"add","nativeSrc":"403:3:30","nodeType":"YulIdentifier","src":"403:3:30"},"nativeSrc":"403:14:30","nodeType":"YulFunctionCall","src":"403:14:30"},{"name":"_1","nativeSrc":"419:2:30","nodeType":"YulIdentifier","src":"419:2:30"}],"functionName":{"name":"add","nativeSrc":"399:3:30","nodeType":"YulIdentifier","src":"399:3:30"},"nativeSrc":"399:23:30","nodeType":"YulFunctionCall","src":"399:23:30"}],"functionName":{"name":"mload","nativeSrc":"393:5:30","nodeType":"YulIdentifier","src":"393:5:30"},"nativeSrc":"393:30:30","nodeType":"YulFunctionCall","src":"393:30:30"}],"functionName":{"name":"mstore","nativeSrc":"358:6:30","nodeType":"YulIdentifier","src":"358:6:30"},"nativeSrc":"358:66:30","nodeType":"YulFunctionCall","src":"358:66:30"},"nativeSrc":"358:66:30","nodeType":"YulExpressionStatement","src":"358:66:30"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"305:1:30","nodeType":"YulIdentifier","src":"305:1:30"},{"name":"length","nativeSrc":"308:6:30","nodeType":"YulIdentifier","src":"308:6:30"}],"functionName":{"name":"lt","nativeSrc":"302:2:30","nodeType":"YulIdentifier","src":"302:2:30"},"nativeSrc":"302:13:30","nodeType":"YulFunctionCall","src":"302:13:30"},"nativeSrc":"294:140:30","nodeType":"YulForLoop","post":{"nativeSrc":"316:19:30","nodeType":"YulBlock","src":"316:19:30","statements":[{"nativeSrc":"318:15:30","nodeType":"YulAssignment","src":"318:15:30","value":{"arguments":[{"name":"i","nativeSrc":"327:1:30","nodeType":"YulIdentifier","src":"327:1:30"},{"name":"_1","nativeSrc":"330:2:30","nodeType":"YulIdentifier","src":"330:2:30"}],"functionName":{"name":"add","nativeSrc":"323:3:30","nodeType":"YulIdentifier","src":"323:3:30"},"nativeSrc":"323:10:30","nodeType":"YulFunctionCall","src":"323:10:30"},"variableNames":[{"name":"i","nativeSrc":"318:1:30","nodeType":"YulIdentifier","src":"318:1:30"}]}]},"pre":{"nativeSrc":"298:3:30","nodeType":"YulBlock","src":"298:3:30","statements":[]},"src":"294:140:30"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"458:9:30","nodeType":"YulIdentifier","src":"458:9:30"},{"name":"length","nativeSrc":"469:6:30","nodeType":"YulIdentifier","src":"469:6:30"}],"functionName":{"name":"add","nativeSrc":"454:3:30","nodeType":"YulIdentifier","src":"454:3:30"},"nativeSrc":"454:22:30","nodeType":"YulFunctionCall","src":"454:22:30"},{"kind":"number","nativeSrc":"478:2:30","nodeType":"YulLiteral","src":"478:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"450:3:30","nodeType":"YulIdentifier","src":"450:3:30"},"nativeSrc":"450:31:30","nodeType":"YulFunctionCall","src":"450:31:30"},{"kind":"number","nativeSrc":"483:1:30","nodeType":"YulLiteral","src":"483:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"443:6:30","nodeType":"YulIdentifier","src":"443:6:30"},"nativeSrc":"443:42:30","nodeType":"YulFunctionCall","src":"443:42:30"},"nativeSrc":"443:42:30","nodeType":"YulExpressionStatement","src":"443:42:30"},{"nativeSrc":"494:62:30","nodeType":"YulAssignment","src":"494:62:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"510:9:30","nodeType":"YulIdentifier","src":"510:9:30"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"529:6:30","nodeType":"YulIdentifier","src":"529:6:30"},{"kind":"number","nativeSrc":"537:2:30","nodeType":"YulLiteral","src":"537:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"525:3:30","nodeType":"YulIdentifier","src":"525:3:30"},"nativeSrc":"525:15:30","nodeType":"YulFunctionCall","src":"525:15:30"},{"arguments":[{"kind":"number","nativeSrc":"546:2:30","nodeType":"YulLiteral","src":"546:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"542:3:30","nodeType":"YulIdentifier","src":"542:3:30"},"nativeSrc":"542:7:30","nodeType":"YulFunctionCall","src":"542:7:30"}],"functionName":{"name":"and","nativeSrc":"521:3:30","nodeType":"YulIdentifier","src":"521:3:30"},"nativeSrc":"521:29:30","nodeType":"YulFunctionCall","src":"521:29:30"}],"functionName":{"name":"add","nativeSrc":"506:3:30","nodeType":"YulIdentifier","src":"506:3:30"},"nativeSrc":"506:45:30","nodeType":"YulFunctionCall","src":"506:45:30"},{"kind":"number","nativeSrc":"553:2:30","nodeType":"YulLiteral","src":"553:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"502:3:30","nodeType":"YulIdentifier","src":"502:3:30"},"nativeSrc":"502:54:30","nodeType":"YulFunctionCall","src":"502:54:30"},"variableNames":[{"name":"tail","nativeSrc":"494:4:30","nodeType":"YulIdentifier","src":"494:4:30"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14:548:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"104:9:30","nodeType":"YulTypedName","src":"104:9:30","type":""},{"name":"value0","nativeSrc":"115:6:30","nodeType":"YulTypedName","src":"115:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"126:4:30","nodeType":"YulTypedName","src":"126:4:30","type":""}],"src":"14:548:30"},{"body":{"nativeSrc":"616:124:30","nodeType":"YulBlock","src":"616:124:30","statements":[{"nativeSrc":"626:29:30","nodeType":"YulAssignment","src":"626:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"648:6:30","nodeType":"YulIdentifier","src":"648:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"635:12:30","nodeType":"YulIdentifier","src":"635:12:30"},"nativeSrc":"635:20:30","nodeType":"YulFunctionCall","src":"635:20:30"},"variableNames":[{"name":"value","nativeSrc":"626:5:30","nodeType":"YulIdentifier","src":"626:5:30"}]},{"body":{"nativeSrc":"718:16:30","nodeType":"YulBlock","src":"718:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"727:1:30","nodeType":"YulLiteral","src":"727:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"730:1:30","nodeType":"YulLiteral","src":"730:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"720:6:30","nodeType":"YulIdentifier","src":"720:6:30"},"nativeSrc":"720:12:30","nodeType":"YulFunctionCall","src":"720:12:30"},"nativeSrc":"720:12:30","nodeType":"YulExpressionStatement","src":"720:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"677:5:30","nodeType":"YulIdentifier","src":"677:5:30"},{"arguments":[{"name":"value","nativeSrc":"688:5:30","nodeType":"YulIdentifier","src":"688:5:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"703:3:30","nodeType":"YulLiteral","src":"703:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"708:1:30","nodeType":"YulLiteral","src":"708:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"699:3:30","nodeType":"YulIdentifier","src":"699:3:30"},"nativeSrc":"699:11:30","nodeType":"YulFunctionCall","src":"699:11:30"},{"kind":"number","nativeSrc":"712:1:30","nodeType":"YulLiteral","src":"712:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"695:3:30","nodeType":"YulIdentifier","src":"695:3:30"},"nativeSrc":"695:19:30","nodeType":"YulFunctionCall","src":"695:19:30"}],"functionName":{"name":"and","nativeSrc":"684:3:30","nodeType":"YulIdentifier","src":"684:3:30"},"nativeSrc":"684:31:30","nodeType":"YulFunctionCall","src":"684:31:30"}],"functionName":{"name":"eq","nativeSrc":"674:2:30","nodeType":"YulIdentifier","src":"674:2:30"},"nativeSrc":"674:42:30","nodeType":"YulFunctionCall","src":"674:42:30"}],"functionName":{"name":"iszero","nativeSrc":"667:6:30","nodeType":"YulIdentifier","src":"667:6:30"},"nativeSrc":"667:50:30","nodeType":"YulFunctionCall","src":"667:50:30"},"nativeSrc":"664:70:30","nodeType":"YulIf","src":"664:70:30"}]},"name":"abi_decode_address","nativeSrc":"567:173:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"595:6:30","nodeType":"YulTypedName","src":"595:6:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"606:5:30","nodeType":"YulTypedName","src":"606:5:30","type":""}],"src":"567:173:30"},{"body":{"nativeSrc":"832:167:30","nodeType":"YulBlock","src":"832:167:30","statements":[{"body":{"nativeSrc":"878:16:30","nodeType":"YulBlock","src":"878:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"887:1:30","nodeType":"YulLiteral","src":"887:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"890:1:30","nodeType":"YulLiteral","src":"890:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"880:6:30","nodeType":"YulIdentifier","src":"880:6:30"},"nativeSrc":"880:12:30","nodeType":"YulFunctionCall","src":"880:12:30"},"nativeSrc":"880:12:30","nodeType":"YulExpressionStatement","src":"880:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"853:7:30","nodeType":"YulIdentifier","src":"853:7:30"},{"name":"headStart","nativeSrc":"862:9:30","nodeType":"YulIdentifier","src":"862:9:30"}],"functionName":{"name":"sub","nativeSrc":"849:3:30","nodeType":"YulIdentifier","src":"849:3:30"},"nativeSrc":"849:23:30","nodeType":"YulFunctionCall","src":"849:23:30"},{"kind":"number","nativeSrc":"874:2:30","nodeType":"YulLiteral","src":"874:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"845:3:30","nodeType":"YulIdentifier","src":"845:3:30"},"nativeSrc":"845:32:30","nodeType":"YulFunctionCall","src":"845:32:30"},"nativeSrc":"842:52:30","nodeType":"YulIf","src":"842:52:30"},{"nativeSrc":"903:39:30","nodeType":"YulAssignment","src":"903:39:30","value":{"arguments":[{"name":"headStart","nativeSrc":"932:9:30","nodeType":"YulIdentifier","src":"932:9:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"913:18:30","nodeType":"YulIdentifier","src":"913:18:30"},"nativeSrc":"913:29:30","nodeType":"YulFunctionCall","src":"913:29:30"},"variableNames":[{"name":"value0","nativeSrc":"903:6:30","nodeType":"YulIdentifier","src":"903:6:30"}]},{"nativeSrc":"951:42:30","nodeType":"YulAssignment","src":"951:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"978:9:30","nodeType":"YulIdentifier","src":"978:9:30"},{"kind":"number","nativeSrc":"989:2:30","nodeType":"YulLiteral","src":"989:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"974:3:30","nodeType":"YulIdentifier","src":"974:3:30"},"nativeSrc":"974:18:30","nodeType":"YulFunctionCall","src":"974:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"961:12:30","nodeType":"YulIdentifier","src":"961:12:30"},"nativeSrc":"961:32:30","nodeType":"YulFunctionCall","src":"961:32:30"},"variableNames":[{"name":"value1","nativeSrc":"951:6:30","nodeType":"YulIdentifier","src":"951:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"745:254:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"790:9:30","nodeType":"YulTypedName","src":"790:9:30","type":""},{"name":"dataEnd","nativeSrc":"801:7:30","nodeType":"YulTypedName","src":"801:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"813:6:30","nodeType":"YulTypedName","src":"813:6:30","type":""},{"name":"value1","nativeSrc":"821:6:30","nodeType":"YulTypedName","src":"821:6:30","type":""}],"src":"745:254:30"},{"body":{"nativeSrc":"1099:92:30","nodeType":"YulBlock","src":"1099:92:30","statements":[{"nativeSrc":"1109:26:30","nodeType":"YulAssignment","src":"1109:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1121:9:30","nodeType":"YulIdentifier","src":"1121:9:30"},{"kind":"number","nativeSrc":"1132:2:30","nodeType":"YulLiteral","src":"1132:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1117:3:30","nodeType":"YulIdentifier","src":"1117:3:30"},"nativeSrc":"1117:18:30","nodeType":"YulFunctionCall","src":"1117:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1109:4:30","nodeType":"YulIdentifier","src":"1109:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1151:9:30","nodeType":"YulIdentifier","src":"1151:9:30"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1176:6:30","nodeType":"YulIdentifier","src":"1176:6:30"}],"functionName":{"name":"iszero","nativeSrc":"1169:6:30","nodeType":"YulIdentifier","src":"1169:6:30"},"nativeSrc":"1169:14:30","nodeType":"YulFunctionCall","src":"1169:14:30"}],"functionName":{"name":"iszero","nativeSrc":"1162:6:30","nodeType":"YulIdentifier","src":"1162:6:30"},"nativeSrc":"1162:22:30","nodeType":"YulFunctionCall","src":"1162:22:30"}],"functionName":{"name":"mstore","nativeSrc":"1144:6:30","nodeType":"YulIdentifier","src":"1144:6:30"},"nativeSrc":"1144:41:30","nodeType":"YulFunctionCall","src":"1144:41:30"},"nativeSrc":"1144:41:30","nodeType":"YulExpressionStatement","src":"1144:41:30"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1004:187:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1068:9:30","nodeType":"YulTypedName","src":"1068:9:30","type":""},{"name":"value0","nativeSrc":"1079:6:30","nodeType":"YulTypedName","src":"1079:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1090:4:30","nodeType":"YulTypedName","src":"1090:4:30","type":""}],"src":"1004:187:30"},{"body":{"nativeSrc":"1297:76:30","nodeType":"YulBlock","src":"1297:76:30","statements":[{"nativeSrc":"1307:26:30","nodeType":"YulAssignment","src":"1307:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1319:9:30","nodeType":"YulIdentifier","src":"1319:9:30"},{"kind":"number","nativeSrc":"1330:2:30","nodeType":"YulLiteral","src":"1330:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1315:3:30","nodeType":"YulIdentifier","src":"1315:3:30"},"nativeSrc":"1315:18:30","nodeType":"YulFunctionCall","src":"1315:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1307:4:30","nodeType":"YulIdentifier","src":"1307:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1349:9:30","nodeType":"YulIdentifier","src":"1349:9:30"},{"name":"value0","nativeSrc":"1360:6:30","nodeType":"YulIdentifier","src":"1360:6:30"}],"functionName":{"name":"mstore","nativeSrc":"1342:6:30","nodeType":"YulIdentifier","src":"1342:6:30"},"nativeSrc":"1342:25:30","nodeType":"YulFunctionCall","src":"1342:25:30"},"nativeSrc":"1342:25:30","nodeType":"YulExpressionStatement","src":"1342:25:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1196:177:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1266:9:30","nodeType":"YulTypedName","src":"1266:9:30","type":""},{"name":"value0","nativeSrc":"1277:6:30","nodeType":"YulTypedName","src":"1277:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1288:4:30","nodeType":"YulTypedName","src":"1288:4:30","type":""}],"src":"1196:177:30"},{"body":{"nativeSrc":"1482:224:30","nodeType":"YulBlock","src":"1482:224:30","statements":[{"body":{"nativeSrc":"1528:16:30","nodeType":"YulBlock","src":"1528:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1537:1:30","nodeType":"YulLiteral","src":"1537:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1540:1:30","nodeType":"YulLiteral","src":"1540:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1530:6:30","nodeType":"YulIdentifier","src":"1530:6:30"},"nativeSrc":"1530:12:30","nodeType":"YulFunctionCall","src":"1530:12:30"},"nativeSrc":"1530:12:30","nodeType":"YulExpressionStatement","src":"1530:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1503:7:30","nodeType":"YulIdentifier","src":"1503:7:30"},{"name":"headStart","nativeSrc":"1512:9:30","nodeType":"YulIdentifier","src":"1512:9:30"}],"functionName":{"name":"sub","nativeSrc":"1499:3:30","nodeType":"YulIdentifier","src":"1499:3:30"},"nativeSrc":"1499:23:30","nodeType":"YulFunctionCall","src":"1499:23:30"},{"kind":"number","nativeSrc":"1524:2:30","nodeType":"YulLiteral","src":"1524:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1495:3:30","nodeType":"YulIdentifier","src":"1495:3:30"},"nativeSrc":"1495:32:30","nodeType":"YulFunctionCall","src":"1495:32:30"},"nativeSrc":"1492:52:30","nodeType":"YulIf","src":"1492:52:30"},{"nativeSrc":"1553:39:30","nodeType":"YulAssignment","src":"1553:39:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1582:9:30","nodeType":"YulIdentifier","src":"1582:9:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1563:18:30","nodeType":"YulIdentifier","src":"1563:18:30"},"nativeSrc":"1563:29:30","nodeType":"YulFunctionCall","src":"1563:29:30"},"variableNames":[{"name":"value0","nativeSrc":"1553:6:30","nodeType":"YulIdentifier","src":"1553:6:30"}]},{"nativeSrc":"1601:48:30","nodeType":"YulAssignment","src":"1601:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1634:9:30","nodeType":"YulIdentifier","src":"1634:9:30"},{"kind":"number","nativeSrc":"1645:2:30","nodeType":"YulLiteral","src":"1645:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1630:3:30","nodeType":"YulIdentifier","src":"1630:3:30"},"nativeSrc":"1630:18:30","nodeType":"YulFunctionCall","src":"1630:18:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1611:18:30","nodeType":"YulIdentifier","src":"1611:18:30"},"nativeSrc":"1611:38:30","nodeType":"YulFunctionCall","src":"1611:38:30"},"variableNames":[{"name":"value1","nativeSrc":"1601:6:30","nodeType":"YulIdentifier","src":"1601:6:30"}]},{"nativeSrc":"1658:42:30","nodeType":"YulAssignment","src":"1658:42:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1685:9:30","nodeType":"YulIdentifier","src":"1685:9:30"},{"kind":"number","nativeSrc":"1696:2:30","nodeType":"YulLiteral","src":"1696:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1681:3:30","nodeType":"YulIdentifier","src":"1681:3:30"},"nativeSrc":"1681:18:30","nodeType":"YulFunctionCall","src":"1681:18:30"}],"functionName":{"name":"calldataload","nativeSrc":"1668:12:30","nodeType":"YulIdentifier","src":"1668:12:30"},"nativeSrc":"1668:32:30","nodeType":"YulFunctionCall","src":"1668:32:30"},"variableNames":[{"name":"value2","nativeSrc":"1658:6:30","nodeType":"YulIdentifier","src":"1658:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1378:328:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1432:9:30","nodeType":"YulTypedName","src":"1432:9:30","type":""},{"name":"dataEnd","nativeSrc":"1443:7:30","nodeType":"YulTypedName","src":"1443:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1455:6:30","nodeType":"YulTypedName","src":"1455:6:30","type":""},{"name":"value1","nativeSrc":"1463:6:30","nodeType":"YulTypedName","src":"1463:6:30","type":""},{"name":"value2","nativeSrc":"1471:6:30","nodeType":"YulTypedName","src":"1471:6:30","type":""}],"src":"1378:328:30"},{"body":{"nativeSrc":"1808:87:30","nodeType":"YulBlock","src":"1808:87:30","statements":[{"nativeSrc":"1818:26:30","nodeType":"YulAssignment","src":"1818:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1830:9:30","nodeType":"YulIdentifier","src":"1830:9:30"},{"kind":"number","nativeSrc":"1841:2:30","nodeType":"YulLiteral","src":"1841:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1826:3:30","nodeType":"YulIdentifier","src":"1826:3:30"},"nativeSrc":"1826:18:30","nodeType":"YulFunctionCall","src":"1826:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1818:4:30","nodeType":"YulIdentifier","src":"1818:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1860:9:30","nodeType":"YulIdentifier","src":"1860:9:30"},{"arguments":[{"name":"value0","nativeSrc":"1875:6:30","nodeType":"YulIdentifier","src":"1875:6:30"},{"kind":"number","nativeSrc":"1883:4:30","nodeType":"YulLiteral","src":"1883:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1871:3:30","nodeType":"YulIdentifier","src":"1871:3:30"},"nativeSrc":"1871:17:30","nodeType":"YulFunctionCall","src":"1871:17:30"}],"functionName":{"name":"mstore","nativeSrc":"1853:6:30","nodeType":"YulIdentifier","src":"1853:6:30"},"nativeSrc":"1853:36:30","nodeType":"YulFunctionCall","src":"1853:36:30"},"nativeSrc":"1853:36:30","nodeType":"YulExpressionStatement","src":"1853:36:30"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1711:184:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1777:9:30","nodeType":"YulTypedName","src":"1777:9:30","type":""},{"name":"value0","nativeSrc":"1788:6:30","nodeType":"YulTypedName","src":"1788:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1799:4:30","nodeType":"YulTypedName","src":"1799:4:30","type":""}],"src":"1711:184:30"},{"body":{"nativeSrc":"1970:116:30","nodeType":"YulBlock","src":"1970:116:30","statements":[{"body":{"nativeSrc":"2016:16:30","nodeType":"YulBlock","src":"2016:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2025:1:30","nodeType":"YulLiteral","src":"2025:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"2028:1:30","nodeType":"YulLiteral","src":"2028:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2018:6:30","nodeType":"YulIdentifier","src":"2018:6:30"},"nativeSrc":"2018:12:30","nodeType":"YulFunctionCall","src":"2018:12:30"},"nativeSrc":"2018:12:30","nodeType":"YulExpressionStatement","src":"2018:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1991:7:30","nodeType":"YulIdentifier","src":"1991:7:30"},{"name":"headStart","nativeSrc":"2000:9:30","nodeType":"YulIdentifier","src":"2000:9:30"}],"functionName":{"name":"sub","nativeSrc":"1987:3:30","nodeType":"YulIdentifier","src":"1987:3:30"},"nativeSrc":"1987:23:30","nodeType":"YulFunctionCall","src":"1987:23:30"},{"kind":"number","nativeSrc":"2012:2:30","nodeType":"YulLiteral","src":"2012:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1983:3:30","nodeType":"YulIdentifier","src":"1983:3:30"},"nativeSrc":"1983:32:30","nodeType":"YulFunctionCall","src":"1983:32:30"},"nativeSrc":"1980:52:30","nodeType":"YulIf","src":"1980:52:30"},{"nativeSrc":"2041:39:30","nodeType":"YulAssignment","src":"2041:39:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2070:9:30","nodeType":"YulIdentifier","src":"2070:9:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2051:18:30","nodeType":"YulIdentifier","src":"2051:18:30"},"nativeSrc":"2051:29:30","nodeType":"YulFunctionCall","src":"2051:29:30"},"variableNames":[{"name":"value0","nativeSrc":"2041:6:30","nodeType":"YulIdentifier","src":"2041:6:30"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1900:186:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1936:9:30","nodeType":"YulTypedName","src":"1936:9:30","type":""},{"name":"dataEnd","nativeSrc":"1947:7:30","nodeType":"YulTypedName","src":"1947:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1959:6:30","nodeType":"YulTypedName","src":"1959:6:30","type":""}],"src":"1900:186:30"},{"body":{"nativeSrc":"2178:173:30","nodeType":"YulBlock","src":"2178:173:30","statements":[{"body":{"nativeSrc":"2224:16:30","nodeType":"YulBlock","src":"2224:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2233:1:30","nodeType":"YulLiteral","src":"2233:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"2236:1:30","nodeType":"YulLiteral","src":"2236:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2226:6:30","nodeType":"YulIdentifier","src":"2226:6:30"},"nativeSrc":"2226:12:30","nodeType":"YulFunctionCall","src":"2226:12:30"},"nativeSrc":"2226:12:30","nodeType":"YulExpressionStatement","src":"2226:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2199:7:30","nodeType":"YulIdentifier","src":"2199:7:30"},{"name":"headStart","nativeSrc":"2208:9:30","nodeType":"YulIdentifier","src":"2208:9:30"}],"functionName":{"name":"sub","nativeSrc":"2195:3:30","nodeType":"YulIdentifier","src":"2195:3:30"},"nativeSrc":"2195:23:30","nodeType":"YulFunctionCall","src":"2195:23:30"},{"kind":"number","nativeSrc":"2220:2:30","nodeType":"YulLiteral","src":"2220:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2191:3:30","nodeType":"YulIdentifier","src":"2191:3:30"},"nativeSrc":"2191:32:30","nodeType":"YulFunctionCall","src":"2191:32:30"},"nativeSrc":"2188:52:30","nodeType":"YulIf","src":"2188:52:30"},{"nativeSrc":"2249:39:30","nodeType":"YulAssignment","src":"2249:39:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2278:9:30","nodeType":"YulIdentifier","src":"2278:9:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2259:18:30","nodeType":"YulIdentifier","src":"2259:18:30"},"nativeSrc":"2259:29:30","nodeType":"YulFunctionCall","src":"2259:29:30"},"variableNames":[{"name":"value0","nativeSrc":"2249:6:30","nodeType":"YulIdentifier","src":"2249:6:30"}]},{"nativeSrc":"2297:48:30","nodeType":"YulAssignment","src":"2297:48:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2330:9:30","nodeType":"YulIdentifier","src":"2330:9:30"},{"kind":"number","nativeSrc":"2341:2:30","nodeType":"YulLiteral","src":"2341:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2326:3:30","nodeType":"YulIdentifier","src":"2326:3:30"},"nativeSrc":"2326:18:30","nodeType":"YulFunctionCall","src":"2326:18:30"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2307:18:30","nodeType":"YulIdentifier","src":"2307:18:30"},"nativeSrc":"2307:38:30","nodeType":"YulFunctionCall","src":"2307:38:30"},"variableNames":[{"name":"value1","nativeSrc":"2297:6:30","nodeType":"YulIdentifier","src":"2297:6:30"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"2091:260:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2136:9:30","nodeType":"YulTypedName","src":"2136:9:30","type":""},{"name":"dataEnd","nativeSrc":"2147:7:30","nodeType":"YulTypedName","src":"2147:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2159:6:30","nodeType":"YulTypedName","src":"2159:6:30","type":""},{"name":"value1","nativeSrc":"2167:6:30","nodeType":"YulTypedName","src":"2167:6:30","type":""}],"src":"2091:260:30"},{"body":{"nativeSrc":"2411:325:30","nodeType":"YulBlock","src":"2411:325:30","statements":[{"nativeSrc":"2421:22:30","nodeType":"YulAssignment","src":"2421:22:30","value":{"arguments":[{"kind":"number","nativeSrc":"2435:1:30","nodeType":"YulLiteral","src":"2435:1:30","type":"","value":"1"},{"name":"data","nativeSrc":"2438:4:30","nodeType":"YulIdentifier","src":"2438:4:30"}],"functionName":{"name":"shr","nativeSrc":"2431:3:30","nodeType":"YulIdentifier","src":"2431:3:30"},"nativeSrc":"2431:12:30","nodeType":"YulFunctionCall","src":"2431:12:30"},"variableNames":[{"name":"length","nativeSrc":"2421:6:30","nodeType":"YulIdentifier","src":"2421:6:30"}]},{"nativeSrc":"2452:38:30","nodeType":"YulVariableDeclaration","src":"2452:38:30","value":{"arguments":[{"name":"data","nativeSrc":"2482:4:30","nodeType":"YulIdentifier","src":"2482:4:30"},{"kind":"number","nativeSrc":"2488:1:30","nodeType":"YulLiteral","src":"2488:1:30","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2478:3:30","nodeType":"YulIdentifier","src":"2478:3:30"},"nativeSrc":"2478:12:30","nodeType":"YulFunctionCall","src":"2478:12:30"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2456:18:30","nodeType":"YulTypedName","src":"2456:18:30","type":""}]},{"body":{"nativeSrc":"2529:31:30","nodeType":"YulBlock","src":"2529:31:30","statements":[{"nativeSrc":"2531:27:30","nodeType":"YulAssignment","src":"2531:27:30","value":{"arguments":[{"name":"length","nativeSrc":"2545:6:30","nodeType":"YulIdentifier","src":"2545:6:30"},{"kind":"number","nativeSrc":"2553:4:30","nodeType":"YulLiteral","src":"2553:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2541:3:30","nodeType":"YulIdentifier","src":"2541:3:30"},"nativeSrc":"2541:17:30","nodeType":"YulFunctionCall","src":"2541:17:30"},"variableNames":[{"name":"length","nativeSrc":"2531:6:30","nodeType":"YulIdentifier","src":"2531:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2509:18:30","nodeType":"YulIdentifier","src":"2509:18:30"}],"functionName":{"name":"iszero","nativeSrc":"2502:6:30","nodeType":"YulIdentifier","src":"2502:6:30"},"nativeSrc":"2502:26:30","nodeType":"YulFunctionCall","src":"2502:26:30"},"nativeSrc":"2499:61:30","nodeType":"YulIf","src":"2499:61:30"},{"body":{"nativeSrc":"2619:111:30","nodeType":"YulBlock","src":"2619:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2640:1:30","nodeType":"YulLiteral","src":"2640:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2647:3:30","nodeType":"YulLiteral","src":"2647:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"2652:10:30","nodeType":"YulLiteral","src":"2652:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2643:3:30","nodeType":"YulIdentifier","src":"2643:3:30"},"nativeSrc":"2643:20:30","nodeType":"YulFunctionCall","src":"2643:20:30"}],"functionName":{"name":"mstore","nativeSrc":"2633:6:30","nodeType":"YulIdentifier","src":"2633:6:30"},"nativeSrc":"2633:31:30","nodeType":"YulFunctionCall","src":"2633:31:30"},"nativeSrc":"2633:31:30","nodeType":"YulExpressionStatement","src":"2633:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2684:1:30","nodeType":"YulLiteral","src":"2684:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"2687:4:30","nodeType":"YulLiteral","src":"2687:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"2677:6:30","nodeType":"YulIdentifier","src":"2677:6:30"},"nativeSrc":"2677:15:30","nodeType":"YulFunctionCall","src":"2677:15:30"},"nativeSrc":"2677:15:30","nodeType":"YulExpressionStatement","src":"2677:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2712:1:30","nodeType":"YulLiteral","src":"2712:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"2715:4:30","nodeType":"YulLiteral","src":"2715:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2705:6:30","nodeType":"YulIdentifier","src":"2705:6:30"},"nativeSrc":"2705:15:30","nodeType":"YulFunctionCall","src":"2705:15:30"},"nativeSrc":"2705:15:30","nodeType":"YulExpressionStatement","src":"2705:15:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2575:18:30","nodeType":"YulIdentifier","src":"2575:18:30"},{"arguments":[{"name":"length","nativeSrc":"2598:6:30","nodeType":"YulIdentifier","src":"2598:6:30"},{"kind":"number","nativeSrc":"2606:2:30","nodeType":"YulLiteral","src":"2606:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2595:2:30","nodeType":"YulIdentifier","src":"2595:2:30"},"nativeSrc":"2595:14:30","nodeType":"YulFunctionCall","src":"2595:14:30"}],"functionName":{"name":"eq","nativeSrc":"2572:2:30","nodeType":"YulIdentifier","src":"2572:2:30"},"nativeSrc":"2572:38:30","nodeType":"YulFunctionCall","src":"2572:38:30"},"nativeSrc":"2569:161:30","nodeType":"YulIf","src":"2569:161:30"}]},"name":"extract_byte_array_length","nativeSrc":"2356:380:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2391:4:30","nodeType":"YulTypedName","src":"2391:4:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2400:6:30","nodeType":"YulTypedName","src":"2400:6:30","type":""}],"src":"2356:380:30"},{"body":{"nativeSrc":"2898:188:30","nodeType":"YulBlock","src":"2898:188:30","statements":[{"nativeSrc":"2908:26:30","nodeType":"YulAssignment","src":"2908:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2920:9:30","nodeType":"YulIdentifier","src":"2920:9:30"},{"kind":"number","nativeSrc":"2931:2:30","nodeType":"YulLiteral","src":"2931:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2916:3:30","nodeType":"YulIdentifier","src":"2916:3:30"},"nativeSrc":"2916:18:30","nodeType":"YulFunctionCall","src":"2916:18:30"},"variableNames":[{"name":"tail","nativeSrc":"2908:4:30","nodeType":"YulIdentifier","src":"2908:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2950:9:30","nodeType":"YulIdentifier","src":"2950:9:30"},{"arguments":[{"name":"value0","nativeSrc":"2965:6:30","nodeType":"YulIdentifier","src":"2965:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2981:3:30","nodeType":"YulLiteral","src":"2981:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"2986:1:30","nodeType":"YulLiteral","src":"2986:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2977:3:30","nodeType":"YulIdentifier","src":"2977:3:30"},"nativeSrc":"2977:11:30","nodeType":"YulFunctionCall","src":"2977:11:30"},{"kind":"number","nativeSrc":"2990:1:30","nodeType":"YulLiteral","src":"2990:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2973:3:30","nodeType":"YulIdentifier","src":"2973:3:30"},"nativeSrc":"2973:19:30","nodeType":"YulFunctionCall","src":"2973:19:30"}],"functionName":{"name":"and","nativeSrc":"2961:3:30","nodeType":"YulIdentifier","src":"2961:3:30"},"nativeSrc":"2961:32:30","nodeType":"YulFunctionCall","src":"2961:32:30"}],"functionName":{"name":"mstore","nativeSrc":"2943:6:30","nodeType":"YulIdentifier","src":"2943:6:30"},"nativeSrc":"2943:51:30","nodeType":"YulFunctionCall","src":"2943:51:30"},"nativeSrc":"2943:51:30","nodeType":"YulExpressionStatement","src":"2943:51:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3014:9:30","nodeType":"YulIdentifier","src":"3014:9:30"},{"kind":"number","nativeSrc":"3025:2:30","nodeType":"YulLiteral","src":"3025:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3010:3:30","nodeType":"YulIdentifier","src":"3010:3:30"},"nativeSrc":"3010:18:30","nodeType":"YulFunctionCall","src":"3010:18:30"},{"name":"value1","nativeSrc":"3030:6:30","nodeType":"YulIdentifier","src":"3030:6:30"}],"functionName":{"name":"mstore","nativeSrc":"3003:6:30","nodeType":"YulIdentifier","src":"3003:6:30"},"nativeSrc":"3003:34:30","nodeType":"YulFunctionCall","src":"3003:34:30"},"nativeSrc":"3003:34:30","nodeType":"YulExpressionStatement","src":"3003:34:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3057:9:30","nodeType":"YulIdentifier","src":"3057:9:30"},{"kind":"number","nativeSrc":"3068:2:30","nodeType":"YulLiteral","src":"3068:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3053:3:30","nodeType":"YulIdentifier","src":"3053:3:30"},"nativeSrc":"3053:18:30","nodeType":"YulFunctionCall","src":"3053:18:30"},{"name":"value2","nativeSrc":"3073:6:30","nodeType":"YulIdentifier","src":"3073:6:30"}],"functionName":{"name":"mstore","nativeSrc":"3046:6:30","nodeType":"YulIdentifier","src":"3046:6:30"},"nativeSrc":"3046:34:30","nodeType":"YulFunctionCall","src":"3046:34:30"},"nativeSrc":"3046:34:30","nodeType":"YulExpressionStatement","src":"3046:34:30"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"2741:345:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2851:9:30","nodeType":"YulTypedName","src":"2851:9:30","type":""},{"name":"value2","nativeSrc":"2862:6:30","nodeType":"YulTypedName","src":"2862:6:30","type":""},{"name":"value1","nativeSrc":"2870:6:30","nodeType":"YulTypedName","src":"2870:6:30","type":""},{"name":"value0","nativeSrc":"2878:6:30","nodeType":"YulTypedName","src":"2878:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2889:4:30","nodeType":"YulTypedName","src":"2889:4:30","type":""}],"src":"2741:345:30"},{"body":{"nativeSrc":"3192:102:30","nodeType":"YulBlock","src":"3192:102:30","statements":[{"nativeSrc":"3202:26:30","nodeType":"YulAssignment","src":"3202:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3214:9:30","nodeType":"YulIdentifier","src":"3214:9:30"},{"kind":"number","nativeSrc":"3225:2:30","nodeType":"YulLiteral","src":"3225:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3210:3:30","nodeType":"YulIdentifier","src":"3210:3:30"},"nativeSrc":"3210:18:30","nodeType":"YulFunctionCall","src":"3210:18:30"},"variableNames":[{"name":"tail","nativeSrc":"3202:4:30","nodeType":"YulIdentifier","src":"3202:4:30"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3244:9:30","nodeType":"YulIdentifier","src":"3244:9:30"},{"arguments":[{"name":"value0","nativeSrc":"3259:6:30","nodeType":"YulIdentifier","src":"3259:6:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3275:3:30","nodeType":"YulLiteral","src":"3275:3:30","type":"","value":"160"},{"kind":"number","nativeSrc":"3280:1:30","nodeType":"YulLiteral","src":"3280:1:30","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3271:3:30","nodeType":"YulIdentifier","src":"3271:3:30"},"nativeSrc":"3271:11:30","nodeType":"YulFunctionCall","src":"3271:11:30"},{"kind":"number","nativeSrc":"3284:1:30","nodeType":"YulLiteral","src":"3284:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3267:3:30","nodeType":"YulIdentifier","src":"3267:3:30"},"nativeSrc":"3267:19:30","nodeType":"YulFunctionCall","src":"3267:19:30"}],"functionName":{"name":"and","nativeSrc":"3255:3:30","nodeType":"YulIdentifier","src":"3255:3:30"},"nativeSrc":"3255:32:30","nodeType":"YulFunctionCall","src":"3255:32:30"}],"functionName":{"name":"mstore","nativeSrc":"3237:6:30","nodeType":"YulIdentifier","src":"3237:6:30"},"nativeSrc":"3237:51:30","nodeType":"YulFunctionCall","src":"3237:51:30"},"nativeSrc":"3237:51:30","nodeType":"YulExpressionStatement","src":"3237:51:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3091:203:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3161:9:30","nodeType":"YulTypedName","src":"3161:9:30","type":""},{"name":"value0","nativeSrc":"3172:6:30","nodeType":"YulTypedName","src":"3172:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3183:4:30","nodeType":"YulTypedName","src":"3183:4:30","type":""}],"src":"3091:203:30"},{"body":{"nativeSrc":"3347:174:30","nodeType":"YulBlock","src":"3347:174:30","statements":[{"nativeSrc":"3357:16:30","nodeType":"YulAssignment","src":"3357:16:30","value":{"arguments":[{"name":"x","nativeSrc":"3368:1:30","nodeType":"YulIdentifier","src":"3368:1:30"},{"name":"y","nativeSrc":"3371:1:30","nodeType":"YulIdentifier","src":"3371:1:30"}],"functionName":{"name":"add","nativeSrc":"3364:3:30","nodeType":"YulIdentifier","src":"3364:3:30"},"nativeSrc":"3364:9:30","nodeType":"YulFunctionCall","src":"3364:9:30"},"variableNames":[{"name":"sum","nativeSrc":"3357:3:30","nodeType":"YulIdentifier","src":"3357:3:30"}]},{"body":{"nativeSrc":"3404:111:30","nodeType":"YulBlock","src":"3404:111:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3425:1:30","nodeType":"YulLiteral","src":"3425:1:30","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3432:3:30","nodeType":"YulLiteral","src":"3432:3:30","type":"","value":"224"},{"kind":"number","nativeSrc":"3437:10:30","nodeType":"YulLiteral","src":"3437:10:30","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3428:3:30","nodeType":"YulIdentifier","src":"3428:3:30"},"nativeSrc":"3428:20:30","nodeType":"YulFunctionCall","src":"3428:20:30"}],"functionName":{"name":"mstore","nativeSrc":"3418:6:30","nodeType":"YulIdentifier","src":"3418:6:30"},"nativeSrc":"3418:31:30","nodeType":"YulFunctionCall","src":"3418:31:30"},"nativeSrc":"3418:31:30","nodeType":"YulExpressionStatement","src":"3418:31:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3469:1:30","nodeType":"YulLiteral","src":"3469:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"3472:4:30","nodeType":"YulLiteral","src":"3472:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3462:6:30","nodeType":"YulIdentifier","src":"3462:6:30"},"nativeSrc":"3462:15:30","nodeType":"YulFunctionCall","src":"3462:15:30"},"nativeSrc":"3462:15:30","nodeType":"YulExpressionStatement","src":"3462:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3497:1:30","nodeType":"YulLiteral","src":"3497:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3500:4:30","nodeType":"YulLiteral","src":"3500:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3490:6:30","nodeType":"YulIdentifier","src":"3490:6:30"},"nativeSrc":"3490:15:30","nodeType":"YulFunctionCall","src":"3490:15:30"},"nativeSrc":"3490:15:30","nodeType":"YulExpressionStatement","src":"3490:15:30"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"3388:1:30","nodeType":"YulIdentifier","src":"3388:1:30"},{"name":"sum","nativeSrc":"3391:3:30","nodeType":"YulIdentifier","src":"3391:3:30"}],"functionName":{"name":"gt","nativeSrc":"3385:2:30","nodeType":"YulIdentifier","src":"3385:2:30"},"nativeSrc":"3385:10:30","nodeType":"YulFunctionCall","src":"3385:10:30"},"nativeSrc":"3382:133:30","nodeType":"YulIf","src":"3382:133:30"}]},"name":"checked_add_t_uint256","nativeSrc":"3299:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3330:1:30","nodeType":"YulTypedName","src":"3330:1:30","type":""},{"name":"y","nativeSrc":"3333:1:30","nodeType":"YulTypedName","src":"3333:1:30","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3339:3:30","nodeType":"YulTypedName","src":"3339:3:30","type":""}],"src":"3299:222:30"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146100fe57806370a082311461010d57806395d89b4114610136578063a9059cbb1461013e578063dd62ed3e1461015157600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100eb575b600080fd5b6100a061018a565b6040516100ad919061056b565b60405180910390f35b6100c96100c43660046105d6565b61021c565b60405190151581526020016100ad565b6002545b6040519081526020016100ad565b6100c96100f9366004610600565b610236565b604051601281526020016100ad565b6100dd61011b36600461063c565b6001600160a01b031660009081526020819052604090205490565b6100a061025a565b6100c961014c3660046105d6565b610269565b6100dd61015f36600461065e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461019990610691565b80601f01602080910402602001604051908101604052809291908181526020018280546101c590610691565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b60003361022a818585610277565b60019150505b92915050565b600033610244858285610289565b61024f85858561030d565b506001949350505050565b60606004805461019990610691565b60003361022a81858561030d565b610284838383600161036c565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561030757818110156102f857604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103078484848403600061036c565b50505050565b6001600160a01b03831661033757604051634b637e8f60e11b8152600060048201526024016102ef565b6001600160a01b0382166103615760405163ec442f0560e01b8152600060048201526024016102ef565b610284838383610441565b6001600160a01b0384166103965760405163e602df0560e01b8152600060048201526024016102ef565b6001600160a01b0383166103c057604051634a1406b160e11b8152600060048201526024016102ef565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561030757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161043391815260200190565b60405180910390a350505050565b6001600160a01b03831661046c57806002600082825461046191906106cb565b909155506104de9050565b6001600160a01b038316600090815260208190526040902054818110156104bf5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102ef565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166104fa57600280548290039055610519565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161055e91815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b818110156105995785810183015185820160400152820161057d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105d157600080fd5b919050565b600080604083850312156105e957600080fd5b6105f2836105ba565b946020939093013593505050565b60008060006060848603121561061557600080fd5b61061e846105ba565b925061062c602085016105ba565b9150604084013590509250925092565b60006020828403121561064e57600080fd5b610657826105ba565b9392505050565b6000806040838503121561067157600080fd5b61067a836105ba565b9150610688602084016105ba565b90509250929050565b600181811c908216806106a557607f821691505b6020821081036106c557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561023057634e487b7160e01b600052601160045260246000fdfea2646970667358221220958d3f1dd1f6f0c07fa2daddd4f3d895e514b5838da6d8ea2a797e781eb09b1564736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x600 JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xDD PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x25A JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x691 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x691 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x212 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x244 DUP6 DUP3 DUP6 PUSH2 0x289 JUMP JUMPDEST PUSH2 0x24F DUP6 DUP6 DUP6 PUSH2 0x30D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x307 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x307 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x36C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x307 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x46C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x6CB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4DE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4FA JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x519 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x55E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x599 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x57D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F2 DUP4 PUSH2 0x5BA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61E DUP5 PUSH2 0x5BA JUMP JUMPDEST SWAP3 POP PUSH2 0x62C PUSH1 0x20 DUP6 ADD PUSH2 0x5BA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x657 DUP3 PUSH2 0x5BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67A DUP4 PUSH2 0x5BA JUMP JUMPDEST SWAP2 POP PUSH2 0x688 PUSH1 0x20 DUP5 ADD PUSH2 0x5BA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6A5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6C5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x230 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 DUP14 EXTCODEHASH SAR 0xD1 0xF6 CREATE 0xC0 PUSH32 0xA2DADDD4F3D895E514B5838DA6D8EA2A797E781EB09B1564736F6C6343000816 STOP CALLER ","sourceMap":"115:214:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:30;;1162:22;1144:41;;1132:2;1117:18;3998:186:15;1004:187:30;2849:97:15;2927:12;;2849:97;;;1342:25:30;;;1330:2;1315:18;2849:97:15;1196:177:30;4776:244:15;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;1853:36:30;;1841:2;1826:18;2707:82:15;1711:184:30;3004:116:15;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:15;3069:7;3095:18;;;;;;;;;;;;3004:116;1981:93;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;3551:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:15;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:20;4125:31:15;735:10:20;4141:7:15;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:20;4919:37:15;4935:4;735:10:20;4950:5:15;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:15;;4776:244;-1:-1:-1;;;;4776:244:15:o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:20;3438:27:15;735:10:20;3455:2:15;3459:5;3438:9;:27::i;8726:128::-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:15;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:15;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:15;;-1:-1:-1;;;;;2961:32:30;;10687:60:15;;;2943:51:30;3010:18;;;3003:34;;;3053:18;;;3046:34;;;2916:18;;10687:60:15;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:15;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:15;;5544:1;5517:30;;;3237:51:30;3210:18;;5517:30:15;3091:203:30;5472:86:15;-1:-1:-1;;;;;5571:16:15;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:15;;5639:1;5610:32;;;3237:51:30;3210:18;;5610:32:15;3091:203:30;5567:86:15;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;9701:432::-;-1:-1:-1;;;;;9813:19:15;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:15;;9884:1;9855:32;;;3237:51:30;3210:18;;9855:32:15;3091:203:30;9809:89:15;-1:-1:-1;;;;;9911:21:15;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:15;;9983:1;9955:31;;;3237:51:30;3210:18;;9955:31:15;3091:203:30;9907:90:15;-1:-1:-1;;;;;10006:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:15;10094:5;-1:-1:-1;;;;;10085:31:15;;10110:5;10085:31;;;;1342:25:30;;1330:2;1315:18;;1196:177;10085:31:15;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:15;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:15;;-1:-1:-1;6093:540:15;;-1:-1:-1;;;;;6307:15:15;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:15;;-1:-1:-1;;;;;2961:32:30;;6386:50:15;;;2943:51:30;3010:18;;;3003:34;;;3053:18;;;3046:34;;;2916:18;;6386:50:15;2741:345:30;6336:115:15;-1:-1:-1;;;;;6571:15:15;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:15;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:15;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:15;7092:4;-1:-1:-1;;;;;7083:25:15;;7102:5;7083:25;;;;1342::30;;1330:2;1315:18;;1196:177;7083:25:15;;;;;;;;6008:1107;;;:::o;14:548:30:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:30;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:30:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:30:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3299:222::-;3364:9;;;3385:10;;;3382:133;;;3437:10;3432:3;3428:20;3425:1;3418:31;3472:4;3469:1;3462:15;3500:4;3497:1;3490:15"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RccToken.sol\":\"RccToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/RccToken.sol\":{\"keccak256\":\"0x97d736f5485c1e75f735dc070126c69c91c990a1daf6b13a21a9f4afc007bb4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81204b333a28097aa1308412880dc63af84224a3f168977a124c0ca0d9416625\",\"dweb:/ipfs/QmWSrWB5XDQjUA7dqbsTukZCP4ugCQ4KR9bPR6UT6Jmpxm\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1728,"contract":"contracts/RccToken.sol:RccToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1734,"contract":"contracts/RccToken.sol:RccToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1736,"contract":"contracts/RccToken.sol:RccToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1738,"contract":"contracts/RccToken.sol:RccToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1740,"contract":"contracts/RccToken.sol:RccToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}
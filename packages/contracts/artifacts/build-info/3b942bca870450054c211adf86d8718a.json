{"id":"3b942bca870450054c211adf86d8718a","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/rcc-stake.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\n\n// 这个合约里有一个隐藏条件，就是我针对一个block发放的代币奖励是固定的，所有的池子靠权重来分配对应代币；池子里，再按照用户质押的数量，进行分配结算；\n// TODO: 看看这几个类型都是干啥的，需要用上翻译插件\ncontract RCCStake is\n    Initializable,\n    UUPSUpgradeable,\n    PausableUpgradeable,\n    AccessControlUpgradeable\n{\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using Math for uint256;\n\n    // ************************************** INVARIANT **************************************\n\n    bytes32 public constant ADMIN_ROLE = keccak256(\"admin_role\");\n    bytes32 public constant UPGRADE_ROLE = keccak256(\"upgrade_manager_role\");\n    uint256 public constant ETH_PID = 0;\n\n    // ************************************** DATA STRUCTURE *****************x谢谢*********************\n\n    struct Pool {\n        address stakeTokenAddress /** 质押池的代币地址 */;\n        uint256 poolWeight /** 质押池的权重 */;\n        uint256 lastRewardBlock /** 上次奖励发放的区块高度 */;\n        uint256 accumulateRewardsPerStake /** 累计发放的奖励 / 每单位质押代币 */;\n        uint256 stakeTokenAmount /**质押的总代币数量 */;\n        uint256 minDepositAmount /** 最小质押金额 */;\n        uint256 unStakeLockedBlocks /** 已解除质押锁定区块数 */;\n    }\n    struct UnStakeRequest {\n        // Request withdraw amount\n        uint256 amount;\n        // The blocks when the request withdraw amount can be released，发起解除质押请求时，已解锁的区块数量\n        uint256 unlockBlocksCounts;\n    }\n    struct User {\n        uint256 stakeAmount;\n        uint256 finishedRewards;\n        uint256 pendingRewards;\n        UnStakeRequest[] requests;\n    }\n\n    // ************************************** STATE VARIABLES **************************************\n    // First block that RCCStake will start from\n    uint256 public startBlock;\n    // First block that RCCStake will end from\n    uint256 public endBlock;\n    // RCC token reward per block\n    uint256 public rccPerBlock;\n    // Pause the withdraw function\n    bool public withdrawPaused;\n    // Pause the claim function\n    bool public claimPaused;\n    // RCC token\n    IERC20 public RCC;\n\n    // Total pool weight / Sum of all pool weights\n    uint256 public totalPoolWeight;\n\n    Pool[] public pool;\n\n    // User data\n    mapping(address => User) public users;\n    // ---------------- 状态变量 ----------------\n    uint256 public unstakeReleaseBlocks;\n\n    IERC20 public stToken;\n    Pool[] public pools;\n    // pool id => user address => user info\n    mapping(uint256 => mapping(address => User)) public user;\n\n    // ************************************** EVENT **************************************\n    event SetRCC(IERC20 indexed RCC);\n    event PausedWithdraw();\n    event UnpausedWithdraw();\n    event PausedClaim();\n    event UnpausedClaim();\n    event SetStartBlock(uint256 indexed startBlock);\n    event SetEndBlock(uint256 indexed endBlock);\n    event SetRCCPerBlock(uint256 indexed rccPerBlock);\n    event AddPool(\n        address indexed stakeTokenAddress,\n        uint256 indexed poolWeight,\n        uint256 indexed lastRewardBlock,\n        uint256 minDepositAmount,\n        uint256 unStakeLockedBlocks\n    );\n    // TODO:  UpdatePoolInfo 和  UpdatePool为啥要分两个？\n    event UpdatePoolInfo(\n        uint256 indexed poolId,\n        uint256 indexed minDepositAmount,\n        uint256 indexed unStakeLockedBlocks\n    );\n    event SetPoolWeight(\n        uint256 indexed poolId,\n        uint256 poolWeight,\n        uint256 totalPoolWeight\n    );\n    event UpdatePool(\n        uint256 indexed poolId,\n        uint256 indexed lastRewardBlock,\n        uint256 totalRCC\n    );\n    event Deposit(address indexed user, uint256 indexed poolId, uint256 amount);\n    event RequestUnstake(\n        address indexed user,\n        uint256 indexed poolId,\n        uint256 amount\n    );\n    event Withdraw(\n        address indexed user,\n        uint256 indexed poolId,\n        uint256 amount,\n        uint256 indexed blockNumber\n    );\n    event Claim(\n        address indexed user,\n        uint256 indexed poolId,\n        uint256 RccReward\n    );\n\n    event Stake(address indexed user, address indexed pid, uint256 amount);\n    event UnStake(address indexed user, address indexed pid, uint256 amount);\n    event GetRewards(address indexed user, address indexed pid, uint256 amount);\n\n    // ************************************** MODIFIER **************************************\n\n    modifier checkPid(uint256 _pid) {\n        require(_pid < pool.length, \"invalid pid\");\n        _;\n    }\n    modifier whenNotClaimPaused() {\n        require(!claimPaused, \"claim is paused\");\n        _;\n    }\n    modifier whenNotWithdrawPaused() {\n        require(!withdrawPaused, \"withdraw is paused\");\n        _;\n    }\n\n    // ************************************** FUNCTIONS **************************************\n    /**\n     * @notice Set RCC token address. Set basic info when deploying.\n     * - 执行初始化动作\n     * - 设置角色权限\n     * - 设置代币奖励相关信息\n     */\n\n    function initialize(\n        IERC20 _RCC,\n        uint256 _startBlock,\n        uint256 _endBlock,\n        uint256 _rccPerBlock\n    ) public initializer {\n        require(\n            _startBlock <= _endBlock,\n            \"start block must be less than end block\"\n        );\n        require(_rccPerBlock > 0, \"rcc per block must be greater than 0\");\n        // TODO: 看代码，下面一行代码啥也没干呀\n        __AccessControl_init();\n        __UUPSUpgradeable_init();\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(UPGRADE_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n\n        setRCC(_RCC);\n        startBlock = _startBlock;\n        endBlock = _endBlock;\n        rccPerBlock = _rccPerBlock;\n    }\n\n    // TODO: 这个函数在这里什么意思？又没有调用的地方\n    function _authorizeUpgrade(\n        address newImplementation\n    ) internal override onlyRole(UPGRADE_ROLE) {}\n\n    // ************************************** ADMIN FUNCTIONS **************************************\n    /**\n     * @notice Set RCC token address. Can only be called by admin\n     */\n\n    function setRCC(IERC20 _RCC) public onlyRole(ADMIN_ROLE) {\n        RCC = _RCC;\n        emit SetRCC(RCC);\n    }\n\n    /**\n     * @notice Pause withdraw. Can only be called by admin.\n     */\n    function pauseWithdraw() public onlyRole(ADMIN_ROLE) {\n        require(withdrawPaused, \"withdraw has already been unpaused\");\n        withdrawPaused = true;\n        emit PausedWithdraw();\n    }\n\n    /**\n     * @notice Unpause withdraw. Can only be called by admin.\n     */\n    function unpPauseWithdraw() public onlyRole(ADMIN_ROLE) {\n        require(!withdrawPaused, \"withdraw has already been paused\");\n        withdrawPaused = false;\n        emit UnpausedWithdraw();\n    }\n\n    /**\n     * @notice Pause claim. Can only be called by admin.\n     */\n    function pauseClaim() public onlyRole(ADMIN_ROLE) {\n        require(!claimPaused, \"claim has already been unpaused\");\n        claimPaused = true;\n        emit PausedClaim();\n    }\n\n    /**\n     * @notice Pause unpauseClaim. Can only be called by admin.\n     */\n    function unpauseClaim() public onlyRole(ADMIN_ROLE) {\n        require(claimPaused, \"claim has already been unpaused\");\n        claimPaused = false;\n        emit UnpausedClaim();\n    }\n\n    // TODO: 这俩函数为啥单独拎出来，设置区块的放一类，设置池子放另一类？\n    /**\n     * @notice Update staking start block. Can only be called by admin.\n     */\n    function setStartBlock(uint256 _startBlock) public onlyRole(ADMIN_ROLE) {\n        require(\n            _startBlock <= endBlock,\n            \"start block must be less than end block\"\n        );\n        startBlock = _startBlock;\n        emit SetStartBlock(_startBlock);\n    }\n\n    /**\n     * @notice Update staking end block. Can only be called by admin.\n     */\n    function setEndBlock(uint256 _endBlock) public onlyRole(ADMIN_ROLE) {\n        require(\n            startBlock <= _endBlock,\n            \"start block must be less than end block\"\n        );\n        endBlock = _endBlock;\n        emit SetEndBlock(_endBlock);\n    }\n\n    /**\n     * @notice Update the RCC reward amount per block. Can only be called by admin.\n     */\n    function setRCCPerBlock(uint256 _rccPerBlock) public onlyRole(ADMIN_ROLE) {\n        require(_rccPerBlock > 0, \"rcc per block must be greater than 0\");\n        rccPerBlock = _rccPerBlock;\n        emit SetRCCPerBlock(_rccPerBlock);\n    }\n\n    /**\n     * @notice Add a new staking to pool. Can only be called by admin\n     * DO NOT add the same staking token more than once. RCC rewards will be messed up if you do\n     */\n    function addPool(\n        address _stakeTokenAddress,\n        uint256 _poolWeight /** TODO: 这权重放的是不是太随意了？ */,\n        uint256 _minDepositAmount,\n        uint256 _unStakeLockedBlocks,\n        bool _withUpdate /** 是指创建这个池子的同时要不要同时更新别的池子（因为权重有了变化） */\n    ) public onlyRole(ADMIN_ROLE) {\n        // Default the first pool to be ETH pool, so the first pool must be added with stakeTokenAddress = address(0x0)\n        if (pool.length > 0) {\n            require(\n                pool[0].stakeTokenAddress == address(0x0),\n                \"the first pool must be ETH pool\"\n            );\n        } else {\n            require(\n                _stakeTokenAddress == address(0x0),\n                \"the first pool must be ETH pool\"\n            );\n        }\n        // allow the min deposit amount equal to 0 TODO: 为啥？存款0有什么意义？\n        require(_unStakeLockedBlocks > 0, \"invalid withdraw locked blocks\"); // TODO: 这个等于0也可以吧？\n        require(block.number < endBlock, \"already ended\");\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardBlock = block.number > startBlock\n            ? block.number\n            : startBlock;\n        totalPoolWeight += _poolWeight;\n        pool.push(\n            Pool({\n                stakeTokenAddress: _stakeTokenAddress,\n                poolWeight: _poolWeight,\n                lastRewardBlock: lastRewardBlock,\n                accumulateRewardsPerStake: 0,\n                stakeTokenAmount: 0,\n                minDepositAmount: _minDepositAmount,\n                unStakeLockedBlocks: _unStakeLockedBlocks\n            })\n        );\n        emit AddPool(\n            _stakeTokenAddress,\n            _poolWeight,\n            lastRewardBlock,\n            _minDepositAmount,\n            _unStakeLockedBlocks\n        );\n    }\n\n    /**\n     * @notice Update the given pool's info (minDepositAmount and unStakeLockedBlocks). Can only be called by admin.\n     * 这就是函数签名的作用，函数重名没事儿，还有参数返回值啥的呢；、\n     *\n     * 更新池子干了啥事儿\n     * - 改了最小存入金额\n     * - 不能提取的区块锁定区\n     */\n    function updatePool(\n        uint256 _poolId,\n        uint256 _minDepositAmount,\n        uint256 _unStakeLockedBlocks\n    ) public checkPid(_poolId) onlyRole(ADMIN_ROLE) {\n        require(_poolId < pool.length, \"invalid pool id\");\n        pool[_poolId].minDepositAmount = _minDepositAmount;\n        pool[_poolId].unStakeLockedBlocks = _unStakeLockedBlocks;\n        emit UpdatePoolInfo(_poolId, _minDepositAmount, _unStakeLockedBlocks);\n    }\n\n    /**\n     * @notice Update the given pool's weight. Can only be called by admin.\n     */\n    function setPoolWeight(\n        uint256 _poolId,\n        uint256 _poolWeight,\n        bool _withUpdate\n    ) public onlyRole(ADMIN_ROLE) {\n        require(_poolId < pool.length, \"invalid pool id\");\n        require(_poolWeight > 0, \"invalid pool weight\");\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        totalPoolWeight =\n            totalPoolWeight -\n            pool[_poolId].poolWeight +\n            _poolWeight;\n        pool[_poolId].poolWeight = _poolWeight;\n        emit SetPoolWeight(_poolId, _poolWeight, totalPoolWeight);\n    }\n\n    // ************************************** QUERY FUNCTION **************************************\n    /**\n     * @notice Get the length/amount of pool\n     */\n    function getPoolLength() public view returns (uint256) {\n        return pool.length;\n    }\n\n    /**\n     * @notice Return reward multiplier over given _from to _to block. [_from, _to)\n     *\n     * @param _from    From block number (included)\n     * @param _to      To block number (exluded)\n     */\n    function getMultiplier(\n        uint256 _from,\n        uint256 _to\n    ) public view returns (uint256 multiplier) {\n        require(_from <= _to, \"invalid range\");\n        if (_from < startBlock) {\n            _from = startBlock;\n        }\n        if (_to > endBlock) {\n            _to = endBlock;\n        }\n        require(_to - _from > 0, \"invalid range\");\n        bool success;\n        (success, multiplier) = (_to - _from).tryMul(rccPerBlock);\n        require(success, \"multiplier overflow\");\n    }\n\n    /**\n     * @notice Get pending RCC amount of user in pool\n     */\n    function getPendingRCC(\n        uint256 _poolId,\n        address _user\n    ) external view checkPid(_poolId) returns (uint256) {\n        return pendingRCCByBlockNumber(_poolId, _user, block.number);\n    }\n\n    /**\n     * @notice Get pending RCC amount of user by block number in pool\n     */\n    function pendingRCCByBlockNumber(\n        uint256 _poolId,\n        address _user,\n        uint256 _blockNumber\n    ) public view returns (uint256) {\n        Pool storage pool_ = pool[_poolId];\n        User storage user_ = user[_poolId][_user];\n        uint256 accumulateRewardsPerStake = pool_.accumulateRewardsPerStake;\n        uint256 stSupply = pool_.stakeTokenAmount;\n        if (_blockNumber < pool_.lastRewardBlock && stSupply != 0) {\n            uint256 multiplier = getMultiplier(\n                pool_.lastRewardBlock,\n                _blockNumber\n            );\n            uint256 rccForPool = (multiplier * pool_.poolWeight) /\n                totalPoolWeight;\n            accumulateRewardsPerStake =\n                accumulateRewardsPerStake +\n                (rccForPool * (1 ether)) /\n                stSupply;\n        }\n        return\n            user_.stakeAmount +\n            accumulateRewardsPerStake /\n            (1 ether) -\n            user_.finishedRewards +\n            user_.pendingRewards;\n    }\n\n    /**\n     * @notice Get the staking amount of user\n     */\n    function stakingBalance(\n        uint256 _pid,\n        address _user\n    ) external view checkPid(_pid) returns (uint256) {\n        return user[_pid][_user].stakeAmount;\n    }\n\n    /**\n     * @notice Get the withdraw amount info, including the locked unstake amount and the unlocked unstake amount\n     */\n    function withdrawAmount(\n        uint256 _poolId,\n        address _user\n    )\n        public\n        view\n        checkPid(_poolId)\n        returns (uint256 requestAmount, uint256 pendingWithdrawAmount)\n    {\n        User storage user_ = user[_poolId][_user];\n        for (uint256 i = 0; i < user_.requests.length; i++) {\n            if (user_.requests[i].unlockBlocksCounts <= block.number) {\n                pendingWithdrawAmount =\n                    pendingWithdrawAmount +\n                    user_.requests[i].amount;\n            }\n            requestAmount = requestAmount + user_.requests[i].amount;\n        }\n    }\n\n    // ************************************** PUBLIC FUNCTION **************************************\n    /**\n     * @notice Update reward variables of the given pool to be up-to-date.\n     * 主要是更新\n     * - 池子里每单位代币累计发放的奖励；（TODO: 这个数据的参考价值有多高呢？）\n     * - 最后发放奖励区块的number；\n     * - 更新整个池子，累计应该方法的奖励；\n     */\n    function updatePool(uint256 _pid) public checkPid(_pid) {\n        Pool storage pool_ = pool[_pid];\n\n        if (block.number <= pool_.lastRewardBlock) {\n            return;\n        }\n        uint256 stakeTokenAmount = pool_.stakeTokenAmount;\n        if (stakeTokenAmount == 0) {\n            pool_.lastRewardBlock = block.number;\n            return;\n        }\n        // 在这段区块里，所有池子奖励的代币总和 * 池子的权重\n        (bool success1, uint256 totalRCC) = getMultiplier(\n            pool_.lastRewardBlock,\n            block.number\n        ).tryMul(pool_.poolWeight);\n        require(success1, \"overflow\");\n        // 池子奖励的代币总和 * 池子的权重 / 池子总权重 = 该池子这段区块链奖励的代币总和;\n        // 之所以要分步计算，就是避免中间某个步骤计算溢出导致错误；\n        (success1, totalRCC) = totalRCC.tryDiv(totalPoolWeight);\n        require(success1, \"overflow\");\n        // 看这个池子里已质押的代币总数量\n        uint256 stSupply = pool_.stakeTokenAmount;\n        // 要是有质押的代币\n        if (stSupply > 0) {\n            // TODO: 乘个1 ether是什么意思呢？\n            (bool success2, uint256 totalRCC_) = totalRCC.tryMul(1 ether);\n            require(success2, \"overflow\");\n            // 这段区块链里，每一单位代币要分的token数量\n            (success2, totalRCC_) = totalRCC_.tryDiv(stSupply);\n            require(success2, \"overflow\");\n            // 累计发放的记录上\n            (bool success3, uint256 accumulateRewardsPerStake) = pool_\n                .accumulateRewardsPerStake\n                .tryAdd(totalRCC_);\n            require(success3, \"overflow\");\n            pool_.accumulateRewardsPerStake = accumulateRewardsPerStake;\n        }\n        // 更新最后计算奖励的区块\n        pool_.lastRewardBlock = block.number;\n\n        emit UpdatePool(_pid, pool_.lastRewardBlock, totalRCC);\n    }\n\n    /**\n     * @notice Update reward variables for all pools. Be careful of gas spending!\n     */\n    function massUpdatePools() public {\n        /** TODO: 这个方法为啥用public，不用 private 或 external？\n         * - 啥时候用public？希望外部调用的、状态变更函数、查询函数（合约状态）、接口函数、管理员功能\n         * - public和external咋区分，一般如果方法只需要在外部调用，用external，节省gas；所以，优先external，其次public；\n         */\n        /** 因为读取要消耗gas，所以弄一个变量么？ */\n        uint256 length = pool.length;\n        for (uint256 i = 0; i < length; i++) {\n            updatePool(i);\n        }\n    }\n\n    /**\n     * @notice Deposit staking ETH for RCC rewards\n     */\n    function depositETH() public payable whenNotPaused {\n        Pool storage pool_ = pool[ETH_PID];\n        require(\n            pool_.stakeTokenAddress == address(0x0),\n            \"ETH pool must be created first\"\n        );\n\n        uint256 _amount = msg.value;\n        require(_amount > pool_.minDepositAmount, \"invalid deposit amount\");\n        _deposit(ETH_PID, _amount);\n    }\n\n    /**\n     * @notice Deposit staking token for RCC rewards\n     * Before depositing, user needs approve this contract to be able to spend or transfer their staking tokens\n     *\n     * @param _pid       Id of the pool to be deposited to\n     * @param _amount    Amount of staking tokens to be deposited\n     */\n    function deposit(\n        uint256 _pid,\n        uint256 _amount\n    ) public whenNotWithdrawPaused checkPid(_pid) {\n        // TODO: 为什么不接受ETH的质押，因为已经有了eth方法？那这两个方法为啥还要单独区分？\n        require(_pid != 0, \"deposit not support ETH staking\");\n        Pool storage pool_ = pool[_pid];\n        require(_amount > pool_.minDepositAmount, \"invalid deposit amount\");\n        if (_amount > 0) {\n            IERC20(pool_.stakeTokenAddress).safeTransferFrom(\n                msg.sender,\n                address(this),\n                _amount\n            );\n        }\n        _deposit(_pid, _amount);\n    }\n\n    /**\n     * @notice Unstake staking tokens\n     *\n     * @param _pid       Id of the pool to be withdrawn from\n     * @param _amount    amount of staking tokens to be withdrawn\n     */\n    function unstake(\n        uint256 _pid,\n        uint256 _amount\n    ) public whenNotPaused whenNotWithdrawPaused checkPid(_pid) {\n        Pool storage pool_ = pool[_pid];\n        User storage user_ = user[_pid][msg.sender];\n        require(user_.stakeAmount >= _amount, \"insufficient staking amount\");\n        updatePool(_pid);\n        uint256 pendingRCC_ = (user_.stakeAmount *\n            pool_.accumulateRewardsPerStake) /\n            (1 ether) -\n            user_.finishedRewards;\n        if (pendingRCC_ > 0) {\n            user_.pendingRewards += pendingRCC_;\n        }\n        if (_amount > 0) {\n            user_.stakeAmount -= _amount;\n            user_.requests.push(\n                UnStakeRequest({\n                    amount: _amount,\n                    unlockBlocksCounts: block.number + pool_.unStakeLockedBlocks\n                })\n            );\n        }\n        pool_.stakeTokenAmount -= _amount;\n        user_.finishedRewards +=\n            (user_.stakeAmount * pool_.accumulateRewardsPerStake) /\n            (1 ether);\n        emit RequestUnstake(msg.sender, _pid, _amount);\n    }\n\n    /**\n     * @notice Withdraw the unlock unstake amount\n     * @param _pid       Id of the pool to be withdrawn from\n     * 功能: 提取一个池子里所有的代币\n     * - 提取池子里所有的代币；\n     * - 拿走所有的奖励；\n     * - 更新池子\n     * - 发射事件\n     */\n    function withdraw(\n        uint256 _pid\n    ) public whenNotPaused whenNotWithdrawPaused checkPid(_pid) {\n        Pool storage pool_ = pool[_pid];\n        User storage user_ = user[_pid][msg.sender];\n        uint256 pendingWithdraw_;\n        uint256 popNum_;\n        // 跳过解锁时间小于当前区块的请求\n        for (uint256 i = 0; i < user_.requests.length; i++) {\n            if (user_.requests[i].unlockBlocksCounts <= block.number) {\n                break;\n            }\n            pendingWithdraw_ = pendingWithdraw_ + user_.requests[i].amount;\n            popNum_++;\n        }\n        // TODO: 这啥意思\n        for (uint256 i = 0; i < user_.requests.length - popNum_; i++) {\n            user_.requests[i] = user_.requests[i + popNum_];\n        }\n        for (uint256 i = 0; i < popNum_; i++) {\n            user_.requests.pop();\n        }\n        if (pendingWithdraw_ > 0) {\n            if (pool_.stakeTokenAddress == address(0x0)) {\n                _safeETHTransfer(msg.sender, pendingWithdraw_);\n            } else {\n                IERC20(pool_.stakeTokenAddress).safeTransfer(\n                    msg.sender,\n                    pendingWithdraw_\n                );\n            }\n        }\n        emit Withdraw(msg.sender, _pid, pendingWithdraw_, block.number);\n    }\n\n    /**\n     * @notice Claim RCC tokens reward\n     *\n     * @param _pid       Id of the pool to be claimed from\n     *\n     * 索取、主张、索赔\n     * TODO: 这段逻辑谁调用？\n     */\n    function claim(\n        uint256 _pid\n    ) public whenNotPaused checkPid(_pid) whenNotClaimPaused {\n        Pool storage pool_ = pool[_pid];\n        User storage user_ = user[_pid][msg.sender];\n        updatePool(_pid);\n        uint256 pendingRCC_ = (user_.stakeAmount *\n            pool_.accumulateRewardsPerStake) /\n            (1 ether) -\n            user_.finishedRewards +\n            user_.pendingRewards;\n        if (pendingRCC_ > 0) {\n            user_.pendingRewards = 0;\n            _safeRCCTransfer(msg.sender, pendingRCC_);\n        }\n        user_.finishedRewards =\n            (user_.stakeAmount * pool_.accumulateRewardsPerStake) /\n            (1 ether);\n        emit Claim(msg.sender, _pid, pendingRCC_);\n    }\n\n    // ************************************** INTERNAL FUNCTION **************************************\n\n    /**\n     * @notice Deposit staking token for RCC rewards\n     *\n     * @param _pid       Id of the pool to be deposited to\n     * @param _amount    Amount of staking tokens to be deposited\n     */\n    function _deposit(uint256 _pid, uint256 _amount) internal {\n        Pool storage pool_ = pool[_pid];\n        User storage user_ = user[_pid][msg.sender];\n        updatePool(_pid);\n        // 先处理已有质押的奖励\n        if (user_.stakeAmount > 0) {\n            (bool success1, uint256 accStakeToken) = user_.stakeAmount.tryMul(\n                pool_.accumulateRewardsPerStake\n            );\n            require(success1, \"user stake amount overflow\");\n            (success1, accStakeToken) = accStakeToken.tryDiv(1 ether);\n            require(success1, \"accumulate rewards per stake overflow\");\n\n            (bool success2, uint256 pendingRCC_) = accStakeToken.trySub(\n                user_.finishedRewards\n            );\n            require(success2, \"pending rewards overflow\");\n            if (pendingRCC_ > 0) {\n                (bool success3, uint256 _pendingRCC) = user_\n                    .pendingRewards\n                    .tryAdd(pendingRCC_);\n                require(success3, \"pending rewards overflow\");\n                user_.pendingRewards = _pendingRCC;\n            }\n        }\n        // 再处理新来的质押逻辑\n        if (_amount > 0) {\n            (bool success4, uint256 accStakeAmount) = _amount.tryMul(\n                user_.stakeAmount\n            );\n            require(success4, \"accumulate stake amount overflow\");\n            user_.stakeAmount = accStakeAmount;\n        }\n        // 把池子总的质押数量加上\n        (bool success5, uint256 _stakeTokenAmount) = pool_\n            .stakeTokenAmount\n            .tryAdd(_amount);\n        require(success5, \"stake token amount overflow\");\n        pool_.stakeTokenAmount = _stakeTokenAmount;\n\n        (bool success6, uint256 _finishedRewards) = user_.stakeAmount.tryMul(\n            pool_.accumulateRewardsPerStake\n        );\n        require(success6, \"user stAmount mul accRCCPerST overflow\");\n        user_.finishedRewards = _finishedRewards;\n\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    /**\n     * @notice Safe RCC transfer function, just in case if rounding error causes pool to not have enough RCCs\n     *\n     * @param _to        Address to get transferred RCCs\n     * @param _amount    Amount of RCC to be transferred\n     */\n    function _safeRCCTransfer(address _to, uint256 _amount) internal {\n        uint256 RCCBal = RCC.balanceOf(address(this));\n        if (_amount <= RCCBal) {\n            RCC.transfer(_to, _amount);\n        } else {\n            RCC.transfer(_to, RCCBal);\n        }\n    }\n\n    /**\n     * @notice Safe ETH transfer function\n     *\n     * @param _to        Address to get transferred ETH\n     * @param _amount    Amount of ETH to be transferred\n     * FIXME: 什么函数适合放在 internal，只有内部调用的；哪些函数是只能放在内部调用呢？\n     * - 转账，涉及到钱的；也不完全这样说，角色权限 + 控制也可以，看取舍，修饰符，方法就那几个，遍历一下也可；\n     */\n    function _safeETHTransfer(address _to, uint256 _amount) internal {\n        // 这个是低级调用，给对方账户转账\n        (bool success, bytes memory data) = address(_to).call{value: _amount}(\n            \"\"\n        );\n        require(success, \"ETH transfer call failed\");\n        if (data.length > 0) {\n            require(\n                abi.decode(data, (bool)),\n                \"ETH transfer operation did not succeed\"\n            );\n        }\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5574","formattedMessage":"Warning: Contract code size is 24766 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.\n  --> contracts/rcc-stake.sol:16:1:\n   |\n16 | contract RCCStake is\n   | ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Contract code size is 24766 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.","severity":"warning","sourceLocation":{"end":28375,"file":"contracts/rcc-stake.sol","start":893},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[844],"ERC165Upgradeable":[1060],"IAccessControl":[1143],"Initializable":[616]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1144,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":845,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1061,"src":"284:79:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"292:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":617,"src":"364:63:0","symbolAliases":[{"foreign":{"id":8,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"372:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":11,"name":"Initializable","nameLocations":["2136:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"2136:13:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"2136:13:0"},{"baseName":{"id":13,"name":"ContextUpgradeable","nameLocations":["2151:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":844,"src":"2151:18:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2151:18:0"},{"baseName":{"id":15,"name":"IAccessControl","nameLocations":["2171:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":1143,"src":"2171:14:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2171:14:0"},{"baseName":{"id":17,"name":"ERC165Upgradeable","nameLocations":["2187:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":1060,"src":"2187:17:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2187:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"429:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,1060,2525,1143,844,616],"name":"AccessControlUpgradeable","nameLocation":"2108:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":25,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"hasRole","nameLocation":"2270:7:0","nodeType":"VariableDeclaration","scope":25,"src":"2237:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":21,"keyName":"account","keyNameLocation":"2253:7:0","keyType":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2237:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"adminRole","nameLocation":"2295:9:0","nodeType":"VariableDeclaration","scope":25,"src":"2287:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2218:8:0","nodeType":"StructDefinition","scope":362,"src":"2211:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":28,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2341:18:0","nodeType":"VariableDeclaration","scope":362,"src":"2317:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2374:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":35,"members":[{"constant":false,"id":34,"mutability":"mutable","name":"_roles","nameLocation":"2522:6:0","nodeType":"VariableDeclaration","scope":35,"src":"2488:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":33,"keyName":"role","keyNameLocation":"2504:4:0","keyType":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2496:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2488:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"RoleData","nameLocations":["2512:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2512:8:0"},"referencedDeclaration":25,"src":"2512:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2457:20:0","nodeType":"StructDefinition","scope":362,"src":"2450:85:0","visibility":"public"},{"constant":true,"id":38,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2683:28:0","nodeType":"VariableDeclaration","scope":362,"src":"2658:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"2877:87:0","statements":[{"AST":{"nativeSrc":"2896:62:0","nodeType":"YulBlock","src":"2896:62:0","statements":[{"nativeSrc":"2910:38:0","nodeType":"YulAssignment","src":"2910:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"2920:28:0","nodeType":"YulIdentifier","src":"2920:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2910:6:0","nodeType":"YulIdentifier","src":"2910:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":42,"isOffset":false,"isSlot":true,"src":"2910:6:0","suffix":"slot","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"2920:28:0","valueSize":1}],"id":44,"nodeType":"InlineAssembly","src":"2887:71:0"}]},"id":46,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2796:24:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"2820:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"$","nameLocation":"2874:1:0","nodeType":"VariableDeclaration","scope":46,"src":"2845:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":41,"nodeType":"UserDefinedTypeName","pathNode":{"id":40,"name":"AccessControlStorage","nameLocations":["2845:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"2845:20:0"},"referencedDeclaration":35,"src":"2845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2844:32:0"},"scope":362,"src":"2787:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"3181:44:0","statements":[{"expression":{"arguments":[{"id":52,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3202:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":51,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":129,"src":"3191:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"3191:16:0"},{"id":55,"nodeType":"PlaceholderStatement","src":"3217:1:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2970:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":57,"name":"onlyRole","nameLocation":"3158:8:0","nodeType":"ModifierDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"role","nameLocation":"3175:4:0","nodeType":"VariableDeclaration","scope":57,"src":"3167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3167:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3166:14:0"},"src":"3149:76:0","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"3289:7:0","statements":[]},"id":63,"implemented":true,"kind":"function","modifiers":[{"id":60,"kind":"modifierInvocation","modifierName":{"id":59,"name":"onlyInitializing","nameLocations":["3272:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3272:16:0"},"nodeType":"ModifierInvocation","src":"3272:16:0"}],"name":"__AccessControl_init","nameLocation":"3240:20:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3260:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"3289:0:0"},"scope":362,"src":"3231:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":68,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":69,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3311:30:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":362,"src":"3302:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1059],"body":{"id":90,"nodeType":"Block","src":"3534:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3551:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":80,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3571:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1143_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1143_$","typeString":"type(contract IAccessControl)"}],"id":79,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3566:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$1143","typeString":"type(contract IAccessControl)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3587:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3566:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3551:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":86,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3626:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":84,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$362_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"3602:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3551:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":77,"id":89,"nodeType":"Return","src":"3544:94:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"3382:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3452:17:0","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"3510:8:0"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"interfaceId","nameLocation":"3477:11:0","nodeType":"VariableDeclaration","scope":91,"src":"3470:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":71,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3470:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3469:20:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"3528:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":75,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3527:6:0"},"scope":362,"src":"3443:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1110],"body":{"id":115,"nodeType":"Block","src":"3815:124:0","statements":[{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"$","nameLocation":"3854:1:0","nodeType":"VariableDeclaration","scope":115,"src":"3825:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"AccessControlStorage","nameLocations":["3825:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"3825:20:0"},"referencedDeclaration":35,"src":"3825:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":106,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":104,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"3858:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3825:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":107,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3901:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3901:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":110,"indexExpression":{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3910:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":113,"indexExpression":{"id":112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3924:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":100,"id":114,"nodeType":"Return","src":"3894:38:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3651:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3741:7:0","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"role","nameLocation":"3757:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3749:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":93,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3749:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"account","nameLocation":"3771:7:0","nodeType":"VariableDeclaration","scope":116,"src":"3763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"3809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":98,"name":"bool","nodeType":"ElementaryTypeName","src":"3809:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3808:6:0"},"scope":362,"src":"3732:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"4204:47:0","statements":[{"expression":{"arguments":[{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4225:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":124,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"4231:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"4214:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"4214:30:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"3945:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4157:10:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"role","nameLocation":"4176:4:0","nodeType":"VariableDeclaration","scope":129,"src":"4168:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":362,"src":"4148:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"4454:124:0","statements":[{"condition":{"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4468:23:0","subExpression":{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4483:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4469:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"4464:108:0","trueBody":{"id":147,"nodeType":"Block","src":"4493:79:0","statements":[{"errorCall":{"arguments":[{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4547:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":144,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4556:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":142,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4514:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":146,"nodeType":"RevertStatement","src":"4507:54:0"}]}}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4257:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4390:10:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4409:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4401:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4401:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4423:7:0","nodeType":"VariableDeclaration","scope":150,"src":"4415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4400:31:0"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4454:0:0"},"scope":362,"src":"4381:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1118],"body":{"id":170,"nodeType":"Block","src":"4833:117:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"$","nameLocation":"4872:1:0","nodeType":"VariableDeclaration","scope":170,"src":"4843:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"AccessControlStorage","nameLocations":["4843:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"4843:20:0"},"referencedDeclaration":35,"src":"4843:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4876:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4843:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":164,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"4919:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"4919:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":167,"indexExpression":{"id":166,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4928:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4919:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4934:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4919:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":157,"id":169,"nodeType":"Return","src":"4912:31:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4584:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4768:12:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4789:4:0","nodeType":"VariableDeclaration","scope":171,"src":"4781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:0"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"4824:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4823:9:0"},"scope":362,"src":"4759:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1126],"body":{"id":189,"nodeType":"Block","src":"5340:42:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5361:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5367:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5350:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5350:25:0"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"4956:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5333:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5320:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5311:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5311:8:0"},"nodeType":"ModifierInvocation","src":"5311:28:0"}],"name":"grantRole","nameLocation":"5255:9:0","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"role","nameLocation":"5273:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5265:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5265:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"5287:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5279:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5264:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5340:0:0"},"scope":362,"src":"5246:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1134],"body":{"id":208,"nodeType":"Block","src":"5757:43:0","statements":[{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5779:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5785:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5767:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":207,"nodeType":"ExpressionStatement","src":"5767:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5388:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":209,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":199,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":198,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5737:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":201,"kind":"modifierInvocation","modifierName":{"id":197,"name":"onlyRole","nameLocations":["5728:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5728:8:0"},"nodeType":"ModifierInvocation","src":"5728:28:0"}],"name":"revokeRole","nameLocation":"5671:10:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5690:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5682:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5704:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5696:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:31:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"5757:0:0"},"scope":362,"src":"5662:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1142],"body":{"id":231,"nodeType":"Block","src":"6427:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6441:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"6463:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6441:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"IfStatement","src":"6437:102:0","trueBody":{"id":224,"nodeType":"Block","src":"6477:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6498:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":223,"nodeType":"RevertStatement","src":"6491:37:0"}]}},{"expression":{"arguments":[{"id":227,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":228,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6567:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":226,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"6549:37:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"5806:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6357:12:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6378:4:0","nodeType":"VariableDeclaration","scope":232,"src":"6370:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6392:18:0","nodeType":"VariableDeclaration","scope":232,"src":"6384:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6369:42:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6427:0:0"},"scope":362,"src":"6348:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":267,"nodeType":"Block","src":"6791:245:0","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"$","nameLocation":"6830:1:0","nodeType":"VariableDeclaration","scope":267,"src":"6801:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"AccessControlStorage","nameLocations":["6801:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"6801:20:0"},"referencedDeclaration":35,"src":"6801:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"6834:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6801:59:0"},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6878:17:0","nodeType":"VariableDeclaration","scope":267,"src":"6870:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6911:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"6898:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6870:46:0"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6926:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6928:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6926:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":256,"indexExpression":{"id":254,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6935:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6941:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6926:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6953:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6926:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":260,"nodeType":"ExpressionStatement","src":"6926:36:0"},{"eventCall":{"arguments":[{"id":262,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6994:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7000:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":264,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7019:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":261,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"6977:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"6972:57:0"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"6599:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6727:13:0","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"role","nameLocation":"6749:4:0","nodeType":"VariableDeclaration","scope":268,"src":"6741:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"adminRole","nameLocation":"6763:9:0","nodeType":"VariableDeclaration","scope":268,"src":"6755:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6755:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6740:33:0"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"6791:0:0"},"scope":362,"src":"6718:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"7353:304:0","statements":[{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"$","nameLocation":"7392:1:0","nodeType":"VariableDeclaration","scope":314,"src":"7363:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"AccessControlStorage","nameLocations":["7363:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7363:20:0"},"referencedDeclaration":35,"src":"7363:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7396:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7396:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7363:59:0"},{"condition":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7436:23:0","subExpression":{"arguments":[{"id":285,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":286,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7451:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7437:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"7614:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7635:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":277,"id":311,"nodeType":"Return","src":"7628:12:0"}]},"id":313,"nodeType":"IfStatement","src":"7432:219:0","trueBody":{"id":309,"nodeType":"Block","src":"7461:147:0","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7475:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7477:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7475:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":293,"indexExpression":{"id":291,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7475:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7490:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"7475:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":296,"indexExpression":{"id":295,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7498:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7509:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7475:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":299,"nodeType":"ExpressionStatement","src":"7475:38:0"},{"eventCall":{"arguments":[{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7544:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7550:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"7559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"7532:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"7527:45:0"},{"expression":{"hexValue":"74727565","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":277,"id":308,"nodeType":"Return","src":"7586:11:0"}]}}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7042:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7279:10:0","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"role","nameLocation":"7298:4:0","nodeType":"VariableDeclaration","scope":315,"src":"7290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"account","nameLocation":"7312:7:0","nodeType":"VariableDeclaration","scope":315,"src":"7304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7289:31:0"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"7347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"7347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7346:6:0"},"scope":362,"src":"7270:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"7976:304:0","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"$","nameLocation":"8015:1:0","nodeType":"VariableDeclaration","scope":360,"src":"7986:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"AccessControlStorage","nameLocations":["7986:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7986:20:0"},"referencedDeclaration":35,"src":"7986:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":328,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"8019:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8019:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7986:59:0"},{"condition":{"arguments":[{"id":332,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8067:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":333,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8073:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":331,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8059:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8059:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":358,"nodeType":"Block","src":"8237:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8258:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":324,"id":357,"nodeType":"Return","src":"8251:12:0"}]},"id":359,"nodeType":"IfStatement","src":"8055:219:0","trueBody":{"id":355,"nodeType":"Block","src":"8083:148:0","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":335,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8097:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8099:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"8097:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":339,"indexExpression":{"id":337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8106:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8097:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8112:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"8097:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":342,"indexExpression":{"id":341,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8120:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8097:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8131:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8097:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":345,"nodeType":"ExpressionStatement","src":"8097:39:0"},{"eventCall":{"arguments":[{"id":347,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8167:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8173:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8182:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8182:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"8155:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8155:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"EmitStatement","src":"8150:45:0"},{"expression":{"hexValue":"74727565","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8216:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":324,"id":354,"nodeType":"Return","src":"8209:11:0"}]}}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"7663:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7901:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"role","nameLocation":"7921:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7913:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7913:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"account","nameLocation":"7935:7:0","nodeType":"VariableDeclaration","scope":361,"src":"7927:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7912:31:0"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"7970:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"7970:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7969:6:0"},"scope":362,"src":"7892:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":363,"src":"2090:6192:0","usedErrors":[379,382,1070,1073],"usedEvents":[387,1082,1091,1100]}],"src":"108:8175:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[616]},"id":617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":616,"linearizedBaseContracts":[616],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":373,"members":[{"constant":false,"id":369,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":373,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":368,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":373,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":371,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":616,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":376,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":616,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":379,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":382,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":387,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":387,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":384,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":469,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":469,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":391,"nodeType":"UserDefinedTypeName","pathNode":{"id":390,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"4158:20:1"},"referencedDeclaration":373,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":393,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[397],"declarations":[{"constant":false,"id":397,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":469,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":396,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":401,"initialValue":{"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":398,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":469,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":402,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":406,"initialValue":{"expression":{"id":404,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[408],"declarations":[{"constant":false,"id":408,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":407,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":414,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":412,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[416],"declarations":[{"constant":false,"id":416,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":415,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":429,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":417,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":422,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$616","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$616","typeString":"contract Initializable"}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":430,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":432,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":438,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":437,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":440,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":445,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":446,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":454,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":453,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":447,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":452,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":455,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":456,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":467,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":457,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":463,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":470,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":516,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[477],"declarations":[{"constant":false,"id":477,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":516,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":476,"nodeType":"UserDefinedTypeName","pathNode":{"id":475,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"6357:20:1"},"referencedDeclaration":373,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":480,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":478,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":481,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":483,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":485,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":492,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":491,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":488,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":490,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":493,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":496,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":498,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":499,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":504,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":505,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":506,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":511,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":513,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":512,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":517,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":517,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":472,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":524,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":520,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":523,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":525,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":537,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":529,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":535,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":532,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":534,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":616,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":583,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":543,"nodeType":"UserDefinedTypeName","pathNode":{"id":542,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"7826:20:1"},"referencedDeclaration":373,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":547,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":545,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":548,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":554,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":553,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":550,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":552,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":555,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":558,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":582,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":581,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":563,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":572,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":575,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":573,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":616,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":590,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":589,"id":593,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":587,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":616,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":601,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":600,"id":604,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":598,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":616,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":614,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":611,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":376,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":613,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":615,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":610,"nodeType":"UserDefinedTypeName","pathNode":{"id":609,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"8795:20:1"},"referencedDeclaration":373,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":616,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":617,"src":"2349:6560:1","usedErrors":[379,382],"usedEvents":[387]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1558],"IERC1822Proxiable":[1264],"Initializable":[616],"UUPSUpgradeable":[798]},"id":799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":618,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":799,"sourceUnit":1265,"src":"141:88:2","symbolAliases":[{"foreign":{"id":619,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":622,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":799,"sourceUnit":1559,"src":"230:84:2","symbolAliases":[{"foreign":{"id":621,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":799,"sourceUnit":617,"src":"315:50:2","symbolAliases":[{"foreign":{"id":623,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":626,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"1023:13:2"},"id":627,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":628,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1264,"src":"1038:17:2"},"id":629,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":798,"linearizedBaseContracts":[798,1264,616],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":636,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":798,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":634,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}],"id":633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":637,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":640,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":798,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":638,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":643,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":648,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":648,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":655,"nodeType":"Block","src":"2645:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":651,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"2655:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"2655:13:2"},{"id":654,"nodeType":"PlaceholderStatement","src":"2678:1:2"}]},"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"2124:495:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":656,"name":"onlyProxy","nameLocation":"2633:9:2","nodeType":"ModifierDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"2642:2:2"},"src":"2624:62:2","virtual":false,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"2916:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":659,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"2926:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"2926:20:2"},{"id":662,"nodeType":"PlaceholderStatement","src":"2956:1:2"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"2692:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":664,"name":"notDelegated","nameLocation":"2901:12:2","nodeType":"ModifierDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"2913:2:2"},"src":"2892:72:2","virtual":false,"visibility":"internal"},{"body":{"id":669,"nodeType":"Block","src":"3030:7:2","statements":[]},"id":670,"implemented":true,"kind":"function","modifiers":[{"id":667,"kind":"modifierInvocation","modifierName":{"id":666,"name":"onlyInitializing","nameLocations":["3013:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3013:16:2"},"nodeType":"ModifierInvocation","src":"3013:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:2","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[],"src":"3001:2:2"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"3030:0:2"},"scope":798,"src":"2970:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"3113:7:2","statements":[]},"id":676,"implemented":true,"kind":"function","modifiers":[{"id":673,"kind":"modifierInvocation","modifierName":{"id":672,"name":"onlyInitializing","nameLocations":["3096:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3096:16:2"},"nodeType":"ModifierInvocation","src":"3096:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:2","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"3084:2:2"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"3113:0:2"},"scope":798,"src":"3043:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1263],"body":{"id":687,"nodeType":"Block","src":"3786:56:2","statements":[{"expression":{"expression":{"id":684,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"3803:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1558_$","typeString":"type(library ERC1967Utils)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1279,"src":"3803:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":683,"id":686,"nodeType":"Return","src":"3796:39:2"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"3125:578:2","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":688,"implemented":true,"kind":"function","modifiers":[{"id":680,"kind":"modifierInvocation","modifierName":{"id":679,"name":"notDelegated","nameLocations":["3755:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"3755:12:2"},"nodeType":"ModifierInvocation","src":"3755:12:2"}],"name":"proxiableUUID","nameLocation":"3717:13:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"3730:2:2"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"3777:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:2"},"scope":798,"src":"3708:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":707,"nodeType":"Block","src":"4266:109:2","statements":[{"expression":{"arguments":[{"id":699,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4294:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":698,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4276:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"4276:36:2"},{"expression":{"arguments":[{"id":703,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4344:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":704,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"4363:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":702,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"4322:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"ExpressionStatement","src":"4322:46:2"}]},"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"3848:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":708,"implemented":true,"kind":"function","modifiers":[{"id":696,"kind":"modifierInvocation","modifierName":{"id":695,"name":"onlyProxy","nameLocations":["4256:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":656,"src":"4256:9:2"},"nodeType":"ModifierInvocation","src":"4256:9:2"}],"name":"upgradeToAndCall","nameLocation":"4170:16:2","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:2","nodeType":"VariableDeclaration","scope":708,"src":"4187:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"data","nameLocation":"4227:4:2","nodeType":"VariableDeclaration","scope":708,"src":"4214:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":692,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:2"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[],"src":"4266:0:2"},"scope":798,"src":"4161:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":729,"nodeType":"Block","src":"4648:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":714,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4683:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}],"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4675:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"4675:7:2","typeDescriptions":{}}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4675:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":716,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4692:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4675:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":718,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"4753:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1558_$","typeString":"type(library ERC1967Utils)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4766:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1310,"src":"4753:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4753:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":721,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4789:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4753:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4675:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":728,"nodeType":"IfStatement","src":"4658:251:2","trueBody":{"id":727,"nodeType":"Block","src":"4848:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":724,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"4869:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4869:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":726,"nodeType":"RevertStatement","src":"4862:36:2"}]}}]},"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"4381:217:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."},"id":730,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4612:11:2","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"4623:2:2"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[],"src":"4648:0:2"},"scope":798,"src":"4603:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":745,"nodeType":"Block","src":"5084:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":736,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5106:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$798","typeString":"contract UUPSUpgradeable"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5098:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"5098:7:2","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":738,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"5115:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5098:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":744,"nodeType":"IfStatement","src":"5094:145:2","trueBody":{"id":743,"nodeType":"Block","src":"5123:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":740,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"5199:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":742,"nodeType":"RevertStatement","src":"5192:36:2"}]}}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"4921:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5041:18:2","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"5059:2:2"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"5084:0:2"},"scope":798,"src":"5032:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"5251:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":752,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5637:17:2","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"newImplementation","nameLocation":"5663:17:2","nodeType":"VariableDeclaration","scope":752,"src":"5655:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"5655:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5654:27:2"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"5698:0:2"},"scope":798,"src":"5628:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":796,"nodeType":"Block","src":"6142:453:2","statements":[{"clauses":[{"block":{"id":785,"nodeType":"Block","src":"6232:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":768,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"6250:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":769,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"6258:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1558_$","typeString":"type(library ERC1967Utils)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6271:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1279,"src":"6258:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6250:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":777,"nodeType":"IfStatement","src":"6246:120:2","trueBody":{"id":776,"nodeType":"Block","src":"6292:74:2","statements":[{"errorCall":{"arguments":[{"id":773,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"6346:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":772,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"6317:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":775,"nodeType":"RevertStatement","src":"6310:41:2"}]}},{"expression":{"arguments":[{"id":781,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6409:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":782,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6428:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":778,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"6379:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1558_$","typeString":"type(library ERC1967Utils)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6392:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1373,"src":"6379:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":784,"nodeType":"ExpressionStatement","src":"6379:54:2"}]},"errorName":"","id":786,"nodeType":"TryCatchClause","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"slot","nameLocation":"6226:4:2","nodeType":"VariableDeclaration","scope":786,"src":"6218:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6218:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6217:14:2"},"src":"6209:235:2"},{"block":{"id":793,"nodeType":"Block","src":"6451:138:2","statements":[{"errorCall":{"arguments":[{"id":790,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6560:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":787,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"6518:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1558_$","typeString":"type(library ERC1967Utils)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6531:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":1284,"src":"6518:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6518:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":792,"nodeType":"RevertStatement","src":"6511:67:2"}]},"errorName":"","id":794,"nodeType":"TryCatchClause","src":"6445:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":761,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6174:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":760,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"6156:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1264_$","typeString":"type(contract IERC1822Proxiable)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1264","typeString":"contract IERC1822Proxiable"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6193:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"6156:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":795,"nodeType":"TryStatement","src":"6152:437:2"}]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"5705:347:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":797,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6066:21:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"newImplementation","nameLocation":"6096:17:2","nodeType":"VariableDeclaration","scope":797,"src":"6088:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"6088:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"data","nameLocation":"6128:4:2","nodeType":"VariableDeclaration","scope":797,"src":"6115:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":756,"name":"bytes","nodeType":"ElementaryTypeName","src":"6115:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6087:46:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"6142:0:2"},"scope":798,"src":"6057:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":799,"src":"986:5611:2","usedErrors":[379,382,643,648,1284,1297,2065,2328],"usedEvents":[387,1237]}],"src":"115:6483:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[844],"Initializable":[616]},"id":845,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":800,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":845,"sourceUnit":617,"src":"126:63:3","symbolAliases":[{"foreign":{"id":801,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":804,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"728:13:3"},"id":805,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":844,"linearizedBaseContracts":[844,616],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":810,"nodeType":"Block","src":"800:7:3","statements":[]},"id":811,"implemented":true,"kind":"function","modifiers":[{"id":808,"kind":"modifierInvocation","modifierName":{"id":807,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":844,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":816,"nodeType":"Block","src":"875:7:3","statements":[]},"id":817,"implemented":true,"kind":"function","modifiers":[{"id":814,"kind":"modifierInvocation","modifierName":{"id":813,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":844,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":822,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":821,"id":824,"nodeType":"Return","src":"959:17:3"}]},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":844,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":834,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":831,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":830,"id":833,"nodeType":"Return","src":"1066:15:3"}]},"id":835,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":835,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":828,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":844,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":842,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":839,"id":841,"nodeType":"Return","src":"1176:8:3"}]},"id":843,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":843,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":844,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":845,"src":"688:505:3","usedErrors":[379,382],"usedEvents":[387]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[844],"Initializable":[616],"PausableUpgradeable":[1020]},"id":1021,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":846,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1021,"sourceUnit":845,"src":"128:67:4","symbolAliases":[{"foreign":{"id":847,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"136:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":850,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1021,"sourceUnit":617,"src":"196:63:4","symbolAliases":[{"foreign":{"id":849,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"204:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":852,"name":"Initializable","nameLocations":["742:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"742:13:4"},"id":853,"nodeType":"InheritanceSpecifier","src":"742:13:4"},{"baseName":{"id":854,"name":"ContextUpgradeable","nameLocations":["757:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":844,"src":"757:18:4"},"id":855,"nodeType":"InheritanceSpecifier","src":"757:18:4"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"261:439:4","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1020,"linearizedBaseContracts":[1020,844,616],"name":"PausableUpgradeable","nameLocation":"719:19:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"782:66:4","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":859,"members":[{"constant":false,"id":858,"mutability":"mutable","name":"_paused","nameLocation":"891:7:4","nodeType":"VariableDeclaration","scope":859,"src":"886:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":857,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:4","nodeType":"StructDefinition","scope":1020,"src":"853:52:4","visibility":"public"},{"constant":true,"id":862,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:4","nodeType":"VariableDeclaration","scope":1020,"src":"1023:117:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:4","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":869,"nodeType":"Block","src":"1227:82:4","statements":[{"AST":{"nativeSrc":"1246:57:4","nodeType":"YulBlock","src":"1246:57:4","statements":[{"nativeSrc":"1260:33:4","nodeType":"YulAssignment","src":"1260:33:4","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:4","nodeType":"YulIdentifier","src":"1270:23:4"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:4","nodeType":"YulIdentifier","src":"1260:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":866,"isOffset":false,"isSlot":true,"src":"1260:6:4","suffix":"slot","valueSize":1},{"declaration":862,"isOffset":false,"isSlot":false,"src":"1270:23:4","valueSize":1}],"id":868,"nodeType":"InlineAssembly","src":"1237:66:4"}]},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:4","nodeType":"FunctionDefinition","parameters":{"id":863,"nodeType":"ParameterList","parameters":[],"src":"1175:2:4"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"$","nameLocation":"1224:1:4","nodeType":"VariableDeclaration","scope":870,"src":"1200:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":865,"nodeType":"UserDefinedTypeName","pathNode":{"id":864,"name":"PausableStorage","nameLocations":["1200:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":859,"src":"1200:15:4"},"referencedDeclaration":859,"src":"1200:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:4"},"scope":1020,"src":"1147:162:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"1315:73:4","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":875,"name":"Paused","nameLocation":"1399:6:4","nodeType":"EventDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:4","nodeType":"VariableDeclaration","scope":875,"src":"1406:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:4"},"src":"1393:30:4"},{"anonymous":false,"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"1429:70:4","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":880,"name":"Unpaused","nameLocation":"1510:8:4","nodeType":"EventDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:4","nodeType":"VariableDeclaration","scope":880,"src":"1519:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:4"},"src":"1504:32:4"},{"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"1542:76:4","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":883,"name":"EnforcedPause","nameLocation":"1629:13:4","nodeType":"ErrorDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[],"src":"1642:2:4"},"src":"1623:22:4"},{"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"1651:80:4","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":886,"name":"ExpectedPause","nameLocation":"1742:13:4","nodeType":"ErrorDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"1755:2:4"},"src":"1736:22:4"},{"body":{"id":895,"nodeType":"Block","src":"1889:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":892,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"1899:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1899:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"1899:27:4"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"1764:67:4","text":" @dev Initializes the contract in unpaused state."},"id":896,"implemented":true,"kind":"function","modifiers":[{"id":890,"kind":"modifierInvocation","modifierName":{"id":889,"name":"onlyInitializing","nameLocations":["1872:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"1872:16:4"},"nodeType":"ModifierInvocation","src":"1872:16:4"}],"name":"__Pausable_init","nameLocation":"1845:15:4","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"1860:2:4"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[],"src":"1889:0:4"},"scope":1020,"src":"1836:97:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":913,"nodeType":"Block","src":"2002:93:4","statements":[{"assignments":[903],"declarations":[{"constant":false,"id":903,"mutability":"mutable","name":"$","nameLocation":"2036:1:4","nodeType":"VariableDeclaration","scope":913,"src":"2012:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":902,"nodeType":"UserDefinedTypeName","pathNode":{"id":901,"name":"PausableStorage","nameLocations":["2012:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":859,"src":"2012:15:4"},"referencedDeclaration":859,"src":"2012:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":906,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":904,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2040:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2040:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2012:49:4"},{"expression":{"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":907,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"2071:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2073:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":858,"src":"2071:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2083:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2071:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":912,"nodeType":"ExpressionStatement","src":"2071:17:4"}]},"id":914,"implemented":true,"kind":"function","modifiers":[{"id":899,"kind":"modifierInvocation","modifierName":{"id":898,"name":"onlyInitializing","nameLocations":["1985:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"1985:16:4"},"nodeType":"ModifierInvocation","src":"1985:16:4"}],"name":"__Pausable_init_unchained","nameLocation":"1948:25:4","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[],"src":"1973:2:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"2002:0:4"},"scope":1020,"src":"1939:156:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":921,"nodeType":"Block","src":"2306:47:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":917,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2316:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"ExpressionStatement","src":"2316:19:4"},{"id":920,"nodeType":"PlaceholderStatement","src":"2345:1:4"}]},"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"2101:175:4","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":922,"name":"whenNotPaused","nameLocation":"2290:13:4","nodeType":"ModifierDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"2303:2:4"},"src":"2281:72:4","virtual":false,"visibility":"internal"},{"body":{"id":929,"nodeType":"Block","src":"2553:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":925,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"2563:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":927,"nodeType":"ExpressionStatement","src":"2563:16:4"},{"id":928,"nodeType":"PlaceholderStatement","src":"2589:1:4"}]},"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"2359:167:4","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":930,"name":"whenPaused","nameLocation":"2540:10:4","nodeType":"ModifierDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"2550:2:4"},"src":"2531:66:4","virtual":false,"visibility":"internal"},{"body":{"id":945,"nodeType":"Block","src":"2745:92:4","statements":[{"assignments":[938],"declarations":[{"constant":false,"id":938,"mutability":"mutable","name":"$","nameLocation":"2779:1:4","nodeType":"VariableDeclaration","scope":945,"src":"2755:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":937,"nodeType":"UserDefinedTypeName","pathNode":{"id":936,"name":"PausableStorage","nameLocations":["2755:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":859,"src":"2755:15:4"},"referencedDeclaration":859,"src":"2755:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":941,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":939,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2783:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2755:49:4"},{"expression":{"expression":{"id":942,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2821:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2823:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":858,"src":"2821:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":935,"id":944,"nodeType":"Return","src":"2814:16:4"}]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"2603:84:4","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":946,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2701:6:4","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"2707:2:4"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"2739:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":933,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:4"},"scope":1020,"src":"2692:145:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":957,"nodeType":"Block","src":"2956:77:4","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":950,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2970:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":956,"nodeType":"IfStatement","src":"2966:61:4","trueBody":{"id":955,"nodeType":"Block","src":"2980:47:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":952,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"3001:13:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":954,"nodeType":"RevertStatement","src":"2994:22:4"}]}}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"2843:57:4","text":" @dev Throws if the contract is paused."},"id":958,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2914:17:4","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[],"src":"2931:2:4"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"2956:0:4"},"scope":1020,"src":"2905:128:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":970,"nodeType":"Block","src":"3153:78:4","statements":[{"condition":{"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3167:9:4","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":962,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"3168:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":969,"nodeType":"IfStatement","src":"3163:62:4","trueBody":{"id":968,"nodeType":"Block","src":"3178:47:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":965,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"3199:13:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":967,"nodeType":"RevertStatement","src":"3192:22:4"}]}}]},"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"3039:61:4","text":" @dev Throws if the contract is not paused."},"id":971,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"3114:14:4","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"3128:2:4"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[],"src":"3153:0:4"},"scope":1020,"src":"3105:126:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":994,"nodeType":"Block","src":"3415:127:4","statements":[{"assignments":[979],"declarations":[{"constant":false,"id":979,"mutability":"mutable","name":"$","nameLocation":"3449:1:4","nodeType":"VariableDeclaration","scope":994,"src":"3425:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":978,"nodeType":"UserDefinedTypeName","pathNode":{"id":977,"name":"PausableStorage","nameLocations":["3425:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":859,"src":"3425:15:4"},"referencedDeclaration":859,"src":"3425:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":982,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":980,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"3453:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3453:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3425:49:4"},{"expression":{"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":983,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"3484:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3486:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":858,"src":"3484:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3496:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3484:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":988,"nodeType":"ExpressionStatement","src":"3484:16:4"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":990,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"3522:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":989,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"3515:6:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3515:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"EmitStatement","src":"3510:25:4"}]},"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"3237:124:4","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":995,"implemented":true,"kind":"function","modifiers":[{"id":975,"kind":"modifierInvocation","modifierName":{"id":974,"name":"whenNotPaused","nameLocations":["3401:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":922,"src":"3401:13:4"},"nodeType":"ModifierInvocation","src":"3401:13:4"}],"name":"_pause","nameLocation":"3375:6:4","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"3381:2:4"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"3415:0:4"},"scope":1020,"src":"3366:176:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1018,"nodeType":"Block","src":"3722:130:4","statements":[{"assignments":[1003],"declarations":[{"constant":false,"id":1003,"mutability":"mutable","name":"$","nameLocation":"3756:1:4","nodeType":"VariableDeclaration","scope":1018,"src":"3732:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1002,"nodeType":"UserDefinedTypeName","pathNode":{"id":1001,"name":"PausableStorage","nameLocations":["3732:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":859,"src":"3732:15:4"},"referencedDeclaration":859,"src":"3732:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1006,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1004,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"3760:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3760:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3732:49:4"},{"expression":{"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1007,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"3791:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$859_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3793:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":858,"src":"3791:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3803:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3791:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1012,"nodeType":"ExpressionStatement","src":"3791:17:4"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1014,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"3832:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3832:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1013,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"3823:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1017,"nodeType":"EmitStatement","src":"3818:27:4"}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"3548:121:4","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1019,"implemented":true,"kind":"function","modifiers":[{"id":999,"kind":"modifierInvocation","modifierName":{"id":998,"name":"whenPaused","nameLocations":["3711:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":930,"src":"3711:10:4"},"nodeType":"ModifierInvocation","src":"3711:10:4"}],"name":"_unpause","nameLocation":"3683:8:4","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[],"src":"3691:2:4"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"3722:0:4"},"scope":1020,"src":"3674:178:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1021,"src":"701:3153:4","usedErrors":[379,382,883,886],"usedEvents":[387,875,880]}],"src":"102:3753:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[1060],"IERC165":[2525],"Initializable":[616]},"id":1061,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1022,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1024,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1061,"sourceUnit":2526,"src":"140:80:5","symbolAliases":[{"foreign":{"id":1023,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"148:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1026,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1061,"sourceUnit":617,"src":"221:66:5","symbolAliases":[{"foreign":{"id":1025,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"229:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1028,"name":"Initializable","nameLocations":["808:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"808:13:5"},"id":1029,"nodeType":"InheritanceSpecifier","src":"808:13:5"},{"baseName":{"id":1030,"name":"IERC165","nameLocations":["823:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2525,"src":"823:7:5"},"id":1031,"nodeType":"InheritanceSpecifier","src":"823:7:5"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"289:479:5","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1060,"linearizedBaseContracts":[1060,2525,616],"name":"ERC165Upgradeable","nameLocation":"787:17:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1036,"nodeType":"Block","src":"888:7:5","statements":[]},"id":1037,"implemented":true,"kind":"function","modifiers":[{"id":1034,"kind":"modifierInvocation","modifierName":{"id":1033,"name":"onlyInitializing","nameLocations":["871:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"871:16:5"},"nodeType":"ModifierInvocation","src":"871:16:5"}],"name":"__ERC165_init","nameLocation":"846:13:5","nodeType":"FunctionDefinition","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"859:2:5"},"returnParameters":{"id":1035,"nodeType":"ParameterList","parameters":[],"src":"888:0:5"},"scope":1060,"src":"837:58:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1042,"nodeType":"Block","src":"962:7:5","statements":[]},"id":1043,"implemented":true,"kind":"function","modifiers":[{"id":1040,"kind":"modifierInvocation","modifierName":{"id":1039,"name":"onlyInitializing","nameLocations":["945:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"945:16:5"},"nodeType":"ModifierInvocation","src":"945:16:5"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:5","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"933:2:5"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"962:0:5"},"scope":1060,"src":"901:68:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2524],"body":{"id":1058,"nodeType":"Block","src":"1117:64:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1051,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"1134:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1053,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"1154:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2525_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2525_$","typeString":"type(contract IERC165)"}],"id":1052,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2525","typeString":"type(contract IERC165)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1050,"id":1057,"nodeType":"Return","src":"1127:47:5"}]},"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"974:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:5","nodeType":"VariableDeclaration","scope":1059,"src":"1062:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1045,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1059,"src":"1111:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1048,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:5"},"scope":1060,"src":"1035:146:5","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1061,"src":"769:414:5","usedErrors":[379,382],"usedEvents":[387]}],"src":"114:1070:5"},"id":5},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[1143]},"id":1144,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1062,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"135:90:6","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":1143,"linearizedBaseContracts":[1143],"name":"IAccessControl","nameLocation":"236:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"257:56:6","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":1070,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:6","nodeType":"ErrorDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"account","nameLocation":"365:7:6","nodeType":"VariableDeclaration","scope":1070,"src":"357:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:6","nodeType":"VariableDeclaration","scope":1070,"src":"374:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:6"},"src":"318:76:6"},{"documentation":{"id":1071,"nodeType":"StructuredDocumentation","src":"400:148:6","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":1073,"name":"AccessControlBadConfirmation","nameLocation":"559:28:6","nodeType":"ErrorDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[],"src":"587:2:6"},"src":"553:37:6"},{"anonymous":false,"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"596:254:6","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":1082,"name":"RoleAdminChanged","nameLocation":"861:16:6","nodeType":"EventDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:6","nodeType":"VariableDeclaration","scope":1082,"src":"878:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1078,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:6","nodeType":"VariableDeclaration","scope":1082,"src":"900:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1080,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:6","nodeType":"VariableDeclaration","scope":1082,"src":"935:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:6"},"src":"855:110:6"},{"anonymous":false,"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"971:295:6","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":1091,"name":"RoleGranted","nameLocation":"1277:11:6","nodeType":"EventDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:6","nodeType":"VariableDeclaration","scope":1091,"src":"1289:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1087,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:6","nodeType":"VariableDeclaration","scope":1091,"src":"1311:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1089,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:6","nodeType":"VariableDeclaration","scope":1091,"src":"1336:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:6"},"src":"1271:89:6"},{"anonymous":false,"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"1366:275:6","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":1100,"name":"RoleRevoked","nameLocation":"1652:11:6","nodeType":"EventDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:6","nodeType":"VariableDeclaration","scope":1100,"src":"1664:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1096,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:6","nodeType":"VariableDeclaration","scope":1100,"src":"1686:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1098,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:6","nodeType":"VariableDeclaration","scope":1100,"src":"1711:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:6"},"src":"1646:89:6"},{"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"1741:76:6","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":1110,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:6","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"role","nameLocation":"1847:4:6","nodeType":"VariableDeclaration","scope":1110,"src":"1839:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"account","nameLocation":"1861:7:6","nodeType":"VariableDeclaration","scope":1110,"src":"1853:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:6"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1110,"src":"1893:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1107,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:6"},"scope":1143,"src":"1822:77:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"1905:184:6","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":1118,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:6","nodeType":"FunctionDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"role","nameLocation":"2124:4:6","nodeType":"VariableDeclaration","scope":1118,"src":"2116:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:6"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1118,"src":"2153:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:6"},"scope":1143,"src":"2094:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"2168:239:6","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":1126,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:6","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"role","nameLocation":"2439:4:6","nodeType":"VariableDeclaration","scope":1126,"src":"2431:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"account","nameLocation":"2453:7:6","nodeType":"VariableDeclaration","scope":1126,"src":"2445:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:6"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"2470:0:6"},"scope":1143,"src":"2412:59:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"2477:223:6","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":1134,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:6","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"role","nameLocation":"2733:4:6","nodeType":"VariableDeclaration","scope":1134,"src":"2725:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"account","nameLocation":"2747:7:6","nodeType":"VariableDeclaration","scope":1134,"src":"2739:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:6"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[],"src":"2764:0:6"},"scope":1143,"src":"2705:60:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1135,"nodeType":"StructuredDocumentation","src":"2771:491:6","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":1142,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:6","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"role","nameLocation":"3297:4:6","nodeType":"VariableDeclaration","scope":1142,"src":"3289:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:6","nodeType":"VariableDeclaration","scope":1142,"src":"3303:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:6"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"3339:0:6"},"scope":1143,"src":"3267:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1144,"src":"226:3116:6","usedErrors":[1070,1073],"usedEvents":[1082,1091,1100]}],"src":"109:3234:6"},"id":6},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[1225],"IERC165":[2525],"IERC20":[1646]},"id":1226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1145,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":1147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1226,"sourceUnit":1255,"src":"133:36:7","symbolAliases":[{"foreign":{"id":1146,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"141:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":1149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1226,"sourceUnit":1230,"src":"170:38:7","symbolAliases":[{"foreign":{"id":1148,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"178:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1151,"name":"IERC20","nameLocations":["590:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"590:6:7"},"id":1152,"nodeType":"InheritanceSpecifier","src":"590:6:7"},{"baseName":{"id":1153,"name":"IERC165","nameLocations":["598:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2525,"src":"598:7:7"},"id":1154,"nodeType":"InheritanceSpecifier","src":"598:7:7"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"210:357:7","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":1225,"linearizedBaseContracts":[1225,2525,1646],"name":"IERC1363","nameLocation":"578:8:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"1148:370:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":1164,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:7","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"to","nameLocation":"1556:2:7","nodeType":"VariableDeclaration","scope":1164,"src":"1548:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"value","nameLocation":"1568:5:7","nodeType":"VariableDeclaration","scope":1164,"src":"1560:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:7"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1164,"src":"1593:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1161,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:7"},"scope":1225,"src":"1523:76:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"1605:453:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":1176,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:7","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"to","nameLocation":"2096:2:7","nodeType":"VariableDeclaration","scope":1176,"src":"2088:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"value","nameLocation":"2108:5:7","nodeType":"VariableDeclaration","scope":1176,"src":"2100:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"data","nameLocation":"2130:4:7","nodeType":"VariableDeclaration","scope":1176,"src":"2115:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1170,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:7"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1176,"src":"2154:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1173,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:7"},"scope":1225,"src":"2063:97:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"2166:453:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":1188,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:7","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"from","nameLocation":"2661:4:7","nodeType":"VariableDeclaration","scope":1188,"src":"2653:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"to","nameLocation":"2675:2:7","nodeType":"VariableDeclaration","scope":1188,"src":"2667:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"value","nameLocation":"2687:5:7","nodeType":"VariableDeclaration","scope":1188,"src":"2679:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:7"},"returnParameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1188,"src":"2712:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1185,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:7"},"scope":1225,"src":"2624:94:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2724:536:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":1202,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:7","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"from","nameLocation":"3302:4:7","nodeType":"VariableDeclaration","scope":1202,"src":"3294:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"to","nameLocation":"3316:2:7","nodeType":"VariableDeclaration","scope":1202,"src":"3308:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"value","nameLocation":"3328:5:7","nodeType":"VariableDeclaration","scope":1202,"src":"3320:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"data","nameLocation":"3350:4:7","nodeType":"VariableDeclaration","scope":1202,"src":"3335:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1196,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:7"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"3374:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1199,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:7"},"scope":1225,"src":"3265:115:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"3386:390:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":1212,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:7","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"spender","nameLocation":"3813:7:7","nodeType":"VariableDeclaration","scope":1212,"src":"3805:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"value","nameLocation":"3830:5:7","nodeType":"VariableDeclaration","scope":1212,"src":"3822:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:7"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1212,"src":"3855:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1209,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:7"},"scope":1225,"src":"3781:80:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"3867:478:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":1224,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:7","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"spender","nameLocation":"4382:7:7","nodeType":"VariableDeclaration","scope":1224,"src":"4374:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"value","nameLocation":"4399:5:7","nodeType":"VariableDeclaration","scope":1224,"src":"4391:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"data","nameLocation":"4421:4:7","nodeType":"VariableDeclaration","scope":1224,"src":"4406:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1218,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:7"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"4445:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1221,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:7"},"scope":1225,"src":"4350:101:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1226,"src":"568:3885:7","usedErrors":[],"usedEvents":[1580,1589]}],"src":"107:4347:7"},"id":7},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[2525]},"id":1230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1227,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":1229,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1230,"sourceUnit":2526,"src":"132:59:8","symbolAliases":[{"foreign":{"id":1228,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"140:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[1250]},"id":1251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"133:101:9","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":1250,"linearizedBaseContracts":[1250],"name":"IERC1967","nameLocation":"245:8:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"260:68:9","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":1237,"name":"Upgraded","nameLocation":"339:8:9","nodeType":"EventDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"364:14:9","nodeType":"VariableDeclaration","scope":1237,"src":"348:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"347:32:9"},"src":"333:47:9"},{"anonymous":false,"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"386:67:9","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":1244,"name":"AdminChanged","nameLocation":"464:12:9","nodeType":"EventDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"485:13:9","nodeType":"VariableDeclaration","scope":1244,"src":"477:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"508:8:9","nodeType":"VariableDeclaration","scope":1244,"src":"500:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:41:9"},"src":"458:60:9"},{"anonymous":false,"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"524:59:9","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":1249,"name":"BeaconUpgraded","nameLocation":"594:14:9","nodeType":"EventDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"625:6:9","nodeType":"VariableDeclaration","scope":1249,"src":"609:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"608:24:9"},"src":"588:45:9"}],"scope":1251,"src":"235:400:9","usedErrors":[],"usedEvents":[1237,1244,1249]}],"src":"107:529:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[1646]},"id":1255,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1252,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":1254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1255,"sourceUnit":1647,"src":"131:49:10","symbolAliases":[{"foreign":{"id":1253,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"139:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:10"},"id":10},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1264]},"id":1265,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1256,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"139:204:11","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1264,"linearizedBaseContracts":[1264],"name":"IERC1822Proxiable","nameLocation":"354:17:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"378:438:11","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1263,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"830:13:11","nodeType":"FunctionDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"843:2:11"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1263,"src":"869:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"869:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"868:9:11"},"scope":1264,"src":"821:57:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1265,"src":"344:536:11","usedErrors":[],"usedEvents":[]}],"src":"113:768:11"},"id":11},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2315],"ERC1967Utils":[1558],"IBeacon":[1568],"IERC1967":[1250],"StorageSlot":[2513]},"id":1559,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1266,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"114:24:12"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1268,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1559,"sourceUnit":1569,"src":"140:46:12","symbolAliases":[{"foreign":{"id":1267,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"148:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":1270,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1559,"sourceUnit":1251,"src":"187:55:12","symbolAliases":[{"foreign":{"id":1269,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"195:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1272,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1559,"sourceUnit":2316,"src":"243:48:12","symbolAliases":[{"foreign":{"id":1271,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"251:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1274,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1559,"sourceUnit":2514,"src":"292:56:12","symbolAliases":[{"foreign":{"id":1273,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"300:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"350:145:12","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":1558,"linearizedBaseContracts":[1558],"name":"ERC1967Utils","nameLocation":"504:12:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"523:170:12","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":1279,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:12","nodeType":"VariableDeclaration","scope":1558,"src":"763:114:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:12","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"884:69:12","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":1284,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:12","nodeType":"ErrorDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:12","nodeType":"VariableDeclaration","scope":1284,"src":"993:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:12"},"src":"958:59:12"},{"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"1023:60:12","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":1289,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:12","nodeType":"ErrorDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"admin","nameLocation":"1122:5:12","nodeType":"VariableDeclaration","scope":1289,"src":"1114:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:12"},"src":"1088:41:12"},{"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"1135:61:12","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":1294,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:12","nodeType":"ErrorDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:12","nodeType":"VariableDeclaration","scope":1294,"src":"1228:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:12"},"src":"1201:43:12"},{"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"1250:82:12","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":1297,"name":"ERC1967NonPayable","nameLocation":"1343:17:12","nodeType":"ErrorDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[],"src":"1360:2:12"},"src":"1337:26:12"},{"body":{"id":1309,"nodeType":"Block","src":"1502:77:12","statements":[{"expression":{"expression":{"arguments":[{"id":1305,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"1546:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1303,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"1519:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2513_$","typeString":"type(library StorageSlot)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"1519:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2395_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2395_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"1519:53:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1302,"id":1308,"nodeType":"Return","src":"1512:60:12"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"1369:67:12","text":" @dev Returns the current implementation address."},"id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:12","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[],"src":"1467:2:12"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"1493:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:12"},"scope":1558,"src":"1441:138:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1336,"nodeType":"Block","src":"1734:218:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1316,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"1748:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:12","memberName":"code","nodeType":"MemberAccess","src":"1748:22:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:12","memberName":"length","nodeType":"MemberAccess","src":"1748:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1326,"nodeType":"IfStatement","src":"1744:119:12","trueBody":{"id":1325,"nodeType":"Block","src":"1784:79:12","statements":[{"errorCall":{"arguments":[{"id":1322,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"1834:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1321,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"1805:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1324,"nodeType":"RevertStatement","src":"1798:54:12"}]}},{"expression":{"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1330,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"1899:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1327,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"1872:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2513_$","typeString":"type(library StorageSlot)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"1872:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2395_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2395_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"1872:53:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1333,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"1928:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1335,"nodeType":"ExpressionStatement","src":"1872:73:12"}]},"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"1585:81:12","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":1337,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:12","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:12","nodeType":"VariableDeclaration","scope":1337,"src":"1699:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:12"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[],"src":"1734:0:12"},"scope":1558,"src":"1671:281:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1372,"nodeType":"Block","src":"2345:263:12","statements":[{"expression":{"arguments":[{"id":1346,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2374:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1345,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"2355:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1348,"nodeType":"ExpressionStatement","src":"2355:37:12"},{"eventCall":{"arguments":[{"id":1352,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2425:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1349,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"2407:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1250_$","typeString":"type(contract IERC1967)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:12","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"2407:17:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1354,"nodeType":"EmitStatement","src":"2402:41:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1355,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"2458:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:12","memberName":"length","nodeType":"MemberAccess","src":"2458:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1370,"nodeType":"Block","src":"2559:43:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1367,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2573:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1369,"nodeType":"ExpressionStatement","src":"2573:18:12"}]},"id":1371,"nodeType":"IfStatement","src":"2454:148:12","trueBody":{"id":1366,"nodeType":"Block","src":"2475:78:12","statements":[{"expression":{"arguments":[{"id":1362,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2518:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1363,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"2537:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1359,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"2489:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2315_$","typeString":"type(library Address)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:12","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2232,"src":"2489:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1365,"nodeType":"ExpressionStatement","src":"2489:53:12"}]}}]},"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"1958:301:12","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":1373,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:12","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:12","nodeType":"VariableDeclaration","scope":1373,"src":"2290:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"data","nameLocation":"2330:4:12","nodeType":"VariableDeclaration","scope":1373,"src":"2317:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:12"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[],"src":"2345:0:12"},"scope":1558,"src":"2264:344:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"2614:145:12","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":1377,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:12","nodeType":"VariableDeclaration","scope":1558,"src":"2829:105:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:12","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1389,"nodeType":"Block","src":"3339:68:12","statements":[{"expression":{"expression":{"arguments":[{"id":1385,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"3383:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1383,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"3356:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2513_$","typeString":"type(library StorageSlot)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"3356:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2395_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2395_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"3356:44:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1382,"id":1388,"nodeType":"Return","src":"3349:51:12"}]},"documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"2941:341:12","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1390,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:12","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"3304:2:12"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1390,"src":"3330:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:12"},"scope":1558,"src":"3287:120:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1420,"nodeType":"Block","src":"3535:172:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1396,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"3549:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:12","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1410,"nodeType":"IfStatement","src":"3545:91:12","trueBody":{"id":1409,"nodeType":"Block","src":"3573:63:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:12","typeDescriptions":{}}},"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1402,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"3594:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1408,"nodeType":"RevertStatement","src":"3587:38:12"}]}},{"expression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1414,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"3672:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1411,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"3645:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2513_$","typeString":"type(library StorageSlot)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"3645:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2395_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2395_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"3645:44:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1417,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"3692:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1419,"nodeType":"ExpressionStatement","src":"3645:55:12"}]},"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"3413:72:12","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:12","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:12","nodeType":"VariableDeclaration","scope":1421,"src":"3509:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:12"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"3535:0:12"},"scope":1558,"src":"3490:217:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1439,"nodeType":"Block","src":"3875:94:12","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1430,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"3912:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1432,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"3924:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1427,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"3890:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1250_$","typeString":"type(contract IERC1967)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:12","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":1244,"src":"3890:21:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1434,"nodeType":"EmitStatement","src":"3885:48:12"},{"expression":{"arguments":[{"id":1436,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"3953:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1435,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3943:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1438,"nodeType":"ExpressionStatement","src":"3943:19:12"}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"3713:109:12","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1440,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:12","nodeType":"FunctionDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:12","nodeType":"VariableDeclaration","scope":1440,"src":"3848:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:12"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[],"src":"3875:0:12"},"scope":1558,"src":"3827:142:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"3975:201:12","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1444,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:12","nodeType":"VariableDeclaration","scope":1558,"src":"4246:106:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:12","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1456,"nodeType":"Block","src":"4468:69:12","statements":[{"expression":{"expression":{"arguments":[{"id":1452,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"4512:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1450,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"4485:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2513_$","typeString":"type(library StorageSlot)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"4485:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2395_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2395_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1454,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"4485:45:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1449,"id":1455,"nodeType":"Return","src":"4478:52:12"}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"4359:51:12","text":" @dev Returns the current beacon."},"id":1457,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:12","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"4433:2:12"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1457,"src":"4459:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1447,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:12"},"scope":1558,"src":"4415:122:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1502,"nodeType":"Block","src":"4667:390:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1463,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"4681:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:12","memberName":"code","nodeType":"MemberAccess","src":"4681:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:12","memberName":"length","nodeType":"MemberAccess","src":"4681:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1473,"nodeType":"IfStatement","src":"4677:95:12","trueBody":{"id":1472,"nodeType":"Block","src":"4709:63:12","statements":[{"errorCall":{"arguments":[{"id":1469,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"4751:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1468,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"4730:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1471,"nodeType":"RevertStatement","src":"4723:38:12"}]}},{"expression":{"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1477,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"4809:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1474,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"4782:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2513_$","typeString":"type(library StorageSlot)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"4782:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2395_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2395_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"4782:45:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1480,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"4830:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1482,"nodeType":"ExpressionStatement","src":"4782:57:12"},{"assignments":[1484],"declarations":[{"constant":false,"id":1484,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:12","nodeType":"VariableDeclaration","scope":1502,"src":"4850:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1490,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1486,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"4889:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1485,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"4881:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1568_$","typeString":"type(contract IBeacon)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1568","typeString":"contract IBeacon"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:12","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1567,"src":"4881:33:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1491,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"4930:20:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:12","memberName":"code","nodeType":"MemberAccess","src":"4930:25:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:12","memberName":"length","nodeType":"MemberAccess","src":"4930:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1501,"nodeType":"IfStatement","src":"4926:125:12","trueBody":{"id":1500,"nodeType":"Block","src":"4969:82:12","statements":[{"errorCall":{"arguments":[{"id":1497,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"5019:20:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1496,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"4990:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1499,"nodeType":"RevertStatement","src":"4983:57:12"}]}}]},"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"4543:72:12","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:12","nodeType":"FunctionDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:12","nodeType":"VariableDeclaration","scope":1503,"src":"4640:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:12"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[],"src":"4667:0:12"},"scope":1558,"src":"4620:437:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1542,"nodeType":"Block","src":"5661:263:12","statements":[{"expression":{"arguments":[{"id":1512,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"5682:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1511,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"5671:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1514,"nodeType":"ExpressionStatement","src":"5671:21:12"},{"eventCall":{"arguments":[{"id":1518,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"5731:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1515,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"5707:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1250_$","typeString":"type(contract IERC1967)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:12","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"5707:23:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1520,"nodeType":"EmitStatement","src":"5702:39:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1521,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"5756:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:12","memberName":"length","nodeType":"MemberAccess","src":"5756:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1540,"nodeType":"Block","src":"5875:43:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1537,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"5889:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"ExpressionStatement","src":"5889:18:12"}]},"id":1541,"nodeType":"IfStatement","src":"5752:166:12","trueBody":{"id":1536,"nodeType":"Block","src":"5773:96:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1529,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"5824:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1528,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"5816:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1568_$","typeString":"type(contract IBeacon)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1568","typeString":"contract IBeacon"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:12","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1567,"src":"5816:33:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1533,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"5853:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1525,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"5787:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2315_$","typeString":"type(library Address)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:12","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2232,"src":"5787:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1535,"nodeType":"ExpressionStatement","src":"5787:71:12"}]}}]},"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"5063:514:12","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1543,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:12","nodeType":"FunctionDefinition","parameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:12","nodeType":"VariableDeclaration","scope":1543,"src":"5614:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"data","nameLocation":"5646:4:12","nodeType":"VariableDeclaration","scope":1543,"src":"5633:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1507,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:12"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[],"src":"5661:0:12"},"scope":1558,"src":"5582:342:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1556,"nodeType":"Block","src":"6149:86:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1547,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:12","memberName":"value","nodeType":"MemberAccess","src":"6163:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1555,"nodeType":"IfStatement","src":"6159:70:12","trueBody":{"id":1554,"nodeType":"Block","src":"6178:51:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1551,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6199:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1553,"nodeType":"RevertStatement","src":"6192:26:12"}]}}]},"documentation":{"id":1544,"nodeType":"StructuredDocumentation","src":"5930:178:12","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1557,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:12","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[],"src":"6138:2:12"},"returnParameters":{"id":1546,"nodeType":"ParameterList","parameters":[],"src":"6149:0:12"},"scope":1558,"src":"6113:122:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1559,"src":"496:5741:12","usedErrors":[1284,1289,1294,1297],"usedEvents":[]}],"src":"114:6124:12"},"id":12},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1568]},"id":1569,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1560,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"134:79:13","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1568,"linearizedBaseContracts":[1568],"name":"IBeacon","nameLocation":"224:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"238:168:13","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1567,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:13","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[],"src":"434:2:13"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1567,"src":"460:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1564,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:13"},"scope":1568,"src":"411:58:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1569,"src":"214:257:13","usedErrors":[],"usedEvents":[]}],"src":"108:364:13"},"id":13},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1646]},"id":1647,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1570,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"132:71:14","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1646,"linearizedBaseContracts":[1646],"name":"IERC20","nameLocation":"214:6:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"227:158:14","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1580,"name":"Transfer","nameLocation":"396:8:14","nodeType":"EventDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:14","nodeType":"VariableDeclaration","scope":1580,"src":"405:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1576,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:14","nodeType":"VariableDeclaration","scope":1580,"src":"427:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1578,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:14","nodeType":"VariableDeclaration","scope":1580,"src":"447:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:14"},"src":"390:72:14"},{"anonymous":false,"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"468:148:14","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1589,"name":"Approval","nameLocation":"627:8:14","nodeType":"EventDefinition","parameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:14","nodeType":"VariableDeclaration","scope":1589,"src":"636:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1585,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:14","nodeType":"VariableDeclaration","scope":1589,"src":"659:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1587,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:14","nodeType":"VariableDeclaration","scope":1589,"src":"684:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:14"},"src":"621:78:14"},{"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"705:65:14","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1595,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:14","nodeType":"FunctionDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[],"src":"795:2:14"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"821:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:14"},"scope":1646,"src":"775:55:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"836:71:14","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1603,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:14","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"account","nameLocation":"939:7:14","nodeType":"VariableDeclaration","scope":1603,"src":"931:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:14"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1603,"src":"971:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:14"},"scope":1646,"src":"912:68:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1604,"nodeType":"StructuredDocumentation","src":"986:213:14","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1613,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:14","nodeType":"FunctionDefinition","parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"to","nameLocation":"1230:2:14","nodeType":"VariableDeclaration","scope":1613,"src":"1222:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"value","nameLocation":"1242:5:14","nodeType":"VariableDeclaration","scope":1613,"src":"1234:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:14"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1613,"src":"1267:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1610,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:14"},"scope":1646,"src":"1204:69:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"1279:264:14","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1623,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:14","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"owner","nameLocation":"1575:5:14","nodeType":"VariableDeclaration","scope":1623,"src":"1567:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"spender","nameLocation":"1590:7:14","nodeType":"VariableDeclaration","scope":1623,"src":"1582:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:14"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1623,"src":"1622:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:14"},"scope":1646,"src":"1548:83:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"1637:667:14","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1633,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:14","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"spender","nameLocation":"2334:7:14","nodeType":"VariableDeclaration","scope":1633,"src":"2326:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"value","nameLocation":"2351:5:14","nodeType":"VariableDeclaration","scope":1633,"src":"2343:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:14"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"2376:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1630,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:14"},"scope":1646,"src":"2309:73:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"2388:297:14","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1645,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:14","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"from","nameLocation":"2720:4:14","nodeType":"VariableDeclaration","scope":1645,"src":"2712:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"to","nameLocation":"2734:2:14","nodeType":"VariableDeclaration","scope":1645,"src":"2726:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"value","nameLocation":"2746:5:14","nodeType":"VariableDeclaration","scope":1645,"src":"2738:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:14"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"2771:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1642,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:14"},"scope":1646,"src":"2690:87:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1647,"src":"204:2575:14","usedErrors":[],"usedEvents":[1580,1589]}],"src":"106:2674:14"},"id":14},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[1225],"IERC20":[1646],"SafeERC20":[2055]},"id":2056,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1648,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1650,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2056,"sourceUnit":1647,"src":"141:37:15","symbolAliases":[{"foreign":{"id":1649,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"149:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":1652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2056,"sourceUnit":1226,"src":"179:58:15","symbolAliases":[{"foreign":{"id":1651,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"187:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"239:458:15","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2055,"linearizedBaseContracts":[2055],"name":"SafeERC20","nameLocation":"706:9:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"722:65:15","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1658,"name":"SafeERC20FailedOperation","nameLocation":"798:24:15","nodeType":"ErrorDefinition","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"token","nameLocation":"831:5:15","nodeType":"VariableDeclaration","scope":1658,"src":"823:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1655,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:15"},"src":"792:46:15"},{"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"844:71:15","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1667,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:15","nodeType":"ErrorDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"spender","nameLocation":"967:7:15","nodeType":"VariableDeclaration","scope":1667,"src":"959:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1660,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:15","nodeType":"VariableDeclaration","scope":1667,"src":"976:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:15","nodeType":"VariableDeclaration","scope":1667,"src":"1002:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:15"},"src":"920:109:15"},{"body":{"id":1690,"nodeType":"Block","src":"1291:88:15","statements":[{"expression":{"arguments":[{"id":1679,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"1321:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1682,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"1343:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1613,"src":"1343:14:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1684,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1360:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"1364:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1680,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1678,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"1301:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1689,"nodeType":"ExpressionStatement","src":"1301:71:15"}]},"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"1035:179:15","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:15","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"token","nameLocation":"1248:5:15","nodeType":"VariableDeclaration","scope":1691,"src":"1241:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},"typeName":{"id":1670,"nodeType":"UserDefinedTypeName","pathNode":{"id":1669,"name":"IERC20","nameLocations":["1241:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"1241:6:15"},"referencedDeclaration":1646,"src":"1241:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"to","nameLocation":"1263:2:15","nodeType":"VariableDeclaration","scope":1691,"src":"1255:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"value","nameLocation":"1275:5:15","nodeType":"VariableDeclaration","scope":1691,"src":"1267:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:15"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"1291:0:15"},"scope":2055,"src":"1219:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"1708:98:15","statements":[{"expression":{"arguments":[{"id":1705,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1738:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1708,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1760:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1645,"src":"1760:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1710,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1781:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1711,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1787:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1791:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1706,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1704,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"1718:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1716,"nodeType":"ExpressionStatement","src":"1718:81:15"}]},"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"1385:228:15","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:15","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"token","nameLocation":"1651:5:15","nodeType":"VariableDeclaration","scope":1718,"src":"1644:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},"typeName":{"id":1694,"nodeType":"UserDefinedTypeName","pathNode":{"id":1693,"name":"IERC20","nameLocations":["1644:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"1644:6:15"},"referencedDeclaration":1646,"src":"1644:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"from","nameLocation":"1666:4:15","nodeType":"VariableDeclaration","scope":1718,"src":"1658:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"to","nameLocation":"1680:2:15","nodeType":"VariableDeclaration","scope":1718,"src":"1672:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"value","nameLocation":"1692:5:15","nodeType":"VariableDeclaration","scope":1718,"src":"1684:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:15"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[],"src":"1708:0:15"},"scope":2055,"src":"1618:188:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1748,"nodeType":"Block","src":"2548:139:15","statements":[{"assignments":[1730],"declarations":[{"constant":false,"id":1730,"mutability":"mutable","name":"oldAllowance","nameLocation":"2566:12:15","nodeType":"VariableDeclaration","scope":1748,"src":"2558:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1739,"initialValue":{"arguments":[{"arguments":[{"id":1735,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2605:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2055","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2055","typeString":"library SafeERC20"}],"id":1734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2597:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"2597:7:15","typeDescriptions":{}}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2597:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2612:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1731,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2581:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2587:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1623,"src":"2581:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2581:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2558:62:15"},{"expression":{"arguments":[{"id":1741,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2643:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},{"id":1742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2650:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1743,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2659:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2674:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2659:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1740,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"2630:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1747,"nodeType":"ExpressionStatement","src":"2630:50:15"}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"1812:645:15","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1749,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2471:21:15","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"token","nameLocation":"2500:5:15","nodeType":"VariableDeclaration","scope":1749,"src":"2493:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},"typeName":{"id":1721,"nodeType":"UserDefinedTypeName","pathNode":{"id":1720,"name":"IERC20","nameLocations":["2493:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"2493:6:15"},"referencedDeclaration":1646,"src":"2493:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"spender","nameLocation":"2515:7:15","nodeType":"VariableDeclaration","scope":1749,"src":"2507:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"value","nameLocation":"2532:5:15","nodeType":"VariableDeclaration","scope":1749,"src":"2524:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"2524:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2492:46:15"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[],"src":"2548:0:15"},"scope":2055,"src":"2462:225:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1791,"nodeType":"Block","src":"3453:370:15","statements":[{"id":1790,"nodeType":"UncheckedBlock","src":"3463:354:15","statements":[{"assignments":[1761],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"currentAllowance","nameLocation":"3495:16:15","nodeType":"VariableDeclaration","scope":1790,"src":"3487:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"3487:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1770,"initialValue":{"arguments":[{"arguments":[{"id":1766,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3538:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2055","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2055","typeString":"library SafeERC20"}],"id":1765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3530:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1764,"name":"address","nodeType":"ElementaryTypeName","src":"3530:7:15","typeDescriptions":{}}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3530:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"3545:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1762,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"3514:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3520:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1623,"src":"3514:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3487:66:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1771,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"3571:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1772,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"3590:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3571:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1781,"nodeType":"IfStatement","src":"3567:160:15","trueBody":{"id":1780,"nodeType":"Block","src":"3609:118:15","statements":[{"errorCall":{"arguments":[{"id":1775,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"3667:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1776,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"3676:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1777,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"3694:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1774,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"3634:32:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3634:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1779,"nodeType":"RevertStatement","src":"3627:85:15"}]}},{"expression":{"arguments":[{"id":1783,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"3753:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},{"id":1784,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"3760:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1785,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"3769:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1786,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"3788:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3769:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1782,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"3740:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3740:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1789,"nodeType":"ExpressionStatement","src":"3740:66:15"}]}]},"documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"2693:657:15","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3364:21:15","nodeType":"FunctionDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"token","nameLocation":"3393:5:15","nodeType":"VariableDeclaration","scope":1792,"src":"3386:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},"typeName":{"id":1752,"nodeType":"UserDefinedTypeName","pathNode":{"id":1751,"name":"IERC20","nameLocations":["3386:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"3386:6:15"},"referencedDeclaration":1646,"src":"3386:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"spender","nameLocation":"3408:7:15","nodeType":"VariableDeclaration","scope":1792,"src":"3400:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1757,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3425:17:15","nodeType":"VariableDeclaration","scope":1792,"src":"3417:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"3417:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3385:58:15"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"3453:0:15"},"scope":2055,"src":"3355:468:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1838,"nodeType":"Block","src":"4477:303:15","statements":[{"assignments":[1804],"declarations":[{"constant":false,"id":1804,"mutability":"mutable","name":"approvalCall","nameLocation":"4500:12:15","nodeType":"VariableDeclaration","scope":1838,"src":"4487:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1803,"name":"bytes","nodeType":"ElementaryTypeName","src":"4487:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1813,"initialValue":{"arguments":[{"expression":{"id":1807,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"4530:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4536:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"4530:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1809,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"4546:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"4555:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4545:16:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1805,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4515:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4519:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"4515:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4487:75:15"},{"condition":{"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:45:15","subExpression":{"arguments":[{"id":1815,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"4602:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},{"id":1816,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"4609:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1814,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"4578:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1837,"nodeType":"IfStatement","src":"4573:201:15","trueBody":{"id":1836,"nodeType":"Block","src":"4624:150:15","statements":[{"expression":{"arguments":[{"id":1820,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"4658:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1823,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"4680:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4686:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"4680:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1825,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"4696:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4705:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4695:12:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1821,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4665:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4669:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"4665:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4665:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1819,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"4638:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4638:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"ExpressionStatement","src":"4638:71:15"},{"expression":{"arguments":[{"id":1832,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"4743:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},{"id":1833,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"4750:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1831,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"4723:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1835,"nodeType":"ExpressionStatement","src":"4723:40:15"}]}}]},"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"3829:566:15","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4409:12:15","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"token","nameLocation":"4429:5:15","nodeType":"VariableDeclaration","scope":1839,"src":"4422:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},"typeName":{"id":1795,"nodeType":"UserDefinedTypeName","pathNode":{"id":1794,"name":"IERC20","nameLocations":["4422:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"4422:6:15"},"referencedDeclaration":1646,"src":"4422:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"spender","nameLocation":"4444:7:15","nodeType":"VariableDeclaration","scope":1839,"src":"4436:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"4436:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"value","nameLocation":"4461:5:15","nodeType":"VariableDeclaration","scope":1839,"src":"4453:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"4453:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4421:46:15"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[],"src":"4477:0:15"},"scope":2055,"src":"4400:380:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1881,"nodeType":"Block","src":"5227:219:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1852,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5241:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5244:4:15","memberName":"code","nodeType":"MemberAccess","src":"5241:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5249:6:15","memberName":"length","nodeType":"MemberAccess","src":"5241:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5259:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5241:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5327:39:15","subExpression":{"arguments":[{"id":1866,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5350:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"5354:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1868,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"5361:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1864,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"5328:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5334:15:15","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"5328:21:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1879,"nodeType":"IfStatement","src":"5323:117:15","trueBody":{"id":1878,"nodeType":"Block","src":"5368:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1874,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"5422:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}],"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5414:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"5414:7:15","typeDescriptions":{}}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1871,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"5389:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1877,"nodeType":"RevertStatement","src":"5382:47:15"}]}},"id":1880,"nodeType":"IfStatement","src":"5237:203:15","trueBody":{"id":1863,"nodeType":"Block","src":"5262:55:15","statements":[{"expression":{"arguments":[{"id":1858,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"5289:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},{"id":1859,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5296:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"5300:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1857,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"5276:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1862,"nodeType":"ExpressionStatement","src":"5276:30:15"}]}}]},"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"4786:333:15","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1882,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5133:22:15","nodeType":"FunctionDefinition","parameters":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"token","nameLocation":"5165:5:15","nodeType":"VariableDeclaration","scope":1882,"src":"5156:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"},"typeName":{"id":1842,"nodeType":"UserDefinedTypeName","pathNode":{"id":1841,"name":"IERC1363","nameLocations":["5156:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":1225,"src":"5156:8:15"},"referencedDeclaration":1225,"src":"5156:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"to","nameLocation":"5180:2:15","nodeType":"VariableDeclaration","scope":1882,"src":"5172:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1844,"name":"address","nodeType":"ElementaryTypeName","src":"5172:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1847,"mutability":"mutable","name":"value","nameLocation":"5192:5:15","nodeType":"VariableDeclaration","scope":1882,"src":"5184:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"5184:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"data","nameLocation":"5212:4:15","nodeType":"VariableDeclaration","scope":1882,"src":"5199:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1848,"name":"bytes","nodeType":"ElementaryTypeName","src":"5199:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5155:62:15"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[],"src":"5227:0:15"},"scope":2055,"src":"5124:322:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1928,"nodeType":"Block","src":"5965:239:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1897,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"5979:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5982:4:15","memberName":"code","nodeType":"MemberAccess","src":"5979:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5987:6:15","memberName":"length","nodeType":"MemberAccess","src":"5979:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5997:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5979:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6075:49:15","subExpression":{"arguments":[{"id":1912,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"6102:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"6108:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"6112:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1915,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"6119:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1910,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"6076:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6082:19:15","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":1202,"src":"6076:25:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6076:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1926,"nodeType":"IfStatement","src":"6071:127:15","trueBody":{"id":1925,"nodeType":"Block","src":"6126:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1921,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"6180:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}],"id":1920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6172:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1919,"name":"address","nodeType":"ElementaryTypeName","src":"6172:7:15","typeDescriptions":{}}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6172:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1918,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"6147:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6147:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1924,"nodeType":"RevertStatement","src":"6140:47:15"}]}},"id":1927,"nodeType":"IfStatement","src":"5975:223:15","trueBody":{"id":1909,"nodeType":"Block","src":"6000:65:15","statements":[{"expression":{"arguments":[{"id":1903,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"6031:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},{"id":1904,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"6038:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1905,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"6044:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"6048:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1902,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"6014:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6014:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1908,"nodeType":"ExpressionStatement","src":"6014:40:15"}]}}]},"documentation":{"id":1883,"nodeType":"StructuredDocumentation","src":"5452:341:15","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1929,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5807:26:15","nodeType":"FunctionDefinition","parameters":{"id":1895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"token","nameLocation":"5852:5:15","nodeType":"VariableDeclaration","scope":1929,"src":"5843:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"},"typeName":{"id":1885,"nodeType":"UserDefinedTypeName","pathNode":{"id":1884,"name":"IERC1363","nameLocations":["5843:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":1225,"src":"5843:8:15"},"referencedDeclaration":1225,"src":"5843:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"from","nameLocation":"5875:4:15","nodeType":"VariableDeclaration","scope":1929,"src":"5867:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"5867:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"to","nameLocation":"5897:2:15","nodeType":"VariableDeclaration","scope":1929,"src":"5889:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"5889:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"value","nameLocation":"5917:5:15","nodeType":"VariableDeclaration","scope":1929,"src":"5909:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"5909:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1894,"mutability":"mutable","name":"data","nameLocation":"5945:4:15","nodeType":"VariableDeclaration","scope":1929,"src":"5932:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1893,"name":"bytes","nodeType":"ElementaryTypeName","src":"5932:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5833:122:15"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[],"src":"5965:0:15"},"scope":2055,"src":"5798:406:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1971,"nodeType":"Block","src":"6971:218:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1942,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"6985:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6988:4:15","memberName":"code","nodeType":"MemberAccess","src":"6985:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6993:6:15","memberName":"length","nodeType":"MemberAccess","src":"6985:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7003:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6985:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7071:38:15","subExpression":{"arguments":[{"id":1956,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"7093:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"7097:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1958,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"7104:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1954,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"7072:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7078:14:15","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":1224,"src":"7072:20:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1969,"nodeType":"IfStatement","src":"7067:116:15","trueBody":{"id":1968,"nodeType":"Block","src":"7111:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1964,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"7165:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}],"id":1963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7157:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"7157:7:15","typeDescriptions":{}}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7157:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1961,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"7132:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7132:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1967,"nodeType":"RevertStatement","src":"7125:47:15"}]}},"id":1970,"nodeType":"IfStatement","src":"6981:202:15","trueBody":{"id":1953,"nodeType":"Block","src":"7006:55:15","statements":[{"expression":{"arguments":[{"id":1948,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"7033:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},{"id":1949,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"7040:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"7044:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1947,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"7020:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7020:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1952,"nodeType":"ExpressionStatement","src":"7020:30:15"}]}}]},"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"6210:654:15","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6878:21:15","nodeType":"FunctionDefinition","parameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"token","nameLocation":"6909:5:15","nodeType":"VariableDeclaration","scope":1972,"src":"6900:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"},"typeName":{"id":1932,"nodeType":"UserDefinedTypeName","pathNode":{"id":1931,"name":"IERC1363","nameLocations":["6900:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":1225,"src":"6900:8:15"},"referencedDeclaration":1225,"src":"6900:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1225","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"to","nameLocation":"6924:2:15","nodeType":"VariableDeclaration","scope":1972,"src":"6916:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1934,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"value","nameLocation":"6936:5:15","nodeType":"VariableDeclaration","scope":1972,"src":"6928:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"6928:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"data","nameLocation":"6956:4:15","nodeType":"VariableDeclaration","scope":1972,"src":"6943:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1938,"name":"bytes","nodeType":"ElementaryTypeName","src":"6943:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6899:62:15"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[],"src":"6971:0:15"},"scope":2055,"src":"6869:320:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2012,"nodeType":"Block","src":"7756:650:15","statements":[{"assignments":[1982],"declarations":[{"constant":false,"id":1982,"mutability":"mutable","name":"returnSize","nameLocation":"7774:10:15","nodeType":"VariableDeclaration","scope":2012,"src":"7766:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"7766:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1983,"nodeType":"VariableDeclarationStatement","src":"7766:18:15"},{"assignments":[1985],"declarations":[{"constant":false,"id":1985,"mutability":"mutable","name":"returnValue","nameLocation":"7802:11:15","nodeType":"VariableDeclaration","scope":2012,"src":"7794:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"7794:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1986,"nodeType":"VariableDeclarationStatement","src":"7794:19:15"},{"AST":{"nativeSrc":"7848:396:15","nodeType":"YulBlock","src":"7848:396:15","statements":[{"nativeSrc":"7862:75:15","nodeType":"YulVariableDeclaration","src":"7862:75:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"7882:3:15","nodeType":"YulIdentifier","src":"7882:3:15"},"nativeSrc":"7882:5:15","nodeType":"YulFunctionCall","src":"7882:5:15"},{"name":"token","nativeSrc":"7889:5:15","nodeType":"YulIdentifier","src":"7889:5:15"},{"kind":"number","nativeSrc":"7896:1:15","nodeType":"YulLiteral","src":"7896:1:15","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"7903:4:15","nodeType":"YulIdentifier","src":"7903:4:15"},{"kind":"number","nativeSrc":"7909:4:15","nodeType":"YulLiteral","src":"7909:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7899:3:15","nodeType":"YulIdentifier","src":"7899:3:15"},"nativeSrc":"7899:15:15","nodeType":"YulFunctionCall","src":"7899:15:15"},{"arguments":[{"name":"data","nativeSrc":"7922:4:15","nodeType":"YulIdentifier","src":"7922:4:15"}],"functionName":{"name":"mload","nativeSrc":"7916:5:15","nodeType":"YulIdentifier","src":"7916:5:15"},"nativeSrc":"7916:11:15","nodeType":"YulFunctionCall","src":"7916:11:15"},{"kind":"number","nativeSrc":"7929:1:15","nodeType":"YulLiteral","src":"7929:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"7932:4:15","nodeType":"YulLiteral","src":"7932:4:15","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"7877:4:15","nodeType":"YulIdentifier","src":"7877:4:15"},"nativeSrc":"7877:60:15","nodeType":"YulFunctionCall","src":"7877:60:15"},"variables":[{"name":"success","nativeSrc":"7866:7:15","nodeType":"YulTypedName","src":"7866:7:15","type":""}]},{"body":{"nativeSrc":"7998:157:15","nodeType":"YulBlock","src":"7998:157:15","statements":[{"nativeSrc":"8016:22:15","nodeType":"YulVariableDeclaration","src":"8016:22:15","value":{"arguments":[{"kind":"number","nativeSrc":"8033:4:15","nodeType":"YulLiteral","src":"8033:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8027:5:15","nodeType":"YulIdentifier","src":"8027:5:15"},"nativeSrc":"8027:11:15","nodeType":"YulFunctionCall","src":"8027:11:15"},"variables":[{"name":"ptr","nativeSrc":"8020:3:15","nodeType":"YulTypedName","src":"8020:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8070:3:15","nodeType":"YulIdentifier","src":"8070:3:15"},{"kind":"number","nativeSrc":"8075:1:15","nodeType":"YulLiteral","src":"8075:1:15","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8078:14:15","nodeType":"YulIdentifier","src":"8078:14:15"},"nativeSrc":"8078:16:15","nodeType":"YulFunctionCall","src":"8078:16:15"}],"functionName":{"name":"returndatacopy","nativeSrc":"8055:14:15","nodeType":"YulIdentifier","src":"8055:14:15"},"nativeSrc":"8055:40:15","nodeType":"YulFunctionCall","src":"8055:40:15"},"nativeSrc":"8055:40:15","nodeType":"YulExpressionStatement","src":"8055:40:15"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8119:3:15","nodeType":"YulIdentifier","src":"8119:3:15"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8124:14:15","nodeType":"YulIdentifier","src":"8124:14:15"},"nativeSrc":"8124:16:15","nodeType":"YulFunctionCall","src":"8124:16:15"}],"functionName":{"name":"revert","nativeSrc":"8112:6:15","nodeType":"YulIdentifier","src":"8112:6:15"},"nativeSrc":"8112:29:15","nodeType":"YulFunctionCall","src":"8112:29:15"},"nativeSrc":"8112:29:15","nodeType":"YulExpressionStatement","src":"8112:29:15"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"7989:7:15","nodeType":"YulIdentifier","src":"7989:7:15"}],"functionName":{"name":"iszero","nativeSrc":"7982:6:15","nodeType":"YulIdentifier","src":"7982:6:15"},"nativeSrc":"7982:15:15","nodeType":"YulFunctionCall","src":"7982:15:15"},"nativeSrc":"7979:176:15","nodeType":"YulIf","src":"7979:176:15"},{"nativeSrc":"8168:30:15","nodeType":"YulAssignment","src":"8168:30:15","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8182:14:15","nodeType":"YulIdentifier","src":"8182:14:15"},"nativeSrc":"8182:16:15","nodeType":"YulFunctionCall","src":"8182:16:15"},"variableNames":[{"name":"returnSize","nativeSrc":"8168:10:15","nodeType":"YulIdentifier","src":"8168:10:15"}]},{"nativeSrc":"8211:23:15","nodeType":"YulAssignment","src":"8211:23:15","value":{"arguments":[{"kind":"number","nativeSrc":"8232:1:15","nodeType":"YulLiteral","src":"8232:1:15","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8226:5:15","nodeType":"YulIdentifier","src":"8226:5:15"},"nativeSrc":"8226:8:15","nodeType":"YulFunctionCall","src":"8226:8:15"},"variableNames":[{"name":"returnValue","nativeSrc":"8211:11:15","nodeType":"YulIdentifier","src":"8211:11:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1978,"isOffset":false,"isSlot":false,"src":"7903:4:15","valueSize":1},{"declaration":1978,"isOffset":false,"isSlot":false,"src":"7922:4:15","valueSize":1},{"declaration":1982,"isOffset":false,"isSlot":false,"src":"8168:10:15","valueSize":1},{"declaration":1985,"isOffset":false,"isSlot":false,"src":"8211:11:15","valueSize":1},{"declaration":1976,"isOffset":false,"isSlot":false,"src":"7889:5:15","valueSize":1}],"flags":["memory-safe"],"id":1987,"nodeType":"InlineAssembly","src":"7823:421:15"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1988,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"8258:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8272:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8258:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8310:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8325:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8310:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8258:68:15","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1993,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"8284:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}],"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8276:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1991,"name":"address","nodeType":"ElementaryTypeName","src":"8276:7:15","typeDescriptions":{}}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8276:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8291:4:15","memberName":"code","nodeType":"MemberAccess","src":"8276:19:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8296:6:15","memberName":"length","nodeType":"MemberAccess","src":"8276:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8306:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8276:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2011,"nodeType":"IfStatement","src":"8254:146:15","trueBody":{"id":2010,"nodeType":"Block","src":"8328:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2006,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"8382:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}],"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8374:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"8374:7:15","typeDescriptions":{}}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2003,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"8349:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8349:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2009,"nodeType":"RevertStatement","src":"8342:47:15"}]}}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"7195:486:15","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":2013,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7695:19:15","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"token","nameLocation":"7722:5:15","nodeType":"VariableDeclaration","scope":2013,"src":"7715:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},"typeName":{"id":1975,"nodeType":"UserDefinedTypeName","pathNode":{"id":1974,"name":"IERC20","nameLocations":["7715:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"7715:6:15"},"referencedDeclaration":1646,"src":"7715:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"data","nameLocation":"7742:4:15","nodeType":"VariableDeclaration","scope":2013,"src":"7729:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1977,"name":"bytes","nodeType":"ElementaryTypeName","src":"7729:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7714:33:15"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[],"src":"7756:0:15"},"scope":2055,"src":"7686:720:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2053,"nodeType":"Block","src":"8997:391:15","statements":[{"assignments":[2025],"declarations":[{"constant":false,"id":2025,"mutability":"mutable","name":"success","nameLocation":"9012:7:15","nodeType":"VariableDeclaration","scope":2053,"src":"9007:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2024,"name":"bool","nodeType":"ElementaryTypeName","src":"9007:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2026,"nodeType":"VariableDeclarationStatement","src":"9007:12:15"},{"assignments":[2028],"declarations":[{"constant":false,"id":2028,"mutability":"mutable","name":"returnSize","nameLocation":"9037:10:15","nodeType":"VariableDeclaration","scope":2053,"src":"9029:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"9029:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2029,"nodeType":"VariableDeclarationStatement","src":"9029:18:15"},{"assignments":[2031],"declarations":[{"constant":false,"id":2031,"mutability":"mutable","name":"returnValue","nameLocation":"9065:11:15","nodeType":"VariableDeclaration","scope":2053,"src":"9057:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2030,"name":"uint256","nodeType":"ElementaryTypeName","src":"9057:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2032,"nodeType":"VariableDeclarationStatement","src":"9057:19:15"},{"AST":{"nativeSrc":"9111:174:15","nodeType":"YulBlock","src":"9111:174:15","statements":[{"nativeSrc":"9125:71:15","nodeType":"YulAssignment","src":"9125:71:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9141:3:15","nodeType":"YulIdentifier","src":"9141:3:15"},"nativeSrc":"9141:5:15","nodeType":"YulFunctionCall","src":"9141:5:15"},{"name":"token","nativeSrc":"9148:5:15","nodeType":"YulIdentifier","src":"9148:5:15"},{"kind":"number","nativeSrc":"9155:1:15","nodeType":"YulLiteral","src":"9155:1:15","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9162:4:15","nodeType":"YulIdentifier","src":"9162:4:15"},{"kind":"number","nativeSrc":"9168:4:15","nodeType":"YulLiteral","src":"9168:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9158:3:15","nodeType":"YulIdentifier","src":"9158:3:15"},"nativeSrc":"9158:15:15","nodeType":"YulFunctionCall","src":"9158:15:15"},{"arguments":[{"name":"data","nativeSrc":"9181:4:15","nodeType":"YulIdentifier","src":"9181:4:15"}],"functionName":{"name":"mload","nativeSrc":"9175:5:15","nodeType":"YulIdentifier","src":"9175:5:15"},"nativeSrc":"9175:11:15","nodeType":"YulFunctionCall","src":"9175:11:15"},{"kind":"number","nativeSrc":"9188:1:15","nodeType":"YulLiteral","src":"9188:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"9191:4:15","nodeType":"YulLiteral","src":"9191:4:15","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9136:4:15","nodeType":"YulIdentifier","src":"9136:4:15"},"nativeSrc":"9136:60:15","nodeType":"YulFunctionCall","src":"9136:60:15"},"variableNames":[{"name":"success","nativeSrc":"9125:7:15","nodeType":"YulIdentifier","src":"9125:7:15"}]},{"nativeSrc":"9209:30:15","nodeType":"YulAssignment","src":"9209:30:15","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9223:14:15","nodeType":"YulIdentifier","src":"9223:14:15"},"nativeSrc":"9223:16:15","nodeType":"YulFunctionCall","src":"9223:16:15"},"variableNames":[{"name":"returnSize","nativeSrc":"9209:10:15","nodeType":"YulIdentifier","src":"9209:10:15"}]},{"nativeSrc":"9252:23:15","nodeType":"YulAssignment","src":"9252:23:15","value":{"arguments":[{"kind":"number","nativeSrc":"9273:1:15","nodeType":"YulLiteral","src":"9273:1:15","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9267:5:15","nodeType":"YulIdentifier","src":"9267:5:15"},"nativeSrc":"9267:8:15","nodeType":"YulFunctionCall","src":"9267:8:15"},"variableNames":[{"name":"returnValue","nativeSrc":"9252:11:15","nodeType":"YulIdentifier","src":"9252:11:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2019,"isOffset":false,"isSlot":false,"src":"9162:4:15","valueSize":1},{"declaration":2019,"isOffset":false,"isSlot":false,"src":"9181:4:15","valueSize":1},{"declaration":2028,"isOffset":false,"isSlot":false,"src":"9209:10:15","valueSize":1},{"declaration":2031,"isOffset":false,"isSlot":false,"src":"9252:11:15","valueSize":1},{"declaration":2025,"isOffset":false,"isSlot":false,"src":"9125:7:15","valueSize":1},{"declaration":2017,"isOffset":false,"isSlot":false,"src":"9148:5:15","valueSize":1}],"flags":["memory-safe"],"id":2033,"nodeType":"InlineAssembly","src":"9086:199:15"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2034,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"9301:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2035,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"9313:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9327:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9313:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2046,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"9364:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9364:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9313:67:15","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2040,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"9339:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}],"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"9331:7:15","typeDescriptions":{}}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9346:4:15","memberName":"code","nodeType":"MemberAccess","src":"9331:19:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9351:6:15","memberName":"length","nodeType":"MemberAccess","src":"9331:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9331:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9312:69:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9301:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2023,"id":2052,"nodeType":"Return","src":"9294:87:15"}]},"documentation":{"id":2014,"nodeType":"StructuredDocumentation","src":"8412:491:15","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":2054,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8917:23:15","nodeType":"FunctionDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"token","nameLocation":"8948:5:15","nodeType":"VariableDeclaration","scope":2054,"src":"8941:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},"typeName":{"id":2016,"nodeType":"UserDefinedTypeName","pathNode":{"id":2015,"name":"IERC20","nameLocations":["8941:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"8941:6:15"},"referencedDeclaration":1646,"src":"8941:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"data","nameLocation":"8968:4:15","nodeType":"VariableDeclaration","scope":2054,"src":"8955:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2018,"name":"bytes","nodeType":"ElementaryTypeName","src":"8955:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8940:33:15"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2054,"src":"8991:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2021,"name":"bool","nodeType":"ElementaryTypeName","src":"8991:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8990:6:15"},"scope":2055,"src":"8908:480:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2056,"src":"698:8692:15","usedErrors":[1658,1667],"usedEvents":[]}],"src":"115:9276:15"},"id":15},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2315],"Errors":[2337]},"id":2316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2057,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":2059,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2316,"sourceUnit":2338,"src":"127:36:16","symbolAliases":[{"foreign":{"id":2058,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"135:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"165:67:16","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2315,"linearizedBaseContracts":[2315],"name":"Address","nameLocation":"241:7:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"255:75:16","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2065,"name":"AddressEmptyCode","nameLocation":"341:16:16","nodeType":"ErrorDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"target","nameLocation":"366:6:16","nodeType":"VariableDeclaration","scope":2065,"src":"358:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2062,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:16"},"src":"335:39:16"},{"body":{"id":2112,"nodeType":"Block","src":"1361:294:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2075,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2315","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2315","typeString":"library Address"}],"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2073,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:16","typeDescriptions":{}}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:16","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2078,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"1399:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2092,"nodeType":"IfStatement","src":"1371:125:16","trueBody":{"id":2091,"nodeType":"Block","src":"1407:89:16","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2085,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2315","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2315","typeString":"library Address"}],"id":2084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:16","typeDescriptions":{}}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:16","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2088,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"1478:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2080,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1428:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2337_$","typeString":"type(library Errors)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:16","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"1428:26:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2090,"nodeType":"RevertStatement","src":"1421:64:16"}]}},{"assignments":[2094,2096],"declarations":[{"constant":false,"id":2094,"mutability":"mutable","name":"success","nameLocation":"1512:7:16","nodeType":"VariableDeclaration","scope":2112,"src":"1507:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2093,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:16","nodeType":"VariableDeclaration","scope":2112,"src":"1521:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2095,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2103,"initialValue":{"arguments":[{"hexValue":"","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2097,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"1548:9:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:16","memberName":"call","nodeType":"MemberAccess","src":"1548:14:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2099,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"1570:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:16"},{"condition":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:16","subExpression":{"id":2104,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"1596:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2111,"nodeType":"IfStatement","src":"1591:58:16","trueBody":{"id":2110,"nodeType":"Block","src":"1605:44:16","statements":[{"expression":{"arguments":[{"id":2107,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1627:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2106,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"1619:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2109,"nodeType":"ExpressionStatement","src":"1619:19:16"}]}}]},"documentation":{"id":2066,"nodeType":"StructuredDocumentation","src":"380:905:16","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:16","nodeType":"FunctionDefinition","parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:16","nodeType":"VariableDeclaration","scope":2113,"src":"1309:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"amount","nameLocation":"1344:6:16","nodeType":"VariableDeclaration","scope":2113,"src":"1336:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:16"},"returnParameters":{"id":2072,"nodeType":"ParameterList","parameters":[],"src":"1361:0:16"},"scope":2315,"src":"1290:365:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2129,"nodeType":"Block","src":"2589:62:16","statements":[{"expression":{"arguments":[{"id":2124,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"2628:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2125,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2636:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2123,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"2606:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2122,"id":2128,"nodeType":"Return","src":"2599:45:16"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"1661:834:16","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2130,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:16","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"target","nameLocation":"2530:6:16","nodeType":"VariableDeclaration","scope":2130,"src":"2522:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"data","nameLocation":"2551:4:16","nodeType":"VariableDeclaration","scope":2130,"src":"2538:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2117,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:16"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2130,"src":"2575:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2120,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:16"},"scope":2315,"src":"2500:151:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2179,"nodeType":"Block","src":"3088:294:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2144,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2315","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2315","typeString":"library Address"}],"id":2143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2142,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:16","typeDescriptions":{}}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:16","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"3126:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2161,"nodeType":"IfStatement","src":"3098:123:16","trueBody":{"id":2160,"nodeType":"Block","src":"3133:88:16","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2154,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2315","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2315","typeString":"library Address"}],"id":2153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2152,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:16","typeDescriptions":{}}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:16","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"3204:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2149,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"3154:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2337_$","typeString":"type(library Errors)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:16","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"3154:26:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2159,"nodeType":"RevertStatement","src":"3147:63:16"}]}},{"assignments":[2163,2165],"declarations":[{"constant":false,"id":2163,"mutability":"mutable","name":"success","nameLocation":"3236:7:16","nodeType":"VariableDeclaration","scope":2179,"src":"3231:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2162,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:16","nodeType":"VariableDeclaration","scope":2179,"src":"3245:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2164,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2172,"initialValue":{"arguments":[{"id":2170,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"3298:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2166,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"3272:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:16","memberName":"call","nodeType":"MemberAccess","src":"3272:11:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"3291:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:16"},{"expression":{"arguments":[{"id":2174,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"3347:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2175,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"3355:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2176,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3364:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2173,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"3320:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2141,"id":2178,"nodeType":"Return","src":"3313:62:16"}]},"documentation":{"id":2131,"nodeType":"StructuredDocumentation","src":"2657:313:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:16","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"target","nameLocation":"3014:6:16","nodeType":"VariableDeclaration","scope":2180,"src":"3006:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2132,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2135,"mutability":"mutable","name":"data","nameLocation":"3035:4:16","nodeType":"VariableDeclaration","scope":2180,"src":"3022:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2134,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"value","nameLocation":"3049:5:16","nodeType":"VariableDeclaration","scope":2180,"src":"3041:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2136,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:16"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2180,"src":"3074:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2139,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:16"},"scope":2315,"src":"2975:407:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2205,"nodeType":"Block","src":"3621:154:16","statements":[{"assignments":[2191,2193],"declarations":[{"constant":false,"id":2191,"mutability":"mutable","name":"success","nameLocation":"3637:7:16","nodeType":"VariableDeclaration","scope":2205,"src":"3632:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2190,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2193,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:16","nodeType":"VariableDeclaration","scope":2205,"src":"3646:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2192,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2198,"initialValue":{"arguments":[{"id":2196,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3691:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2194,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"3673:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:16","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:16","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:16"},{"expression":{"arguments":[{"id":2200,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"3740:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2201,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"3748:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2202,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"3757:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2199,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"3713:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2189,"id":2204,"nodeType":"Return","src":"3706:62:16"}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"3388:128:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2206,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:16","nodeType":"FunctionDefinition","parameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"target","nameLocation":"3557:6:16","nodeType":"VariableDeclaration","scope":2206,"src":"3549:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"data","nameLocation":"3578:4:16","nodeType":"VariableDeclaration","scope":2206,"src":"3565:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2184,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:16"},"returnParameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2206,"src":"3607:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2187,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:16"},"scope":2315,"src":"3521:254:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2231,"nodeType":"Block","src":"4013:156:16","statements":[{"assignments":[2217,2219],"declarations":[{"constant":false,"id":2217,"mutability":"mutable","name":"success","nameLocation":"4029:7:16","nodeType":"VariableDeclaration","scope":2231,"src":"4024:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2216,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2219,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:16","nodeType":"VariableDeclaration","scope":2231,"src":"4038:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2218,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2224,"initialValue":{"arguments":[{"id":2222,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"4085:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2220,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4065:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:16","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:16","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:16"},{"expression":{"arguments":[{"id":2226,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4134:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2227,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4142:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2228,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4151:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2225,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"4107:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2215,"id":2230,"nodeType":"Return","src":"4100:62:16"}]},"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"3781:130:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2232,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:16","nodeType":"FunctionDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"target","nameLocation":"3954:6:16","nodeType":"VariableDeclaration","scope":2232,"src":"3946:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"data","nameLocation":"3975:4:16","nodeType":"VariableDeclaration","scope":2232,"src":"3962:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2210,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:16"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2232,"src":"3999:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2213,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:16"},"scope":2315,"src":"3916:253:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2271,"nodeType":"Block","src":"4595:424:16","statements":[{"condition":{"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:16","subExpression":{"id":2244,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"4610:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2269,"nodeType":"Block","src":"4669:344:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2251,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"4857:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:16","memberName":"length","nodeType":"MemberAccess","src":"4857:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2255,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4883:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:16","memberName":"code","nodeType":"MemberAccess","src":"4883:11:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:16","memberName":"length","nodeType":"MemberAccess","src":"4883:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2266,"nodeType":"IfStatement","src":"4853:119:16","trueBody":{"id":2265,"nodeType":"Block","src":"4908:64:16","statements":[{"errorCall":{"arguments":[{"id":2262,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4950:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2261,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"4933:16:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2264,"nodeType":"RevertStatement","src":"4926:31:16"}]}},{"expression":{"id":2267,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"4992:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2243,"id":2268,"nodeType":"Return","src":"4985:17:16"}]},"id":2270,"nodeType":"IfStatement","src":"4605:408:16","trueBody":{"id":2250,"nodeType":"Block","src":"4619:44:16","statements":[{"expression":{"arguments":[{"id":2247,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"4641:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2246,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"4633:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2249,"nodeType":"ExpressionStatement","src":"4633:19:16"}]}}]},"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"4175:257:16","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:16","nodeType":"FunctionDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"target","nameLocation":"4490:6:16","nodeType":"VariableDeclaration","scope":2272,"src":"4482:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2234,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2237,"mutability":"mutable","name":"success","nameLocation":"4511:7:16","nodeType":"VariableDeclaration","scope":2272,"src":"4506:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2236,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:16","nodeType":"VariableDeclaration","scope":2272,"src":"4528:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2238,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:16"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"4581:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2241,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:16"},"scope":2315,"src":"4437:582:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2293,"nodeType":"Block","src":"5323:122:16","statements":[{"condition":{"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:16","subExpression":{"id":2282,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"5338:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2291,"nodeType":"Block","src":"5397:42:16","statements":[{"expression":{"id":2289,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5418:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2281,"id":2290,"nodeType":"Return","src":"5411:17:16"}]},"id":2292,"nodeType":"IfStatement","src":"5333:106:16","trueBody":{"id":2288,"nodeType":"Block","src":"5347:44:16","statements":[{"expression":{"arguments":[{"id":2285,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5369:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2284,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"5361:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2287,"nodeType":"ExpressionStatement","src":"5361:19:16"}]}}]},"documentation":{"id":2273,"nodeType":"StructuredDocumentation","src":"5025:191:16","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":2294,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:16","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"success","nameLocation":"5252:7:16","nodeType":"VariableDeclaration","scope":2294,"src":"5247:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2274,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:16","nodeType":"VariableDeclaration","scope":2294,"src":"5261:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2276,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:16"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2294,"src":"5309:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2279,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:16"},"scope":2315,"src":"5221:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2313,"nodeType":"Block","src":"5614:432:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2300,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"5690:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:16","memberName":"length","nodeType":"MemberAccess","src":"5690:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2311,"nodeType":"Block","src":"5989:51:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2306,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6010:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2337_$","typeString":"type(library Errors)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6017:10:16","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":2328,"src":"6010:17:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6010:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2310,"nodeType":"RevertStatement","src":"6003:26:16"}]},"id":2312,"nodeType":"IfStatement","src":"5686:354:16","trueBody":{"id":2305,"nodeType":"Block","src":"5713:270:16","statements":[{"AST":{"nativeSrc":"5840:133:16","nodeType":"YulBlock","src":"5840:133:16","statements":[{"nativeSrc":"5858:40:16","nodeType":"YulVariableDeclaration","src":"5858:40:16","value":{"arguments":[{"name":"returndata","nativeSrc":"5887:10:16","nodeType":"YulIdentifier","src":"5887:10:16"}],"functionName":{"name":"mload","nativeSrc":"5881:5:16","nodeType":"YulIdentifier","src":"5881:5:16"},"nativeSrc":"5881:17:16","nodeType":"YulFunctionCall","src":"5881:17:16"},"variables":[{"name":"returndata_size","nativeSrc":"5862:15:16","nodeType":"YulTypedName","src":"5862:15:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5926:2:16","nodeType":"YulLiteral","src":"5926:2:16","type":"","value":"32"},{"name":"returndata","nativeSrc":"5930:10:16","nodeType":"YulIdentifier","src":"5930:10:16"}],"functionName":{"name":"add","nativeSrc":"5922:3:16","nodeType":"YulIdentifier","src":"5922:3:16"},"nativeSrc":"5922:19:16","nodeType":"YulFunctionCall","src":"5922:19:16"},{"name":"returndata_size","nativeSrc":"5943:15:16","nodeType":"YulIdentifier","src":"5943:15:16"}],"functionName":{"name":"revert","nativeSrc":"5915:6:16","nodeType":"YulIdentifier","src":"5915:6:16"},"nativeSrc":"5915:44:16","nodeType":"YulFunctionCall","src":"5915:44:16"},"nativeSrc":"5915:44:16","nodeType":"YulExpressionStatement","src":"5915:44:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2297,"isOffset":false,"isSlot":false,"src":"5887:10:16","valueSize":1},{"declaration":2297,"isOffset":false,"isSlot":false,"src":"5930:10:16","valueSize":1}],"flags":["memory-safe"],"id":2304,"nodeType":"InlineAssembly","src":"5815:158:16"}]}}]},"documentation":{"id":2295,"nodeType":"StructuredDocumentation","src":"5451:103:16","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":2314,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:16","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:16","nodeType":"VariableDeclaration","scope":2314,"src":"5576:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2296,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:16"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[],"src":"5614:0:16"},"scope":2315,"src":"5559:487:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2316,"src":"233:5815:16","usedErrors":[2065],"usedEvents":[]}],"src":"101:5948:16"},"id":16},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[2337]},"id":2338,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2317,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"126:284:17","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":2337,"linearizedBaseContracts":[2337],"name":"Errors","nameLocation":"419:6:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2319,"nodeType":"StructuredDocumentation","src":"432:94:17","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":2325,"name":"InsufficientBalance","nameLocation":"537:19:17","nodeType":"ErrorDefinition","parameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"balance","nameLocation":"565:7:17","nodeType":"VariableDeclaration","scope":2325,"src":"557:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"needed","nameLocation":"582:6:17","nodeType":"VariableDeclaration","scope":2325,"src":"574:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:17"},"src":"531:59:17"},{"documentation":{"id":2326,"nodeType":"StructuredDocumentation","src":"596:89:17","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":2328,"name":"FailedCall","nameLocation":"696:10:17","nodeType":"ErrorDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[],"src":"706:2:17"},"src":"690:19:17"},{"documentation":{"id":2329,"nodeType":"StructuredDocumentation","src":"715:46:17","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":2331,"name":"FailedDeployment","nameLocation":"772:16:17","nodeType":"ErrorDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[],"src":"788:2:17"},"src":"766:25:17"},{"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"797:58:17","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":2336,"name":"MissingPrecompile","nameLocation":"866:17:17","nodeType":"ErrorDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2336,"src":"884:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:17"},"src":"860:33:17"}],"scope":2338,"src":"411:484:17","usedErrors":[2325,2328,2331,2336],"usedEvents":[]}],"src":"100:796:17"},"id":17},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2389]},"id":2390,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2339,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2340,"nodeType":"StructuredDocumentation","src":"125:489:18","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2389,"linearizedBaseContracts":[2389],"name":"Panic","nameLocation":"665:5:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"677:36:18","text":"@dev generic / unspecified error"},"id":2344,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:18","nodeType":"VariableDeclaration","scope":2389,"src":"718:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2345,"nodeType":"StructuredDocumentation","src":"764:37:18","text":"@dev used by the assert() builtin"},"id":2348,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:18","nodeType":"VariableDeclaration","scope":2389,"src":"806:39:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"851:41:18","text":"@dev arithmetic underflow or overflow"},"id":2352,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:18","nodeType":"VariableDeclaration","scope":2389,"src":"897:47:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:18","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"950:35:18","text":"@dev division or modulo by zero"},"id":2356,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:18","nodeType":"VariableDeclaration","scope":2389,"src":"990:49:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:18","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2357,"nodeType":"StructuredDocumentation","src":"1045:30:18","text":"@dev enum conversion error"},"id":2360,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:18","nodeType":"VariableDeclaration","scope":2389,"src":"1080:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:18","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"1140:36:18","text":"@dev invalid encoding in storage"},"id":2364,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:18","nodeType":"VariableDeclaration","scope":2389,"src":"1181:55:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2365,"nodeType":"StructuredDocumentation","src":"1242:24:18","text":"@dev empty array pop"},"id":2368,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:18","nodeType":"VariableDeclaration","scope":2389,"src":"1271:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:18","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"1325:35:18","text":"@dev array out of bounds access"},"id":2372,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:18","nodeType":"VariableDeclaration","scope":2389,"src":"1365:52:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:18","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"1423:65:18","text":"@dev resource error (too large allocation or too large array)"},"id":2376,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:18","nodeType":"VariableDeclaration","scope":2389,"src":"1493:47:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2377,"nodeType":"StructuredDocumentation","src":"1546:42:18","text":"@dev calling invalid internal function"},"id":2380,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:18","nodeType":"VariableDeclaration","scope":2389,"src":"1593:58:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:18","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2387,"nodeType":"Block","src":"1819:151:18","statements":[{"AST":{"nativeSrc":"1854:110:18","nodeType":"YulBlock","src":"1854:110:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:18","nodeType":"YulLiteral","src":"1875:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:18","nodeType":"YulLiteral","src":"1881:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:18","nodeType":"YulIdentifier","src":"1868:6:18"},"nativeSrc":"1868:24:18","nodeType":"YulFunctionCall","src":"1868:24:18"},"nativeSrc":"1868:24:18","nodeType":"YulExpressionStatement","src":"1868:24:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:18","nodeType":"YulLiteral","src":"1912:4:18","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:18","nodeType":"YulIdentifier","src":"1918:4:18"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:18","nodeType":"YulIdentifier","src":"1905:6:18"},"nativeSrc":"1905:18:18","nodeType":"YulFunctionCall","src":"1905:18:18"},"nativeSrc":"1905:18:18","nodeType":"YulExpressionStatement","src":"1905:18:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:18","nodeType":"YulLiteral","src":"1943:4:18","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:18","nodeType":"YulLiteral","src":"1949:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:18","nodeType":"YulIdentifier","src":"1936:6:18"},"nativeSrc":"1936:18:18","nodeType":"YulFunctionCall","src":"1936:18:18"},"nativeSrc":"1936:18:18","nodeType":"YulExpressionStatement","src":"1936:18:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":2383,"isOffset":false,"isSlot":false,"src":"1918:4:18","valueSize":1}],"flags":["memory-safe"],"id":2386,"nodeType":"InlineAssembly","src":"1829:135:18"}]},"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"1658:113:18","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2388,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:18","nodeType":"FunctionDefinition","parameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"code","nameLocation":"1799:4:18","nodeType":"VariableDeclaration","scope":2388,"src":"1791:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:18"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[],"src":"1819:0:18"},"scope":2389,"src":"1776:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2390,"src":"657:1315:18","usedErrors":[],"usedEvents":[]}],"src":"99:1874:18"},"id":18},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2513]},"id":2514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2391,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"219:1187:19","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2513,"linearizedBaseContracts":[2513],"name":"StorageSlot","nameLocation":"1415:11:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2395,"members":[{"constant":false,"id":2394,"mutability":"mutable","name":"value","nameLocation":"1470:5:19","nodeType":"VariableDeclaration","scope":2395,"src":"1462:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2393,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:19","nodeType":"StructDefinition","scope":2513,"src":"1433:49:19","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2398,"members":[{"constant":false,"id":2397,"mutability":"mutable","name":"value","nameLocation":"1522:5:19","nodeType":"VariableDeclaration","scope":2398,"src":"1517:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2396,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:19","nodeType":"StructDefinition","scope":2513,"src":"1488:46:19","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2401,"members":[{"constant":false,"id":2400,"mutability":"mutable","name":"value","nameLocation":"1577:5:19","nodeType":"VariableDeclaration","scope":2401,"src":"1569:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:19","nodeType":"StructDefinition","scope":2513,"src":"1540:49:19","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2404,"members":[{"constant":false,"id":2403,"mutability":"mutable","name":"value","nameLocation":"1632:5:19","nodeType":"VariableDeclaration","scope":2404,"src":"1624:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:19","nodeType":"StructDefinition","scope":2513,"src":"1595:49:19","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2407,"members":[{"constant":false,"id":2406,"mutability":"mutable","name":"value","nameLocation":"1685:5:19","nodeType":"VariableDeclaration","scope":2407,"src":"1678:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2405,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:19","nodeType":"StructDefinition","scope":2513,"src":"1650:47:19","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2410,"members":[{"constant":false,"id":2409,"mutability":"mutable","name":"value","nameLocation":"1738:5:19","nodeType":"VariableDeclaration","scope":2410,"src":"1731:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2408,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:19","nodeType":"StructDefinition","scope":2513,"src":"1703:47:19","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2413,"members":[{"constant":false,"id":2412,"mutability":"mutable","name":"value","nameLocation":"1789:5:19","nodeType":"VariableDeclaration","scope":2413,"src":"1783:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2411,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:19","nodeType":"StructDefinition","scope":2513,"src":"1756:45:19","visibility":"public"},{"body":{"id":2423,"nodeType":"Block","src":"1983:79:19","statements":[{"AST":{"nativeSrc":"2018:38:19","nodeType":"YulBlock","src":"2018:38:19","statements":[{"nativeSrc":"2032:14:19","nodeType":"YulAssignment","src":"2032:14:19","value":{"name":"slot","nativeSrc":"2042:4:19","nodeType":"YulIdentifier","src":"2042:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:19","nodeType":"YulIdentifier","src":"2032:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2420,"isOffset":false,"isSlot":true,"src":"2032:6:19","suffix":"slot","valueSize":1},{"declaration":2416,"isOffset":false,"isSlot":false,"src":"2042:4:19","valueSize":1}],"flags":["memory-safe"],"id":2422,"nodeType":"InlineAssembly","src":"1993:63:19"}]},"documentation":{"id":2414,"nodeType":"StructuredDocumentation","src":"1807:87:19","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2424,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:19","nodeType":"FunctionDefinition","parameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"slot","nameLocation":"1931:4:19","nodeType":"VariableDeclaration","scope":2424,"src":"1923:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:19"},"returnParameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"r","nameLocation":"1980:1:19","nodeType":"VariableDeclaration","scope":2424,"src":"1960:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2395_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2419,"nodeType":"UserDefinedTypeName","pathNode":{"id":2418,"name":"AddressSlot","nameLocations":["1960:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"1960:11:19"},"referencedDeclaration":2395,"src":"1960:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2395_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:19"},"scope":2513,"src":"1899:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2434,"nodeType":"Block","src":"2243:79:19","statements":[{"AST":{"nativeSrc":"2278:38:19","nodeType":"YulBlock","src":"2278:38:19","statements":[{"nativeSrc":"2292:14:19","nodeType":"YulAssignment","src":"2292:14:19","value":{"name":"slot","nativeSrc":"2302:4:19","nodeType":"YulIdentifier","src":"2302:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:19","nodeType":"YulIdentifier","src":"2292:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2431,"isOffset":false,"isSlot":true,"src":"2292:6:19","suffix":"slot","valueSize":1},{"declaration":2427,"isOffset":false,"isSlot":false,"src":"2302:4:19","valueSize":1}],"flags":["memory-safe"],"id":2433,"nodeType":"InlineAssembly","src":"2253:63:19"}]},"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"2068:86:19","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2435,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:19","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"slot","nameLocation":"2191:4:19","nodeType":"VariableDeclaration","scope":2435,"src":"2183:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:19"},"returnParameters":{"id":2432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"r","nameLocation":"2240:1:19","nodeType":"VariableDeclaration","scope":2435,"src":"2220:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2398_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2430,"nodeType":"UserDefinedTypeName","pathNode":{"id":2429,"name":"BooleanSlot","nameLocations":["2220:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2398,"src":"2220:11:19"},"referencedDeclaration":2398,"src":"2220:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2398_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:19"},"scope":2513,"src":"2159:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2445,"nodeType":"Block","src":"2503:79:19","statements":[{"AST":{"nativeSrc":"2538:38:19","nodeType":"YulBlock","src":"2538:38:19","statements":[{"nativeSrc":"2552:14:19","nodeType":"YulAssignment","src":"2552:14:19","value":{"name":"slot","nativeSrc":"2562:4:19","nodeType":"YulIdentifier","src":"2562:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:19","nodeType":"YulIdentifier","src":"2552:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2442,"isOffset":false,"isSlot":true,"src":"2552:6:19","suffix":"slot","valueSize":1},{"declaration":2438,"isOffset":false,"isSlot":false,"src":"2562:4:19","valueSize":1}],"flags":["memory-safe"],"id":2444,"nodeType":"InlineAssembly","src":"2513:63:19"}]},"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"2328:86:19","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2446,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:19","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"slot","nameLocation":"2451:4:19","nodeType":"VariableDeclaration","scope":2446,"src":"2443:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:19"},"returnParameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"r","nameLocation":"2500:1:19","nodeType":"VariableDeclaration","scope":2446,"src":"2480:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2401_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2441,"nodeType":"UserDefinedTypeName","pathNode":{"id":2440,"name":"Bytes32Slot","nameLocations":["2480:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"2480:11:19"},"referencedDeclaration":2401,"src":"2480:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2401_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:19"},"scope":2513,"src":"2419:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2456,"nodeType":"Block","src":"2763:79:19","statements":[{"AST":{"nativeSrc":"2798:38:19","nodeType":"YulBlock","src":"2798:38:19","statements":[{"nativeSrc":"2812:14:19","nodeType":"YulAssignment","src":"2812:14:19","value":{"name":"slot","nativeSrc":"2822:4:19","nodeType":"YulIdentifier","src":"2822:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:19","nodeType":"YulIdentifier","src":"2812:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2453,"isOffset":false,"isSlot":true,"src":"2812:6:19","suffix":"slot","valueSize":1},{"declaration":2449,"isOffset":false,"isSlot":false,"src":"2822:4:19","valueSize":1}],"flags":["memory-safe"],"id":2455,"nodeType":"InlineAssembly","src":"2773:63:19"}]},"documentation":{"id":2447,"nodeType":"StructuredDocumentation","src":"2588:86:19","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2457,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:19","nodeType":"FunctionDefinition","parameters":{"id":2450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"mutability":"mutable","name":"slot","nameLocation":"2711:4:19","nodeType":"VariableDeclaration","scope":2457,"src":"2703:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:19"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"r","nameLocation":"2760:1:19","nodeType":"VariableDeclaration","scope":2457,"src":"2740:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2404_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2452,"nodeType":"UserDefinedTypeName","pathNode":{"id":2451,"name":"Uint256Slot","nameLocations":["2740:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2404,"src":"2740:11:19"},"referencedDeclaration":2404,"src":"2740:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2404_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:19"},"scope":2513,"src":"2679:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2467,"nodeType":"Block","src":"3020:79:19","statements":[{"AST":{"nativeSrc":"3055:38:19","nodeType":"YulBlock","src":"3055:38:19","statements":[{"nativeSrc":"3069:14:19","nodeType":"YulAssignment","src":"3069:14:19","value":{"name":"slot","nativeSrc":"3079:4:19","nodeType":"YulIdentifier","src":"3079:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:19","nodeType":"YulIdentifier","src":"3069:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2464,"isOffset":false,"isSlot":true,"src":"3069:6:19","suffix":"slot","valueSize":1},{"declaration":2460,"isOffset":false,"isSlot":false,"src":"3079:4:19","valueSize":1}],"flags":["memory-safe"],"id":2466,"nodeType":"InlineAssembly","src":"3030:63:19"}]},"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"2848:85:19","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2468,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:19","nodeType":"FunctionDefinition","parameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"slot","nameLocation":"2969:4:19","nodeType":"VariableDeclaration","scope":2468,"src":"2961:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:19"},"returnParameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"r","nameLocation":"3017:1:19","nodeType":"VariableDeclaration","scope":2468,"src":"2998:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2407_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2463,"nodeType":"UserDefinedTypeName","pathNode":{"id":2462,"name":"Int256Slot","nameLocations":["2998:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":2407,"src":"2998:10:19"},"referencedDeclaration":2407,"src":"2998:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2407_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:19"},"scope":2513,"src":"2938:161:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2478,"nodeType":"Block","src":"3277:79:19","statements":[{"AST":{"nativeSrc":"3312:38:19","nodeType":"YulBlock","src":"3312:38:19","statements":[{"nativeSrc":"3326:14:19","nodeType":"YulAssignment","src":"3326:14:19","value":{"name":"slot","nativeSrc":"3336:4:19","nodeType":"YulIdentifier","src":"3336:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:19","nodeType":"YulIdentifier","src":"3326:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2475,"isOffset":false,"isSlot":true,"src":"3326:6:19","suffix":"slot","valueSize":1},{"declaration":2471,"isOffset":false,"isSlot":false,"src":"3336:4:19","valueSize":1}],"flags":["memory-safe"],"id":2477,"nodeType":"InlineAssembly","src":"3287:63:19"}]},"documentation":{"id":2469,"nodeType":"StructuredDocumentation","src":"3105:85:19","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2479,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:19","nodeType":"FunctionDefinition","parameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"slot","nameLocation":"3226:4:19","nodeType":"VariableDeclaration","scope":2479,"src":"3218:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:19"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"r","nameLocation":"3274:1:19","nodeType":"VariableDeclaration","scope":2479,"src":"3255:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2410_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2474,"nodeType":"UserDefinedTypeName","pathNode":{"id":2473,"name":"StringSlot","nameLocations":["3255:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":2410,"src":"3255:10:19"},"referencedDeclaration":2410,"src":"3255:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2410_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:19"},"scope":2513,"src":"3195:161:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2489,"nodeType":"Block","src":"3558:85:19","statements":[{"AST":{"nativeSrc":"3593:44:19","nodeType":"YulBlock","src":"3593:44:19","statements":[{"nativeSrc":"3607:20:19","nodeType":"YulAssignment","src":"3607:20:19","value":{"name":"store.slot","nativeSrc":"3617:10:19","nodeType":"YulIdentifier","src":"3617:10:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:19","nodeType":"YulIdentifier","src":"3607:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2486,"isOffset":false,"isSlot":true,"src":"3607:6:19","suffix":"slot","valueSize":1},{"declaration":2482,"isOffset":false,"isSlot":true,"src":"3617:10:19","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2488,"nodeType":"InlineAssembly","src":"3568:69:19"}]},"documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"3362:101:19","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:19","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2482,"mutability":"mutable","name":"store","nameLocation":"3506:5:19","nodeType":"VariableDeclaration","scope":2490,"src":"3491:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2481,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:19"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"r","nameLocation":"3555:1:19","nodeType":"VariableDeclaration","scope":2490,"src":"3536:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2410_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2485,"nodeType":"UserDefinedTypeName","pathNode":{"id":2484,"name":"StringSlot","nameLocations":["3536:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":2410,"src":"3536:10:19"},"referencedDeclaration":2410,"src":"3536:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2410_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:19"},"scope":2513,"src":"3468:175:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2500,"nodeType":"Block","src":"3818:79:19","statements":[{"AST":{"nativeSrc":"3853:38:19","nodeType":"YulBlock","src":"3853:38:19","statements":[{"nativeSrc":"3867:14:19","nodeType":"YulAssignment","src":"3867:14:19","value":{"name":"slot","nativeSrc":"3877:4:19","nodeType":"YulIdentifier","src":"3877:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:19","nodeType":"YulIdentifier","src":"3867:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2497,"isOffset":false,"isSlot":true,"src":"3867:6:19","suffix":"slot","valueSize":1},{"declaration":2493,"isOffset":false,"isSlot":false,"src":"3877:4:19","valueSize":1}],"flags":["memory-safe"],"id":2499,"nodeType":"InlineAssembly","src":"3828:63:19"}]},"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"3649:84:19","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2501,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:19","nodeType":"FunctionDefinition","parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"slot","nameLocation":"3768:4:19","nodeType":"VariableDeclaration","scope":2501,"src":"3760:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:19"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"r","nameLocation":"3815:1:19","nodeType":"VariableDeclaration","scope":2501,"src":"3797:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2413_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2496,"nodeType":"UserDefinedTypeName","pathNode":{"id":2495,"name":"BytesSlot","nameLocations":["3797:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2413,"src":"3797:9:19"},"referencedDeclaration":2413,"src":"3797:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2413_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:19"},"scope":2513,"src":"3738:159:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2511,"nodeType":"Block","src":"4094:85:19","statements":[{"AST":{"nativeSrc":"4129:44:19","nodeType":"YulBlock","src":"4129:44:19","statements":[{"nativeSrc":"4143:20:19","nodeType":"YulAssignment","src":"4143:20:19","value":{"name":"store.slot","nativeSrc":"4153:10:19","nodeType":"YulIdentifier","src":"4153:10:19"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:19","nodeType":"YulIdentifier","src":"4143:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2508,"isOffset":false,"isSlot":true,"src":"4143:6:19","suffix":"slot","valueSize":1},{"declaration":2504,"isOffset":false,"isSlot":true,"src":"4153:10:19","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2510,"nodeType":"InlineAssembly","src":"4104:69:19"}]},"documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"3903:99:19","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:19","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"store","nameLocation":"4043:5:19","nodeType":"VariableDeclaration","scope":2512,"src":"4029:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2503,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:19"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"r","nameLocation":"4091:1:19","nodeType":"VariableDeclaration","scope":2512,"src":"4073:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2413_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2507,"nodeType":"UserDefinedTypeName","pathNode":{"id":2506,"name":"BytesSlot","nameLocations":["4073:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2413,"src":"4073:9:19"},"referencedDeclaration":2413,"src":"4073:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2413_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:19"},"scope":2513,"src":"4007:172:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2514,"src":"1407:2774:19","usedErrors":[],"usedEvents":[]}],"src":"193:3989:19"},"id":19},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2525]},"id":2526,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2515,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"141:280:20","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2525,"linearizedBaseContracts":[2525],"name":"IERC165","nameLocation":"432:7:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2517,"nodeType":"StructuredDocumentation","src":"446:340:20","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2524,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:20","nodeType":"FunctionDefinition","parameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:20","nodeType":"VariableDeclaration","scope":2524,"src":"818:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2518,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:20"},"returnParameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2524,"src":"861:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2521,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:20"},"scope":2525,"src":"791:76:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2526,"src":"422:447:20","usedErrors":[],"usedEvents":[]}],"src":"115:755:20"},"id":20},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4131],"Panic":[2389],"SafeCast":[5896]},"id":4132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2527,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2529,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4132,"sourceUnit":2390,"src":"129:35:21","symbolAliases":[{"foreign":{"id":2528,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"137:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4132,"sourceUnit":5897,"src":"165:40:21","symbolAliases":[{"foreign":{"id":2530,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"173:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"207:73:21","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4131,"linearizedBaseContracts":[4131],"name":"Math","nameLocation":"289:4:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2537,"members":[{"id":2533,"name":"Floor","nameLocation":"324:5:21","nodeType":"EnumValue","src":"324:5:21"},{"id":2534,"name":"Ceil","nameLocation":"367:4:21","nodeType":"EnumValue","src":"367:4:21"},{"id":2535,"name":"Trunc","nameLocation":"409:5:21","nodeType":"EnumValue","src":"409:5:21"},{"id":2536,"name":"Expand","nameLocation":"439:6:21","nodeType":"EnumValue","src":"439:6:21"}],"name":"Rounding","nameLocation":"305:8:21","nodeType":"EnumDefinition","src":"300:169:21"},{"body":{"id":2568,"nodeType":"Block","src":"677:140:21","statements":[{"id":2567,"nodeType":"UncheckedBlock","src":"687:124:21","statements":[{"assignments":[2550],"declarations":[{"constant":false,"id":2550,"mutability":"mutable","name":"c","nameLocation":"719:1:21","nodeType":"VariableDeclaration","scope":2567,"src":"711:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2554,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2551,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"723:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2552,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"727:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2555,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"746:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"750:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2562,"nodeType":"IfStatement","src":"742:28:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2548,"id":2561,"nodeType":"Return","src":"753:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2564,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"798:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2548,"id":2566,"nodeType":"Return","src":"784:16:21"}]}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"475:106:21","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:21","nodeType":"FunctionDefinition","parameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"a","nameLocation":"610:1:21","nodeType":"VariableDeclaration","scope":2569,"src":"602:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2542,"mutability":"mutable","name":"b","nameLocation":"621:1:21","nodeType":"VariableDeclaration","scope":2569,"src":"613:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:21"},"returnParameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"success","nameLocation":"652:7:21","nodeType":"VariableDeclaration","scope":2569,"src":"647:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2544,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"result","nameLocation":"669:6:21","nodeType":"VariableDeclaration","scope":2569,"src":"661:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:21"},"scope":4131,"src":"586:231:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"1028:113:21","statements":[{"id":2595,"nodeType":"UncheckedBlock","src":"1038:97:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2581,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"1066:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"1070:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2588,"nodeType":"IfStatement","src":"1062:28:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2580,"id":2587,"nodeType":"Return","src":"1073:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2590,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"1118:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"1122:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2580,"id":2594,"nodeType":"Return","src":"1104:20:21"}]}]},"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"823:109:21","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:21","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"a","nameLocation":"961:1:21","nodeType":"VariableDeclaration","scope":2597,"src":"953:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"b","nameLocation":"972:1:21","nodeType":"VariableDeclaration","scope":2597,"src":"964:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:21"},"returnParameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"success","nameLocation":"1003:7:21","nodeType":"VariableDeclaration","scope":2597,"src":"998:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2576,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"result","nameLocation":"1020:6:21","nodeType":"VariableDeclaration","scope":2597,"src":"1012:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:21"},"scope":4131,"src":"937:204:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2638,"nodeType":"Block","src":"1355:417:21","statements":[{"id":2637,"nodeType":"UncheckedBlock","src":"1365:401:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1623:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2616,"nodeType":"IfStatement","src":"1619:28:21","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2608,"id":2615,"nodeType":"Return","src":"1631:16:21"}},{"assignments":[2618],"declarations":[{"constant":false,"id":2618,"mutability":"mutable","name":"c","nameLocation":"1669:1:21","nodeType":"VariableDeclaration","scope":2637,"src":"1661:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2622,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2619,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1673:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2620,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1677:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2623,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"1696:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1700:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2626,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1705:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2632,"nodeType":"IfStatement","src":"1692:33:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2608,"id":2631,"nodeType":"Return","src":"1708:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2634,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"1753:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2608,"id":2636,"nodeType":"Return","src":"1739:16:21"}]}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"1147:112:21","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":2639,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:21","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"a","nameLocation":"1288:1:21","nodeType":"VariableDeclaration","scope":2639,"src":"1280:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"b","nameLocation":"1299:1:21","nodeType":"VariableDeclaration","scope":2639,"src":"1291:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:21"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"success","nameLocation":"1330:7:21","nodeType":"VariableDeclaration","scope":2639,"src":"1325:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2604,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"result","nameLocation":"1347:6:21","nodeType":"VariableDeclaration","scope":2639,"src":"1339:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:21"},"scope":4131,"src":"1264:508:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2666,"nodeType":"Block","src":"1987:114:21","statements":[{"id":2665,"nodeType":"UncheckedBlock","src":"1997:98:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"2025:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2658,"nodeType":"IfStatement","src":"2021:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2650,"id":2657,"nodeType":"Return","src":"2033:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2660,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"2078:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2661,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"2082:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2650,"id":2664,"nodeType":"Return","src":"2064:20:21"}]}]},"documentation":{"id":2640,"nodeType":"StructuredDocumentation","src":"1778:113:21","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:21","nodeType":"FunctionDefinition","parameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"a","nameLocation":"1920:1:21","nodeType":"VariableDeclaration","scope":2667,"src":"1912:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"b","nameLocation":"1931:1:21","nodeType":"VariableDeclaration","scope":2667,"src":"1923:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:21"},"returnParameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"success","nameLocation":"1962:7:21","nodeType":"VariableDeclaration","scope":2667,"src":"1957:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2646,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"result","nameLocation":"1979:6:21","nodeType":"VariableDeclaration","scope":2667,"src":"1971:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:21"},"scope":4131,"src":"1896:205:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2694,"nodeType":"Block","src":"2326:114:21","statements":[{"id":2693,"nodeType":"UncheckedBlock","src":"2336:98:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2679,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"2364:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2686,"nodeType":"IfStatement","src":"2360:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2678,"id":2685,"nodeType":"Return","src":"2372:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"2417:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2689,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"2421:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2678,"id":2692,"nodeType":"Return","src":"2403:20:21"}]}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"2107:123:21","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2695,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:21","nodeType":"FunctionDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"a","nameLocation":"2259:1:21","nodeType":"VariableDeclaration","scope":2695,"src":"2251:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"b","nameLocation":"2270:1:21","nodeType":"VariableDeclaration","scope":2695,"src":"2262:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:21"},"returnParameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"success","nameLocation":"2301:7:21","nodeType":"VariableDeclaration","scope":2695,"src":"2296:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2674,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"result","nameLocation":"2318:6:21","nodeType":"VariableDeclaration","scope":2695,"src":"2310:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:21"},"scope":4131,"src":"2235:205:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2721,"nodeType":"Block","src":"2912:207:21","statements":[{"id":2720,"nodeType":"UncheckedBlock","src":"2922:191:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"3060:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2708,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"3066:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2709,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"3070:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2714,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"3091:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2712,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"3075:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"3075:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2717,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2706,"id":2719,"nodeType":"Return","src":"3053:49:21"}]}]},"documentation":{"id":2696,"nodeType":"StructuredDocumentation","src":"2446:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":2722,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:21","nodeType":"FunctionDefinition","parameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"condition","nameLocation":"2847:9:21","nodeType":"VariableDeclaration","scope":2722,"src":"2842:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2697,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2700,"mutability":"mutable","name":"a","nameLocation":"2866:1:21","nodeType":"VariableDeclaration","scope":2722,"src":"2858:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"b","nameLocation":"2877:1:21","nodeType":"VariableDeclaration","scope":2722,"src":"2869:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:21"},"returnParameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2722,"src":"2903:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:21"},"scope":4131,"src":"2825:294:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2740,"nodeType":"Block","src":"3256:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2733,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"3281:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2734,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"3285:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2736,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"3288:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2737,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"3291:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2732,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"3273:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2731,"id":2739,"nodeType":"Return","src":"3266:27:21"}]},"documentation":{"id":2723,"nodeType":"StructuredDocumentation","src":"3125:59:21","text":" @dev Returns the largest of two numbers."},"id":2741,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:21","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"a","nameLocation":"3210:1:21","nodeType":"VariableDeclaration","scope":2741,"src":"3202:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"b","nameLocation":"3221:1:21","nodeType":"VariableDeclaration","scope":2741,"src":"3213:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:21"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2741,"src":"3247:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:21"},"scope":4131,"src":"3189:111:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2759,"nodeType":"Block","src":"3438:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2752,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"3463:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2753,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"3467:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2755,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"3470:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2756,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"3473:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2751,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"3455:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2750,"id":2758,"nodeType":"Return","src":"3448:27:21"}]},"documentation":{"id":2742,"nodeType":"StructuredDocumentation","src":"3306:60:21","text":" @dev Returns the smallest of two numbers."},"id":2760,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:21","nodeType":"FunctionDefinition","parameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"a","nameLocation":"3392:1:21","nodeType":"VariableDeclaration","scope":2760,"src":"3384:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2746,"mutability":"mutable","name":"b","nameLocation":"3403:1:21","nodeType":"VariableDeclaration","scope":2760,"src":"3395:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:21"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2760,"src":"3429:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:21"},"scope":4131,"src":"3371:111:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2782,"nodeType":"Block","src":"3666:82:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"3721:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2771,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"3725:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2774,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"3731:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2775,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"3735:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2769,"id":2781,"nodeType":"Return","src":"3713:28:21"}]},"documentation":{"id":2761,"nodeType":"StructuredDocumentation","src":"3488:102:21","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2783,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:21","nodeType":"FunctionDefinition","parameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"a","nameLocation":"3620:1:21","nodeType":"VariableDeclaration","scope":2783,"src":"3612:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2765,"mutability":"mutable","name":"b","nameLocation":"3631:1:21","nodeType":"VariableDeclaration","scope":2783,"src":"3623:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:21"},"returnParameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2783,"src":"3657:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:21"},"scope":4131,"src":"3595:153:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2823,"nodeType":"Block","src":"4040:633:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"4054:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2804,"nodeType":"IfStatement","src":"4050:150:21","trueBody":{"id":2803,"nodeType":"Block","src":"4062:138:21","statements":[{"expression":{"arguments":[{"expression":{"id":2799,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"4166:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2389_$","typeString":"type(library Panic)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"4166:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2796,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"4154:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2389_$","typeString":"type(library Panic)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"4154:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2802,"nodeType":"ExpressionStatement","src":"4154:35:21"}]}},{"id":2822,"nodeType":"UncheckedBlock","src":"4583:84:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"4630:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2805,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"4614:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"4614:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2811,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"4641:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2815,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"4650:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2792,"id":2821,"nodeType":"Return","src":"4607:49:21"}]}]},"documentation":{"id":2784,"nodeType":"StructuredDocumentation","src":"3754:210:21","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2824,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:21","nodeType":"FunctionDefinition","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"a","nameLocation":"3994:1:21","nodeType":"VariableDeclaration","scope":2824,"src":"3986:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2788,"mutability":"mutable","name":"b","nameLocation":"4005:1:21","nodeType":"VariableDeclaration","scope":2824,"src":"3997:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:21"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2824,"src":"4031:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2790,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:21"},"scope":4131,"src":"3969:704:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2960,"nodeType":"Block","src":"5094:4128:21","statements":[{"id":2959,"nodeType":"UncheckedBlock","src":"5104:4112:21","statements":[{"assignments":[2837],"declarations":[{"constant":false,"id":2837,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:21","nodeType":"VariableDeclaration","scope":2959,"src":"5433:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2841,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2838,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"5449:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2839,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"5453:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:21"},{"assignments":[2843],"declarations":[{"constant":false,"id":2843,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:21","nodeType":"VariableDeclaration","scope":2959,"src":"5513:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2844,"nodeType":"VariableDeclarationStatement","src":"5513:13:21"},{"AST":{"nativeSrc":"5593:122:21","nodeType":"YulBlock","src":"5593:122:21","statements":[{"nativeSrc":"5611:30:21","nodeType":"YulVariableDeclaration","src":"5611:30:21","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:21","nodeType":"YulIdentifier","src":"5628:1:21"},{"name":"y","nativeSrc":"5631:1:21","nodeType":"YulIdentifier","src":"5631:1:21"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:21","nodeType":"YulLiteral","src":"5638:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:21","nodeType":"YulIdentifier","src":"5634:3:21"},"nativeSrc":"5634:6:21","nodeType":"YulFunctionCall","src":"5634:6:21"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:21","nodeType":"YulIdentifier","src":"5621:6:21"},"nativeSrc":"5621:20:21","nodeType":"YulFunctionCall","src":"5621:20:21"},"variables":[{"name":"mm","nativeSrc":"5615:2:21","nodeType":"YulTypedName","src":"5615:2:21","type":""}]},{"nativeSrc":"5658:43:21","nodeType":"YulAssignment","src":"5658:43:21","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:21","nodeType":"YulIdentifier","src":"5675:2:21"},{"name":"prod0","nativeSrc":"5679:5:21","nodeType":"YulIdentifier","src":"5679:5:21"}],"functionName":{"name":"sub","nativeSrc":"5671:3:21","nodeType":"YulIdentifier","src":"5671:3:21"},"nativeSrc":"5671:14:21","nodeType":"YulFunctionCall","src":"5671:14:21"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:21","nodeType":"YulIdentifier","src":"5690:2:21"},{"name":"prod0","nativeSrc":"5694:5:21","nodeType":"YulIdentifier","src":"5694:5:21"}],"functionName":{"name":"lt","nativeSrc":"5687:2:21","nodeType":"YulIdentifier","src":"5687:2:21"},"nativeSrc":"5687:13:21","nodeType":"YulFunctionCall","src":"5687:13:21"}],"functionName":{"name":"sub","nativeSrc":"5667:3:21","nodeType":"YulIdentifier","src":"5667:3:21"},"nativeSrc":"5667:34:21","nodeType":"YulFunctionCall","src":"5667:34:21"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:21","nodeType":"YulIdentifier","src":"5658:5:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2837,"isOffset":false,"isSlot":false,"src":"5679:5:21","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"5694:5:21","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"5658:5:21","valueSize":1},{"declaration":2827,"isOffset":false,"isSlot":false,"src":"5628:1:21","valueSize":1},{"declaration":2829,"isOffset":false,"isSlot":false,"src":"5631:1:21","valueSize":1}],"id":2845,"nodeType":"InlineAssembly","src":"5584:131:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2846,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"5796:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2854,"nodeType":"IfStatement","src":"5792:368:21","trueBody":{"id":2853,"nodeType":"Block","src":"5808:352:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2849,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"6126:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2850,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"6134:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2835,"id":2852,"nodeType":"Return","src":"6119:26:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"6270:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2856,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"6285:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2873,"nodeType":"IfStatement","src":"6266:143:21","trueBody":{"id":2872,"nodeType":"Block","src":"6292:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2862,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"6330:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2865,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"6348:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2389_$","typeString":"type(library Panic)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"6348:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2867,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"6372:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2389_$","typeString":"type(library Panic)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:21","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2352,"src":"6372:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2861,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"6322:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2858,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"6310:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2389_$","typeString":"type(library Panic)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"6310:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2871,"nodeType":"ExpressionStatement","src":"6310:84:21"}]}},{"assignments":[2875],"declarations":[{"constant":false,"id":2875,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:21","nodeType":"VariableDeclaration","scope":2959,"src":"6664:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2876,"nodeType":"VariableDeclarationStatement","src":"6664:17:21"},{"AST":{"nativeSrc":"6704:291:21","nodeType":"YulBlock","src":"6704:291:21","statements":[{"nativeSrc":"6773:38:21","nodeType":"YulAssignment","src":"6773:38:21","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:21","nodeType":"YulIdentifier","src":"6793:1:21"},{"name":"y","nativeSrc":"6796:1:21","nodeType":"YulIdentifier","src":"6796:1:21"},{"name":"denominator","nativeSrc":"6799:11:21","nodeType":"YulIdentifier","src":"6799:11:21"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:21","nodeType":"YulIdentifier","src":"6786:6:21"},"nativeSrc":"6786:25:21","nodeType":"YulFunctionCall","src":"6786:25:21"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:21","nodeType":"YulIdentifier","src":"6773:9:21"}]},{"nativeSrc":"6893:41:21","nodeType":"YulAssignment","src":"6893:41:21","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:21","nodeType":"YulIdentifier","src":"6906:5:21"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:21","nodeType":"YulIdentifier","src":"6916:9:21"},{"name":"prod0","nativeSrc":"6927:5:21","nodeType":"YulIdentifier","src":"6927:5:21"}],"functionName":{"name":"gt","nativeSrc":"6913:2:21","nodeType":"YulIdentifier","src":"6913:2:21"},"nativeSrc":"6913:20:21","nodeType":"YulFunctionCall","src":"6913:20:21"}],"functionName":{"name":"sub","nativeSrc":"6902:3:21","nodeType":"YulIdentifier","src":"6902:3:21"},"nativeSrc":"6902:32:21","nodeType":"YulFunctionCall","src":"6902:32:21"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:21","nodeType":"YulIdentifier","src":"6893:5:21"}]},{"nativeSrc":"6951:30:21","nodeType":"YulAssignment","src":"6951:30:21","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:21","nodeType":"YulIdentifier","src":"6964:5:21"},{"name":"remainder","nativeSrc":"6971:9:21","nodeType":"YulIdentifier","src":"6971:9:21"}],"functionName":{"name":"sub","nativeSrc":"6960:3:21","nodeType":"YulIdentifier","src":"6960:3:21"},"nativeSrc":"6960:21:21","nodeType":"YulFunctionCall","src":"6960:21:21"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:21","nodeType":"YulIdentifier","src":"6951:5:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2831,"isOffset":false,"isSlot":false,"src":"6799:11:21","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"6927:5:21","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"6951:5:21","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"6964:5:21","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"6893:5:21","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"6906:5:21","valueSize":1},{"declaration":2875,"isOffset":false,"isSlot":false,"src":"6773:9:21","valueSize":1},{"declaration":2875,"isOffset":false,"isSlot":false,"src":"6916:9:21","valueSize":1},{"declaration":2875,"isOffset":false,"isSlot":false,"src":"6971:9:21","valueSize":1},{"declaration":2827,"isOffset":false,"isSlot":false,"src":"6793:1:21","valueSize":1},{"declaration":2829,"isOffset":false,"isSlot":false,"src":"6796:1:21","valueSize":1}],"id":2877,"nodeType":"InlineAssembly","src":"6695:300:21"},{"assignments":[2879],"declarations":[{"constant":false,"id":2879,"mutability":"mutable","name":"twos","nameLocation":"7207:4:21","nodeType":"VariableDeclaration","scope":2959,"src":"7199:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2886,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"7214:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2882,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"7233:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:21"},{"AST":{"nativeSrc":"7268:366:21","nodeType":"YulBlock","src":"7268:366:21","statements":[{"nativeSrc":"7333:37:21","nodeType":"YulAssignment","src":"7333:37:21","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:21","nodeType":"YulIdentifier","src":"7352:11:21"},{"name":"twos","nativeSrc":"7365:4:21","nodeType":"YulIdentifier","src":"7365:4:21"}],"functionName":{"name":"div","nativeSrc":"7348:3:21","nodeType":"YulIdentifier","src":"7348:3:21"},"nativeSrc":"7348:22:21","nodeType":"YulFunctionCall","src":"7348:22:21"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:21","nodeType":"YulIdentifier","src":"7333:11:21"}]},{"nativeSrc":"7437:25:21","nodeType":"YulAssignment","src":"7437:25:21","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:21","nodeType":"YulIdentifier","src":"7450:5:21"},{"name":"twos","nativeSrc":"7457:4:21","nodeType":"YulIdentifier","src":"7457:4:21"}],"functionName":{"name":"div","nativeSrc":"7446:3:21","nodeType":"YulIdentifier","src":"7446:3:21"},"nativeSrc":"7446:16:21","nodeType":"YulFunctionCall","src":"7446:16:21"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:21","nodeType":"YulIdentifier","src":"7437:5:21"}]},{"nativeSrc":"7581:39:21","nodeType":"YulAssignment","src":"7581:39:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:21","nodeType":"YulLiteral","src":"7601:1:21","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:21","nodeType":"YulIdentifier","src":"7604:4:21"}],"functionName":{"name":"sub","nativeSrc":"7597:3:21","nodeType":"YulIdentifier","src":"7597:3:21"},"nativeSrc":"7597:12:21","nodeType":"YulFunctionCall","src":"7597:12:21"},{"name":"twos","nativeSrc":"7611:4:21","nodeType":"YulIdentifier","src":"7611:4:21"}],"functionName":{"name":"div","nativeSrc":"7593:3:21","nodeType":"YulIdentifier","src":"7593:3:21"},"nativeSrc":"7593:23:21","nodeType":"YulFunctionCall","src":"7593:23:21"},{"kind":"number","nativeSrc":"7618:1:21","nodeType":"YulLiteral","src":"7618:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:21","nodeType":"YulIdentifier","src":"7589:3:21"},"nativeSrc":"7589:31:21","nodeType":"YulFunctionCall","src":"7589:31:21"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:21","nodeType":"YulIdentifier","src":"7581:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2831,"isOffset":false,"isSlot":false,"src":"7333:11:21","valueSize":1},{"declaration":2831,"isOffset":false,"isSlot":false,"src":"7352:11:21","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"7437:5:21","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"7450:5:21","valueSize":1},{"declaration":2879,"isOffset":false,"isSlot":false,"src":"7365:4:21","valueSize":1},{"declaration":2879,"isOffset":false,"isSlot":false,"src":"7457:4:21","valueSize":1},{"declaration":2879,"isOffset":false,"isSlot":false,"src":"7581:4:21","valueSize":1},{"declaration":2879,"isOffset":false,"isSlot":false,"src":"7604:4:21","valueSize":1},{"declaration":2879,"isOffset":false,"isSlot":false,"src":"7611:4:21","valueSize":1}],"id":2887,"nodeType":"InlineAssembly","src":"7259:375:21"},{"expression":{"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2888,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"7700:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"7709:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2890,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"7717:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"nodeType":"ExpressionStatement","src":"7700:21:21"},{"assignments":[2895],"declarations":[{"constant":false,"id":2895,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:21","nodeType":"VariableDeclaration","scope":2959,"src":"8056:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2902,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2897,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8079:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:21"},{"expression":{"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2903,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8312:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8327:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2906,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8341:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2910,"nodeType":"ExpressionStatement","src":"8312:36:21"},{"expression":{"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2911,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8382:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8397:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2914,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8411:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2918,"nodeType":"ExpressionStatement","src":"8382:36:21"},{"expression":{"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2919,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8454:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8469:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2922,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8483:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2926,"nodeType":"ExpressionStatement","src":"8454:36:21"},{"expression":{"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2927,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8525:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2929,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8540:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2930,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8554:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2934,"nodeType":"ExpressionStatement","src":"8525:36:21"},{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2935,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8598:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2937,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8613:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2938,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8627:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2942,"nodeType":"ExpressionStatement","src":"8598:36:21"},{"expression":{"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2943,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8672:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8687:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2946,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8701:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2950,"nodeType":"ExpressionStatement","src":"8672:36:21"},{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"9154:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2952,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"9163:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2953,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"9171:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2956,"nodeType":"ExpressionStatement","src":"9154:24:21"},{"expression":{"id":2957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"9199:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2835,"id":2958,"nodeType":"Return","src":"9192:13:21"}]}]},"documentation":{"id":2825,"nodeType":"StructuredDocumentation","src":"4679:312:21","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2961,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:21","nodeType":"FunctionDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"x","nameLocation":"5020:1:21","nodeType":"VariableDeclaration","scope":2961,"src":"5012:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2829,"mutability":"mutable","name":"y","nameLocation":"5031:1:21","nodeType":"VariableDeclaration","scope":2961,"src":"5023:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:21","nodeType":"VariableDeclaration","scope":2961,"src":"5034:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:21"},"returnParameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"result","nameLocation":"5086:6:21","nodeType":"VariableDeclaration","scope":2961,"src":"5078:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:21"},"scope":4131,"src":"4996:4226:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2997,"nodeType":"Block","src":"9461:128:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2977,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"9485:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2978,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"9488:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2979,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"9491:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2976,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2961,2998],"referencedDeclaration":2961,"src":"9478:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2984,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"9539:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}],"id":2983,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"9522:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2537_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2987,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"9559:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2988,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"9562:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2989,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"9565:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2986,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2981,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"9506:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"9506:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2975,"id":2996,"nodeType":"Return","src":"9471:111:21"}]},"documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"9228:118:21","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2998,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:21","nodeType":"FunctionDefinition","parameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"x","nameLocation":"9375:1:21","nodeType":"VariableDeclaration","scope":2998,"src":"9367:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"y","nameLocation":"9386:1:21","nodeType":"VariableDeclaration","scope":2998,"src":"9378:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:21","nodeType":"VariableDeclaration","scope":2998,"src":"9389:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2971,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:21","nodeType":"VariableDeclaration","scope":2998,"src":"9410:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"},"typeName":{"id":2970,"nodeType":"UserDefinedTypeName","pathNode":{"id":2969,"name":"Rounding","nameLocations":["9410:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2537,"src":"9410:8:21"},"referencedDeclaration":2537,"src":"9410:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:21"},"returnParameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2998,"src":"9452:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:21"},"scope":4131,"src":"9351:238:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3094,"nodeType":"Block","src":"10223:1849:21","statements":[{"id":3093,"nodeType":"UncheckedBlock","src":"10233:1833:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3008,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"10261:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3013,"nodeType":"IfStatement","src":"10257:20:21","trueBody":{"expression":{"hexValue":"30","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3007,"id":3012,"nodeType":"Return","src":"10269:8:21"}},{"assignments":[3015],"declarations":[{"constant":false,"id":3015,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:21","nodeType":"VariableDeclaration","scope":3093,"src":"10748:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3014,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3019,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10768:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3017,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"10772:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:21"},{"assignments":[3021],"declarations":[{"constant":false,"id":3021,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:21","nodeType":"VariableDeclaration","scope":3093,"src":"10787:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3023,"initialValue":{"id":3022,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"10801:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:21"},{"assignments":[3025],"declarations":[{"constant":false,"id":3025,"mutability":"mutable","name":"x","nameLocation":"10945:1:21","nodeType":"VariableDeclaration","scope":3093,"src":"10938:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3024,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3027,"initialValue":{"hexValue":"30","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:21"},{"assignments":[3029],"declarations":[{"constant":false,"id":3029,"mutability":"mutable","name":"y","nameLocation":"10971:1:21","nodeType":"VariableDeclaration","scope":3093,"src":"10964:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3028,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3031,"initialValue":{"hexValue":"31","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:21"},{"body":{"id":3068,"nodeType":"Block","src":"11014:882:21","statements":[{"assignments":[3036],"declarations":[{"constant":false,"id":3036,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:21","nodeType":"VariableDeclaration","scope":3068,"src":"11032:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3040,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3037,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"11051:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3038,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11057:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:21"},{"expression":{"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3041,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"11086:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3042,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11091:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3043,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3044,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11191:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3045,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"11436:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11442:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3047,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"11454:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3052,"nodeType":"ExpressionStatement","src":"11085:395:21"},{"expression":{"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3053,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"11500:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3054,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"11503:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3055,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3056,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"11585:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3057,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"11839:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3058,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"11843:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3061,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"11854:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3059,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:21","typeDescriptions":{}}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3067,"nodeType":"ExpressionStatement","src":"11499:382:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3032,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"10998:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3069,"nodeType":"WhileStatement","src":"10991:905:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3070,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"11914:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3075,"nodeType":"IfStatement","src":"11910:22:21","trueBody":{"expression":{"hexValue":"30","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3007,"id":3074,"nodeType":"Return","src":"11924:8:21"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3077,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"11983:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3080,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"11990:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:21","subExpression":{"id":3083,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"12003:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:21","typeDescriptions":{}}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3089,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"12015:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:21","typeDescriptions":{}}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3076,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"11975:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3007,"id":3092,"nodeType":"Return","src":"11968:50:21"}]}]},"documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"9595:553:21","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3095,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:21","nodeType":"FunctionDefinition","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"a","nameLocation":"10177:1:21","nodeType":"VariableDeclaration","scope":3095,"src":"10169:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"n","nameLocation":"10188:1:21","nodeType":"VariableDeclaration","scope":3095,"src":"10180:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:21"},"returnParameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3095,"src":"10214:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:21"},"scope":4131,"src":"10153:1919:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3115,"nodeType":"Block","src":"12672:82:21","statements":[{"id":3114,"nodeType":"UncheckedBlock","src":"12682:66:21","statements":[{"expression":{"arguments":[{"id":3107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"12725:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3108,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"12728:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3111,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"12735:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3105,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"12713:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4131_$","typeString":"type(library Math)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:21","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3152,"src":"12713:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3104,"id":3113,"nodeType":"Return","src":"12706:31:21"}]}]},"documentation":{"id":3096,"nodeType":"StructuredDocumentation","src":"12078:514:21","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3116,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:21","nodeType":"FunctionDefinition","parameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"a","nameLocation":"12626:1:21","nodeType":"VariableDeclaration","scope":3116,"src":"12618:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"p","nameLocation":"12637:1:21","nodeType":"VariableDeclaration","scope":3116,"src":"12629:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:21"},"returnParameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3116,"src":"12663:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:21"},"scope":4131,"src":"12597:157:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3151,"nodeType":"Block","src":"13524:174:21","statements":[{"assignments":[3129,3131],"declarations":[{"constant":false,"id":3129,"mutability":"mutable","name":"success","nameLocation":"13540:7:21","nodeType":"VariableDeclaration","scope":3151,"src":"13535:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3128,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"result","nameLocation":"13557:6:21","nodeType":"VariableDeclaration","scope":3151,"src":"13549:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3137,"initialValue":{"arguments":[{"id":3133,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"13577:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3134,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"13580:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3135,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"13583:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3132,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3176,3258],"referencedDeclaration":3176,"src":"13567:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:21"},{"condition":{"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:21","subExpression":{"id":3138,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"13600:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3148,"nodeType":"IfStatement","src":"13595:74:21","trueBody":{"id":3147,"nodeType":"Block","src":"13609:60:21","statements":[{"expression":{"arguments":[{"expression":{"id":3143,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"13635:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2389_$","typeString":"type(library Panic)"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"13635:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3140,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"13623:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2389_$","typeString":"type(library Panic)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"13623:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3146,"nodeType":"ExpressionStatement","src":"13623:35:21"}]}},{"expression":{"id":3149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"13685:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3127,"id":3150,"nodeType":"Return","src":"13678:13:21"}]},"documentation":{"id":3117,"nodeType":"StructuredDocumentation","src":"12760:678:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:21","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"b","nameLocation":"13467:1:21","nodeType":"VariableDeclaration","scope":3152,"src":"13459:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"e","nameLocation":"13478:1:21","nodeType":"VariableDeclaration","scope":3152,"src":"13470:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3123,"mutability":"mutable","name":"m","nameLocation":"13489:1:21","nodeType":"VariableDeclaration","scope":3152,"src":"13481:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:21"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3152,"src":"13515:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:21"},"scope":4131,"src":"13443:255:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3175,"nodeType":"Block","src":"14552:1493:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3166,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"14566:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3173,"nodeType":"IfStatement","src":"14562:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3165,"id":3172,"nodeType":"Return","src":"14574:17:21"}},{"AST":{"nativeSrc":"14626:1413:21","nodeType":"YulBlock","src":"14626:1413:21","statements":[{"nativeSrc":"14640:22:21","nodeType":"YulVariableDeclaration","src":"14640:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:21","nodeType":"YulLiteral","src":"14657:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:21","nodeType":"YulIdentifier","src":"14651:5:21"},"nativeSrc":"14651:11:21","nodeType":"YulFunctionCall","src":"14651:11:21"},"variables":[{"name":"ptr","nativeSrc":"14644:3:21","nodeType":"YulTypedName","src":"14644:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:21","nodeType":"YulIdentifier","src":"15570:3:21"},{"kind":"number","nativeSrc":"15575:4:21","nodeType":"YulLiteral","src":"15575:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:21","nodeType":"YulIdentifier","src":"15563:6:21"},"nativeSrc":"15563:17:21","nodeType":"YulFunctionCall","src":"15563:17:21"},"nativeSrc":"15563:17:21","nodeType":"YulExpressionStatement","src":"15563:17:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:21","nodeType":"YulIdentifier","src":"15604:3:21"},{"kind":"number","nativeSrc":"15609:4:21","nodeType":"YulLiteral","src":"15609:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:21","nodeType":"YulIdentifier","src":"15600:3:21"},"nativeSrc":"15600:14:21","nodeType":"YulFunctionCall","src":"15600:14:21"},{"kind":"number","nativeSrc":"15616:4:21","nodeType":"YulLiteral","src":"15616:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:21","nodeType":"YulIdentifier","src":"15593:6:21"},"nativeSrc":"15593:28:21","nodeType":"YulFunctionCall","src":"15593:28:21"},"nativeSrc":"15593:28:21","nodeType":"YulExpressionStatement","src":"15593:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:21","nodeType":"YulIdentifier","src":"15645:3:21"},{"kind":"number","nativeSrc":"15650:4:21","nodeType":"YulLiteral","src":"15650:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:21","nodeType":"YulIdentifier","src":"15641:3:21"},"nativeSrc":"15641:14:21","nodeType":"YulFunctionCall","src":"15641:14:21"},{"kind":"number","nativeSrc":"15657:4:21","nodeType":"YulLiteral","src":"15657:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:21","nodeType":"YulIdentifier","src":"15634:6:21"},"nativeSrc":"15634:28:21","nodeType":"YulFunctionCall","src":"15634:28:21"},"nativeSrc":"15634:28:21","nodeType":"YulExpressionStatement","src":"15634:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:21","nodeType":"YulIdentifier","src":"15686:3:21"},{"kind":"number","nativeSrc":"15691:4:21","nodeType":"YulLiteral","src":"15691:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:21","nodeType":"YulIdentifier","src":"15682:3:21"},"nativeSrc":"15682:14:21","nodeType":"YulFunctionCall","src":"15682:14:21"},{"name":"b","nativeSrc":"15698:1:21","nodeType":"YulIdentifier","src":"15698:1:21"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:21","nodeType":"YulIdentifier","src":"15675:6:21"},"nativeSrc":"15675:25:21","nodeType":"YulFunctionCall","src":"15675:25:21"},"nativeSrc":"15675:25:21","nodeType":"YulExpressionStatement","src":"15675:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:21","nodeType":"YulIdentifier","src":"15724:3:21"},{"kind":"number","nativeSrc":"15729:4:21","nodeType":"YulLiteral","src":"15729:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:21","nodeType":"YulIdentifier","src":"15720:3:21"},"nativeSrc":"15720:14:21","nodeType":"YulFunctionCall","src":"15720:14:21"},{"name":"e","nativeSrc":"15736:1:21","nodeType":"YulIdentifier","src":"15736:1:21"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:21","nodeType":"YulIdentifier","src":"15713:6:21"},"nativeSrc":"15713:25:21","nodeType":"YulFunctionCall","src":"15713:25:21"},"nativeSrc":"15713:25:21","nodeType":"YulExpressionStatement","src":"15713:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:21","nodeType":"YulIdentifier","src":"15762:3:21"},{"kind":"number","nativeSrc":"15767:4:21","nodeType":"YulLiteral","src":"15767:4:21","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:21","nodeType":"YulIdentifier","src":"15758:3:21"},"nativeSrc":"15758:14:21","nodeType":"YulFunctionCall","src":"15758:14:21"},{"name":"m","nativeSrc":"15774:1:21","nodeType":"YulIdentifier","src":"15774:1:21"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:21","nodeType":"YulIdentifier","src":"15751:6:21"},"nativeSrc":"15751:25:21","nodeType":"YulFunctionCall","src":"15751:25:21"},"nativeSrc":"15751:25:21","nodeType":"YulExpressionStatement","src":"15751:25:21"},{"nativeSrc":"15938:57:21","nodeType":"YulAssignment","src":"15938:57:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:21","nodeType":"YulIdentifier","src":"15960:3:21"},"nativeSrc":"15960:5:21","nodeType":"YulFunctionCall","src":"15960:5:21"},{"kind":"number","nativeSrc":"15967:4:21","nodeType":"YulLiteral","src":"15967:4:21","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:21","nodeType":"YulIdentifier","src":"15973:3:21"},{"kind":"number","nativeSrc":"15978:4:21","nodeType":"YulLiteral","src":"15978:4:21","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:21","nodeType":"YulLiteral","src":"15984:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:21","nodeType":"YulLiteral","src":"15990:4:21","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:21","nodeType":"YulIdentifier","src":"15949:10:21"},"nativeSrc":"15949:46:21","nodeType":"YulFunctionCall","src":"15949:46:21"},"variableNames":[{"name":"success","nativeSrc":"15938:7:21","nodeType":"YulIdentifier","src":"15938:7:21"}]},{"nativeSrc":"16008:21:21","nodeType":"YulAssignment","src":"16008:21:21","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:21","nodeType":"YulLiteral","src":"16024:4:21","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:21","nodeType":"YulIdentifier","src":"16018:5:21"},"nativeSrc":"16018:11:21","nodeType":"YulFunctionCall","src":"16018:11:21"},"variableNames":[{"name":"result","nativeSrc":"16008:6:21","nodeType":"YulIdentifier","src":"16008:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3155,"isOffset":false,"isSlot":false,"src":"15698:1:21","valueSize":1},{"declaration":3157,"isOffset":false,"isSlot":false,"src":"15736:1:21","valueSize":1},{"declaration":3159,"isOffset":false,"isSlot":false,"src":"15774:1:21","valueSize":1},{"declaration":3164,"isOffset":false,"isSlot":false,"src":"16008:6:21","valueSize":1},{"declaration":3162,"isOffset":false,"isSlot":false,"src":"15938:7:21","valueSize":1}],"flags":["memory-safe"],"id":3174,"nodeType":"InlineAssembly","src":"14601:1438:21"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"13704:738:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3176,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:21","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"b","nameLocation":"14474:1:21","nodeType":"VariableDeclaration","scope":3176,"src":"14466:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"e","nameLocation":"14485:1:21","nodeType":"VariableDeclaration","scope":3176,"src":"14477:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"m","nameLocation":"14496:1:21","nodeType":"VariableDeclaration","scope":3176,"src":"14488:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:21"},"returnParameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"success","nameLocation":"14527:7:21","nodeType":"VariableDeclaration","scope":3176,"src":"14522:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3161,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"result","nameLocation":"14544:6:21","nodeType":"VariableDeclaration","scope":3176,"src":"14536:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:21"},"scope":4131,"src":"14447:1598:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3211,"nodeType":"Block","src":"16242:179:21","statements":[{"assignments":[3189,3191],"declarations":[{"constant":false,"id":3189,"mutability":"mutable","name":"success","nameLocation":"16258:7:21","nodeType":"VariableDeclaration","scope":3211,"src":"16253:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3188,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"result","nameLocation":"16280:6:21","nodeType":"VariableDeclaration","scope":3211,"src":"16267:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3190,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3197,"initialValue":{"arguments":[{"id":3193,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"16300:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3194,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"16303:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3195,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"16306:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3192,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3176,3258],"referencedDeclaration":3258,"src":"16290:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:21"},{"condition":{"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:21","subExpression":{"id":3198,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"16323:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3208,"nodeType":"IfStatement","src":"16318:74:21","trueBody":{"id":3207,"nodeType":"Block","src":"16332:60:21","statements":[{"expression":{"arguments":[{"expression":{"id":3203,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"16358:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2389_$","typeString":"type(library Panic)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2356,"src":"16358:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3200,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"16346:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2389_$","typeString":"type(library Panic)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"16346:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3206,"nodeType":"ExpressionStatement","src":"16346:35:21"}]}},{"expression":{"id":3209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"16408:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3187,"id":3210,"nodeType":"Return","src":"16401:13:21"}]},"documentation":{"id":3177,"nodeType":"StructuredDocumentation","src":"16051:85:21","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3212,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:21","nodeType":"FunctionDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"b","nameLocation":"16170:1:21","nodeType":"VariableDeclaration","scope":3212,"src":"16157:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3178,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"e","nameLocation":"16186:1:21","nodeType":"VariableDeclaration","scope":3212,"src":"16173:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3180,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3183,"mutability":"mutable","name":"m","nameLocation":"16202:1:21","nodeType":"VariableDeclaration","scope":3212,"src":"16189:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3182,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:21"},"returnParameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3212,"src":"16228:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3185,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:21"},"scope":4131,"src":"16141:280:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3257,"nodeType":"Block","src":"16675:771:21","statements":[{"condition":{"arguments":[{"id":3227,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"16700:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3226,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"16689:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3236,"nodeType":"IfStatement","src":"16685:47:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3230,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3225,"id":3235,"nodeType":"Return","src":"16704:28:21"}},{"assignments":[3238],"declarations":[{"constant":false,"id":3238,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:21","nodeType":"VariableDeclaration","scope":3257,"src":"16743:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3241,"initialValue":{"expression":{"id":3239,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"16758:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:21","memberName":"length","nodeType":"MemberAccess","src":"16758:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:21"},{"expression":{"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"16848:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3245,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"16874:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:21","memberName":"length","nodeType":"MemberAccess","src":"16874:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3247,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"16884:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:21","memberName":"length","nodeType":"MemberAccess","src":"16884:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3249,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"16894:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3250,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"16900:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3251,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"16903:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3252,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"16906:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3243,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3255,"nodeType":"ExpressionStatement","src":"16848:60:21"},{"AST":{"nativeSrc":"16944:496:21","nodeType":"YulBlock","src":"16944:496:21","statements":[{"nativeSrc":"16958:32:21","nodeType":"YulVariableDeclaration","src":"16958:32:21","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:21","nodeType":"YulIdentifier","src":"16977:6:21"},{"kind":"number","nativeSrc":"16985:4:21","nodeType":"YulLiteral","src":"16985:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:21","nodeType":"YulIdentifier","src":"16973:3:21"},"nativeSrc":"16973:17:21","nodeType":"YulFunctionCall","src":"16973:17:21"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:21","nodeType":"YulTypedName","src":"16962:7:21","type":""}]},{"nativeSrc":"17080:73:21","nodeType":"YulAssignment","src":"17080:73:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:21","nodeType":"YulIdentifier","src":"17102:3:21"},"nativeSrc":"17102:5:21","nodeType":"YulFunctionCall","src":"17102:5:21"},{"kind":"number","nativeSrc":"17109:4:21","nodeType":"YulLiteral","src":"17109:4:21","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:21","nodeType":"YulIdentifier","src":"17115:7:21"},{"arguments":[{"name":"result","nativeSrc":"17130:6:21","nodeType":"YulIdentifier","src":"17130:6:21"}],"functionName":{"name":"mload","nativeSrc":"17124:5:21","nodeType":"YulIdentifier","src":"17124:5:21"},"nativeSrc":"17124:13:21","nodeType":"YulFunctionCall","src":"17124:13:21"},{"name":"dataPtr","nativeSrc":"17139:7:21","nodeType":"YulIdentifier","src":"17139:7:21"},{"name":"mLen","nativeSrc":"17148:4:21","nodeType":"YulIdentifier","src":"17148:4:21"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:21","nodeType":"YulIdentifier","src":"17091:10:21"},"nativeSrc":"17091:62:21","nodeType":"YulFunctionCall","src":"17091:62:21"},"variableNames":[{"name":"success","nativeSrc":"17080:7:21","nodeType":"YulIdentifier","src":"17080:7:21"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:21","nodeType":"YulIdentifier","src":"17309:6:21"},{"name":"mLen","nativeSrc":"17317:4:21","nodeType":"YulIdentifier","src":"17317:4:21"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:21","nodeType":"YulIdentifier","src":"17302:6:21"},"nativeSrc":"17302:20:21","nodeType":"YulFunctionCall","src":"17302:20:21"},"nativeSrc":"17302:20:21","nodeType":"YulExpressionStatement","src":"17302:20:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:21","nodeType":"YulLiteral","src":"17405:4:21","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:21","nodeType":"YulIdentifier","src":"17415:7:21"},{"name":"mLen","nativeSrc":"17424:4:21","nodeType":"YulIdentifier","src":"17424:4:21"}],"functionName":{"name":"add","nativeSrc":"17411:3:21","nodeType":"YulIdentifier","src":"17411:3:21"},"nativeSrc":"17411:18:21","nodeType":"YulFunctionCall","src":"17411:18:21"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:21","nodeType":"YulIdentifier","src":"17398:6:21"},"nativeSrc":"17398:32:21","nodeType":"YulFunctionCall","src":"17398:32:21"},"nativeSrc":"17398:32:21","nodeType":"YulExpressionStatement","src":"17398:32:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":3238,"isOffset":false,"isSlot":false,"src":"17148:4:21","valueSize":1},{"declaration":3238,"isOffset":false,"isSlot":false,"src":"17317:4:21","valueSize":1},{"declaration":3238,"isOffset":false,"isSlot":false,"src":"17424:4:21","valueSize":1},{"declaration":3224,"isOffset":false,"isSlot":false,"src":"16977:6:21","valueSize":1},{"declaration":3224,"isOffset":false,"isSlot":false,"src":"17130:6:21","valueSize":1},{"declaration":3224,"isOffset":false,"isSlot":false,"src":"17309:6:21","valueSize":1},{"declaration":3222,"isOffset":false,"isSlot":false,"src":"17080:7:21","valueSize":1}],"flags":["memory-safe"],"id":3256,"nodeType":"InlineAssembly","src":"16919:521:21"}]},"documentation":{"id":3213,"nodeType":"StructuredDocumentation","src":"16427:88:21","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:21","nodeType":"FunctionDefinition","parameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"b","nameLocation":"16561:1:21","nodeType":"VariableDeclaration","scope":3258,"src":"16548:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3214,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3217,"mutability":"mutable","name":"e","nameLocation":"16585:1:21","nodeType":"VariableDeclaration","scope":3258,"src":"16572:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3216,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3219,"mutability":"mutable","name":"m","nameLocation":"16609:1:21","nodeType":"VariableDeclaration","scope":3258,"src":"16596:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3218,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:21"},"returnParameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"success","nameLocation":"16645:7:21","nodeType":"VariableDeclaration","scope":3258,"src":"16640:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3221,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"result","nameLocation":"16667:6:21","nodeType":"VariableDeclaration","scope":3258,"src":"16654:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3223,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:21"},"scope":4131,"src":"16520:926:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3290,"nodeType":"Block","src":"17601:176:21","statements":[{"body":{"id":3286,"nodeType":"Block","src":"17658:92:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3277,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"17676:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3279,"indexExpression":{"id":3278,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"17686:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3285,"nodeType":"IfStatement","src":"17672:68:21","trueBody":{"id":3284,"nodeType":"Block","src":"17695:45:21","statements":[{"expression":{"hexValue":"66616c7365","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3265,"id":3283,"nodeType":"Return","src":"17713:12:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3270,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"17631:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3271,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"17635:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:21","memberName":"length","nodeType":"MemberAccess","src":"17635:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3287,"initializationExpression":{"assignments":[3267],"declarations":[{"constant":false,"id":3267,"mutability":"mutable","name":"i","nameLocation":"17624:1:21","nodeType":"VariableDeclaration","scope":3287,"src":"17616:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3269,"initialValue":{"hexValue":"30","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:21","subExpression":{"id":3274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"17655:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3276,"nodeType":"ExpressionStatement","src":"17653:3:21"},"nodeType":"ForStatement","src":"17611:139:21"},{"expression":{"hexValue":"74727565","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3265,"id":3289,"nodeType":"Return","src":"17759:11:21"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"17452:72:21","text":" @dev Returns whether the provided byte array is zero."},"id":3291,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:21","nodeType":"FunctionDefinition","parameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:21","nodeType":"VariableDeclaration","scope":3291,"src":"17549:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3260,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:21"},"returnParameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3291,"src":"17595:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3263,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:21"},"scope":4131,"src":"17529:248:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3509,"nodeType":"Block","src":"18137:5124:21","statements":[{"id":3508,"nodeType":"UncheckedBlock","src":"18147:5108:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"18241:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3305,"nodeType":"IfStatement","src":"18237:53:21","trueBody":{"id":3304,"nodeType":"Block","src":"18249:41:21","statements":[{"expression":{"id":3302,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"18274:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3298,"id":3303,"nodeType":"Return","src":"18267:8:21"}]}},{"assignments":[3307],"declarations":[{"constant":false,"id":3307,"mutability":"mutable","name":"aa","nameLocation":"19225:2:21","nodeType":"VariableDeclaration","scope":3508,"src":"19217:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3309,"initialValue":{"id":3308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"19230:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:21"},{"assignments":[3311],"declarations":[{"constant":false,"id":3311,"mutability":"mutable","name":"xn","nameLocation":"19253:2:21","nodeType":"VariableDeclaration","scope":3508,"src":"19245:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3313,"initialValue":{"hexValue":"31","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3314,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19278:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3329,"nodeType":"IfStatement","src":"19274:92:21","trueBody":{"id":3328,"nodeType":"Block","src":"19296:70:21","statements":[{"expression":{"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3320,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19314:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3323,"nodeType":"ExpressionStatement","src":"19314:10:21"},{"expression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3324,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"19342:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3327,"nodeType":"ExpressionStatement","src":"19342:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19383:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3345,"nodeType":"IfStatement","src":"19379:90:21","trueBody":{"id":3344,"nodeType":"Block","src":"19400:69:21","statements":[{"expression":{"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3336,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19418:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3339,"nodeType":"ExpressionStatement","src":"19418:9:21"},{"expression":{"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3340,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"19445:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ExpressionStatement","src":"19445:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3346,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19486:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3361,"nodeType":"IfStatement","src":"19482:90:21","trueBody":{"id":3360,"nodeType":"Block","src":"19503:69:21","statements":[{"expression":{"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3352,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19521:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3355,"nodeType":"ExpressionStatement","src":"19521:9:21"},{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3356,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"19548:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ExpressionStatement","src":"19548:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19589:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3377,"nodeType":"IfStatement","src":"19585:89:21","trueBody":{"id":3376,"nodeType":"Block","src":"19606:68:21","statements":[{"expression":{"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3368,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19624:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3371,"nodeType":"ExpressionStatement","src":"19624:9:21"},{"expression":{"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3372,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"19651:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3375,"nodeType":"ExpressionStatement","src":"19651:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3378,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19691:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3393,"nodeType":"IfStatement","src":"19687:87:21","trueBody":{"id":3392,"nodeType":"Block","src":"19707:67:21","statements":[{"expression":{"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3384,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19725:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3387,"nodeType":"ExpressionStatement","src":"19725:8:21"},{"expression":{"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3388,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"19751:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3391,"nodeType":"ExpressionStatement","src":"19751:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3394,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19791:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3409,"nodeType":"IfStatement","src":"19787:87:21","trueBody":{"id":3408,"nodeType":"Block","src":"19807:67:21","statements":[{"expression":{"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3400,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19825:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3403,"nodeType":"ExpressionStatement","src":"19825:8:21"},{"expression":{"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3404,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"19851:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3407,"nodeType":"ExpressionStatement","src":"19851:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3410,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19891:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3421,"nodeType":"IfStatement","src":"19887:61:21","trueBody":{"id":3420,"nodeType":"Block","src":"19907:41:21","statements":[{"expression":{"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3416,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"19925:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3419,"nodeType":"ExpressionStatement","src":"19925:8:21"}]}},{"expression":{"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3422,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"20368:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3424,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"20378:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3430,"nodeType":"ExpressionStatement","src":"20368:18:21"},{"expression":{"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3431,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22273:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3432,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22279:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"22284:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3434,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22288:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3441,"nodeType":"ExpressionStatement","src":"22273:23:21"},{"expression":{"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3442,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22382:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3443,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22388:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"22393:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3445,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22397:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3452,"nodeType":"ExpressionStatement","src":"22382:23:21"},{"expression":{"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3453,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22493:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3454,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22499:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"22504:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3456,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22508:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3463,"nodeType":"ExpressionStatement","src":"22493:23:21"},{"expression":{"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3464,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22602:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22608:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"22613:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3467,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22617:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3474,"nodeType":"ExpressionStatement","src":"22602:23:21"},{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3475,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22712:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3476,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22718:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"22723:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3478,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22727:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3485,"nodeType":"ExpressionStatement","src":"22712:23:21"},{"expression":{"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3486,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22822:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22828:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"22833:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3489,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"22837:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3496,"nodeType":"ExpressionStatement","src":"22822:23:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3497,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"23211:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"23232:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3501,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"23237:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3502,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"23241:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3498,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"23216:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"23216:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3298,"id":3507,"nodeType":"Return","src":"23204:40:21"}]}]},"documentation":{"id":3292,"nodeType":"StructuredDocumentation","src":"17783:292:21","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3510,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:21","nodeType":"FunctionDefinition","parameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"a","nameLocation":"18102:1:21","nodeType":"VariableDeclaration","scope":3510,"src":"18094:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3293,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:21"},"returnParameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3510,"src":"18128:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:21"},"scope":4131,"src":"18080:5181:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3543,"nodeType":"Block","src":"23434:171:21","statements":[{"id":3542,"nodeType":"UncheckedBlock","src":"23444:155:21","statements":[{"assignments":[3522],"declarations":[{"constant":false,"id":3522,"mutability":"mutable","name":"result","nameLocation":"23476:6:21","nodeType":"VariableDeclaration","scope":3542,"src":"23468:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3526,"initialValue":{"arguments":[{"id":3524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"23490:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3523,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3510,3544],"referencedDeclaration":3510,"src":"23485:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"23513:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3531,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"23555:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}],"id":3530,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"23538:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2537_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"23568:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"23577:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"23586:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3528,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"23522:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"23522:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3520,"id":3541,"nodeType":"Return","src":"23506:82:21"}]}]},"documentation":{"id":3511,"nodeType":"StructuredDocumentation","src":"23267:86:21","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3544,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:21","nodeType":"FunctionDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"a","nameLocation":"23380:1:21","nodeType":"VariableDeclaration","scope":3544,"src":"23372:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3516,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:21","nodeType":"VariableDeclaration","scope":3544,"src":"23383:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"},"typeName":{"id":3515,"nodeType":"UserDefinedTypeName","pathNode":{"id":3514,"name":"Rounding","nameLocations":["23383:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2537,"src":"23383:8:21"},"referencedDeclaration":2537,"src":"23383:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:21"},"returnParameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3544,"src":"23425:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:21"},"scope":4131,"src":"23358:247:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3739,"nodeType":"Block","src":"23796:981:21","statements":[{"assignments":[3553],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"result","nameLocation":"23814:6:21","nodeType":"VariableDeclaration","scope":3739,"src":"23806:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3555,"initialValue":{"hexValue":"30","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:21"},{"assignments":[3557],"declarations":[{"constant":false,"id":3557,"mutability":"mutable","name":"exp","nameLocation":"23842:3:21","nodeType":"VariableDeclaration","scope":3739,"src":"23834:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3558,"nodeType":"VariableDeclarationStatement","src":"23834:11:21"},{"id":3736,"nodeType":"UncheckedBlock","src":"23855:893:21","statements":[{"expression":{"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3559,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"23879:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"23907:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3561,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"23891:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"23891:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3574,"nodeType":"ExpressionStatement","src":"23879:51:21"},{"expression":{"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"23944:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3576,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"23954:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3578,"nodeType":"ExpressionStatement","src":"23944:13:21"},{"expression":{"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"23971:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3580,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"23981:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3582,"nodeType":"ExpressionStatement","src":"23971:13:21"},{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3583,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"23999:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24026:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3585,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"24010:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"24010:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3598,"nodeType":"ExpressionStatement","src":"23999:49:21"},{"expression":{"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24062:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3600,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24072:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3602,"nodeType":"ExpressionStatement","src":"24062:13:21"},{"expression":{"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3603,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"24089:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3604,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24099:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3606,"nodeType":"ExpressionStatement","src":"24089:13:21"},{"expression":{"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3607,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24117:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24144:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3609,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"24128:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"24128:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3622,"nodeType":"ExpressionStatement","src":"24117:49:21"},{"expression":{"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24180:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3624,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24190:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3626,"nodeType":"ExpressionStatement","src":"24180:13:21"},{"expression":{"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"24207:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3628,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24217:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3630,"nodeType":"ExpressionStatement","src":"24207:13:21"},{"expression":{"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3631,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24235:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24262:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3633,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"24246:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"24246:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3646,"nodeType":"ExpressionStatement","src":"24235:49:21"},{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24298:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3648,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24308:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3650,"nodeType":"ExpressionStatement","src":"24298:13:21"},{"expression":{"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3651,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"24325:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3652,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24335:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3654,"nodeType":"ExpressionStatement","src":"24325:13:21"},{"expression":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3655,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24353:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24379:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3657,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"24363:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"24363:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3670,"nodeType":"ExpressionStatement","src":"24353:47:21"},{"expression":{"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24414:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3672,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24424:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3674,"nodeType":"ExpressionStatement","src":"24414:13:21"},{"expression":{"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"24441:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3676,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24451:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3678,"nodeType":"ExpressionStatement","src":"24441:13:21"},{"expression":{"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3679,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24469:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24495:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":3689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3681,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"24479:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"24479:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3694,"nodeType":"ExpressionStatement","src":"24469:47:21"},{"expression":{"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24530:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3696,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24540:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3698,"nodeType":"ExpressionStatement","src":"24530:13:21"},{"expression":{"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"24557:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3700,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24567:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3702,"nodeType":"ExpressionStatement","src":"24557:13:21"},{"expression":{"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3703,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24585:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24611:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":3713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3705,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"24595:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"24595:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3718,"nodeType":"ExpressionStatement","src":"24585:47:21"},{"expression":{"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24646:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3720,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24656:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3722,"nodeType":"ExpressionStatement","src":"24646:13:21"},{"expression":{"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"24673:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3724,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"24683:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3726,"nodeType":"ExpressionStatement","src":"24673:13:21"},{"expression":{"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3727,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"24701:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"24727:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3728,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"24711:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"24711:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3735,"nodeType":"ExpressionStatement","src":"24701:36:21"}]},{"expression":{"id":3737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"24764:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3551,"id":3738,"nodeType":"Return","src":"24757:13:21"}]},"documentation":{"id":3545,"nodeType":"StructuredDocumentation","src":"23611:119:21","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3740,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:21","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"value","nameLocation":"23757:5:21","nodeType":"VariableDeclaration","scope":3740,"src":"23749:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:21"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3740,"src":"23787:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:21"},"scope":4131,"src":"23735:1042:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3773,"nodeType":"Block","src":"25010:175:21","statements":[{"id":3772,"nodeType":"UncheckedBlock","src":"25020:159:21","statements":[{"assignments":[3752],"declarations":[{"constant":false,"id":3752,"mutability":"mutable","name":"result","nameLocation":"25052:6:21","nodeType":"VariableDeclaration","scope":3772,"src":"25044:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3756,"initialValue":{"arguments":[{"id":3754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"25066:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3753,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3740,3774],"referencedDeclaration":3740,"src":"25061:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"25093:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3761,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"25135:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}],"id":3760,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"25118:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2537_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"25153:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"25162:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3758,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"25102:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"25102:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3750,"id":3771,"nodeType":"Return","src":"25086:82:21"}]}]},"documentation":{"id":3741,"nodeType":"StructuredDocumentation","src":"24783:142:21","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3774,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:21","nodeType":"FunctionDefinition","parameters":{"id":3747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"value","nameLocation":"24952:5:21","nodeType":"VariableDeclaration","scope":3774,"src":"24944:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3746,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:21","nodeType":"VariableDeclaration","scope":3774,"src":"24959:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"},"typeName":{"id":3745,"nodeType":"UserDefinedTypeName","pathNode":{"id":3744,"name":"Rounding","nameLocations":["24959:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2537,"src":"24959:8:21"},"referencedDeclaration":2537,"src":"24959:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:21"},"returnParameters":{"id":3750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3774,"src":"25001:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:21"},"scope":4131,"src":"24930:255:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3902,"nodeType":"Block","src":"25378:854:21","statements":[{"assignments":[3783],"declarations":[{"constant":false,"id":3783,"mutability":"mutable","name":"result","nameLocation":"25396:6:21","nodeType":"VariableDeclaration","scope":3902,"src":"25388:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3782,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3785,"initialValue":{"hexValue":"30","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:21"},{"id":3899,"nodeType":"UncheckedBlock","src":"25416:787:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"25444:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3802,"nodeType":"IfStatement","src":"25440:103:21","trueBody":{"id":3801,"nodeType":"Block","src":"25463:80:21","statements":[{"expression":{"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"25481:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3796,"nodeType":"ExpressionStatement","src":"25481:17:21"},{"expression":{"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"25516:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3800,"nodeType":"ExpressionStatement","src":"25516:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"25560:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3819,"nodeType":"IfStatement","src":"25556:103:21","trueBody":{"id":3818,"nodeType":"Block","src":"25579:80:21","statements":[{"expression":{"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"25597:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3813,"nodeType":"ExpressionStatement","src":"25597:17:21"},{"expression":{"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"25632:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3817,"nodeType":"ExpressionStatement","src":"25632:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"25676:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3836,"nodeType":"IfStatement","src":"25672:103:21","trueBody":{"id":3835,"nodeType":"Block","src":"25695:80:21","statements":[{"expression":{"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"25713:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3830,"nodeType":"ExpressionStatement","src":"25713:17:21"},{"expression":{"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"25748:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3834,"nodeType":"ExpressionStatement","src":"25748:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"25792:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3853,"nodeType":"IfStatement","src":"25788:100:21","trueBody":{"id":3852,"nodeType":"Block","src":"25810:78:21","statements":[{"expression":{"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"25828:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3847,"nodeType":"ExpressionStatement","src":"25828:16:21"},{"expression":{"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3848,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"25862:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3851,"nodeType":"ExpressionStatement","src":"25862:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"25905:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3870,"nodeType":"IfStatement","src":"25901:100:21","trueBody":{"id":3869,"nodeType":"Block","src":"25923:78:21","statements":[{"expression":{"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"25941:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3864,"nodeType":"ExpressionStatement","src":"25941:16:21"},{"expression":{"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"25975:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3868,"nodeType":"ExpressionStatement","src":"25975:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"26018:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3887,"nodeType":"IfStatement","src":"26014:100:21","trueBody":{"id":3886,"nodeType":"Block","src":"26036:78:21","statements":[{"expression":{"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"26054:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3881,"nodeType":"ExpressionStatement","src":"26054:16:21"},{"expression":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"26088:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3885,"nodeType":"ExpressionStatement","src":"26088:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"26131:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3898,"nodeType":"IfStatement","src":"26127:66:21","trueBody":{"id":3897,"nodeType":"Block","src":"26149:44:21","statements":[{"expression":{"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"26167:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3896,"nodeType":"ExpressionStatement","src":"26167:11:21"}]}}]},{"expression":{"id":3900,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"26219:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3781,"id":3901,"nodeType":"Return","src":"26212:13:21"}]},"documentation":{"id":3775,"nodeType":"StructuredDocumentation","src":"25191:120:21","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3903,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:21","nodeType":"FunctionDefinition","parameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3777,"mutability":"mutable","name":"value","nameLocation":"25339:5:21","nodeType":"VariableDeclaration","scope":3903,"src":"25331:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:21"},"returnParameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3903,"src":"25369:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:21"},"scope":4131,"src":"25316:916:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3936,"nodeType":"Block","src":"26467:177:21","statements":[{"id":3935,"nodeType":"UncheckedBlock","src":"26477:161:21","statements":[{"assignments":[3915],"declarations":[{"constant":false,"id":3915,"mutability":"mutable","name":"result","nameLocation":"26509:6:21","nodeType":"VariableDeclaration","scope":3935,"src":"26501:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3919,"initialValue":{"arguments":[{"id":3917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"26524:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3916,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3903,3937],"referencedDeclaration":3903,"src":"26518:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"26551:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3924,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"26593:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}],"id":3923,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"26576:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2537_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"26612:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"26621:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3921,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"26560:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"26560:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3913,"id":3934,"nodeType":"Return","src":"26544:83:21"}]}]},"documentation":{"id":3904,"nodeType":"StructuredDocumentation","src":"26238:143:21","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3937,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:21","nodeType":"FunctionDefinition","parameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"value","nameLocation":"26409:5:21","nodeType":"VariableDeclaration","scope":3937,"src":"26401:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:21","nodeType":"VariableDeclaration","scope":3937,"src":"26416:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"},"typeName":{"id":3908,"nodeType":"UserDefinedTypeName","pathNode":{"id":3907,"name":"Rounding","nameLocations":["26416:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2537,"src":"26416:8:21"},"referencedDeclaration":2537,"src":"26416:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:21"},"returnParameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3937,"src":"26458:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:21"},"scope":4131,"src":"26386:258:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4073,"nodeType":"Block","src":"26964:674:21","statements":[{"assignments":[3946],"declarations":[{"constant":false,"id":3946,"mutability":"mutable","name":"result","nameLocation":"26982:6:21","nodeType":"VariableDeclaration","scope":4073,"src":"26974:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3948,"initialValue":{"hexValue":"30","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:21"},{"assignments":[3950],"declarations":[{"constant":false,"id":3950,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:21","nodeType":"VariableDeclaration","scope":4073,"src":"27002:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3949,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3951,"nodeType":"VariableDeclarationStatement","src":"27002:12:21"},{"id":4070,"nodeType":"UncheckedBlock","src":"27024:585:21","statements":[{"expression":{"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3952,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"27048:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"27071:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3959,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3953,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27055:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"27055:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3965,"nodeType":"ExpressionStatement","src":"27048:46:21"},{"expression":{"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"27108:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3967,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"27118:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3971,"nodeType":"ExpressionStatement","src":"27108:20:21"},{"expression":{"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3972,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"27142:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"27152:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3977,"nodeType":"ExpressionStatement","src":"27142:19:21"},{"expression":{"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3978,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"27176:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"27199:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3979,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27183:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"27183:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3991,"nodeType":"ExpressionStatement","src":"27176:45:21"},{"expression":{"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"27235:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"27245:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3997,"nodeType":"ExpressionStatement","src":"27235:19:21"},{"expression":{"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"27268:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3999,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"27278:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4003,"nodeType":"ExpressionStatement","src":"27268:18:21"},{"expression":{"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4004,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"27301:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"27324:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4005,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27308:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"27308:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4017,"nodeType":"ExpressionStatement","src":"27301:45:21"},{"expression":{"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"27360:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"27370:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4023,"nodeType":"ExpressionStatement","src":"27360:19:21"},{"expression":{"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"27393:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"27403:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4029,"nodeType":"ExpressionStatement","src":"27393:18:21"},{"expression":{"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4030,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"27426:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"27449:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4031,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27433:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"27433:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4043,"nodeType":"ExpressionStatement","src":"27426:45:21"},{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"27485:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4045,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"27495:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4049,"nodeType":"ExpressionStatement","src":"27485:19:21"},{"expression":{"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4050,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"27518:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4051,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"27528:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4055,"nodeType":"ExpressionStatement","src":"27518:18:21"},{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"27551:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"27577:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4057,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27561:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"27561:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4069,"nodeType":"ExpressionStatement","src":"27551:47:21"}]},{"expression":{"id":4071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"27625:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3944,"id":4072,"nodeType":"Return","src":"27618:13:21"}]},"documentation":{"id":3938,"nodeType":"StructuredDocumentation","src":"26650:246:21","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4074,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:21","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"value","nameLocation":"26925:5:21","nodeType":"VariableDeclaration","scope":4074,"src":"26917:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:21"},"returnParameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4074,"src":"26955:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:21"},"scope":4131,"src":"26901:737:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4110,"nodeType":"Block","src":"27875:184:21","statements":[{"id":4109,"nodeType":"UncheckedBlock","src":"27885:168:21","statements":[{"assignments":[4086],"declarations":[{"constant":false,"id":4086,"mutability":"mutable","name":"result","nameLocation":"27917:6:21","nodeType":"VariableDeclaration","scope":4109,"src":"27909:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4090,"initialValue":{"arguments":[{"id":4088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"27933:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4087,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4074,4111],"referencedDeclaration":4074,"src":"27926:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4091,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"27960:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4095,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"28002:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}],"id":4094,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"27985:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2537_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"28021:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"28036:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4092,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27969:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5896_$","typeString":"type(library SafeCast)"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5895,"src":"27969:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4084,"id":4108,"nodeType":"Return","src":"27953:89:21"}]}]},"documentation":{"id":4075,"nodeType":"StructuredDocumentation","src":"27644:144:21","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4111,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:21","nodeType":"FunctionDefinition","parameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"value","nameLocation":"27817:5:21","nodeType":"VariableDeclaration","scope":4111,"src":"27809:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4076,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4080,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:21","nodeType":"VariableDeclaration","scope":4111,"src":"27824:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"},"typeName":{"id":4079,"nodeType":"UserDefinedTypeName","pathNode":{"id":4078,"name":"Rounding","nameLocations":["27824:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2537,"src":"27824:8:21"},"referencedDeclaration":2537,"src":"27824:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:21"},"returnParameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4111,"src":"27866:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:21"},"scope":4131,"src":"27793:266:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4129,"nodeType":"Block","src":"28257:48:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4122,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"28280:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}],"id":4121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4120,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:21","typeDescriptions":{}}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4119,"id":4128,"nodeType":"Return","src":"28267:31:21"}]},"documentation":{"id":4112,"nodeType":"StructuredDocumentation","src":"28065:113:21","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4130,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:21","nodeType":"FunctionDefinition","parameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:21","nodeType":"VariableDeclaration","scope":4130,"src":"28209:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"},"typeName":{"id":4114,"nodeType":"UserDefinedTypeName","pathNode":{"id":4113,"name":"Rounding","nameLocations":["28209:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2537,"src":"28209:8:21"},"referencedDeclaration":2537,"src":"28209:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2537","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:21"},"returnParameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4130,"src":"28251:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4117,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:21"},"scope":4131,"src":"28183:122:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4132,"src":"281:28026:21","usedErrors":[],"usedEvents":[]}],"src":"103:28205:21"},"id":21},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5896]},"id":5897,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4133,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4134,"nodeType":"StructuredDocumentation","src":"218:550:22","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5896,"linearizedBaseContracts":[5896],"name":"SafeCast","nameLocation":"777:8:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4135,"nodeType":"StructuredDocumentation","src":"792:68:22","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4141,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:22","nodeType":"ErrorDefinition","parameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4137,"mutability":"mutable","name":"bits","nameLocation":"908:4:22","nodeType":"VariableDeclaration","scope":4141,"src":"902:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4136,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4139,"mutability":"mutable","name":"value","nameLocation":"922:5:22","nodeType":"VariableDeclaration","scope":4141,"src":"914:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:22"},"src":"865:64:22"},{"documentation":{"id":4142,"nodeType":"StructuredDocumentation","src":"935:75:22","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4146,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:22","nodeType":"ErrorDefinition","parameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4144,"mutability":"mutable","name":"value","nameLocation":"1056:5:22","nodeType":"VariableDeclaration","scope":4146,"src":"1049:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4143,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:22"},"src":"1015:48:22"},{"documentation":{"id":4147,"nodeType":"StructuredDocumentation","src":"1069:67:22","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4153,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:22","nodeType":"ErrorDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"bits","nameLocation":"1183:4:22","nodeType":"VariableDeclaration","scope":4153,"src":"1177:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4148,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"value","nameLocation":"1196:5:22","nodeType":"VariableDeclaration","scope":4153,"src":"1189:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4150,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:22"},"src":"1141:62:22"},{"documentation":{"id":4154,"nodeType":"StructuredDocumentation","src":"1209:75:22","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4158,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:22","nodeType":"ErrorDefinition","parameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"value","nameLocation":"1331:5:22","nodeType":"VariableDeclaration","scope":4158,"src":"1323:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:22"},"src":"1289:49:22"},{"body":{"id":4185,"nodeType":"Block","src":"1695:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"1709:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4168,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4167,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:22","memberName":"max","nodeType":"MemberAccess","src":"1717:17:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4179,"nodeType":"IfStatement","src":"1705:105:22","trueBody":{"id":4178,"nodeType":"Block","src":"1736:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"1793:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4173,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"1757:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4177,"nodeType":"RevertStatement","src":"1750:49:22"}]}},{"expression":{"arguments":[{"id":4182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"1834:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4180,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:22","typeDescriptions":{}}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4165,"id":4184,"nodeType":"Return","src":"1819:21:22"}]},"documentation":{"id":4159,"nodeType":"StructuredDocumentation","src":"1344:280:22","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4186,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:22","nodeType":"FunctionDefinition","parameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"value","nameLocation":"1656:5:22","nodeType":"VariableDeclaration","scope":4186,"src":"1648:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:22"},"returnParameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4186,"src":"1686:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4163,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:22"},"scope":5896,"src":"1629:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4213,"nodeType":"Block","src":"2204:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"2218:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4196,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4195,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:22","memberName":"max","nodeType":"MemberAccess","src":"2226:17:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4207,"nodeType":"IfStatement","src":"2214:105:22","trueBody":{"id":4206,"nodeType":"Block","src":"2245:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"2302:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4201,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"2266:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4205,"nodeType":"RevertStatement","src":"2259:49:22"}]}},{"expression":{"arguments":[{"id":4210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"2343:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4208,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:22","typeDescriptions":{}}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4193,"id":4212,"nodeType":"Return","src":"2328:21:22"}]},"documentation":{"id":4187,"nodeType":"StructuredDocumentation","src":"1853:280:22","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4214,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:22","nodeType":"FunctionDefinition","parameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"value","nameLocation":"2165:5:22","nodeType":"VariableDeclaration","scope":4214,"src":"2157:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:22"},"returnParameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4214,"src":"2195:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4191,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:22"},"scope":5896,"src":"2138:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4241,"nodeType":"Block","src":"2713:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"2727:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4224,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4223,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:22","memberName":"max","nodeType":"MemberAccess","src":"2735:17:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4235,"nodeType":"IfStatement","src":"2723:105:22","trueBody":{"id":4234,"nodeType":"Block","src":"2754:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"2811:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4229,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"2775:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4233,"nodeType":"RevertStatement","src":"2768:49:22"}]}},{"expression":{"arguments":[{"id":4238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"2852:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4236,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:22","typeDescriptions":{}}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4221,"id":4240,"nodeType":"Return","src":"2837:21:22"}]},"documentation":{"id":4215,"nodeType":"StructuredDocumentation","src":"2362:280:22","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4242,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:22","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"value","nameLocation":"2674:5:22","nodeType":"VariableDeclaration","scope":4242,"src":"2666:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:22"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4242,"src":"2704:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4219,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:22"},"scope":5896,"src":"2647:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4269,"nodeType":"Block","src":"3222:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"3236:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4252,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:22","memberName":"max","nodeType":"MemberAccess","src":"3244:17:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4263,"nodeType":"IfStatement","src":"3232:105:22","trueBody":{"id":4262,"nodeType":"Block","src":"3263:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"3320:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4257,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"3284:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4261,"nodeType":"RevertStatement","src":"3277:49:22"}]}},{"expression":{"arguments":[{"id":4266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"3361:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4264,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:22","typeDescriptions":{}}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4249,"id":4268,"nodeType":"Return","src":"3346:21:22"}]},"documentation":{"id":4243,"nodeType":"StructuredDocumentation","src":"2871:280:22","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4270,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:22","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"value","nameLocation":"3183:5:22","nodeType":"VariableDeclaration","scope":4270,"src":"3175:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:22"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4270,"src":"3213:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4247,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:22"},"scope":5896,"src":"3156:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4297,"nodeType":"Block","src":"3731:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"3745:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4280,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4279,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:22","memberName":"max","nodeType":"MemberAccess","src":"3753:17:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4291,"nodeType":"IfStatement","src":"3741:105:22","trueBody":{"id":4290,"nodeType":"Block","src":"3772:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"3829:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4285,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"3793:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4289,"nodeType":"RevertStatement","src":"3786:49:22"}]}},{"expression":{"arguments":[{"id":4294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"3870:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4292,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:22","typeDescriptions":{}}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4277,"id":4296,"nodeType":"Return","src":"3855:21:22"}]},"documentation":{"id":4271,"nodeType":"StructuredDocumentation","src":"3380:280:22","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4298,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:22","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"value","nameLocation":"3692:5:22","nodeType":"VariableDeclaration","scope":4298,"src":"3684:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:22"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4298,"src":"3722:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4275,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:22"},"scope":5896,"src":"3665:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4325,"nodeType":"Block","src":"4240:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"4254:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4308,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4307,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:22","memberName":"max","nodeType":"MemberAccess","src":"4262:17:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4319,"nodeType":"IfStatement","src":"4250:105:22","trueBody":{"id":4318,"nodeType":"Block","src":"4281:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"4338:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4313,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"4302:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4317,"nodeType":"RevertStatement","src":"4295:49:22"}]}},{"expression":{"arguments":[{"id":4322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"4379:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4320,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:22","typeDescriptions":{}}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4305,"id":4324,"nodeType":"Return","src":"4364:21:22"}]},"documentation":{"id":4299,"nodeType":"StructuredDocumentation","src":"3889:280:22","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4326,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:22","nodeType":"FunctionDefinition","parameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"value","nameLocation":"4201:5:22","nodeType":"VariableDeclaration","scope":4326,"src":"4193:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:22"},"returnParameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4326,"src":"4231:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4303,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:22"},"scope":5896,"src":"4174:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4353,"nodeType":"Block","src":"4749:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"4763:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4336,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4335,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:22","memberName":"max","nodeType":"MemberAccess","src":"4771:17:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4347,"nodeType":"IfStatement","src":"4759:105:22","trueBody":{"id":4346,"nodeType":"Block","src":"4790:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"4847:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4341,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"4811:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4345,"nodeType":"RevertStatement","src":"4804:49:22"}]}},{"expression":{"arguments":[{"id":4350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"4888:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4348,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:22","typeDescriptions":{}}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4333,"id":4352,"nodeType":"Return","src":"4873:21:22"}]},"documentation":{"id":4327,"nodeType":"StructuredDocumentation","src":"4398:280:22","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4354,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:22","nodeType":"FunctionDefinition","parameters":{"id":4330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4329,"mutability":"mutable","name":"value","nameLocation":"4710:5:22","nodeType":"VariableDeclaration","scope":4354,"src":"4702:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:22"},"returnParameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4354,"src":"4740:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4331,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:22"},"scope":5896,"src":"4683:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4381,"nodeType":"Block","src":"5258:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"5272:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4364,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:22","memberName":"max","nodeType":"MemberAccess","src":"5280:17:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4375,"nodeType":"IfStatement","src":"5268:105:22","trueBody":{"id":4374,"nodeType":"Block","src":"5299:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"5356:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4369,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"5320:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4373,"nodeType":"RevertStatement","src":"5313:49:22"}]}},{"expression":{"arguments":[{"id":4378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"5397:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4376,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:22","typeDescriptions":{}}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4361,"id":4380,"nodeType":"Return","src":"5382:21:22"}]},"documentation":{"id":4355,"nodeType":"StructuredDocumentation","src":"4907:280:22","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4382,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:22","nodeType":"FunctionDefinition","parameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"value","nameLocation":"5219:5:22","nodeType":"VariableDeclaration","scope":4382,"src":"5211:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:22"},"returnParameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4382,"src":"5249:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4359,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:22"},"scope":5896,"src":"5192:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4409,"nodeType":"Block","src":"5767:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"5781:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4392,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4391,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:22","memberName":"max","nodeType":"MemberAccess","src":"5789:17:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4403,"nodeType":"IfStatement","src":"5777:105:22","trueBody":{"id":4402,"nodeType":"Block","src":"5808:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"5865:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4397,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"5829:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4401,"nodeType":"RevertStatement","src":"5822:49:22"}]}},{"expression":{"arguments":[{"id":4406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"5906:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4404,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:22","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4389,"id":4408,"nodeType":"Return","src":"5891:21:22"}]},"documentation":{"id":4383,"nodeType":"StructuredDocumentation","src":"5416:280:22","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4410,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:22","nodeType":"FunctionDefinition","parameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"value","nameLocation":"5728:5:22","nodeType":"VariableDeclaration","scope":4410,"src":"5720:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:22"},"returnParameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4410,"src":"5758:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4387,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:22"},"scope":5896,"src":"5701:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4437,"nodeType":"Block","src":"6276:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"6290:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4420,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4419,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:22","memberName":"max","nodeType":"MemberAccess","src":"6298:17:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4431,"nodeType":"IfStatement","src":"6286:105:22","trueBody":{"id":4430,"nodeType":"Block","src":"6317:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"6374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4425,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"6338:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4429,"nodeType":"RevertStatement","src":"6331:49:22"}]}},{"expression":{"arguments":[{"id":4434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"6415:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4432,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:22","typeDescriptions":{}}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4417,"id":4436,"nodeType":"Return","src":"6400:21:22"}]},"documentation":{"id":4411,"nodeType":"StructuredDocumentation","src":"5925:280:22","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4438,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:22","nodeType":"FunctionDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4413,"mutability":"mutable","name":"value","nameLocation":"6237:5:22","nodeType":"VariableDeclaration","scope":4438,"src":"6229:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:22"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4438,"src":"6267:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4415,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:22"},"scope":5896,"src":"6210:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4465,"nodeType":"Block","src":"6785:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"6799:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4448,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4447,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:22","memberName":"max","nodeType":"MemberAccess","src":"6807:17:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4459,"nodeType":"IfStatement","src":"6795:105:22","trueBody":{"id":4458,"nodeType":"Block","src":"6826:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"6883:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4453,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"6847:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4457,"nodeType":"RevertStatement","src":"6840:49:22"}]}},{"expression":{"arguments":[{"id":4462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"6924:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4460,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:22","typeDescriptions":{}}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4445,"id":4464,"nodeType":"Return","src":"6909:21:22"}]},"documentation":{"id":4439,"nodeType":"StructuredDocumentation","src":"6434:280:22","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4466,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:22","nodeType":"FunctionDefinition","parameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"value","nameLocation":"6746:5:22","nodeType":"VariableDeclaration","scope":4466,"src":"6738:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:22"},"returnParameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4466,"src":"6776:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4443,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:22"},"scope":5896,"src":"6719:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4493,"nodeType":"Block","src":"7294:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"7308:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4476,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4475,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:22","memberName":"max","nodeType":"MemberAccess","src":"7316:17:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4487,"nodeType":"IfStatement","src":"7304:105:22","trueBody":{"id":4486,"nodeType":"Block","src":"7335:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"7392:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4481,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"7356:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4485,"nodeType":"RevertStatement","src":"7349:49:22"}]}},{"expression":{"arguments":[{"id":4490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"7433:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4488,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:22","typeDescriptions":{}}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4473,"id":4492,"nodeType":"Return","src":"7418:21:22"}]},"documentation":{"id":4467,"nodeType":"StructuredDocumentation","src":"6943:280:22","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4494,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:22","nodeType":"FunctionDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4469,"mutability":"mutable","name":"value","nameLocation":"7255:5:22","nodeType":"VariableDeclaration","scope":4494,"src":"7247:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:22"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4494,"src":"7285:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4471,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:22"},"scope":5896,"src":"7228:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4521,"nodeType":"Block","src":"7803:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"7817:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4504,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4503,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:22","memberName":"max","nodeType":"MemberAccess","src":"7825:17:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4515,"nodeType":"IfStatement","src":"7813:105:22","trueBody":{"id":4514,"nodeType":"Block","src":"7844:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"7901:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4509,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"7865:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4513,"nodeType":"RevertStatement","src":"7858:49:22"}]}},{"expression":{"arguments":[{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"7942:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4516,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:22","typeDescriptions":{}}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4501,"id":4520,"nodeType":"Return","src":"7927:21:22"}]},"documentation":{"id":4495,"nodeType":"StructuredDocumentation","src":"7452:280:22","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4522,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:22","nodeType":"FunctionDefinition","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4497,"mutability":"mutable","name":"value","nameLocation":"7764:5:22","nodeType":"VariableDeclaration","scope":4522,"src":"7756:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:22"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4522,"src":"7794:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4499,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:22"},"scope":5896,"src":"7737:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4549,"nodeType":"Block","src":"8312:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"8326:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4532,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4531,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:22","memberName":"max","nodeType":"MemberAccess","src":"8334:17:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4543,"nodeType":"IfStatement","src":"8322:105:22","trueBody":{"id":4542,"nodeType":"Block","src":"8353:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"8410:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4537,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"8374:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4541,"nodeType":"RevertStatement","src":"8367:49:22"}]}},{"expression":{"arguments":[{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"8451:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4544,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:22","typeDescriptions":{}}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4529,"id":4548,"nodeType":"Return","src":"8436:21:22"}]},"documentation":{"id":4523,"nodeType":"StructuredDocumentation","src":"7961:280:22","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4550,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:22","nodeType":"FunctionDefinition","parameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"value","nameLocation":"8273:5:22","nodeType":"VariableDeclaration","scope":4550,"src":"8265:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:22"},"returnParameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4550,"src":"8303:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4527,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:22"},"scope":5896,"src":"8246:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4577,"nodeType":"Block","src":"8821:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"8835:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4560,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:22","memberName":"max","nodeType":"MemberAccess","src":"8843:17:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4571,"nodeType":"IfStatement","src":"8831:105:22","trueBody":{"id":4570,"nodeType":"Block","src":"8862:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"8919:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4565,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"8883:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4569,"nodeType":"RevertStatement","src":"8876:49:22"}]}},{"expression":{"arguments":[{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"8960:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4572,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:22","typeDescriptions":{}}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4557,"id":4576,"nodeType":"Return","src":"8945:21:22"}]},"documentation":{"id":4551,"nodeType":"StructuredDocumentation","src":"8470:280:22","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4578,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:22","nodeType":"FunctionDefinition","parameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"value","nameLocation":"8782:5:22","nodeType":"VariableDeclaration","scope":4578,"src":"8774:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:22"},"returnParameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4578,"src":"8812:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4555,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:22"},"scope":5896,"src":"8755:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4605,"nodeType":"Block","src":"9330:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"9344:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4588,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4587,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:22","memberName":"max","nodeType":"MemberAccess","src":"9352:17:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4599,"nodeType":"IfStatement","src":"9340:105:22","trueBody":{"id":4598,"nodeType":"Block","src":"9371:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"9428:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4593,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"9392:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4597,"nodeType":"RevertStatement","src":"9385:49:22"}]}},{"expression":{"arguments":[{"id":4602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"9469:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4600,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:22","typeDescriptions":{}}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4585,"id":4604,"nodeType":"Return","src":"9454:21:22"}]},"documentation":{"id":4579,"nodeType":"StructuredDocumentation","src":"8979:280:22","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4606,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:22","nodeType":"FunctionDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"value","nameLocation":"9291:5:22","nodeType":"VariableDeclaration","scope":4606,"src":"9283:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4580,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:22"},"returnParameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4606,"src":"9321:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4583,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:22"},"scope":5896,"src":"9264:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4633,"nodeType":"Block","src":"9839:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"9853:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4616,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4615,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:22","memberName":"max","nodeType":"MemberAccess","src":"9861:17:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4627,"nodeType":"IfStatement","src":"9849:105:22","trueBody":{"id":4626,"nodeType":"Block","src":"9880:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"9937:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4621,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"9901:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4625,"nodeType":"RevertStatement","src":"9894:49:22"}]}},{"expression":{"arguments":[{"id":4630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"9978:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4628,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:22","typeDescriptions":{}}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4613,"id":4632,"nodeType":"Return","src":"9963:21:22"}]},"documentation":{"id":4607,"nodeType":"StructuredDocumentation","src":"9488:280:22","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4634,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:22","nodeType":"FunctionDefinition","parameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"value","nameLocation":"9800:5:22","nodeType":"VariableDeclaration","scope":4634,"src":"9792:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4608,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:22"},"returnParameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4634,"src":"9830:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4611,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:22"},"scope":5896,"src":"9773:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4661,"nodeType":"Block","src":"10348:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"10362:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4644,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4643,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:22","memberName":"max","nodeType":"MemberAccess","src":"10370:17:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4655,"nodeType":"IfStatement","src":"10358:105:22","trueBody":{"id":4654,"nodeType":"Block","src":"10389:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"10446:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4649,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"10410:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4653,"nodeType":"RevertStatement","src":"10403:49:22"}]}},{"expression":{"arguments":[{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"10487:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4656,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:22","typeDescriptions":{}}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4641,"id":4660,"nodeType":"Return","src":"10472:21:22"}]},"documentation":{"id":4635,"nodeType":"StructuredDocumentation","src":"9997:280:22","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4662,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:22","nodeType":"FunctionDefinition","parameters":{"id":4638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"value","nameLocation":"10309:5:22","nodeType":"VariableDeclaration","scope":4662,"src":"10301:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:22"},"returnParameters":{"id":4641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4662,"src":"10339:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4639,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:22"},"scope":5896,"src":"10282:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4689,"nodeType":"Block","src":"10857:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"10871:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4672,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:22","memberName":"max","nodeType":"MemberAccess","src":"10879:17:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4683,"nodeType":"IfStatement","src":"10867:105:22","trueBody":{"id":4682,"nodeType":"Block","src":"10898:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"10955:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4677,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"10919:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4681,"nodeType":"RevertStatement","src":"10912:49:22"}]}},{"expression":{"arguments":[{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"10996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4684,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:22","typeDescriptions":{}}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4669,"id":4688,"nodeType":"Return","src":"10981:21:22"}]},"documentation":{"id":4663,"nodeType":"StructuredDocumentation","src":"10506:280:22","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4690,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:22","nodeType":"FunctionDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"value","nameLocation":"10818:5:22","nodeType":"VariableDeclaration","scope":4690,"src":"10810:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4664,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:22"},"returnParameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4690,"src":"10848:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4667,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:22"},"scope":5896,"src":"10791:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4717,"nodeType":"Block","src":"11360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"11374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4700,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4699,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:22","memberName":"max","nodeType":"MemberAccess","src":"11382:16:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4711,"nodeType":"IfStatement","src":"11370:103:22","trueBody":{"id":4710,"nodeType":"Block","src":"11400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"11456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4705,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"11421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4709,"nodeType":"RevertStatement","src":"11414:48:22"}]}},{"expression":{"arguments":[{"id":4714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"11496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4712,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:22","typeDescriptions":{}}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4697,"id":4716,"nodeType":"Return","src":"11482:20:22"}]},"documentation":{"id":4691,"nodeType":"StructuredDocumentation","src":"11015:276:22","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4718,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:22","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"value","nameLocation":"11322:5:22","nodeType":"VariableDeclaration","scope":4718,"src":"11314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:22"},"returnParameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4718,"src":"11352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4695,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:22"},"scope":5896,"src":"11296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4745,"nodeType":"Block","src":"11860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"11874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4728,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:22","memberName":"max","nodeType":"MemberAccess","src":"11882:16:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4739,"nodeType":"IfStatement","src":"11870:103:22","trueBody":{"id":4738,"nodeType":"Block","src":"11900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"11956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4733,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"11921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4737,"nodeType":"RevertStatement","src":"11914:48:22"}]}},{"expression":{"arguments":[{"id":4742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"11996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4740,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:22","typeDescriptions":{}}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4725,"id":4744,"nodeType":"Return","src":"11982:20:22"}]},"documentation":{"id":4719,"nodeType":"StructuredDocumentation","src":"11515:276:22","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4746,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:22","nodeType":"FunctionDefinition","parameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"value","nameLocation":"11822:5:22","nodeType":"VariableDeclaration","scope":4746,"src":"11814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:22"},"returnParameters":{"id":4725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4746,"src":"11852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4723,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:22"},"scope":5896,"src":"11796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4773,"nodeType":"Block","src":"12360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"12374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4756,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4755,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:22","memberName":"max","nodeType":"MemberAccess","src":"12382:16:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4767,"nodeType":"IfStatement","src":"12370:103:22","trueBody":{"id":4766,"nodeType":"Block","src":"12400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"12456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4761,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"12421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4765,"nodeType":"RevertStatement","src":"12414:48:22"}]}},{"expression":{"arguments":[{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"12496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4768,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:22","typeDescriptions":{}}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4753,"id":4772,"nodeType":"Return","src":"12482:20:22"}]},"documentation":{"id":4747,"nodeType":"StructuredDocumentation","src":"12015:276:22","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4774,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:22","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"value","nameLocation":"12322:5:22","nodeType":"VariableDeclaration","scope":4774,"src":"12314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:22"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4774,"src":"12352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4751,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:22"},"scope":5896,"src":"12296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4801,"nodeType":"Block","src":"12860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"12874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4784,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4783,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:22","memberName":"max","nodeType":"MemberAccess","src":"12882:16:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4795,"nodeType":"IfStatement","src":"12870:103:22","trueBody":{"id":4794,"nodeType":"Block","src":"12900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"12956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4789,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"12921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4793,"nodeType":"RevertStatement","src":"12914:48:22"}]}},{"expression":{"arguments":[{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"12996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4796,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:22","typeDescriptions":{}}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4781,"id":4800,"nodeType":"Return","src":"12982:20:22"}]},"documentation":{"id":4775,"nodeType":"StructuredDocumentation","src":"12515:276:22","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:22","nodeType":"FunctionDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"value","nameLocation":"12822:5:22","nodeType":"VariableDeclaration","scope":4802,"src":"12814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:22"},"returnParameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4802,"src":"12852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4779,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:22"},"scope":5896,"src":"12796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4829,"nodeType":"Block","src":"13360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"13374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4812,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4811,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:22","memberName":"max","nodeType":"MemberAccess","src":"13382:16:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4823,"nodeType":"IfStatement","src":"13370:103:22","trueBody":{"id":4822,"nodeType":"Block","src":"13400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"13456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4817,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"13421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4821,"nodeType":"RevertStatement","src":"13414:48:22"}]}},{"expression":{"arguments":[{"id":4826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"13496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4824,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:22","typeDescriptions":{}}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4809,"id":4828,"nodeType":"Return","src":"13482:20:22"}]},"documentation":{"id":4803,"nodeType":"StructuredDocumentation","src":"13015:276:22","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4830,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:22","nodeType":"FunctionDefinition","parameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"value","nameLocation":"13322:5:22","nodeType":"VariableDeclaration","scope":4830,"src":"13314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4804,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:22"},"returnParameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4830,"src":"13352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4807,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:22"},"scope":5896,"src":"13296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4857,"nodeType":"Block","src":"13860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"13874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4840,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4839,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:22","memberName":"max","nodeType":"MemberAccess","src":"13882:16:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4851,"nodeType":"IfStatement","src":"13870:103:22","trueBody":{"id":4850,"nodeType":"Block","src":"13900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"13956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4845,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"13921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4849,"nodeType":"RevertStatement","src":"13914:48:22"}]}},{"expression":{"arguments":[{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"13996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4852,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:22","typeDescriptions":{}}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4837,"id":4856,"nodeType":"Return","src":"13982:20:22"}]},"documentation":{"id":4831,"nodeType":"StructuredDocumentation","src":"13515:276:22","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4858,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:22","nodeType":"FunctionDefinition","parameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"value","nameLocation":"13822:5:22","nodeType":"VariableDeclaration","scope":4858,"src":"13814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:22"},"returnParameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4858,"src":"13852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4835,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:22"},"scope":5896,"src":"13796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4885,"nodeType":"Block","src":"14360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"14374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4868,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4867,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:22","memberName":"max","nodeType":"MemberAccess","src":"14382:16:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4879,"nodeType":"IfStatement","src":"14370:103:22","trueBody":{"id":4878,"nodeType":"Block","src":"14400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"14456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4873,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"14421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4877,"nodeType":"RevertStatement","src":"14414:48:22"}]}},{"expression":{"arguments":[{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"14496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4880,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:22","typeDescriptions":{}}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4865,"id":4884,"nodeType":"Return","src":"14482:20:22"}]},"documentation":{"id":4859,"nodeType":"StructuredDocumentation","src":"14015:276:22","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4886,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:22","nodeType":"FunctionDefinition","parameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"mutability":"mutable","name":"value","nameLocation":"14322:5:22","nodeType":"VariableDeclaration","scope":4886,"src":"14314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:22"},"returnParameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4886,"src":"14352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4863,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:22"},"scope":5896,"src":"14296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4913,"nodeType":"Block","src":"14860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"14874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4896,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4895,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:22","memberName":"max","nodeType":"MemberAccess","src":"14882:16:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4907,"nodeType":"IfStatement","src":"14870:103:22","trueBody":{"id":4906,"nodeType":"Block","src":"14900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"14956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4901,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"14921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4905,"nodeType":"RevertStatement","src":"14914:48:22"}]}},{"expression":{"arguments":[{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"14996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4908,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:22","typeDescriptions":{}}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4893,"id":4912,"nodeType":"Return","src":"14982:20:22"}]},"documentation":{"id":4887,"nodeType":"StructuredDocumentation","src":"14515:276:22","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4914,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:22","nodeType":"FunctionDefinition","parameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"value","nameLocation":"14822:5:22","nodeType":"VariableDeclaration","scope":4914,"src":"14814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4888,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:22"},"returnParameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4914,"src":"14852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4891,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:22"},"scope":5896,"src":"14796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4941,"nodeType":"Block","src":"15360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"15374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4924,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4923,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:22","memberName":"max","nodeType":"MemberAccess","src":"15382:16:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4935,"nodeType":"IfStatement","src":"15370:103:22","trueBody":{"id":4934,"nodeType":"Block","src":"15400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"15456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4929,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"15421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4933,"nodeType":"RevertStatement","src":"15414:48:22"}]}},{"expression":{"arguments":[{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"15496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4936,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:22","typeDescriptions":{}}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4921,"id":4940,"nodeType":"Return","src":"15482:20:22"}]},"documentation":{"id":4915,"nodeType":"StructuredDocumentation","src":"15015:276:22","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:22","nodeType":"FunctionDefinition","parameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"value","nameLocation":"15322:5:22","nodeType":"VariableDeclaration","scope":4942,"src":"15314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:22"},"returnParameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4942,"src":"15352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4919,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:22"},"scope":5896,"src":"15296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4969,"nodeType":"Block","src":"15860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"15874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4952,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4951,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:22","memberName":"max","nodeType":"MemberAccess","src":"15882:16:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4963,"nodeType":"IfStatement","src":"15870:103:22","trueBody":{"id":4962,"nodeType":"Block","src":"15900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"15956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4957,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"15921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4961,"nodeType":"RevertStatement","src":"15914:48:22"}]}},{"expression":{"arguments":[{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"15996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4964,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:22","typeDescriptions":{}}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4949,"id":4968,"nodeType":"Return","src":"15982:20:22"}]},"documentation":{"id":4943,"nodeType":"StructuredDocumentation","src":"15515:276:22","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4970,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:22","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"value","nameLocation":"15822:5:22","nodeType":"VariableDeclaration","scope":4970,"src":"15814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4944,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:22"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4970,"src":"15852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4947,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:22"},"scope":5896,"src":"15796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4997,"nodeType":"Block","src":"16360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"16374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4980,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4979,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:22","memberName":"max","nodeType":"MemberAccess","src":"16382:16:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4991,"nodeType":"IfStatement","src":"16370:103:22","trueBody":{"id":4990,"nodeType":"Block","src":"16400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"16456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4985,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"16421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4989,"nodeType":"RevertStatement","src":"16414:48:22"}]}},{"expression":{"arguments":[{"id":4994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"16496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4992,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:22","typeDescriptions":{}}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4977,"id":4996,"nodeType":"Return","src":"16482:20:22"}]},"documentation":{"id":4971,"nodeType":"StructuredDocumentation","src":"16015:276:22","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4998,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:22","nodeType":"FunctionDefinition","parameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"value","nameLocation":"16322:5:22","nodeType":"VariableDeclaration","scope":4998,"src":"16314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4972,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:22"},"returnParameters":{"id":4977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4998,"src":"16352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4975,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:22"},"scope":5896,"src":"16296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5025,"nodeType":"Block","src":"16854:146:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"16868:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5008,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5007,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:22","memberName":"max","nodeType":"MemberAccess","src":"16876:15:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5019,"nodeType":"IfStatement","src":"16864:101:22","trueBody":{"id":5018,"nodeType":"Block","src":"16893:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"16948:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5013,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"16914:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5017,"nodeType":"RevertStatement","src":"16907:47:22"}]}},{"expression":{"arguments":[{"id":5022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"16987:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5020,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:22","typeDescriptions":{}}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5005,"id":5024,"nodeType":"Return","src":"16974:19:22"}]},"documentation":{"id":4999,"nodeType":"StructuredDocumentation","src":"16515:272:22","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5026,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:22","nodeType":"FunctionDefinition","parameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"value","nameLocation":"16817:5:22","nodeType":"VariableDeclaration","scope":5026,"src":"16809:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5000,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:22"},"returnParameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5026,"src":"16847:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5003,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:22"},"scope":5896,"src":"16792:208:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5048,"nodeType":"Block","src":"17236:128:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"17250:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5042,"nodeType":"IfStatement","src":"17246:81:22","trueBody":{"id":5041,"nodeType":"Block","src":"17261:66:22","statements":[{"errorCall":{"arguments":[{"id":5038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"17310:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5037,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"17282:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5040,"nodeType":"RevertStatement","src":"17275:41:22"}]}},{"expression":{"arguments":[{"id":5045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"17351:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5043,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:22","typeDescriptions":{}}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5033,"id":5047,"nodeType":"Return","src":"17336:21:22"}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"17006:160:22","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5049,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:22","nodeType":"FunctionDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"value","nameLocation":"17197:5:22","nodeType":"VariableDeclaration","scope":5049,"src":"17190:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5028,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:22"},"returnParameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5049,"src":"17227:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:22"},"scope":5896,"src":"17171:193:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5074,"nodeType":"Block","src":"17761:150:22","statements":[{"expression":{"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5057,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"17771:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"17791:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5058,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:22","typeDescriptions":{}}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5063,"nodeType":"ExpressionStatement","src":"17771:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"17811:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"17825:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5073,"nodeType":"IfStatement","src":"17807:98:22","trueBody":{"id":5072,"nodeType":"Block","src":"17832:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"17888:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5067,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"17853:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5071,"nodeType":"RevertStatement","src":"17846:48:22"}]}}]},"documentation":{"id":5050,"nodeType":"StructuredDocumentation","src":"17370:312:22","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5075,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:22","nodeType":"FunctionDefinition","parameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5052,"mutability":"mutable","name":"value","nameLocation":"17712:5:22","nodeType":"VariableDeclaration","scope":5075,"src":"17705:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5051,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:22"},"returnParameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:22","nodeType":"VariableDeclaration","scope":5075,"src":"17742:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5054,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:22"},"scope":5896,"src":"17687:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5100,"nodeType":"Block","src":"18308:150:22","statements":[{"expression":{"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5083,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"18318:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"18338:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5084,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:22","typeDescriptions":{}}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5089,"nodeType":"ExpressionStatement","src":"18318:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5090,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"18358:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"18372:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5099,"nodeType":"IfStatement","src":"18354:98:22","trueBody":{"id":5098,"nodeType":"Block","src":"18379:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"18435:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5093,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"18400:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5097,"nodeType":"RevertStatement","src":"18393:48:22"}]}}]},"documentation":{"id":5076,"nodeType":"StructuredDocumentation","src":"17917:312:22","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5101,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:22","nodeType":"FunctionDefinition","parameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"value","nameLocation":"18259:5:22","nodeType":"VariableDeclaration","scope":5101,"src":"18252:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5077,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:22"},"returnParameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:22","nodeType":"VariableDeclaration","scope":5101,"src":"18289:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5080,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:22"},"scope":5896,"src":"18234:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5126,"nodeType":"Block","src":"18855:150:22","statements":[{"expression":{"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5109,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"18865:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"18885:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5110,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:22","typeDescriptions":{}}},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5115,"nodeType":"ExpressionStatement","src":"18865:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5116,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"18905:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"18919:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5125,"nodeType":"IfStatement","src":"18901:98:22","trueBody":{"id":5124,"nodeType":"Block","src":"18926:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"18982:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5119,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"18947:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5123,"nodeType":"RevertStatement","src":"18940:48:22"}]}}]},"documentation":{"id":5102,"nodeType":"StructuredDocumentation","src":"18464:312:22","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5127,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:22","nodeType":"FunctionDefinition","parameters":{"id":5105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5104,"mutability":"mutable","name":"value","nameLocation":"18806:5:22","nodeType":"VariableDeclaration","scope":5127,"src":"18799:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5103,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:22"},"returnParameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:22","nodeType":"VariableDeclaration","scope":5127,"src":"18836:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5106,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:22"},"scope":5896,"src":"18781:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5152,"nodeType":"Block","src":"19402:150:22","statements":[{"expression":{"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5135,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"19412:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"19432:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5136,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:22","typeDescriptions":{}}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5141,"nodeType":"ExpressionStatement","src":"19412:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5142,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"19452:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"19466:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5151,"nodeType":"IfStatement","src":"19448:98:22","trueBody":{"id":5150,"nodeType":"Block","src":"19473:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"19529:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5145,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"19494:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5149,"nodeType":"RevertStatement","src":"19487:48:22"}]}}]},"documentation":{"id":5128,"nodeType":"StructuredDocumentation","src":"19011:312:22","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5153,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:22","nodeType":"FunctionDefinition","parameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5130,"mutability":"mutable","name":"value","nameLocation":"19353:5:22","nodeType":"VariableDeclaration","scope":5153,"src":"19346:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5129,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:22"},"returnParameters":{"id":5134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5133,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:22","nodeType":"VariableDeclaration","scope":5153,"src":"19383:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5132,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:22"},"scope":5896,"src":"19328:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5178,"nodeType":"Block","src":"19949:150:22","statements":[{"expression":{"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5161,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"19959:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"19979:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5162,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:22","typeDescriptions":{}}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5167,"nodeType":"ExpressionStatement","src":"19959:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5168,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"19999:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"20013:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5177,"nodeType":"IfStatement","src":"19995:98:22","trueBody":{"id":5176,"nodeType":"Block","src":"20020:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"20076:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5171,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"20041:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5175,"nodeType":"RevertStatement","src":"20034:48:22"}]}}]},"documentation":{"id":5154,"nodeType":"StructuredDocumentation","src":"19558:312:22","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5179,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:22","nodeType":"FunctionDefinition","parameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"value","nameLocation":"19900:5:22","nodeType":"VariableDeclaration","scope":5179,"src":"19893:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5155,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:22"},"returnParameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:22","nodeType":"VariableDeclaration","scope":5179,"src":"19930:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5158,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:22"},"scope":5896,"src":"19875:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5204,"nodeType":"Block","src":"20496:150:22","statements":[{"expression":{"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"20506:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"20526:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5188,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:22","typeDescriptions":{}}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5193,"nodeType":"ExpressionStatement","src":"20506:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5194,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"20546:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"20560:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5203,"nodeType":"IfStatement","src":"20542:98:22","trueBody":{"id":5202,"nodeType":"Block","src":"20567:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"20623:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5197,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"20588:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5201,"nodeType":"RevertStatement","src":"20581:48:22"}]}}]},"documentation":{"id":5180,"nodeType":"StructuredDocumentation","src":"20105:312:22","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5205,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:22","nodeType":"FunctionDefinition","parameters":{"id":5183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5182,"mutability":"mutable","name":"value","nameLocation":"20447:5:22","nodeType":"VariableDeclaration","scope":5205,"src":"20440:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5181,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:22"},"returnParameters":{"id":5186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5185,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:22","nodeType":"VariableDeclaration","scope":5205,"src":"20477:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5184,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:22"},"scope":5896,"src":"20422:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5230,"nodeType":"Block","src":"21043:150:22","statements":[{"expression":{"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5213,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"21053:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"21073:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5214,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:22","typeDescriptions":{}}},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5219,"nodeType":"ExpressionStatement","src":"21053:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5220,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"21093:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"21107:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5229,"nodeType":"IfStatement","src":"21089:98:22","trueBody":{"id":5228,"nodeType":"Block","src":"21114:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"21170:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5223,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"21135:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5227,"nodeType":"RevertStatement","src":"21128:48:22"}]}}]},"documentation":{"id":5206,"nodeType":"StructuredDocumentation","src":"20652:312:22","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5231,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:22","nodeType":"FunctionDefinition","parameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"value","nameLocation":"20994:5:22","nodeType":"VariableDeclaration","scope":5231,"src":"20987:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5207,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:22"},"returnParameters":{"id":5212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5211,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:22","nodeType":"VariableDeclaration","scope":5231,"src":"21024:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5210,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:22"},"scope":5896,"src":"20969:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5256,"nodeType":"Block","src":"21590:150:22","statements":[{"expression":{"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5239,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"21600:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"21620:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5240,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:22","typeDescriptions":{}}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5245,"nodeType":"ExpressionStatement","src":"21600:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5246,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"21640:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"21654:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5255,"nodeType":"IfStatement","src":"21636:98:22","trueBody":{"id":5254,"nodeType":"Block","src":"21661:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"21717:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5249,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"21682:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5253,"nodeType":"RevertStatement","src":"21675:48:22"}]}}]},"documentation":{"id":5232,"nodeType":"StructuredDocumentation","src":"21199:312:22","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5257,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:22","nodeType":"FunctionDefinition","parameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"value","nameLocation":"21541:5:22","nodeType":"VariableDeclaration","scope":5257,"src":"21534:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5233,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:22"},"returnParameters":{"id":5238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:22","nodeType":"VariableDeclaration","scope":5257,"src":"21571:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5236,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:22"},"scope":5896,"src":"21516:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5282,"nodeType":"Block","src":"22137:150:22","statements":[{"expression":{"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5265,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"22147:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"22167:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5266,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:22","typeDescriptions":{}}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5271,"nodeType":"ExpressionStatement","src":"22147:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5272,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"22187:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"22201:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5281,"nodeType":"IfStatement","src":"22183:98:22","trueBody":{"id":5280,"nodeType":"Block","src":"22208:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"22264:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5275,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"22229:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5279,"nodeType":"RevertStatement","src":"22222:48:22"}]}}]},"documentation":{"id":5258,"nodeType":"StructuredDocumentation","src":"21746:312:22","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5283,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:22","nodeType":"FunctionDefinition","parameters":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"value","nameLocation":"22088:5:22","nodeType":"VariableDeclaration","scope":5283,"src":"22081:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5259,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:22"},"returnParameters":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:22","nodeType":"VariableDeclaration","scope":5283,"src":"22118:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5262,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:22"},"scope":5896,"src":"22063:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5308,"nodeType":"Block","src":"22684:150:22","statements":[{"expression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"22694:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"22714:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5292,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:22","typeDescriptions":{}}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5297,"nodeType":"ExpressionStatement","src":"22694:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"22734:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"22748:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5307,"nodeType":"IfStatement","src":"22730:98:22","trueBody":{"id":5306,"nodeType":"Block","src":"22755:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"22811:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5301,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"22776:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5305,"nodeType":"RevertStatement","src":"22769:48:22"}]}}]},"documentation":{"id":5284,"nodeType":"StructuredDocumentation","src":"22293:312:22","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5309,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:22","nodeType":"FunctionDefinition","parameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"value","nameLocation":"22635:5:22","nodeType":"VariableDeclaration","scope":5309,"src":"22628:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5285,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:22"},"returnParameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5289,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:22","nodeType":"VariableDeclaration","scope":5309,"src":"22665:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5288,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:22"},"scope":5896,"src":"22610:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5334,"nodeType":"Block","src":"23231:150:22","statements":[{"expression":{"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5317,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"23241:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"23261:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5318,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:22","typeDescriptions":{}}},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5323,"nodeType":"ExpressionStatement","src":"23241:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"23281:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"23295:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5333,"nodeType":"IfStatement","src":"23277:98:22","trueBody":{"id":5332,"nodeType":"Block","src":"23302:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"23358:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5327,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"23323:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5331,"nodeType":"RevertStatement","src":"23316:48:22"}]}}]},"documentation":{"id":5310,"nodeType":"StructuredDocumentation","src":"22840:312:22","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5335,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:22","nodeType":"FunctionDefinition","parameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"value","nameLocation":"23182:5:22","nodeType":"VariableDeclaration","scope":5335,"src":"23175:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5311,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:22"},"returnParameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5315,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:22","nodeType":"VariableDeclaration","scope":5335,"src":"23212:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5314,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:22"},"scope":5896,"src":"23157:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5360,"nodeType":"Block","src":"23778:150:22","statements":[{"expression":{"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5343,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"23788:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"23808:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5344,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:22","typeDescriptions":{}}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5349,"nodeType":"ExpressionStatement","src":"23788:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5350,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"23828:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"23842:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5359,"nodeType":"IfStatement","src":"23824:98:22","trueBody":{"id":5358,"nodeType":"Block","src":"23849:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"23905:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5353,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"23870:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5357,"nodeType":"RevertStatement","src":"23863:48:22"}]}}]},"documentation":{"id":5336,"nodeType":"StructuredDocumentation","src":"23387:312:22","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5361,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:22","nodeType":"FunctionDefinition","parameters":{"id":5339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5338,"mutability":"mutable","name":"value","nameLocation":"23729:5:22","nodeType":"VariableDeclaration","scope":5361,"src":"23722:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5337,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:22"},"returnParameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5341,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:22","nodeType":"VariableDeclaration","scope":5361,"src":"23759:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5340,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:22"},"scope":5896,"src":"23704:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5386,"nodeType":"Block","src":"24325:150:22","statements":[{"expression":{"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5369,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"24335:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"24355:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5370,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:22","typeDescriptions":{}}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5375,"nodeType":"ExpressionStatement","src":"24335:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5376,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"24375:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"24389:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5385,"nodeType":"IfStatement","src":"24371:98:22","trueBody":{"id":5384,"nodeType":"Block","src":"24396:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"24452:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5379,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"24417:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5383,"nodeType":"RevertStatement","src":"24410:48:22"}]}}]},"documentation":{"id":5362,"nodeType":"StructuredDocumentation","src":"23934:312:22","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5387,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:22","nodeType":"FunctionDefinition","parameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5364,"mutability":"mutable","name":"value","nameLocation":"24276:5:22","nodeType":"VariableDeclaration","scope":5387,"src":"24269:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5363,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:22"},"returnParameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:22","nodeType":"VariableDeclaration","scope":5387,"src":"24306:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5366,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:22"},"scope":5896,"src":"24251:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5412,"nodeType":"Block","src":"24872:150:22","statements":[{"expression":{"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5395,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"24882:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"24902:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5396,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:22","typeDescriptions":{}}},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5401,"nodeType":"ExpressionStatement","src":"24882:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5402,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"24922:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"24936:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5411,"nodeType":"IfStatement","src":"24918:98:22","trueBody":{"id":5410,"nodeType":"Block","src":"24943:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"24999:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5405,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"24964:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5409,"nodeType":"RevertStatement","src":"24957:48:22"}]}}]},"documentation":{"id":5388,"nodeType":"StructuredDocumentation","src":"24481:312:22","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5413,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:22","nodeType":"FunctionDefinition","parameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"value","nameLocation":"24823:5:22","nodeType":"VariableDeclaration","scope":5413,"src":"24816:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5389,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:22"},"returnParameters":{"id":5394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5393,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:22","nodeType":"VariableDeclaration","scope":5413,"src":"24853:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5392,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:22"},"scope":5896,"src":"24798:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5438,"nodeType":"Block","src":"25419:150:22","statements":[{"expression":{"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5421,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"25429:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"25449:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5422,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:22","typeDescriptions":{}}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5427,"nodeType":"ExpressionStatement","src":"25429:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5428,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"25469:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"25483:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5437,"nodeType":"IfStatement","src":"25465:98:22","trueBody":{"id":5436,"nodeType":"Block","src":"25490:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"25546:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5431,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"25511:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5435,"nodeType":"RevertStatement","src":"25504:48:22"}]}}]},"documentation":{"id":5414,"nodeType":"StructuredDocumentation","src":"25028:312:22","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5439,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:22","nodeType":"FunctionDefinition","parameters":{"id":5417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"value","nameLocation":"25370:5:22","nodeType":"VariableDeclaration","scope":5439,"src":"25363:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5415,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:22"},"returnParameters":{"id":5420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:22","nodeType":"VariableDeclaration","scope":5439,"src":"25400:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5418,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:22"},"scope":5896,"src":"25345:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5464,"nodeType":"Block","src":"25966:150:22","statements":[{"expression":{"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5447,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"25976:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"25996:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5448,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:22","typeDescriptions":{}}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5453,"nodeType":"ExpressionStatement","src":"25976:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5454,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"26016:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"26030:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5463,"nodeType":"IfStatement","src":"26012:98:22","trueBody":{"id":5462,"nodeType":"Block","src":"26037:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"26093:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5457,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"26058:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5461,"nodeType":"RevertStatement","src":"26051:48:22"}]}}]},"documentation":{"id":5440,"nodeType":"StructuredDocumentation","src":"25575:312:22","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5465,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:22","nodeType":"FunctionDefinition","parameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"value","nameLocation":"25917:5:22","nodeType":"VariableDeclaration","scope":5465,"src":"25910:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5441,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:22"},"returnParameters":{"id":5446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5445,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:22","nodeType":"VariableDeclaration","scope":5465,"src":"25947:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5444,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:22"},"scope":5896,"src":"25892:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5490,"nodeType":"Block","src":"26513:150:22","statements":[{"expression":{"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5473,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"26523:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"26543:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5474,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:22","typeDescriptions":{}}},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5479,"nodeType":"ExpressionStatement","src":"26523:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"26563:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"26577:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5489,"nodeType":"IfStatement","src":"26559:98:22","trueBody":{"id":5488,"nodeType":"Block","src":"26584:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"26640:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5483,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"26605:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5487,"nodeType":"RevertStatement","src":"26598:48:22"}]}}]},"documentation":{"id":5466,"nodeType":"StructuredDocumentation","src":"26122:312:22","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5491,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:22","nodeType":"FunctionDefinition","parameters":{"id":5469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5468,"mutability":"mutable","name":"value","nameLocation":"26464:5:22","nodeType":"VariableDeclaration","scope":5491,"src":"26457:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5467,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:22"},"returnParameters":{"id":5472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5471,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:22","nodeType":"VariableDeclaration","scope":5491,"src":"26494:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5470,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:22"},"scope":5896,"src":"26439:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5516,"nodeType":"Block","src":"27060:150:22","statements":[{"expression":{"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5499,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"27070:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"27090:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5500,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:22","typeDescriptions":{}}},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5505,"nodeType":"ExpressionStatement","src":"27070:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"27110:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"27124:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5515,"nodeType":"IfStatement","src":"27106:98:22","trueBody":{"id":5514,"nodeType":"Block","src":"27131:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"27187:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5509,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"27152:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5513,"nodeType":"RevertStatement","src":"27145:48:22"}]}}]},"documentation":{"id":5492,"nodeType":"StructuredDocumentation","src":"26669:312:22","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5517,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:22","nodeType":"FunctionDefinition","parameters":{"id":5495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"value","nameLocation":"27011:5:22","nodeType":"VariableDeclaration","scope":5517,"src":"27004:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5493,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:22"},"returnParameters":{"id":5498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5497,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:22","nodeType":"VariableDeclaration","scope":5517,"src":"27041:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5496,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:22"},"scope":5896,"src":"26986:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5542,"nodeType":"Block","src":"27607:150:22","statements":[{"expression":{"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5525,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"27617:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"27637:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5526,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:22","typeDescriptions":{}}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5531,"nodeType":"ExpressionStatement","src":"27617:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"27657:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"27671:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5541,"nodeType":"IfStatement","src":"27653:98:22","trueBody":{"id":5540,"nodeType":"Block","src":"27678:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"27734:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5535,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"27699:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5539,"nodeType":"RevertStatement","src":"27692:48:22"}]}}]},"documentation":{"id":5518,"nodeType":"StructuredDocumentation","src":"27216:312:22","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5543,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:22","nodeType":"FunctionDefinition","parameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5520,"mutability":"mutable","name":"value","nameLocation":"27558:5:22","nodeType":"VariableDeclaration","scope":5543,"src":"27551:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5519,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:22"},"returnParameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:22","nodeType":"VariableDeclaration","scope":5543,"src":"27588:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5522,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:22"},"scope":5896,"src":"27533:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5568,"nodeType":"Block","src":"28147:148:22","statements":[{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5551,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"28157:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"28176:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5552,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:22","typeDescriptions":{}}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5557,"nodeType":"ExpressionStatement","src":"28157:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"28196:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"28210:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5567,"nodeType":"IfStatement","src":"28192:97:22","trueBody":{"id":5566,"nodeType":"Block","src":"28217:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"28272:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5561,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"28238:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5565,"nodeType":"RevertStatement","src":"28231:47:22"}]}}]},"documentation":{"id":5544,"nodeType":"StructuredDocumentation","src":"27763:307:22","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5569,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:22","nodeType":"FunctionDefinition","parameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"value","nameLocation":"28099:5:22","nodeType":"VariableDeclaration","scope":5569,"src":"28092:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5545,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:22"},"returnParameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:22","nodeType":"VariableDeclaration","scope":5569,"src":"28129:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5548,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:22"},"scope":5896,"src":"28075:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5594,"nodeType":"Block","src":"28685:148:22","statements":[{"expression":{"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5577,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"28695:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"28714:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5578,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:22","typeDescriptions":{}}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5583,"nodeType":"ExpressionStatement","src":"28695:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"28734:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"28748:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5593,"nodeType":"IfStatement","src":"28730:97:22","trueBody":{"id":5592,"nodeType":"Block","src":"28755:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"28810:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5587,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"28776:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5591,"nodeType":"RevertStatement","src":"28769:47:22"}]}}]},"documentation":{"id":5570,"nodeType":"StructuredDocumentation","src":"28301:307:22","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5595,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:22","nodeType":"FunctionDefinition","parameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"value","nameLocation":"28637:5:22","nodeType":"VariableDeclaration","scope":5595,"src":"28630:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5571,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:22"},"returnParameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:22","nodeType":"VariableDeclaration","scope":5595,"src":"28667:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5574,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:22"},"scope":5896,"src":"28613:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5620,"nodeType":"Block","src":"29223:148:22","statements":[{"expression":{"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5603,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"29233:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"29252:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5604,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:22","typeDescriptions":{}}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5609,"nodeType":"ExpressionStatement","src":"29233:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"29272:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"29286:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5619,"nodeType":"IfStatement","src":"29268:97:22","trueBody":{"id":5618,"nodeType":"Block","src":"29293:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"29348:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5613,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"29314:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5617,"nodeType":"RevertStatement","src":"29307:47:22"}]}}]},"documentation":{"id":5596,"nodeType":"StructuredDocumentation","src":"28839:307:22","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5621,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:22","nodeType":"FunctionDefinition","parameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"value","nameLocation":"29175:5:22","nodeType":"VariableDeclaration","scope":5621,"src":"29168:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5597,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:22"},"returnParameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:22","nodeType":"VariableDeclaration","scope":5621,"src":"29205:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5600,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:22"},"scope":5896,"src":"29151:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5646,"nodeType":"Block","src":"29761:148:22","statements":[{"expression":{"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5629,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"29771:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"29790:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5630,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:22","typeDescriptions":{}}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5635,"nodeType":"ExpressionStatement","src":"29771:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"29810:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"29824:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5645,"nodeType":"IfStatement","src":"29806:97:22","trueBody":{"id":5644,"nodeType":"Block","src":"29831:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"29886:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5639,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"29852:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5643,"nodeType":"RevertStatement","src":"29845:47:22"}]}}]},"documentation":{"id":5622,"nodeType":"StructuredDocumentation","src":"29377:307:22","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5647,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:22","nodeType":"FunctionDefinition","parameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"value","nameLocation":"29713:5:22","nodeType":"VariableDeclaration","scope":5647,"src":"29706:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5623,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:22"},"returnParameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:22","nodeType":"VariableDeclaration","scope":5647,"src":"29743:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5626,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:22"},"scope":5896,"src":"29689:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5672,"nodeType":"Block","src":"30299:148:22","statements":[{"expression":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5655,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"30309:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"30328:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5656,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:22","typeDescriptions":{}}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5661,"nodeType":"ExpressionStatement","src":"30309:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"30348:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"30362:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5671,"nodeType":"IfStatement","src":"30344:97:22","trueBody":{"id":5670,"nodeType":"Block","src":"30369:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"30424:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5665,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"30390:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5669,"nodeType":"RevertStatement","src":"30383:47:22"}]}}]},"documentation":{"id":5648,"nodeType":"StructuredDocumentation","src":"29915:307:22","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5673,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:22","nodeType":"FunctionDefinition","parameters":{"id":5651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5650,"mutability":"mutable","name":"value","nameLocation":"30251:5:22","nodeType":"VariableDeclaration","scope":5673,"src":"30244:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5649,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:22"},"returnParameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5653,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:22","nodeType":"VariableDeclaration","scope":5673,"src":"30281:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5652,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:22"},"scope":5896,"src":"30227:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5698,"nodeType":"Block","src":"30837:148:22","statements":[{"expression":{"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5681,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"30847:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"30866:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5682,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:22","typeDescriptions":{}}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5687,"nodeType":"ExpressionStatement","src":"30847:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5688,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"30886:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"30900:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5697,"nodeType":"IfStatement","src":"30882:97:22","trueBody":{"id":5696,"nodeType":"Block","src":"30907:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"30962:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5691,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"30928:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5695,"nodeType":"RevertStatement","src":"30921:47:22"}]}}]},"documentation":{"id":5674,"nodeType":"StructuredDocumentation","src":"30453:307:22","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5699,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:22","nodeType":"FunctionDefinition","parameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5676,"mutability":"mutable","name":"value","nameLocation":"30789:5:22","nodeType":"VariableDeclaration","scope":5699,"src":"30782:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5675,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:22"},"returnParameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:22","nodeType":"VariableDeclaration","scope":5699,"src":"30819:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5678,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:22"},"scope":5896,"src":"30765:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5724,"nodeType":"Block","src":"31375:148:22","statements":[{"expression":{"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5707,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"31385:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31404:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5708,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:22","typeDescriptions":{}}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5713,"nodeType":"ExpressionStatement","src":"31385:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"31424:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31438:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5723,"nodeType":"IfStatement","src":"31420:97:22","trueBody":{"id":5722,"nodeType":"Block","src":"31445:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31500:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5717,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"31466:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5721,"nodeType":"RevertStatement","src":"31459:47:22"}]}}]},"documentation":{"id":5700,"nodeType":"StructuredDocumentation","src":"30991:307:22","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5725,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:22","nodeType":"FunctionDefinition","parameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5702,"mutability":"mutable","name":"value","nameLocation":"31327:5:22","nodeType":"VariableDeclaration","scope":5725,"src":"31320:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5701,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:22"},"returnParameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:22","nodeType":"VariableDeclaration","scope":5725,"src":"31357:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5704,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:22"},"scope":5896,"src":"31303:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5750,"nodeType":"Block","src":"31913:148:22","statements":[{"expression":{"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5733,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"31923:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"31942:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5734,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:22","typeDescriptions":{}}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5739,"nodeType":"ExpressionStatement","src":"31923:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5740,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"31962:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"31976:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5749,"nodeType":"IfStatement","src":"31958:97:22","trueBody":{"id":5748,"nodeType":"Block","src":"31983:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"32038:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5743,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"32004:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5747,"nodeType":"RevertStatement","src":"31997:47:22"}]}}]},"documentation":{"id":5726,"nodeType":"StructuredDocumentation","src":"31529:307:22","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5751,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:22","nodeType":"FunctionDefinition","parameters":{"id":5729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5728,"mutability":"mutable","name":"value","nameLocation":"31865:5:22","nodeType":"VariableDeclaration","scope":5751,"src":"31858:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5727,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:22"},"returnParameters":{"id":5732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5731,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:22","nodeType":"VariableDeclaration","scope":5751,"src":"31895:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5730,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:22"},"scope":5896,"src":"31841:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5776,"nodeType":"Block","src":"32451:148:22","statements":[{"expression":{"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5759,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"32461:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"32480:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5760,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:22","typeDescriptions":{}}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5765,"nodeType":"ExpressionStatement","src":"32461:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5766,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"32500:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"32514:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5775,"nodeType":"IfStatement","src":"32496:97:22","trueBody":{"id":5774,"nodeType":"Block","src":"32521:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"32576:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5769,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"32542:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5773,"nodeType":"RevertStatement","src":"32535:47:22"}]}}]},"documentation":{"id":5752,"nodeType":"StructuredDocumentation","src":"32067:307:22","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5777,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:22","nodeType":"FunctionDefinition","parameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"value","nameLocation":"32403:5:22","nodeType":"VariableDeclaration","scope":5777,"src":"32396:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5753,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:22"},"returnParameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5757,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:22","nodeType":"VariableDeclaration","scope":5777,"src":"32433:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5756,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:22"},"scope":5896,"src":"32379:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5802,"nodeType":"Block","src":"32989:148:22","statements":[{"expression":{"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5785,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"32999:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"33018:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5786,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:22","typeDescriptions":{}}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5791,"nodeType":"ExpressionStatement","src":"32999:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5792,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"33038:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"33052:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5801,"nodeType":"IfStatement","src":"33034:97:22","trueBody":{"id":5800,"nodeType":"Block","src":"33059:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"33114:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5795,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"33080:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5799,"nodeType":"RevertStatement","src":"33073:47:22"}]}}]},"documentation":{"id":5778,"nodeType":"StructuredDocumentation","src":"32605:307:22","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5803,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:22","nodeType":"FunctionDefinition","parameters":{"id":5781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5780,"mutability":"mutable","name":"value","nameLocation":"32941:5:22","nodeType":"VariableDeclaration","scope":5803,"src":"32934:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5779,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:22"},"returnParameters":{"id":5784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5783,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:22","nodeType":"VariableDeclaration","scope":5803,"src":"32971:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5782,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:22"},"scope":5896,"src":"32917:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5828,"nodeType":"Block","src":"33527:148:22","statements":[{"expression":{"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5811,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"33537:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"33556:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5812,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:22","typeDescriptions":{}}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5817,"nodeType":"ExpressionStatement","src":"33537:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5818,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"33576:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"33590:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5827,"nodeType":"IfStatement","src":"33572:97:22","trueBody":{"id":5826,"nodeType":"Block","src":"33597:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"33652:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5821,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"33618:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5825,"nodeType":"RevertStatement","src":"33611:47:22"}]}}]},"documentation":{"id":5804,"nodeType":"StructuredDocumentation","src":"33143:307:22","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5829,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:22","nodeType":"FunctionDefinition","parameters":{"id":5807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5806,"mutability":"mutable","name":"value","nameLocation":"33479:5:22","nodeType":"VariableDeclaration","scope":5829,"src":"33472:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5805,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:22"},"returnParameters":{"id":5810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5809,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:22","nodeType":"VariableDeclaration","scope":5829,"src":"33509:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5808,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:22"},"scope":5896,"src":"33455:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5854,"nodeType":"Block","src":"34058:146:22","statements":[{"expression":{"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5837,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"34068:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"34086:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5838,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:22","typeDescriptions":{}}},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5843,"nodeType":"ExpressionStatement","src":"34068:24:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"34106:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"34120:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5853,"nodeType":"IfStatement","src":"34102:96:22","trueBody":{"id":5852,"nodeType":"Block","src":"34127:71:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"34181:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5847,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"34148:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5851,"nodeType":"RevertStatement","src":"34141:46:22"}]}}]},"documentation":{"id":5830,"nodeType":"StructuredDocumentation","src":"33681:302:22","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5855,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:22","nodeType":"FunctionDefinition","parameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"value","nameLocation":"34011:5:22","nodeType":"VariableDeclaration","scope":5855,"src":"34004:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5831,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:22"},"returnParameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5835,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:22","nodeType":"VariableDeclaration","scope":5855,"src":"34041:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5834,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:22"},"scope":5896,"src":"33988:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5884,"nodeType":"Block","src":"34444:250:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"34557:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5867,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5866,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:22","memberName":"max","nodeType":"MemberAccess","src":"34573:16:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5864,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:22","typeDescriptions":{}}},"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5878,"nodeType":"IfStatement","src":"34553:105:22","trueBody":{"id":5877,"nodeType":"Block","src":"34592:66:22","statements":[{"errorCall":{"arguments":[{"id":5874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"34641:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5873,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"34613:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5876,"nodeType":"RevertStatement","src":"34606:41:22"}]}},{"expression":{"arguments":[{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"34681:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5879,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:22","typeDescriptions":{}}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5862,"id":5883,"nodeType":"Return","src":"34667:20:22"}]},"documentation":{"id":5856,"nodeType":"StructuredDocumentation","src":"34210:165:22","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5885,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:22","nodeType":"FunctionDefinition","parameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5858,"mutability":"mutable","name":"value","nameLocation":"34406:5:22","nodeType":"VariableDeclaration","scope":5885,"src":"34398:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5857,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:22"},"returnParameters":{"id":5862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5885,"src":"34436:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5860,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:22"},"scope":5896,"src":"34380:314:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5894,"nodeType":"Block","src":"34853:87:22","statements":[{"AST":{"nativeSrc":"34888:46:22","nodeType":"YulBlock","src":"34888:46:22","statements":[{"nativeSrc":"34902:22:22","nodeType":"YulAssignment","src":"34902:22:22","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:22","nodeType":"YulIdentifier","src":"34921:1:22"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:22","nodeType":"YulIdentifier","src":"34914:6:22"},"nativeSrc":"34914:9:22","nodeType":"YulFunctionCall","src":"34914:9:22"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:22","nodeType":"YulIdentifier","src":"34907:6:22"},"nativeSrc":"34907:17:22","nodeType":"YulFunctionCall","src":"34907:17:22"},"variableNames":[{"name":"u","nativeSrc":"34902:1:22","nodeType":"YulIdentifier","src":"34902:1:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5888,"isOffset":false,"isSlot":false,"src":"34921:1:22","valueSize":1},{"declaration":5891,"isOffset":false,"isSlot":false,"src":"34902:1:22","valueSize":1}],"flags":["memory-safe"],"id":5893,"nodeType":"InlineAssembly","src":"34863:71:22"}]},"documentation":{"id":5886,"nodeType":"StructuredDocumentation","src":"34700:90:22","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5895,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:22","nodeType":"FunctionDefinition","parameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"b","nameLocation":"34816:1:22","nodeType":"VariableDeclaration","scope":5895,"src":"34811:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5887,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:22"},"returnParameters":{"id":5892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"u","nameLocation":"34850:1:22","nodeType":"VariableDeclaration","scope":5895,"src":"34842:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5890,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:22"},"scope":5896,"src":"34795:145:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5897,"src":"769:34173:22","usedErrors":[4141,4146,4153,4158],"usedEvents":[]}],"src":"192:34751:22"},"id":22},"contracts/rcc-stake.sol":{"ast":{"absolutePath":"contracts/rcc-stake.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"Address":[2315],"ContextUpgradeable":[844],"ERC165Upgradeable":[1060],"ERC1967Utils":[1558],"Errors":[2337],"IAccessControl":[1143],"IERC1363":[1225],"IERC1822Proxiable":[1264],"IERC20":[1646],"Initializable":[616],"Math":[4131],"Panic":[2389],"PausableUpgradeable":[1020],"RCCStake":[7832],"SafeCast":[5896],"SafeERC20":[2055],"UUPSUpgradeable":[798]},"id":7833,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5898,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5899,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7833,"sourceUnit":1647,"src":"58:56:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":5900,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7833,"sourceUnit":2056,"src":"115:65:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":5901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7833,"sourceUnit":2316,"src":"181:51:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":5902,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7833,"sourceUnit":4132,"src":"233:53:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":5903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7833,"sourceUnit":617,"src":"288:75:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":5904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7833,"sourceUnit":799,"src":"364:77:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":5905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7833,"sourceUnit":363,"src":"442:81:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":5906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7833,"sourceUnit":1021,"src":"524:75:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5907,"name":"Initializable","nameLocations":["918:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"918:13:23"},"id":5908,"nodeType":"InheritanceSpecifier","src":"918:13:23"},{"baseName":{"id":5909,"name":"UUPSUpgradeable","nameLocations":["937:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"937:15:23"},"id":5910,"nodeType":"InheritanceSpecifier","src":"937:15:23"},{"baseName":{"id":5911,"name":"PausableUpgradeable","nameLocations":["958:19:23"],"nodeType":"IdentifierPath","referencedDeclaration":1020,"src":"958:19:23"},"id":5912,"nodeType":"InheritanceSpecifier","src":"958:19:23"},{"baseName":{"id":5913,"name":"AccessControlUpgradeable","nameLocations":["983:24:23"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"983:24:23"},"id":5914,"nodeType":"InheritanceSpecifier","src":"983:24:23"}],"canonicalName":"RCCStake","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7832,"linearizedBaseContracts":[7832,362,1060,2525,1143,1020,844,798,1264,616],"name":"RCCStake","nameLocation":"902:8:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5918,"libraryName":{"id":5915,"name":"SafeERC20","nameLocations":["1020:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":2055,"src":"1020:9:23"},"nodeType":"UsingForDirective","src":"1014:27:23","typeName":{"id":5917,"nodeType":"UserDefinedTypeName","pathNode":{"id":5916,"name":"IERC20","nameLocations":["1034:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"1034:6:23"},"referencedDeclaration":1646,"src":"1034:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}}},{"global":false,"id":5921,"libraryName":{"id":5919,"name":"Address","nameLocations":["1052:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":2315,"src":"1052:7:23"},"nodeType":"UsingForDirective","src":"1046:26:23","typeName":{"id":5920,"name":"address","nodeType":"ElementaryTypeName","src":"1064:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":5924,"libraryName":{"id":5922,"name":"Math","nameLocations":["1083:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":4131,"src":"1083:4:23"},"nodeType":"UsingForDirective","src":"1077:23:23","typeName":{"id":5923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"75b238fc","id":5929,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"1226:10:23","nodeType":"VariableDeclaration","scope":7832,"src":"1202:60:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1202:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"61646d696e5f726f6c65","id":5927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1249:12:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_589d473ba17c0f47d494622893831497bad25919b9afb8e33e9521b8963fccde","typeString":"literal_string \"admin_role\""},"value":"admin_role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_589d473ba17c0f47d494622893831497bad25919b9afb8e33e9521b8963fccde","typeString":"literal_string \"admin_role\""}],"id":5926,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1239:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"b908afa8","id":5934,"mutability":"constant","name":"UPGRADE_ROLE","nameLocation":"1292:12:23","nodeType":"VariableDeclaration","scope":7832,"src":"1268:72:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1268:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"757067726164655f6d616e616765725f726f6c65","id":5932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1317:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f47fc0c09ebbfe308d89b8035681a1164b9882bcfd49eb89861067738a30f5ab","typeString":"literal_string \"upgrade_manager_role\""},"value":"upgrade_manager_role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f47fc0c09ebbfe308d89b8035681a1164b9882bcfd49eb89861067738a30f5ab","typeString":"literal_string \"upgrade_manager_role\""}],"id":5931,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1307:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1307:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"bfc3ebba","id":5937,"mutability":"constant","name":"ETH_PID","nameLocation":"1370:7:23","nodeType":"VariableDeclaration","scope":7832,"src":"1346:35:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1346:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":5936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1380:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"canonicalName":"RCCStake.Pool","id":5952,"members":[{"constant":false,"id":5939,"mutability":"mutable","name":"stakeTokenAddress","nameLocation":"1526:17:23","nodeType":"VariableDeclaration","scope":5952,"src":"1518:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5938,"name":"address","nodeType":"ElementaryTypeName","src":"1518:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5941,"mutability":"mutable","name":"poolWeight","nameLocation":"1593:10:23","nodeType":"VariableDeclaration","scope":5952,"src":"1585:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5943,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"1647:15:23","nodeType":"VariableDeclaration","scope":5952,"src":"1639:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5942,"name":"uint256","nodeType":"ElementaryTypeName","src":"1639:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5945,"mutability":"mutable","name":"accumulateRewardsPerStake","nameLocation":"1721:25:23","nodeType":"VariableDeclaration","scope":5952,"src":"1713:33:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5947,"mutability":"mutable","name":"stakeTokenAmount","nameLocation":"1817:16:23","nodeType":"VariableDeclaration","scope":5952,"src":"1809:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5949,"mutability":"mutable","name":"minDepositAmount","nameLocation":"1882:16:23","nodeType":"VariableDeclaration","scope":5952,"src":"1874:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1874:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5951,"mutability":"mutable","name":"unStakeLockedBlocks","nameLocation":"1942:19:23","nodeType":"VariableDeclaration","scope":5952,"src":"1934:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint256","nodeType":"ElementaryTypeName","src":"1934:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Pool","nameLocation":"1503:4:23","nodeType":"StructDefinition","scope":7832,"src":"1496:510:23","visibility":"public"},{"canonicalName":"RCCStake.UnStakeRequest","id":5957,"members":[{"constant":false,"id":5954,"mutability":"mutable","name":"amount","nameLocation":"2086:6:23","nodeType":"VariableDeclaration","scope":5957,"src":"2078:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5953,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5956,"mutability":"mutable","name":"unlockBlocksCounts","nameLocation":"2238:18:23","nodeType":"VariableDeclaration","scope":5957,"src":"2230:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5955,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UnStakeRequest","nameLocation":"2018:14:23","nodeType":"StructDefinition","scope":7832,"src":"2011:252:23","visibility":"public"},{"canonicalName":"RCCStake.User","id":5968,"members":[{"constant":false,"id":5959,"mutability":"mutable","name":"stakeAmount","nameLocation":"2298:11:23","nodeType":"VariableDeclaration","scope":5968,"src":"2290:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5958,"name":"uint256","nodeType":"ElementaryTypeName","src":"2290:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5961,"mutability":"mutable","name":"finishedRewards","nameLocation":"2327:15:23","nodeType":"VariableDeclaration","scope":5968,"src":"2319:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5963,"mutability":"mutable","name":"pendingRewards","nameLocation":"2360:14:23","nodeType":"VariableDeclaration","scope":5968,"src":"2352:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5962,"name":"uint256","nodeType":"ElementaryTypeName","src":"2352:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5967,"mutability":"mutable","name":"requests","nameLocation":"2401:8:23","nodeType":"VariableDeclaration","scope":5968,"src":"2384:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage_ptr","typeString":"struct RCCStake.UnStakeRequest[]"},"typeName":{"baseType":{"id":5965,"nodeType":"UserDefinedTypeName","pathNode":{"id":5964,"name":"UnStakeRequest","nameLocations":["2384:14:23"],"nodeType":"IdentifierPath","referencedDeclaration":5957,"src":"2384:14:23"},"referencedDeclaration":5957,"src":"2384:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$5957_storage_ptr","typeString":"struct RCCStake.UnStakeRequest"}},"id":5966,"nodeType":"ArrayTypeName","src":"2384:16:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage_ptr","typeString":"struct RCCStake.UnStakeRequest[]"}},"visibility":"internal"}],"name":"User","nameLocation":"2275:4:23","nodeType":"StructDefinition","scope":7832,"src":"2268:148:23","visibility":"public"},{"constant":false,"functionSelector":"48cd4cb1","id":5970,"mutability":"mutable","name":"startBlock","nameLocation":"2587:10:23","nodeType":"VariableDeclaration","scope":7832,"src":"2572:25:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2572:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"083c6323","id":5972,"mutability":"mutable","name":"endBlock","nameLocation":"2665:8:23","nodeType":"VariableDeclaration","scope":7832,"src":"2650:23:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5971,"name":"uint256","nodeType":"ElementaryTypeName","src":"2650:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"70ff0173","id":5974,"mutability":"mutable","name":"rccPerBlock","nameLocation":"2728:11:23","nodeType":"VariableDeclaration","scope":7832,"src":"2713:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2713:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2f3ffb9f","id":5976,"mutability":"mutable","name":"withdrawPaused","nameLocation":"2792:14:23","nodeType":"VariableDeclaration","scope":7832,"src":"2780:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5975,"name":"bool","nodeType":"ElementaryTypeName","src":"2780:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"ab5e124a","id":5978,"mutability":"mutable","name":"claimPaused","nameLocation":"2856:11:23","nodeType":"VariableDeclaration","scope":7832,"src":"2844:23:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5977,"name":"bool","nodeType":"ElementaryTypeName","src":"2844:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"a72d5bf4","id":5981,"mutability":"mutable","name":"RCC","nameLocation":"2904:3:23","nodeType":"VariableDeclaration","scope":7832,"src":"2890:17:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},"typeName":{"id":5980,"nodeType":"UserDefinedTypeName","pathNode":{"id":5979,"name":"IERC20","nameLocations":["2890:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"2890:6:23"},"referencedDeclaration":1646,"src":"2890:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"02559004","id":5983,"mutability":"mutable","name":"totalPoolWeight","nameLocation":"2980:15:23","nodeType":"VariableDeclaration","scope":7832,"src":"2965:30:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2965:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"fe313112","id":5987,"mutability":"mutable","name":"pool","nameLocation":"3016:4:23","nodeType":"VariableDeclaration","scope":7832,"src":"3002:18:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool[]"},"typeName":{"baseType":{"id":5985,"nodeType":"UserDefinedTypeName","pathNode":{"id":5984,"name":"Pool","nameLocations":["3002:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5952,"src":"3002:4:23"},"referencedDeclaration":5952,"src":"3002:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"}},"id":5986,"nodeType":"ArrayTypeName","src":"3002:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage_ptr","typeString":"struct RCCStake.Pool[]"}},"visibility":"public"},{"constant":false,"functionSelector":"a87430ba","id":5992,"mutability":"mutable","name":"users","nameLocation":"3076:5:23","nodeType":"VariableDeclaration","scope":7832,"src":"3044:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$5968_storage_$","typeString":"mapping(address => struct RCCStake.User)"},"typeName":{"id":5991,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5988,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3044:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$5968_storage_$","typeString":"mapping(address => struct RCCStake.User)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5990,"nodeType":"UserDefinedTypeName","pathNode":{"id":5989,"name":"User","nameLocations":["3063:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5968,"src":"3063:4:23"},"referencedDeclaration":5968,"src":"3063:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"}}},"visibility":"public"},{"constant":false,"functionSelector":"a17bff83","id":5994,"mutability":"mutable","name":"unstakeReleaseBlocks","nameLocation":"3156:20:23","nodeType":"VariableDeclaration","scope":7832,"src":"3141:35:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5993,"name":"uint256","nodeType":"ElementaryTypeName","src":"3141:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"23b6443e","id":5997,"mutability":"mutable","name":"stToken","nameLocation":"3197:7:23","nodeType":"VariableDeclaration","scope":7832,"src":"3183:21:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},"typeName":{"id":5996,"nodeType":"UserDefinedTypeName","pathNode":{"id":5995,"name":"IERC20","nameLocations":["3183:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"3183:6:23"},"referencedDeclaration":1646,"src":"3183:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"ac4afa38","id":6001,"mutability":"mutable","name":"pools","nameLocation":"3224:5:23","nodeType":"VariableDeclaration","scope":7832,"src":"3210:19:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool[]"},"typeName":{"baseType":{"id":5999,"nodeType":"UserDefinedTypeName","pathNode":{"id":5998,"name":"Pool","nameLocations":["3210:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5952,"src":"3210:4:23"},"referencedDeclaration":5952,"src":"3210:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"}},"id":6000,"nodeType":"ArrayTypeName","src":"3210:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage_ptr","typeString":"struct RCCStake.Pool[]"}},"visibility":"public"},{"constant":false,"functionSelector":"37849b3c","id":6008,"mutability":"mutable","name":"user","nameLocation":"3331:4:23","nodeType":"VariableDeclaration","scope":7832,"src":"3279:56:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$5968_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStake.User))"},"typeName":{"id":6007,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3287:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3279:44:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$5968_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStake.User))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6006,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6003,"name":"address","nodeType":"ElementaryTypeName","src":"3306:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3298:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$5968_storage_$","typeString":"mapping(address => struct RCCStake.User)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6005,"nodeType":"UserDefinedTypeName","pathNode":{"id":6004,"name":"User","nameLocations":["3317:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5968,"src":"3317:4:23"},"referencedDeclaration":5968,"src":"3317:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"153aae53b92218044bd5f43922617c6b253e50ac98a41b44c3acb5625ded3488","id":6013,"name":"SetRCC","nameLocation":"3439:6:23","nodeType":"EventDefinition","parameters":{"id":6012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6011,"indexed":true,"mutability":"mutable","name":"RCC","nameLocation":"3461:3:23","nodeType":"VariableDeclaration","scope":6013,"src":"3446:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},"typeName":{"id":6010,"nodeType":"UserDefinedTypeName","pathNode":{"id":6009,"name":"IERC20","nameLocations":["3446:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"3446:6:23"},"referencedDeclaration":1646,"src":"3446:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"3445:20:23"},"src":"3433:33:23"},{"anonymous":false,"eventSelector":"2523dfdafa00190f21a4cbd0c25179c8dd3cb34a6c17fea952ecca8fa8332c0e","id":6015,"name":"PausedWithdraw","nameLocation":"3477:14:23","nodeType":"EventDefinition","parameters":{"id":6014,"nodeType":"ParameterList","parameters":[],"src":"3491:2:23"},"src":"3471:23:23"},{"anonymous":false,"eventSelector":"027c975733baceca09666fae356a901e083676848aaf9710150079385daae743","id":6017,"name":"UnpausedWithdraw","nameLocation":"3505:16:23","nodeType":"EventDefinition","parameters":{"id":6016,"nodeType":"ParameterList","parameters":[],"src":"3521:2:23"},"src":"3499:25:23"},{"anonymous":false,"eventSelector":"443bf540e8151617cd5c39a681cc35a5a22be078b6f0cf16e5bd822b4c4b61ff","id":6019,"name":"PausedClaim","nameLocation":"3535:11:23","nodeType":"EventDefinition","parameters":{"id":6018,"nodeType":"ParameterList","parameters":[],"src":"3546:2:23"},"src":"3529:20:23"},{"anonymous":false,"eventSelector":"07c8faf23a72a53eb5c2c466dc81386a58b2a27d0cc3c7c580a3c12e372ba313","id":6021,"name":"UnpausedClaim","nameLocation":"3560:13:23","nodeType":"EventDefinition","parameters":{"id":6020,"nodeType":"ParameterList","parameters":[],"src":"3573:2:23"},"src":"3554:22:23"},{"anonymous":false,"eventSelector":"63b90b79f11a0f132bcb2c4a4ddd44abda45c1308a83b2919318df7f5f8b7be4","id":6025,"name":"SetStartBlock","nameLocation":"3587:13:23","nodeType":"EventDefinition","parameters":{"id":6024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6023,"indexed":true,"mutability":"mutable","name":"startBlock","nameLocation":"3617:10:23","nodeType":"VariableDeclaration","scope":6025,"src":"3601:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6022,"name":"uint256","nodeType":"ElementaryTypeName","src":"3601:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3600:28:23"},"src":"3581:48:23"},{"anonymous":false,"eventSelector":"1132c5baccb51da3d049fabc819697dc845fa224ad59d9b555507d6446b40850","id":6029,"name":"SetEndBlock","nameLocation":"3640:11:23","nodeType":"EventDefinition","parameters":{"id":6028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6027,"indexed":true,"mutability":"mutable","name":"endBlock","nameLocation":"3668:8:23","nodeType":"VariableDeclaration","scope":6029,"src":"3652:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6026,"name":"uint256","nodeType":"ElementaryTypeName","src":"3652:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3651:26:23"},"src":"3634:44:23"},{"anonymous":false,"eventSelector":"4c70925b625536dd633f6bd2d615c67fddc2e7c63c31164047a981a0df3fee54","id":6033,"name":"SetRCCPerBlock","nameLocation":"3689:14:23","nodeType":"EventDefinition","parameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"indexed":true,"mutability":"mutable","name":"rccPerBlock","nameLocation":"3720:11:23","nodeType":"VariableDeclaration","scope":6033,"src":"3704:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6030,"name":"uint256","nodeType":"ElementaryTypeName","src":"3704:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3703:29:23"},"src":"3683:50:23"},{"anonymous":false,"eventSelector":"0fa296fce13e7a0e622b3a892e66220c248337289483a3cfa4130cde0caa1346","id":6045,"name":"AddPool","nameLocation":"3744:7:23","nodeType":"EventDefinition","parameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6035,"indexed":true,"mutability":"mutable","name":"stakeTokenAddress","nameLocation":"3777:17:23","nodeType":"VariableDeclaration","scope":6045,"src":"3761:33:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6034,"name":"address","nodeType":"ElementaryTypeName","src":"3761:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6037,"indexed":true,"mutability":"mutable","name":"poolWeight","nameLocation":"3820:10:23","nodeType":"VariableDeclaration","scope":6045,"src":"3804:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6036,"name":"uint256","nodeType":"ElementaryTypeName","src":"3804:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6039,"indexed":true,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"3856:15:23","nodeType":"VariableDeclaration","scope":6045,"src":"3840:31:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6038,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6041,"indexed":false,"mutability":"mutable","name":"minDepositAmount","nameLocation":"3889:16:23","nodeType":"VariableDeclaration","scope":6045,"src":"3881:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6040,"name":"uint256","nodeType":"ElementaryTypeName","src":"3881:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6043,"indexed":false,"mutability":"mutable","name":"unStakeLockedBlocks","nameLocation":"3923:19:23","nodeType":"VariableDeclaration","scope":6045,"src":"3915:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6042,"name":"uint256","nodeType":"ElementaryTypeName","src":"3915:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3751:197:23"},"src":"3738:211:23"},{"anonymous":false,"eventSelector":"30dffdedaa3e3b4849298233f7cd71d229956e875ab09270498c96b7cf9181fd","id":6053,"name":"UpdatePoolInfo","nameLocation":"4026:14:23","nodeType":"EventDefinition","parameters":{"id":6052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6047,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"4066:6:23","nodeType":"VariableDeclaration","scope":6053,"src":"4050:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6046,"name":"uint256","nodeType":"ElementaryTypeName","src":"4050:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6049,"indexed":true,"mutability":"mutable","name":"minDepositAmount","nameLocation":"4098:16:23","nodeType":"VariableDeclaration","scope":6053,"src":"4082:32:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6048,"name":"uint256","nodeType":"ElementaryTypeName","src":"4082:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6051,"indexed":true,"mutability":"mutable","name":"unStakeLockedBlocks","nameLocation":"4140:19:23","nodeType":"VariableDeclaration","scope":6053,"src":"4124:35:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6050,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4040:125:23"},"src":"4020:146:23"},{"anonymous":false,"eventSelector":"4b8fa3d6a87cb21d1bf4978bf60628ae358a28ac7f39de1751a481c6dd957617","id":6061,"name":"SetPoolWeight","nameLocation":"4177:13:23","nodeType":"EventDefinition","parameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6055,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"4216:6:23","nodeType":"VariableDeclaration","scope":6061,"src":"4200:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6054,"name":"uint256","nodeType":"ElementaryTypeName","src":"4200:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6057,"indexed":false,"mutability":"mutable","name":"poolWeight","nameLocation":"4240:10:23","nodeType":"VariableDeclaration","scope":6061,"src":"4232:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6056,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6059,"indexed":false,"mutability":"mutable","name":"totalPoolWeight","nameLocation":"4268:15:23","nodeType":"VariableDeclaration","scope":6061,"src":"4260:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6058,"name":"uint256","nodeType":"ElementaryTypeName","src":"4260:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4190:99:23"},"src":"4171:119:23"},{"anonymous":false,"eventSelector":"f5d2d72d9b25d6853afd7d0554a113b705234b6a68bb36b7f143662994632411","id":6069,"name":"UpdatePool","nameLocation":"4301:10:23","nodeType":"EventDefinition","parameters":{"id":6068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6063,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"4337:6:23","nodeType":"VariableDeclaration","scope":6069,"src":"4321:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6062,"name":"uint256","nodeType":"ElementaryTypeName","src":"4321:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6065,"indexed":true,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"4369:15:23","nodeType":"VariableDeclaration","scope":6069,"src":"4353:31:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6064,"name":"uint256","nodeType":"ElementaryTypeName","src":"4353:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6067,"indexed":false,"mutability":"mutable","name":"totalRCC","nameLocation":"4402:8:23","nodeType":"VariableDeclaration","scope":6069,"src":"4394:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6066,"name":"uint256","nodeType":"ElementaryTypeName","src":"4394:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4311:105:23"},"src":"4295:122:23"},{"anonymous":false,"eventSelector":"90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15","id":6077,"name":"Deposit","nameLocation":"4428:7:23","nodeType":"EventDefinition","parameters":{"id":6076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4452:4:23","nodeType":"VariableDeclaration","scope":6077,"src":"4436:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6070,"name":"address","nodeType":"ElementaryTypeName","src":"4436:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6073,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"4474:6:23","nodeType":"VariableDeclaration","scope":6077,"src":"4458:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6072,"name":"uint256","nodeType":"ElementaryTypeName","src":"4458:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6075,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4490:6:23","nodeType":"VariableDeclaration","scope":6077,"src":"4482:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6074,"name":"uint256","nodeType":"ElementaryTypeName","src":"4482:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4435:62:23"},"src":"4422:76:23"},{"anonymous":false,"eventSelector":"c80277265097707f6f12a4ac4c09d46c9926e2eea2536f63616cb04d9fcad7d6","id":6085,"name":"RequestUnstake","nameLocation":"4509:14:23","nodeType":"EventDefinition","parameters":{"id":6084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6079,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4549:4:23","nodeType":"VariableDeclaration","scope":6085,"src":"4533:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6078,"name":"address","nodeType":"ElementaryTypeName","src":"4533:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6081,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"4579:6:23","nodeType":"VariableDeclaration","scope":6085,"src":"4563:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6080,"name":"uint256","nodeType":"ElementaryTypeName","src":"4563:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6083,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4603:6:23","nodeType":"VariableDeclaration","scope":6085,"src":"4595:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6082,"name":"uint256","nodeType":"ElementaryTypeName","src":"4595:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4523:92:23"},"src":"4503:113:23"},{"anonymous":false,"eventSelector":"02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca94","id":6095,"name":"Withdraw","nameLocation":"4627:8:23","nodeType":"EventDefinition","parameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4661:4:23","nodeType":"VariableDeclaration","scope":6095,"src":"4645:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6086,"name":"address","nodeType":"ElementaryTypeName","src":"4645:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6089,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"4691:6:23","nodeType":"VariableDeclaration","scope":6095,"src":"4675:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6088,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6091,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4715:6:23","nodeType":"VariableDeclaration","scope":6095,"src":"4707:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6090,"name":"uint256","nodeType":"ElementaryTypeName","src":"4707:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6093,"indexed":true,"mutability":"mutable","name":"blockNumber","nameLocation":"4747:11:23","nodeType":"VariableDeclaration","scope":6095,"src":"4731:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6092,"name":"uint256","nodeType":"ElementaryTypeName","src":"4731:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4635:129:23"},"src":"4621:144:23"},{"anonymous":false,"eventSelector":"34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7","id":6103,"name":"Claim","nameLocation":"4776:5:23","nodeType":"EventDefinition","parameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4807:4:23","nodeType":"VariableDeclaration","scope":6103,"src":"4791:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6096,"name":"address","nodeType":"ElementaryTypeName","src":"4791:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6099,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"4837:6:23","nodeType":"VariableDeclaration","scope":6103,"src":"4821:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6098,"name":"uint256","nodeType":"ElementaryTypeName","src":"4821:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6101,"indexed":false,"mutability":"mutable","name":"RccReward","nameLocation":"4861:9:23","nodeType":"VariableDeclaration","scope":6103,"src":"4853:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6100,"name":"uint256","nodeType":"ElementaryTypeName","src":"4853:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4781:95:23"},"src":"4770:107:23"},{"anonymous":false,"eventSelector":"99039fcf0a98f484616c5196ee8b2ecfa971babf0b519848289ea4db381f85f7","id":6111,"name":"Stake","nameLocation":"4889:5:23","nodeType":"EventDefinition","parameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4911:4:23","nodeType":"VariableDeclaration","scope":6111,"src":"4895:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6104,"name":"address","nodeType":"ElementaryTypeName","src":"4895:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6107,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"4933:3:23","nodeType":"VariableDeclaration","scope":6111,"src":"4917:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6106,"name":"address","nodeType":"ElementaryTypeName","src":"4917:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6109,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4946:6:23","nodeType":"VariableDeclaration","scope":6111,"src":"4938:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6108,"name":"uint256","nodeType":"ElementaryTypeName","src":"4938:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4894:59:23"},"src":"4883:71:23"},{"anonymous":false,"eventSelector":"cf268deaafc5a69317ec5abde2ac50c6e40212c584c1857c9868834999da957e","id":6119,"name":"UnStake","nameLocation":"4965:7:23","nodeType":"EventDefinition","parameters":{"id":6118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6113,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4989:4:23","nodeType":"VariableDeclaration","scope":6119,"src":"4973:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6112,"name":"address","nodeType":"ElementaryTypeName","src":"4973:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6115,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"5011:3:23","nodeType":"VariableDeclaration","scope":6119,"src":"4995:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6114,"name":"address","nodeType":"ElementaryTypeName","src":"4995:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6117,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"5024:6:23","nodeType":"VariableDeclaration","scope":6119,"src":"5016:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6116,"name":"uint256","nodeType":"ElementaryTypeName","src":"5016:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4972:59:23"},"src":"4959:73:23"},{"anonymous":false,"eventSelector":"f4cd80bada09ad3706c6e126e20868618cc5d21d580e515903ba8a807c86af22","id":6127,"name":"GetRewards","nameLocation":"5043:10:23","nodeType":"EventDefinition","parameters":{"id":6126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5070:4:23","nodeType":"VariableDeclaration","scope":6127,"src":"5054:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6120,"name":"address","nodeType":"ElementaryTypeName","src":"5054:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6123,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"5092:3:23","nodeType":"VariableDeclaration","scope":6127,"src":"5076:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6122,"name":"address","nodeType":"ElementaryTypeName","src":"5076:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6125,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"5105:6:23","nodeType":"VariableDeclaration","scope":6127,"src":"5097:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6124,"name":"uint256","nodeType":"ElementaryTypeName","src":"5097:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5053:59:23"},"src":"5037:76:23"},{"body":{"id":6140,"nodeType":"Block","src":"5246:70:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6132,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"5264:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6133,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"5271:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5276:6:23","memberName":"length","nodeType":"MemberAccess","src":"5271:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5264:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420706964","id":6136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5284:13:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9","typeString":"literal_string \"invalid pid\""},"value":"invalid pid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9","typeString":"literal_string \"invalid pid\""}],"id":6131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5256:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5256:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6138,"nodeType":"ExpressionStatement","src":"5256:42:23"},{"id":6139,"nodeType":"PlaceholderStatement","src":"5308:1:23"}]},"id":6141,"name":"checkPid","nameLocation":"5223:8:23","nodeType":"ModifierDefinition","parameters":{"id":6130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"_pid","nameLocation":"5240:4:23","nodeType":"VariableDeclaration","scope":6141,"src":"5232:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5232:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5231:14:23"},"src":"5214:102:23","virtual":false,"visibility":"internal"},{"body":{"id":6150,"nodeType":"Block","src":"5351:68:23","statements":[{"expression":{"arguments":[{"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5369:12:23","subExpression":{"id":6144,"name":"claimPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"5370:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636c61696d20697320706175736564","id":6146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5383:17:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa","typeString":"literal_string \"claim is paused\""},"value":"claim is paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa","typeString":"literal_string \"claim is paused\""}],"id":6143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5361:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6148,"nodeType":"ExpressionStatement","src":"5361:40:23"},{"id":6149,"nodeType":"PlaceholderStatement","src":"5411:1:23"}]},"id":6151,"name":"whenNotClaimPaused","nameLocation":"5330:18:23","nodeType":"ModifierDefinition","parameters":{"id":6142,"nodeType":"ParameterList","parameters":[],"src":"5348:2:23"},"src":"5321:98:23","virtual":false,"visibility":"internal"},{"body":{"id":6160,"nodeType":"Block","src":"5457:74:23","statements":[{"expression":{"arguments":[{"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5475:15:23","subExpression":{"id":6154,"name":"withdrawPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"5476:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"776974686472617720697320706175736564","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5492:20:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0","typeString":"literal_string \"withdraw is paused\""},"value":"withdraw is paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0","typeString":"literal_string \"withdraw is paused\""}],"id":6153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5467:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5467:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6158,"nodeType":"ExpressionStatement","src":"5467:46:23"},{"id":6159,"nodeType":"PlaceholderStatement","src":"5523:1:23"}]},"id":6161,"name":"whenNotWithdrawPaused","nameLocation":"5433:21:23","nodeType":"ModifierDefinition","parameters":{"id":6152,"nodeType":"ParameterList","parameters":[],"src":"5454:2:23"},"src":"5424:107:23","virtual":false,"visibility":"internal"},{"body":{"id":6230,"nodeType":"Block","src":"5969:596:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6177,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"6000:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6178,"name":"_endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"6015:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6000:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"737461727420626c6f636b206d757374206265206c657373207468616e20656e6420626c6f636b","id":6180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6038:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347","typeString":"literal_string \"start block must be less than end block\""},"value":"start block must be less than end block"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347","typeString":"literal_string \"start block must be less than end block\""}],"id":6176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5979:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5979:110:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6182,"nodeType":"ExpressionStatement","src":"5979:110:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6184,"name":"_rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"6107:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6122:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6107:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7263632070657220626c6f636b206d7573742062652067726561746572207468616e2030","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6125:38:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4","typeString":"literal_string \"rcc per block must be greater than 0\""},"value":"rcc per block must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4","typeString":"literal_string \"rcc per block must be greater than 0\""}],"id":6183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6099:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:65:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6189,"nodeType":"ExpressionStatement","src":"6099:65:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6190,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"6237:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6237:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6192,"nodeType":"ExpressionStatement","src":"6237:22:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6193,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"6269:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6269:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6195,"nodeType":"ExpressionStatement","src":"6269:24:23"},{"expression":{"arguments":[{"id":6197,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"6314:18:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6334:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6338:6:23","memberName":"sender","nodeType":"MemberAccess","src":"6334:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6196,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6303:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6303:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6201,"nodeType":"ExpressionStatement","src":"6303:42:23"},{"expression":{"arguments":[{"id":6203,"name":"UPGRADE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"6366:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6204,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6380:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6384:6:23","memberName":"sender","nodeType":"MemberAccess","src":"6380:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6202,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6355:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6355:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6207,"nodeType":"ExpressionStatement","src":"6355:36:23"},{"expression":{"arguments":[{"id":6209,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"6412:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6210,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6424:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6428:6:23","memberName":"sender","nodeType":"MemberAccess","src":"6424:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6208,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6401:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6401:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6213,"nodeType":"ExpressionStatement","src":"6401:34:23"},{"expression":{"arguments":[{"id":6215,"name":"_RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"6453:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}],"id":6214,"name":"setRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"6446:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$returns$__$","typeString":"function (contract IERC20)"}},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6446:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6217,"nodeType":"ExpressionStatement","src":"6446:12:23"},{"expression":{"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6218,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"6468:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6219,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"6481:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6468:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6221,"nodeType":"ExpressionStatement","src":"6468:24:23"},{"expression":{"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6222,"name":"endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"6502:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6223,"name":"_endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"6513:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6502:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6225,"nodeType":"ExpressionStatement","src":"6502:20:23"},{"expression":{"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6226,"name":"rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"6532:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6227,"name":"_rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"6546:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6532:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6229,"nodeType":"ExpressionStatement","src":"6532:26:23"}]},"documentation":{"id":6162,"nodeType":"StructuredDocumentation","src":"5632:179:23","text":" @notice Set RCC token address. Set basic info when deploying.\n - 执行初始化动作\n - 设置角色权限\n - 设置代币奖励相关信息"},"functionSelector":"4ec81af1","id":6231,"implemented":true,"kind":"function","modifiers":[{"id":6174,"kind":"modifierInvocation","modifierName":{"id":6173,"name":"initializer","nameLocations":["5957:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":470,"src":"5957:11:23"},"nodeType":"ModifierInvocation","src":"5957:11:23"}],"name":"initialize","nameLocation":"5826:10:23","nodeType":"FunctionDefinition","parameters":{"id":6172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"_RCC","nameLocation":"5853:4:23","nodeType":"VariableDeclaration","scope":6231,"src":"5846:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},"typeName":{"id":6164,"nodeType":"UserDefinedTypeName","pathNode":{"id":6163,"name":"IERC20","nameLocations":["5846:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"5846:6:23"},"referencedDeclaration":1646,"src":"5846:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6167,"mutability":"mutable","name":"_startBlock","nameLocation":"5875:11:23","nodeType":"VariableDeclaration","scope":6231,"src":"5867:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6166,"name":"uint256","nodeType":"ElementaryTypeName","src":"5867:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6169,"mutability":"mutable","name":"_endBlock","nameLocation":"5904:9:23","nodeType":"VariableDeclaration","scope":6231,"src":"5896:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5896:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6171,"mutability":"mutable","name":"_rccPerBlock","nameLocation":"5931:12:23","nodeType":"VariableDeclaration","scope":6231,"src":"5923:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6170,"name":"uint256","nodeType":"ElementaryTypeName","src":"5923:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5836:113:23"},"returnParameters":{"id":6175,"nodeType":"ParameterList","parameters":[],"src":"5969:0:23"},"scope":7832,"src":"5817:748:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[752],"body":{"id":6240,"nodeType":"Block","src":"6754:2:23","statements":[]},"id":6241,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6237,"name":"UPGRADE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"6740:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6238,"kind":"modifierInvocation","modifierName":{"id":6236,"name":"onlyRole","nameLocations":["6731:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"6731:8:23"},"nodeType":"ModifierInvocation","src":"6731:22:23"}],"name":"_authorizeUpgrade","nameLocation":"6654:17:23","nodeType":"FunctionDefinition","overrides":{"id":6235,"nodeType":"OverrideSpecifier","overrides":[],"src":"6722:8:23"},"parameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"newImplementation","nameLocation":"6689:17:23","nodeType":"VariableDeclaration","scope":6241,"src":"6681:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6232,"name":"address","nodeType":"ElementaryTypeName","src":"6681:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6671:41:23"},"returnParameters":{"id":6239,"nodeType":"ParameterList","parameters":[],"src":"6754:0:23"},"scope":7832,"src":"6645:111:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6259,"nodeType":"Block","src":"7003:53:23","statements":[{"expression":{"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6251,"name":"RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"7013:3:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6252,"name":"_RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"7019:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"src":"7013:10:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"id":6254,"nodeType":"ExpressionStatement","src":"7013:10:23"},{"eventCall":{"arguments":[{"id":6256,"name":"RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"7045:3:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}],"id":6255,"name":"SetRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"7038:6:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IERC20_$1646_$returns$__$","typeString":"function (contract IERC20)"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7038:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6258,"nodeType":"EmitStatement","src":"7033:16:23"}]},"documentation":{"id":6242,"nodeType":"StructuredDocumentation","src":"6863:77:23","text":" @notice Set RCC token address. Can only be called by admin"},"functionSelector":"f5485d32","id":6260,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6248,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"6991:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6249,"kind":"modifierInvocation","modifierName":{"id":6247,"name":"onlyRole","nameLocations":["6982:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"6982:8:23"},"nodeType":"ModifierInvocation","src":"6982:20:23"}],"name":"setRCC","nameLocation":"6955:6:23","nodeType":"FunctionDefinition","parameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6245,"mutability":"mutable","name":"_RCC","nameLocation":"6969:4:23","nodeType":"VariableDeclaration","scope":6260,"src":"6962:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"},"typeName":{"id":6244,"nodeType":"UserDefinedTypeName","pathNode":{"id":6243,"name":"IERC20","nameLocations":["6962:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"6962:6:23"},"referencedDeclaration":1646,"src":"6962:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"6961:13:23"},"returnParameters":{"id":6250,"nodeType":"ParameterList","parameters":[],"src":"7003:0:23"},"scope":7832,"src":"6946:110:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6279,"nodeType":"Block","src":"7191:140:23","statements":[{"expression":{"arguments":[{"id":6268,"name":"withdrawPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"7209:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"77697468647261772068617320616c7265616479206265656e20756e706175736564","id":6269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7225:36:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81","typeString":"literal_string \"withdraw has already been unpaused\""},"value":"withdraw has already been unpaused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81","typeString":"literal_string \"withdraw has already been unpaused\""}],"id":6267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7201:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:61:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6271,"nodeType":"ExpressionStatement","src":"7201:61:23"},{"expression":{"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6272,"name":"withdrawPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"7272:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7289:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7272:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6275,"nodeType":"ExpressionStatement","src":"7272:21:23"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6276,"name":"PausedWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"7308:14:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7308:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6278,"nodeType":"EmitStatement","src":"7303:21:23"}]},"documentation":{"id":6261,"nodeType":"StructuredDocumentation","src":"7062:71:23","text":" @notice Pause withdraw. Can only be called by admin."},"functionSelector":"6155e3de","id":6280,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6264,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"7179:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6265,"kind":"modifierInvocation","modifierName":{"id":6263,"name":"onlyRole","nameLocations":["7170:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"7170:8:23"},"nodeType":"ModifierInvocation","src":"7170:20:23"}],"name":"pauseWithdraw","nameLocation":"7147:13:23","nodeType":"FunctionDefinition","parameters":{"id":6262,"nodeType":"ParameterList","parameters":[],"src":"7160:2:23"},"returnParameters":{"id":6266,"nodeType":"ParameterList","parameters":[],"src":"7191:0:23"},"scope":7832,"src":"7138:193:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6300,"nodeType":"Block","src":"7471:142:23","statements":[{"expression":{"arguments":[{"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7489:15:23","subExpression":{"id":6288,"name":"withdrawPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"7490:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"77697468647261772068617320616c7265616479206265656e20706175736564","id":6290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7506:34:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d","typeString":"literal_string \"withdraw has already been paused\""},"value":"withdraw has already been paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d","typeString":"literal_string \"withdraw has already been paused\""}],"id":6287,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7481:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:60:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6292,"nodeType":"ExpressionStatement","src":"7481:60:23"},{"expression":{"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6293,"name":"withdrawPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"7551:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7568:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7551:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6296,"nodeType":"ExpressionStatement","src":"7551:22:23"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6297,"name":"UnpausedWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"7588:16:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7588:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6299,"nodeType":"EmitStatement","src":"7583:23:23"}]},"documentation":{"id":6281,"nodeType":"StructuredDocumentation","src":"7337:73:23","text":" @notice Unpause withdraw. Can only be called by admin."},"functionSelector":"c397920e","id":6301,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6284,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"7459:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6285,"kind":"modifierInvocation","modifierName":{"id":6283,"name":"onlyRole","nameLocations":["7450:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"7450:8:23"},"nodeType":"ModifierInvocation","src":"7450:20:23"}],"name":"unpPauseWithdraw","nameLocation":"7424:16:23","nodeType":"FunctionDefinition","parameters":{"id":6282,"nodeType":"ParameterList","parameters":[],"src":"7440:2:23"},"returnParameters":{"id":6286,"nodeType":"ParameterList","parameters":[],"src":"7471:0:23"},"scope":7832,"src":"7415:198:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6321,"nodeType":"Block","src":"7742:129:23","statements":[{"expression":{"arguments":[{"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7760:12:23","subExpression":{"id":6309,"name":"claimPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"7761:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636c61696d2068617320616c7265616479206265656e20756e706175736564","id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7774:33:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9","typeString":"literal_string \"claim has already been unpaused\""},"value":"claim has already been unpaused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9","typeString":"literal_string \"claim has already been unpaused\""}],"id":6308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7752:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7752:56:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6313,"nodeType":"ExpressionStatement","src":"7752:56:23"},{"expression":{"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6314,"name":"claimPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"7818:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7832:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7818:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6317,"nodeType":"ExpressionStatement","src":"7818:18:23"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6318,"name":"PausedClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"7851:11:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7851:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6320,"nodeType":"EmitStatement","src":"7846:18:23"}]},"documentation":{"id":6302,"nodeType":"StructuredDocumentation","src":"7619:68:23","text":" @notice Pause claim. Can only be called by admin."},"functionSelector":"8ff095f9","id":6322,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6305,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"7730:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6306,"kind":"modifierInvocation","modifierName":{"id":6304,"name":"onlyRole","nameLocations":["7721:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"7721:8:23"},"nodeType":"ModifierInvocation","src":"7721:20:23"}],"name":"pauseClaim","nameLocation":"7701:10:23","nodeType":"FunctionDefinition","parameters":{"id":6303,"nodeType":"ParameterList","parameters":[],"src":"7711:2:23"},"returnParameters":{"id":6307,"nodeType":"ParameterList","parameters":[],"src":"7742:0:23"},"scope":7832,"src":"7692:179:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6341,"nodeType":"Block","src":"8009:131:23","statements":[{"expression":{"arguments":[{"id":6330,"name":"claimPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"8027:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636c61696d2068617320616c7265616479206265656e20756e706175736564","id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8040:33:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9","typeString":"literal_string \"claim has already been unpaused\""},"value":"claim has already been unpaused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9","typeString":"literal_string \"claim has already been unpaused\""}],"id":6329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8019:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8019:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6333,"nodeType":"ExpressionStatement","src":"8019:55:23"},{"expression":{"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6334,"name":"claimPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"8084:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8098:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8084:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6337,"nodeType":"ExpressionStatement","src":"8084:19:23"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6338,"name":"UnpausedClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"8118:13:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8118:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6340,"nodeType":"EmitStatement","src":"8113:20:23"}]},"documentation":{"id":6323,"nodeType":"StructuredDocumentation","src":"7877:75:23","text":" @notice Pause unpauseClaim. Can only be called by admin."},"functionSelector":"de065caa","id":6342,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6326,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"7997:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6327,"kind":"modifierInvocation","modifierName":{"id":6325,"name":"onlyRole","nameLocations":["7988:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"7988:8:23"},"nodeType":"ModifierInvocation","src":"7988:20:23"}],"name":"unpauseClaim","nameLocation":"7966:12:23","nodeType":"FunctionDefinition","parameters":{"id":6324,"nodeType":"ParameterList","parameters":[],"src":"7978:2:23"},"returnParameters":{"id":6328,"nodeType":"ParameterList","parameters":[],"src":"8009:0:23"},"scope":7832,"src":"7957:183:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6366,"nodeType":"Block","src":"8410:201:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6352,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"8441:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6353,"name":"endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"8456:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8441:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"737461727420626c6f636b206d757374206265206c657373207468616e20656e6420626c6f636b","id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8478:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347","typeString":"literal_string \"start block must be less than end block\""},"value":"start block must be less than end block"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347","typeString":"literal_string \"start block must be less than end block\""}],"id":6351,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8420:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8420:109:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6357,"nodeType":"ExpressionStatement","src":"8420:109:23"},{"expression":{"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6358,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"8539:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6359,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"8552:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8539:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6361,"nodeType":"ExpressionStatement","src":"8539:24:23"},{"eventCall":{"arguments":[{"id":6363,"name":"_startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"8592:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6362,"name":"SetStartBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"8578:13:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8578:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6365,"nodeType":"EmitStatement","src":"8573:31:23"}]},"documentation":{"id":6343,"nodeType":"StructuredDocumentation","src":"8250:83:23","text":" @notice Update staking start block. Can only be called by admin."},"functionSelector":"f35e4a6e","id":6367,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6348,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"8398:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6349,"kind":"modifierInvocation","modifierName":{"id":6347,"name":"onlyRole","nameLocations":["8389:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"8389:8:23"},"nodeType":"ModifierInvocation","src":"8389:20:23"}],"name":"setStartBlock","nameLocation":"8347:13:23","nodeType":"FunctionDefinition","parameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"_startBlock","nameLocation":"8369:11:23","nodeType":"VariableDeclaration","scope":6367,"src":"8361:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6344,"name":"uint256","nodeType":"ElementaryTypeName","src":"8361:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8360:21:23"},"returnParameters":{"id":6350,"nodeType":"ParameterList","parameters":[],"src":"8410:0:23"},"scope":7832,"src":"8338:273:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6391,"nodeType":"Block","src":"8771:193:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6377,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"8802:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6378,"name":"_endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"8816:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8802:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"737461727420626c6f636b206d757374206265206c657373207468616e20656e6420626c6f636b","id":6380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8839:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347","typeString":"literal_string \"start block must be less than end block\""},"value":"start block must be less than end block"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347","typeString":"literal_string \"start block must be less than end block\""}],"id":6376,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8781:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8781:109:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6382,"nodeType":"ExpressionStatement","src":"8781:109:23"},{"expression":{"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6383,"name":"endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"8900:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6384,"name":"_endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"8911:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8900:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6386,"nodeType":"ExpressionStatement","src":"8900:20:23"},{"eventCall":{"arguments":[{"id":6388,"name":"_endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"8947:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6387,"name":"SetEndBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"8935:11:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8935:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6390,"nodeType":"EmitStatement","src":"8930:27:23"}]},"documentation":{"id":6368,"nodeType":"StructuredDocumentation","src":"8617:81:23","text":" @notice Update staking end block. Can only be called by admin."},"functionSelector":"c713aa94","id":6392,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6373,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"8759:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6374,"kind":"modifierInvocation","modifierName":{"id":6372,"name":"onlyRole","nameLocations":["8750:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"8750:8:23"},"nodeType":"ModifierInvocation","src":"8750:20:23"}],"name":"setEndBlock","nameLocation":"8712:11:23","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"_endBlock","nameLocation":"8732:9:23","nodeType":"VariableDeclaration","scope":6392,"src":"8724:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"8724:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8723:19:23"},"returnParameters":{"id":6375,"nodeType":"ParameterList","parameters":[],"src":"8771:0:23"},"scope":7832,"src":"8703:261:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6416,"nodeType":"Block","src":"9144:161:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6402,"name":"_rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"9162:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9177:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9162:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7263632070657220626c6f636b206d7573742062652067726561746572207468616e2030","id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9180:38:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4","typeString":"literal_string \"rcc per block must be greater than 0\""},"value":"rcc per block must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4","typeString":"literal_string \"rcc per block must be greater than 0\""}],"id":6401,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9154:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9154:65:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6407,"nodeType":"ExpressionStatement","src":"9154:65:23"},{"expression":{"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6408,"name":"rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"9229:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6409,"name":"_rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"9243:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9229:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6411,"nodeType":"ExpressionStatement","src":"9229:26:23"},{"eventCall":{"arguments":[{"id":6413,"name":"_rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"9285:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6412,"name":"SetRCCPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"9270:14:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9270:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6415,"nodeType":"EmitStatement","src":"9265:33:23"}]},"documentation":{"id":6393,"nodeType":"StructuredDocumentation","src":"8970:95:23","text":" @notice Update the RCC reward amount per block. Can only be called by admin."},"functionSelector":"bed66c08","id":6417,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6398,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"9132:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6399,"kind":"modifierInvocation","modifierName":{"id":6397,"name":"onlyRole","nameLocations":["9123:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"9123:8:23"},"nodeType":"ModifierInvocation","src":"9123:20:23"}],"name":"setRCCPerBlock","nameLocation":"9079:14:23","nodeType":"FunctionDefinition","parameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"_rccPerBlock","nameLocation":"9102:12:23","nodeType":"VariableDeclaration","scope":6417,"src":"9094:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6394,"name":"uint256","nodeType":"ElementaryTypeName","src":"9094:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9093:22:23"},"returnParameters":{"id":6400,"nodeType":"ParameterList","parameters":[],"src":"9144:0:23"},"scope":7832,"src":"9070:235:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6522,"nodeType":"Block","src":"9866:1542:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6434,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"10000:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10005:6:23","memberName":"length","nodeType":"MemberAccess","src":"10000:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10014:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10000:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6462,"nodeType":"Block","src":"10179:149:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6453,"name":"_stakeTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"10218:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":6456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10248:3:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10240:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6454,"name":"address","nodeType":"ElementaryTypeName","src":"10240:7:23","typeDescriptions":{}}},"id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10240:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10218:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74686520666972737420706f6f6c206d7573742062652045544820706f6f6c","id":6459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10270:33:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe","typeString":"literal_string \"the first pool must be ETH pool\""},"value":"the first pool must be ETH pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe","typeString":"literal_string \"the first pool must be ETH pool\""}],"id":6452,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10193:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10193:124:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6461,"nodeType":"ExpressionStatement","src":"10193:124:23"}]},"id":6463,"nodeType":"IfStatement","src":"9996:332:23","trueBody":{"id":6451,"nodeType":"Block","src":"10017:156:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6439,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"10056:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6441,"indexExpression":{"hexValue":"30","id":6440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10056:7:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"id":6442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10064:17:23","memberName":"stakeTokenAddress","nodeType":"MemberAccess","referencedDeclaration":5939,"src":"10056:25:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10093:3:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10085:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6443,"name":"address","nodeType":"ElementaryTypeName","src":"10085:7:23","typeDescriptions":{}}},"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10056:41:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74686520666972737420706f6f6c206d7573742062652045544820706f6f6c","id":6448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10115:33:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe","typeString":"literal_string \"the first pool must be ETH pool\""},"value":"the first pool must be ETH pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe","typeString":"literal_string \"the first pool must be ETH pool\""}],"id":6438,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10031:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10031:131:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6450,"nodeType":"ExpressionStatement","src":"10031:131:23"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6465,"name":"_unStakeLockedBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"10437:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10460:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10437:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964207769746864726177206c6f636b656420626c6f636b73","id":6468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10463:32:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691","typeString":"literal_string \"invalid withdraw locked blocks\""},"value":"invalid withdraw locked blocks"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691","typeString":"literal_string \"invalid withdraw locked blocks\""}],"id":6464,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10429:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6470,"nodeType":"ExpressionStatement","src":"10429:67:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6472,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10552:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10558:6:23","memberName":"number","nodeType":"MemberAccess","src":"10552:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6474,"name":"endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"10567:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10552:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616c726561647920656e646564","id":6476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10577:15:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97","typeString":"literal_string \"already ended\""},"value":"already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97","typeString":"literal_string \"already ended\""}],"id":6471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10544:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10544:49:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6478,"nodeType":"ExpressionStatement","src":"10544:49:23"},{"condition":{"id":6479,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"10607:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6484,"nodeType":"IfStatement","src":"10603:59:23","trueBody":{"id":6483,"nodeType":"Block","src":"10620:42:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6480,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"10634:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10634:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6482,"nodeType":"ExpressionStatement","src":"10634:17:23"}]}},{"assignments":[6486],"declarations":[{"constant":false,"id":6486,"mutability":"mutable","name":"lastRewardBlock","nameLocation":"10679:15:23","nodeType":"VariableDeclaration","scope":6522,"src":"10671:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6485,"name":"uint256","nodeType":"ElementaryTypeName","src":"10671:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6495,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6487,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10697:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10703:6:23","memberName":"number","nodeType":"MemberAccess","src":"10697:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6489,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"10712:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10697:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6493,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"10764:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10697:77:23","trueExpression":{"expression":{"id":6491,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10737:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10743:6:23","memberName":"number","nodeType":"MemberAccess","src":"10737:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10671:103:23"},{"expression":{"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6496,"name":"totalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"10784:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6497,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"10803:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6499,"nodeType":"ExpressionStatement","src":"10784:30:23"},{"expression":{"arguments":[{"arguments":[{"id":6504,"name":"_stakeTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"10889:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6505,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"10937:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6506,"name":"lastRewardBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"10983:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":6507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11043:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11080:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6509,"name":"_minDepositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"11117:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6510,"name":"_unStakeLockedBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"11173:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6503,"name":"Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"10847:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Pool_$5952_storage_ptr_$","typeString":"type(struct RCCStake.Pool storage pointer)"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10870:17:23","10925:10:23","10966:15:23","11016:25:23","11062:16:23","11099:16:23","11152:19:23"],"names":["stakeTokenAddress","poolWeight","lastRewardBlock","accumulateRewardsPerStake","stakeTokenAmount","minDepositAmount","unStakeLockedBlocks"],"nodeType":"FunctionCall","src":"10847:361:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_memory_ptr","typeString":"struct RCCStake.Pool memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5952_memory_ptr","typeString":"struct RCCStake.Pool memory"}],"expression":{"id":6500,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"10824:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10829:4:23","memberName":"push","nodeType":"MemberAccess","src":"10824:9:23","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Pool_$5952_storage_$dyn_storage_ptr_$_t_struct$_Pool_$5952_storage_$returns$__$attached_to$_t_array$_t_struct$_Pool_$5952_storage_$dyn_storage_ptr_$","typeString":"function (struct RCCStake.Pool storage ref[] storage pointer,struct RCCStake.Pool storage ref)"}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10824:394:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6513,"nodeType":"ExpressionStatement","src":"10824:394:23"},{"eventCall":{"arguments":[{"id":6515,"name":"_stakeTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"11254:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6516,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"11286:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6517,"name":"lastRewardBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"11311:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6518,"name":"_minDepositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"11340:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6519,"name":"_unStakeLockedBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"11371:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6514,"name":"AddPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"11233:7:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256)"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11233:168:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6521,"nodeType":"EmitStatement","src":"11228:173:23"}]},"documentation":{"id":6418,"nodeType":"StructuredDocumentation","src":"9311:178:23","text":" @notice Add a new staking to pool. Can only be called by admin\n DO NOT add the same staking token more than once. RCC rewards will be messed up if you do"},"functionSelector":"b6d9d919","id":6523,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6431,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"9854:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6432,"kind":"modifierInvocation","modifierName":{"id":6430,"name":"onlyRole","nameLocations":["9845:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"9845:8:23"},"nodeType":"ModifierInvocation","src":"9845:20:23"}],"name":"addPool","nameLocation":"9503:7:23","nodeType":"FunctionDefinition","parameters":{"id":6429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"_stakeTokenAddress","nameLocation":"9528:18:23","nodeType":"VariableDeclaration","scope":6523,"src":"9520:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6419,"name":"address","nodeType":"ElementaryTypeName","src":"9520:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6422,"mutability":"mutable","name":"_poolWeight","nameLocation":"9564:11:23","nodeType":"VariableDeclaration","scope":6523,"src":"9556:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6421,"name":"uint256","nodeType":"ElementaryTypeName","src":"9556:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6424,"mutability":"mutable","name":"_minDepositAmount","nameLocation":"9646:17:23","nodeType":"VariableDeclaration","scope":6523,"src":"9638:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6423,"name":"uint256","nodeType":"ElementaryTypeName","src":"9638:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6426,"mutability":"mutable","name":"_unStakeLockedBlocks","nameLocation":"9681:20:23","nodeType":"VariableDeclaration","scope":6523,"src":"9673:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6425,"name":"uint256","nodeType":"ElementaryTypeName","src":"9673:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6428,"mutability":"mutable","name":"_withUpdate","nameLocation":"9716:11:23","nodeType":"VariableDeclaration","scope":6523,"src":"9711:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6427,"name":"bool","nodeType":"ElementaryTypeName","src":"9711:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9510:327:23"},"returnParameters":{"id":6433,"nodeType":"ParameterList","parameters":[],"src":"9866:0:23"},"scope":7832,"src":"9494:1914:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6567,"nodeType":"Block","src":"11934:271:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6540,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"11952:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6541,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"11962:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11967:6:23","memberName":"length","nodeType":"MemberAccess","src":"11962:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11952:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420706f6f6c206964","id":6544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11975:17:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18","typeString":"literal_string \"invalid pool id\""},"value":"invalid pool id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18","typeString":"literal_string \"invalid pool id\""}],"id":6539,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11944:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11944:49:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6546,"nodeType":"ExpressionStatement","src":"11944:49:23"},{"expression":{"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6547,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"12003:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6549,"indexExpression":{"id":6548,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"12008:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12003:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"id":6550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12017:16:23","memberName":"minDepositAmount","nodeType":"MemberAccess","referencedDeclaration":5949,"src":"12003:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6551,"name":"_minDepositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"12036:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12003:50:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6553,"nodeType":"ExpressionStatement","src":"12003:50:23"},{"expression":{"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6554,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"12063:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6556,"indexExpression":{"id":6555,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"12068:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12063:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"id":6557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12077:19:23","memberName":"unStakeLockedBlocks","nodeType":"MemberAccess","referencedDeclaration":5951,"src":"12063:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6558,"name":"_unStakeLockedBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"12099:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12063:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6560,"nodeType":"ExpressionStatement","src":"12063:56:23"},{"eventCall":{"arguments":[{"id":6562,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"12149:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6563,"name":"_minDepositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"12158:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6564,"name":"_unStakeLockedBlocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"12177:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6561,"name":"UpdatePoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"12134:14:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12134:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6566,"nodeType":"EmitStatement","src":"12129:69:23"}]},"documentation":{"id":6524,"nodeType":"StructuredDocumentation","src":"11414:345:23","text":" @notice Update the given pool's info (minDepositAmount and unStakeLockedBlocks). Can only be called by admin.\n 这就是函数签名的作用，函数重名没事儿，还有参数返回值啥的呢；、\n 更新池子干了啥事儿\n - 改了最小存入金额\n - 不能提取的区块锁定区"},"functionSelector":"d86c0444","id":6568,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6533,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"11904:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6534,"kind":"modifierInvocation","modifierName":{"id":6532,"name":"checkPid","nameLocations":["11895:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":6141,"src":"11895:8:23"},"nodeType":"ModifierInvocation","src":"11895:17:23"},{"arguments":[{"id":6536,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"11922:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6537,"kind":"modifierInvocation","modifierName":{"id":6535,"name":"onlyRole","nameLocations":["11913:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"11913:8:23"},"nodeType":"ModifierInvocation","src":"11913:20:23"}],"name":"updatePool","nameLocation":"11773:10:23","nodeType":"FunctionDefinition","parameters":{"id":6531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6526,"mutability":"mutable","name":"_poolId","nameLocation":"11801:7:23","nodeType":"VariableDeclaration","scope":6568,"src":"11793:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6525,"name":"uint256","nodeType":"ElementaryTypeName","src":"11793:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6528,"mutability":"mutable","name":"_minDepositAmount","nameLocation":"11826:17:23","nodeType":"VariableDeclaration","scope":6568,"src":"11818:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6527,"name":"uint256","nodeType":"ElementaryTypeName","src":"11818:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6530,"mutability":"mutable","name":"_unStakeLockedBlocks","nameLocation":"11861:20:23","nodeType":"VariableDeclaration","scope":6568,"src":"11853:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6529,"name":"uint256","nodeType":"ElementaryTypeName","src":"11853:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11783:104:23"},"returnParameters":{"id":6538,"nodeType":"ParameterList","parameters":[],"src":"11934:0:23"},"scope":7832,"src":"11764:441:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6626,"nodeType":"Block","src":"12440:426:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6582,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"12458:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6583,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"12468:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12473:6:23","memberName":"length","nodeType":"MemberAccess","src":"12468:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12458:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420706f6f6c206964","id":6586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12481:17:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18","typeString":"literal_string \"invalid pool id\""},"value":"invalid pool id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18","typeString":"literal_string \"invalid pool id\""}],"id":6581,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12450:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12450:49:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6588,"nodeType":"ExpressionStatement","src":"12450:49:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6590,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"12517:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12531:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12517:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420706f6f6c20776569676874","id":6593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12534:21:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1","typeString":"literal_string \"invalid pool weight\""},"value":"invalid pool weight"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1","typeString":"literal_string \"invalid pool weight\""}],"id":6589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12509:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12509:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6595,"nodeType":"ExpressionStatement","src":"12509:47:23"},{"condition":{"id":6596,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"12570:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6601,"nodeType":"IfStatement","src":"12566:59:23","trueBody":{"id":6600,"nodeType":"Block","src":"12583:42:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6597,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"12597:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12597:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6599,"nodeType":"ExpressionStatement","src":"12597:17:23"}]}},{"expression":{"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6602,"name":"totalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"12634:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6603,"name":"totalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"12664:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":6604,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"12694:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6606,"indexExpression":{"id":6605,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"12699:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12694:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"id":6607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12708:10:23","memberName":"poolWeight","nodeType":"MemberAccess","referencedDeclaration":5941,"src":"12694:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12664:54:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6609,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"12733:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12664:80:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12634:110:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6612,"nodeType":"ExpressionStatement","src":"12634:110:23"},{"expression":{"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6613,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"12754:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6615,"indexExpression":{"id":6614,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"12759:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12754:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"id":6616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12768:10:23","memberName":"poolWeight","nodeType":"MemberAccess","referencedDeclaration":5941,"src":"12754:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6617,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"12781:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12754:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6619,"nodeType":"ExpressionStatement","src":"12754:38:23"},{"eventCall":{"arguments":[{"id":6621,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"12821:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6622,"name":"_poolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"12830:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6623,"name":"totalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"12843:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6620,"name":"SetPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"12807:13:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12807:52:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6625,"nodeType":"EmitStatement","src":"12802:57:23"}]},"documentation":{"id":6569,"nodeType":"StructuredDocumentation","src":"12211:87:23","text":" @notice Update the given pool's weight. Can only be called by admin."},"functionSelector":"fad07ece","id":6627,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6578,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"12428:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6579,"kind":"modifierInvocation","modifierName":{"id":6577,"name":"onlyRole","nameLocations":["12419:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"12419:8:23"},"nodeType":"ModifierInvocation","src":"12419:20:23"}],"name":"setPoolWeight","nameLocation":"12312:13:23","nodeType":"FunctionDefinition","parameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6571,"mutability":"mutable","name":"_poolId","nameLocation":"12343:7:23","nodeType":"VariableDeclaration","scope":6627,"src":"12335:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6570,"name":"uint256","nodeType":"ElementaryTypeName","src":"12335:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6573,"mutability":"mutable","name":"_poolWeight","nameLocation":"12368:11:23","nodeType":"VariableDeclaration","scope":6627,"src":"12360:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6572,"name":"uint256","nodeType":"ElementaryTypeName","src":"12360:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6575,"mutability":"mutable","name":"_withUpdate","nameLocation":"12394:11:23","nodeType":"VariableDeclaration","scope":6627,"src":"12389:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6574,"name":"bool","nodeType":"ElementaryTypeName","src":"12389:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12325:86:23"},"returnParameters":{"id":6580,"nodeType":"ParameterList","parameters":[],"src":"12440:0:23"},"scope":7832,"src":"12303:563:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6636,"nodeType":"Block","src":"13088:35:23","statements":[{"expression":{"expression":{"id":6633,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"13105:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13110:6:23","memberName":"length","nodeType":"MemberAccess","src":"13105:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6632,"id":6635,"nodeType":"Return","src":"13098:18:23"}]},"documentation":{"id":6628,"nodeType":"StructuredDocumentation","src":"12972:56:23","text":" @notice Get the length/amount of pool"},"functionSelector":"b3944d52","id":6637,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolLength","nameLocation":"13042:13:23","nodeType":"FunctionDefinition","parameters":{"id":6629,"nodeType":"ParameterList","parameters":[],"src":"13055:2:23"},"returnParameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6637,"src":"13079:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6630,"name":"uint256","nodeType":"ElementaryTypeName","src":"13079:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13078:9:23"},"scope":7832,"src":"13033:90:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6701,"nodeType":"Block","src":"13451:388:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6648,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"13469:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6649,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6642,"src":"13478:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13469:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642072616e6765","id":6651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13483:15:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa","typeString":"literal_string \"invalid range\""},"value":"invalid range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa","typeString":"literal_string \"invalid range\""}],"id":6647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13461:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13461:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6653,"nodeType":"ExpressionStatement","src":"13461:38:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6654,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"13513:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6655,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"13521:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13513:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6662,"nodeType":"IfStatement","src":"13509:67:23","trueBody":{"id":6661,"nodeType":"Block","src":"13533:43:23","statements":[{"expression":{"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6657,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"13547:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6658,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"13555:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13547:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6660,"nodeType":"ExpressionStatement","src":"13547:18:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6663,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6642,"src":"13589:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6664,"name":"endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"13595:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13589:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6671,"nodeType":"IfStatement","src":"13585:59:23","trueBody":{"id":6670,"nodeType":"Block","src":"13605:39:23","statements":[{"expression":{"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6666,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6642,"src":"13619:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6667,"name":"endBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"13625:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13619:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6669,"nodeType":"ExpressionStatement","src":"13619:14:23"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6673,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6642,"src":"13661:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6674,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"13667:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13661:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13675:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13661:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642072616e6765","id":6678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13678:15:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa","typeString":"literal_string \"invalid range\""},"value":"invalid range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa","typeString":"literal_string \"invalid range\""}],"id":6672,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13653:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13653:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6680,"nodeType":"ExpressionStatement","src":"13653:41:23"},{"assignments":[6682],"declarations":[{"constant":false,"id":6682,"mutability":"mutable","name":"success","nameLocation":"13709:7:23","nodeType":"VariableDeclaration","scope":6701,"src":"13704:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6681,"name":"bool","nodeType":"ElementaryTypeName","src":"13704:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6683,"nodeType":"VariableDeclarationStatement","src":"13704:12:23"},{"expression":{"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6684,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"13727:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6685,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"13736:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6686,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13726:21:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6692,"name":"rccPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"13771:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6687,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6642,"src":"13751:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6688,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"13757:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13751:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13750:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13764:6:23","memberName":"tryMul","nodeType":"MemberAccess","referencedDeclaration":2639,"src":"13750:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13750:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"src":"13726:57:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6695,"nodeType":"ExpressionStatement","src":"13726:57:23"},{"expression":{"arguments":[{"id":6697,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"13801:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d756c7469706c696572206f766572666c6f77","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13810:21:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524","typeString":"literal_string \"multiplier overflow\""},"value":"multiplier overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524","typeString":"literal_string \"multiplier overflow\""}],"id":6696,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13793:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13793:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6700,"nodeType":"ExpressionStatement","src":"13793:39:23"}]},"documentation":{"id":6638,"nodeType":"StructuredDocumentation","src":"13129:203:23","text":" @notice Return reward multiplier over given _from to _to block. [_from, _to)\n @param _from    From block number (included)\n @param _to      To block number (exluded)"},"functionSelector":"8dbb1e3a","id":6702,"implemented":true,"kind":"function","modifiers":[],"name":"getMultiplier","nameLocation":"13346:13:23","nodeType":"FunctionDefinition","parameters":{"id":6643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6640,"mutability":"mutable","name":"_from","nameLocation":"13377:5:23","nodeType":"VariableDeclaration","scope":6702,"src":"13369:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6639,"name":"uint256","nodeType":"ElementaryTypeName","src":"13369:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6642,"mutability":"mutable","name":"_to","nameLocation":"13400:3:23","nodeType":"VariableDeclaration","scope":6702,"src":"13392:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6641,"name":"uint256","nodeType":"ElementaryTypeName","src":"13392:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13359:50:23"},"returnParameters":{"id":6646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6645,"mutability":"mutable","name":"multiplier","nameLocation":"13439:10:23","nodeType":"VariableDeclaration","scope":6702,"src":"13431:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6644,"name":"uint256","nodeType":"ElementaryTypeName","src":"13431:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13430:20:23"},"scope":7832,"src":"13337:502:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6722,"nodeType":"Block","src":"14042:77:23","statements":[{"expression":{"arguments":[{"id":6716,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"14083:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6717,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"14092:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6718,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14099:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14105:6:23","memberName":"number","nodeType":"MemberAccess","src":"14099:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6715,"name":"pendingRCCByBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"14059:23:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,address,uint256) view returns (uint256)"}},"id":6720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14059:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6714,"id":6721,"nodeType":"Return","src":"14052:60:23"}]},"documentation":{"id":6703,"nodeType":"StructuredDocumentation","src":"13845:65:23","text":" @notice Get pending RCC amount of user in pool"},"functionSelector":"a27d9279","id":6723,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6710,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"14015:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6711,"kind":"modifierInvocation","modifierName":{"id":6709,"name":"checkPid","nameLocations":["14006:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":6141,"src":"14006:8:23"},"nodeType":"ModifierInvocation","src":"14006:17:23"}],"name":"getPendingRCC","nameLocation":"13924:13:23","nodeType":"FunctionDefinition","parameters":{"id":6708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6705,"mutability":"mutable","name":"_poolId","nameLocation":"13955:7:23","nodeType":"VariableDeclaration","scope":6723,"src":"13947:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6704,"name":"uint256","nodeType":"ElementaryTypeName","src":"13947:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6707,"mutability":"mutable","name":"_user","nameLocation":"13980:5:23","nodeType":"VariableDeclaration","scope":6723,"src":"13972:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6706,"name":"address","nodeType":"ElementaryTypeName","src":"13972:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13937:54:23"},"returnParameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6723,"src":"14033:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6712,"name":"uint256","nodeType":"ElementaryTypeName","src":"14033:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14032:9:23"},"scope":7832,"src":"13915:204:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6815,"nodeType":"Block","src":"14358:874:23","statements":[{"assignments":[6737],"declarations":[{"constant":false,"id":6737,"mutability":"mutable","name":"pool_","nameLocation":"14381:5:23","nodeType":"VariableDeclaration","scope":6815,"src":"14368:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"},"typeName":{"id":6736,"nodeType":"UserDefinedTypeName","pathNode":{"id":6735,"name":"Pool","nameLocations":["14368:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5952,"src":"14368:4:23"},"referencedDeclaration":5952,"src":"14368:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"}},"visibility":"internal"}],"id":6741,"initialValue":{"baseExpression":{"id":6738,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"14389:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6740,"indexExpression":{"id":6739,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"14394:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14389:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14368:34:23"},{"assignments":[6744],"declarations":[{"constant":false,"id":6744,"mutability":"mutable","name":"user_","nameLocation":"14425:5:23","nodeType":"VariableDeclaration","scope":6815,"src":"14412:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"},"typeName":{"id":6743,"nodeType":"UserDefinedTypeName","pathNode":{"id":6742,"name":"User","nameLocations":["14412:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5968,"src":"14412:4:23"},"referencedDeclaration":5968,"src":"14412:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"}},"visibility":"internal"}],"id":6750,"initialValue":{"baseExpression":{"baseExpression":{"id":6745,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"14433:4:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$5968_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStake.User storage ref))"}},"id":6747,"indexExpression":{"id":6746,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"14438:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14433:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$5968_storage_$","typeString":"mapping(address => struct RCCStake.User storage ref)"}},"id":6749,"indexExpression":{"id":6748,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"14447:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14433:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage","typeString":"struct RCCStake.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14412:41:23"},{"assignments":[6752],"declarations":[{"constant":false,"id":6752,"mutability":"mutable","name":"accumulateRewardsPerStake","nameLocation":"14471:25:23","nodeType":"VariableDeclaration","scope":6815,"src":"14463:33:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6751,"name":"uint256","nodeType":"ElementaryTypeName","src":"14463:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6755,"initialValue":{"expression":{"id":6753,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"14499:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":6754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14505:25:23","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":5945,"src":"14499:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14463:67:23"},{"assignments":[6757],"declarations":[{"constant":false,"id":6757,"mutability":"mutable","name":"stSupply","nameLocation":"14548:8:23","nodeType":"VariableDeclaration","scope":6815,"src":"14540:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6756,"name":"uint256","nodeType":"ElementaryTypeName","src":"14540:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6760,"initialValue":{"expression":{"id":6758,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"14559:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":6759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14565:16:23","memberName":"stakeTokenAmount","nodeType":"MemberAccess","referencedDeclaration":5947,"src":"14559:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14540:41:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6761,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"14595:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6762,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"14610:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":6763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14616:15:23","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":5943,"src":"14610:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14595:36:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6765,"name":"stSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"14635:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14647:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14635:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14595:53:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6800,"nodeType":"IfStatement","src":"14591:454:23","trueBody":{"id":6799,"nodeType":"Block","src":"14650:395:23","statements":[{"assignments":[6770],"declarations":[{"constant":false,"id":6770,"mutability":"mutable","name":"multiplier","nameLocation":"14672:10:23","nodeType":"VariableDeclaration","scope":6799,"src":"14664:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6769,"name":"uint256","nodeType":"ElementaryTypeName","src":"14664:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6776,"initialValue":{"arguments":[{"expression":{"id":6772,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"14716:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":6773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14722:15:23","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":5943,"src":"14716:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6774,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"14755:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6771,"name":"getMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"14685:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14685:96:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14664:117:23"},{"assignments":[6778],"declarations":[{"constant":false,"id":6778,"mutability":"mutable","name":"rccForPool","nameLocation":"14803:10:23","nodeType":"VariableDeclaration","scope":6799,"src":"14795:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6777,"name":"uint256","nodeType":"ElementaryTypeName","src":"14795:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6786,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6779,"name":"multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"14817:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":6780,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"14830:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":6781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14836:10:23","memberName":"poolWeight","nodeType":"MemberAccess","referencedDeclaration":5941,"src":"14830:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14816:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6784,"name":"totalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"14866:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14816:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14795:86:23"},{"expression":{"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6787,"name":"accumulateRewardsPerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"14895:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6788,"name":"accumulateRewardsPerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"14939:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6789,"name":"rccForPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"14984:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"hexValue":"31","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14998:7:23","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"id":6791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14997:9:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"14984:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14983:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6794,"name":"stSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"15026:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14983:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14939:95:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14895:139:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6798,"nodeType":"ExpressionStatement","src":"14895:139:23"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6801,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"15073:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":6802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15079:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"15073:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6803,"name":"accumulateRewardsPerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"15105:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"31","id":6804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15146:7:23","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"id":6805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15145:9:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"15105:49:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15073:81:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":6808,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"15169:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":6809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15175:15:23","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":5961,"src":"15169:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15073:117:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":6811,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"15205:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":6812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15211:14:23","memberName":"pendingRewards","nodeType":"MemberAccess","referencedDeclaration":5963,"src":"15205:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15073:152:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6734,"id":6814,"nodeType":"Return","src":"15054:171:23"}]},"documentation":{"id":6724,"nodeType":"StructuredDocumentation","src":"14125:81:23","text":" @notice Get pending RCC amount of user by block number in pool"},"functionSelector":"41721ab7","id":6816,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRCCByBlockNumber","nameLocation":"14220:23:23","nodeType":"FunctionDefinition","parameters":{"id":6731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6726,"mutability":"mutable","name":"_poolId","nameLocation":"14261:7:23","nodeType":"VariableDeclaration","scope":6816,"src":"14253:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6725,"name":"uint256","nodeType":"ElementaryTypeName","src":"14253:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6728,"mutability":"mutable","name":"_user","nameLocation":"14286:5:23","nodeType":"VariableDeclaration","scope":6816,"src":"14278:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6727,"name":"address","nodeType":"ElementaryTypeName","src":"14278:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6730,"mutability":"mutable","name":"_blockNumber","nameLocation":"14309:12:23","nodeType":"VariableDeclaration","scope":6816,"src":"14301:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6729,"name":"uint256","nodeType":"ElementaryTypeName","src":"14301:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14243:84:23"},"returnParameters":{"id":6734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6816,"src":"14349:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6732,"name":"uint256","nodeType":"ElementaryTypeName","src":"14349:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14348:9:23"},"scope":7832,"src":"14211:1021:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6836,"nodeType":"Block","src":"15422:53:23","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":6829,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"15439:4:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$5968_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStake.User storage ref))"}},"id":6831,"indexExpression":{"id":6830,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"15444:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15439:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$5968_storage_$","typeString":"mapping(address => struct RCCStake.User storage ref)"}},"id":6833,"indexExpression":{"id":6832,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"15450:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15439:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage","typeString":"struct RCCStake.User storage ref"}},"id":6834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15457:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"15439:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6828,"id":6835,"nodeType":"Return","src":"15432:36:23"}]},"documentation":{"id":6817,"nodeType":"StructuredDocumentation","src":"15238:57:23","text":" @notice Get the staking amount of user"},"functionSelector":"11548234","id":6837,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6824,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"15398:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6825,"kind":"modifierInvocation","modifierName":{"id":6823,"name":"checkPid","nameLocations":["15389:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":6141,"src":"15389:8:23"},"nodeType":"ModifierInvocation","src":"15389:14:23"}],"name":"stakingBalance","nameLocation":"15309:14:23","nodeType":"FunctionDefinition","parameters":{"id":6822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6819,"mutability":"mutable","name":"_pid","nameLocation":"15341:4:23","nodeType":"VariableDeclaration","scope":6837,"src":"15333:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6818,"name":"uint256","nodeType":"ElementaryTypeName","src":"15333:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6821,"mutability":"mutable","name":"_user","nameLocation":"15363:5:23","nodeType":"VariableDeclaration","scope":6837,"src":"15355:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6820,"name":"address","nodeType":"ElementaryTypeName","src":"15355:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15323:51:23"},"returnParameters":{"id":6828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6837,"src":"15413:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6826,"name":"uint256","nodeType":"ElementaryTypeName","src":"15413:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15412:9:23"},"scope":7832,"src":"15300:175:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6905,"nodeType":"Block","src":"15817:416:23","statements":[{"assignments":[6854],"declarations":[{"constant":false,"id":6854,"mutability":"mutable","name":"user_","nameLocation":"15840:5:23","nodeType":"VariableDeclaration","scope":6905,"src":"15827:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"},"typeName":{"id":6853,"nodeType":"UserDefinedTypeName","pathNode":{"id":6852,"name":"User","nameLocations":["15827:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5968,"src":"15827:4:23"},"referencedDeclaration":5968,"src":"15827:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"}},"visibility":"internal"}],"id":6860,"initialValue":{"baseExpression":{"baseExpression":{"id":6855,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"15848:4:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$5968_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStake.User storage ref))"}},"id":6857,"indexExpression":{"id":6856,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"15853:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15848:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$5968_storage_$","typeString":"mapping(address => struct RCCStake.User storage ref)"}},"id":6859,"indexExpression":{"id":6858,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"15862:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15848:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage","typeString":"struct RCCStake.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15827:41:23"},{"body":{"id":6903,"nodeType":"Block","src":"15930:297:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"id":6873,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"15948:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":6874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15954:8:23","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"15948:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage","typeString":"struct RCCStake.UnStakeRequest storage ref[] storage ref"}},"id":6876,"indexExpression":{"id":6875,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"15963:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15948:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$5957_storage","typeString":"struct RCCStake.UnStakeRequest storage ref"}},"id":6877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15966:18:23","memberName":"unlockBlocksCounts","nodeType":"MemberAccess","referencedDeclaration":5956,"src":"15948:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":6878,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15988:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15994:6:23","memberName":"number","nodeType":"MemberAccess","src":"15988:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15948:52:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6892,"nodeType":"IfStatement","src":"15944:203:23","trueBody":{"id":6891,"nodeType":"Block","src":"16002:145:23","statements":[{"expression":{"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6881,"name":"pendingWithdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"16020:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6882,"name":"pendingWithdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"16064:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"expression":{"id":6883,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"16108:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":6884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16114:8:23","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"16108:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage","typeString":"struct RCCStake.UnStakeRequest storage ref[] storage ref"}},"id":6886,"indexExpression":{"id":6885,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"16123:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16108:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$5957_storage","typeString":"struct RCCStake.UnStakeRequest storage ref"}},"id":6887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16126:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5954,"src":"16108:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16064:68:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16020:112:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6890,"nodeType":"ExpressionStatement","src":"16020:112:23"}]}},{"expression":{"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6893,"name":"requestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"16160:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6894,"name":"requestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"16176:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"expression":{"id":6895,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"16192:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":6896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16198:8:23","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"16192:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage","typeString":"struct RCCStake.UnStakeRequest storage ref[] storage ref"}},"id":6898,"indexExpression":{"id":6897,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"16207:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16192:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$5957_storage","typeString":"struct RCCStake.UnStakeRequest storage ref"}},"id":6899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16210:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5954,"src":"16192:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16176:40:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16160:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6902,"nodeType":"ExpressionStatement","src":"16160:56:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"15898:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":6866,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"15902:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":6867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15908:8:23","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"15902:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage","typeString":"struct RCCStake.UnStakeRequest storage ref[] storage ref"}},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15917:6:23","memberName":"length","nodeType":"MemberAccess","src":"15902:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15898:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6904,"initializationExpression":{"assignments":[6862],"declarations":[{"constant":false,"id":6862,"mutability":"mutable","name":"i","nameLocation":"15891:1:23","nodeType":"VariableDeclaration","scope":6904,"src":"15883:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6861,"name":"uint256","nodeType":"ElementaryTypeName","src":"15883:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6864,"initialValue":{"hexValue":"30","id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15895:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15883:13:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15925:3:23","subExpression":{"id":6870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"15925:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6872,"nodeType":"ExpressionStatement","src":"15925:3:23"},"nodeType":"ForStatement","src":"15878:349:23"}]},"documentation":{"id":6838,"nodeType":"StructuredDocumentation","src":"15481:124:23","text":" @notice Get the withdraw amount info, including the locked unstake amount and the unlocked unstake amount"},"functionSelector":"ff423357","id":6906,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6845,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"15733:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6846,"kind":"modifierInvocation","modifierName":{"id":6844,"name":"checkPid","nameLocations":["15724:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":6141,"src":"15724:8:23"},"nodeType":"ModifierInvocation","src":"15724:17:23"}],"name":"withdrawAmount","nameLocation":"15619:14:23","nodeType":"FunctionDefinition","parameters":{"id":6843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6840,"mutability":"mutable","name":"_poolId","nameLocation":"15651:7:23","nodeType":"VariableDeclaration","scope":6906,"src":"15643:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6839,"name":"uint256","nodeType":"ElementaryTypeName","src":"15643:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6842,"mutability":"mutable","name":"_user","nameLocation":"15676:5:23","nodeType":"VariableDeclaration","scope":6906,"src":"15668:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6841,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15633:54:23"},"returnParameters":{"id":6851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6848,"mutability":"mutable","name":"requestAmount","nameLocation":"15767:13:23","nodeType":"VariableDeclaration","scope":6906,"src":"15759:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6847,"name":"uint256","nodeType":"ElementaryTypeName","src":"15759:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6850,"mutability":"mutable","name":"pendingWithdrawAmount","nameLocation":"15790:21:23","nodeType":"VariableDeclaration","scope":6906,"src":"15782:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6849,"name":"uint256","nodeType":"ElementaryTypeName","src":"15782:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15758:54:23"},"scope":7832,"src":"15610:623:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7055,"nodeType":"Block","src":"16729:1910:23","statements":[{"assignments":[6917],"declarations":[{"constant":false,"id":6917,"mutability":"mutable","name":"pool_","nameLocation":"16752:5:23","nodeType":"VariableDeclaration","scope":7055,"src":"16739:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"},"typeName":{"id":6916,"nodeType":"UserDefinedTypeName","pathNode":{"id":6915,"name":"Pool","nameLocations":["16739:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5952,"src":"16739:4:23"},"referencedDeclaration":5952,"src":"16739:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"}},"visibility":"internal"}],"id":6921,"initialValue":{"baseExpression":{"id":6918,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"16760:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":6920,"indexExpression":{"id":6919,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"16765:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16760:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16739:31:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6922,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16785:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16791:6:23","memberName":"number","nodeType":"MemberAccess","src":"16785:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":6924,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"16801:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":6925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16807:15:23","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":5943,"src":"16801:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16785:37:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6929,"nodeType":"IfStatement","src":"16781:74:23","trueBody":{"id":6928,"nodeType":"Block","src":"16824:31:23","statements":[{"functionReturnParameters":6914,"id":6927,"nodeType":"Return","src":"16838:7:23"}]}},{"assignments":[6931],"declarations":[{"constant":false,"id":6931,"mutability":"mutable","name":"stakeTokenAmount","nameLocation":"16872:16:23","nodeType":"VariableDeclaration","scope":7055,"src":"16864:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6930,"name":"uint256","nodeType":"ElementaryTypeName","src":"16864:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6934,"initialValue":{"expression":{"id":6932,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"16891:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":6933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16897:16:23","memberName":"stakeTokenAmount","nodeType":"MemberAccess","referencedDeclaration":5947,"src":"16891:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16864:49:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6935,"name":"stakeTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"16927:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16947:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16927:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6947,"nodeType":"IfStatement","src":"16923:108:23","trueBody":{"id":6946,"nodeType":"Block","src":"16950:81:23","statements":[{"expression":{"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6938,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"16964:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":6940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16970:15:23","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":5943,"src":"16964:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6941,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16988:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16994:6:23","memberName":"number","nodeType":"MemberAccess","src":"16988:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16964:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6944,"nodeType":"ExpressionStatement","src":"16964:36:23"},{"functionReturnParameters":6914,"id":6945,"nodeType":"Return","src":"17014:7:23"}]}},{"assignments":[6949,6951],"declarations":[{"constant":false,"id":6949,"mutability":"mutable","name":"success1","nameLocation":"17130:8:23","nodeType":"VariableDeclaration","scope":7055,"src":"17125:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6948,"name":"bool","nodeType":"ElementaryTypeName","src":"17125:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6951,"mutability":"mutable","name":"totalRCC","nameLocation":"17148:8:23","nodeType":"VariableDeclaration","scope":7055,"src":"17140:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6950,"name":"uint256","nodeType":"ElementaryTypeName","src":"17140:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6962,"initialValue":{"arguments":[{"expression":{"id":6959,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"17252:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":6960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17258:10:23","memberName":"poolWeight","nodeType":"MemberAccess","referencedDeclaration":5941,"src":"17252:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":6953,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"17187:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":6954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17193:15:23","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":5943,"src":"17187:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6955,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17222:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17228:6:23","memberName":"number","nodeType":"MemberAccess","src":"17222:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6952,"name":"getMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"17160:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17160:84:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17245:6:23","memberName":"tryMul","nodeType":"MemberAccess","referencedDeclaration":2639,"src":"17160:91:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17160:109:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"17124:145:23"},{"expression":{"arguments":[{"id":6964,"name":"success1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"17287:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f77","id":6965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17297:10:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""},"value":"overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""}],"id":6963,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17279:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17279:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6967,"nodeType":"ExpressionStatement","src":"17279:29:23"},{"expression":{"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6968,"name":"success1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"17539:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6969,"name":"totalRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"17549:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6970,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"17538:20:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6973,"name":"totalPoolWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"17577:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6971,"name":"totalRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"17561:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17570:6:23","memberName":"tryDiv","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"17561:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17561:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"src":"17538:55:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6976,"nodeType":"ExpressionStatement","src":"17538:55:23"},{"expression":{"arguments":[{"id":6978,"name":"success1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"17611:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f77","id":6979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17621:10:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""},"value":"overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""}],"id":6977,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17603:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17603:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6981,"nodeType":"ExpressionStatement","src":"17603:29:23"},{"assignments":[6983],"declarations":[{"constant":false,"id":6983,"mutability":"mutable","name":"stSupply","nameLocation":"17707:8:23","nodeType":"VariableDeclaration","scope":7055,"src":"17699:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6982,"name":"uint256","nodeType":"ElementaryTypeName","src":"17699:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6986,"initialValue":{"expression":{"id":6984,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"17718:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":6985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17724:16:23","memberName":"stakeTokenAmount","nodeType":"MemberAccess","referencedDeclaration":5947,"src":"17718:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17699:41:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6987,"name":"stSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"17790:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17801:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17790:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7040,"nodeType":"IfStatement","src":"17786:691:23","trueBody":{"id":7039,"nodeType":"Block","src":"17804:673:23","statements":[{"assignments":[6991,6993],"declarations":[{"constant":false,"id":6991,"mutability":"mutable","name":"success2","nameLocation":"17880:8:23","nodeType":"VariableDeclaration","scope":7039,"src":"17875:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6990,"name":"bool","nodeType":"ElementaryTypeName","src":"17875:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6993,"mutability":"mutable","name":"totalRCC_","nameLocation":"17898:9:23","nodeType":"VariableDeclaration","scope":7039,"src":"17890:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6992,"name":"uint256","nodeType":"ElementaryTypeName","src":"17890:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6998,"initialValue":{"arguments":[{"hexValue":"31","id":6996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17927:7:23","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"id":6994,"name":"totalRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"17911:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17920:6:23","memberName":"tryMul","nodeType":"MemberAccess","referencedDeclaration":2639,"src":"17911:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17911:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"17874:61:23"},{"expression":{"arguments":[{"id":7000,"name":"success2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"17957:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f77","id":7001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17967:10:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""},"value":"overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""}],"id":6999,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17949:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17949:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7003,"nodeType":"ExpressionStatement","src":"17949:29:23"},{"expression":{"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7004,"name":"success2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"18068:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7005,"name":"totalRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"18078:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7006,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"18067:21:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7009,"name":"stSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"18108:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7007,"name":"totalRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"18091:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18101:6:23","memberName":"tryDiv","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"18091:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18091:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"src":"18067:50:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7012,"nodeType":"ExpressionStatement","src":"18067:50:23"},{"expression":{"arguments":[{"id":7014,"name":"success2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"18139:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f77","id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18149:10:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""},"value":"overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""}],"id":7013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18131:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18131:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7017,"nodeType":"ExpressionStatement","src":"18131:29:23"},{"assignments":[7019,7021],"declarations":[{"constant":false,"id":7019,"mutability":"mutable","name":"success3","nameLocation":"18220:8:23","nodeType":"VariableDeclaration","scope":7039,"src":"18215:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7018,"name":"bool","nodeType":"ElementaryTypeName","src":"18215:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7021,"mutability":"mutable","name":"accumulateRewardsPerStake","nameLocation":"18238:25:23","nodeType":"VariableDeclaration","scope":7039,"src":"18230:33:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7020,"name":"uint256","nodeType":"ElementaryTypeName","src":"18230:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7027,"initialValue":{"arguments":[{"id":7025,"name":"totalRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"18340:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":7022,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"18267:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18290:25:23","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":5945,"src":"18267:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18333:6:23","memberName":"tryAdd","nodeType":"MemberAccess","referencedDeclaration":2569,"src":"18267:72:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18267:83:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"18214:136:23"},{"expression":{"arguments":[{"id":7029,"name":"success3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"18372:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f766572666c6f77","id":7030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18382:10:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""},"value":"overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","typeString":"literal_string \"overflow\""}],"id":7028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18364:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18364:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7032,"nodeType":"ExpressionStatement","src":"18364:29:23"},{"expression":{"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7033,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"18407:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18413:25:23","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":5945,"src":"18407:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7036,"name":"accumulateRewardsPerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"18441:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18407:59:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7038,"nodeType":"ExpressionStatement","src":"18407:59:23"}]}},{"expression":{"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7041,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"18531:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18537:15:23","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":5943,"src":"18531:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7044,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"18555:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18561:6:23","memberName":"number","nodeType":"MemberAccess","src":"18555:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18531:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7047,"nodeType":"ExpressionStatement","src":"18531:36:23"},{"eventCall":{"arguments":[{"id":7049,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"18594:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7050,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"18600:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18606:15:23","memberName":"lastRewardBlock","nodeType":"MemberAccess","referencedDeclaration":5943,"src":"18600:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7052,"name":"totalRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"18623:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7048,"name":"UpdatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"18583:10:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18583:49:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7054,"nodeType":"EmitStatement","src":"18578:54:23"}]},"documentation":{"id":6907,"nodeType":"StructuredDocumentation","src":"16340:328:23","text":" @notice Update reward variables of the given pool to be up-to-date.\n 主要是更新\n - 池子里每单位代币累计发放的奖励；（TODO: 这个数据的参考价值有多高呢？）\n - 最后发放奖励区块的number；\n - 更新整个池子，累计应该方法的奖励；"},"functionSelector":"51eb05a6","id":7056,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6912,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"16723:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6913,"kind":"modifierInvocation","modifierName":{"id":6911,"name":"checkPid","nameLocations":["16714:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":6141,"src":"16714:8:23"},"nodeType":"ModifierInvocation","src":"16714:14:23"}],"name":"updatePool","nameLocation":"16682:10:23","nodeType":"FunctionDefinition","parameters":{"id":6910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"_pid","nameLocation":"16701:4:23","nodeType":"VariableDeclaration","scope":7056,"src":"16693:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6908,"name":"uint256","nodeType":"ElementaryTypeName","src":"16693:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16692:14:23"},"returnParameters":{"id":6914,"nodeType":"ParameterList","parameters":[],"src":"16729:0:23"},"scope":7832,"src":"16673:1966:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7082,"nodeType":"Block","src":"18777:588:23","statements":[{"assignments":[7062],"declarations":[{"constant":false,"id":7062,"mutability":"mutable","name":"length","nameLocation":"19254:6:23","nodeType":"VariableDeclaration","scope":7082,"src":"19246:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7061,"name":"uint256","nodeType":"ElementaryTypeName","src":"19246:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":"因为读取要消耗gas，所以弄一个变量么？ ","id":7065,"initialValue":{"expression":{"id":7063,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"19263:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19268:6:23","memberName":"length","nodeType":"MemberAccess","src":"19263:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19246:28:23"},{"body":{"id":7080,"nodeType":"Block","src":"19321:38:23","statements":[{"expression":{"arguments":[{"id":7077,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"19346:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7076,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[6568,7056],"referencedDeclaration":7056,"src":"19335:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19335:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7079,"nodeType":"ExpressionStatement","src":"19335:13:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7070,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"19304:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7071,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"19308:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19304:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7081,"initializationExpression":{"assignments":[7067],"declarations":[{"constant":false,"id":7067,"mutability":"mutable","name":"i","nameLocation":"19297:1:23","nodeType":"VariableDeclaration","scope":7081,"src":"19289:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7066,"name":"uint256","nodeType":"ElementaryTypeName","src":"19289:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7069,"initialValue":{"hexValue":"30","id":7068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19301:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19289:13:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19316:3:23","subExpression":{"id":7073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"19316:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7075,"nodeType":"ExpressionStatement","src":"19316:3:23"},"nodeType":"ForStatement","src":"19284:75:23"}]},"documentation":{"id":7057,"nodeType":"StructuredDocumentation","src":"18645:93:23","text":" @notice Update reward variables for all pools. Be careful of gas spending!"},"functionSelector":"630b5ba1","id":7083,"implemented":true,"kind":"function","modifiers":[],"name":"massUpdatePools","nameLocation":"18752:15:23","nodeType":"FunctionDefinition","parameters":{"id":7058,"nodeType":"ParameterList","parameters":[],"src":"18767:2:23"},"returnParameters":{"id":7059,"nodeType":"ParameterList","parameters":[],"src":"18777:0:23"},"scope":7832,"src":"18743:622:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7125,"nodeType":"Block","src":"19489:328:23","statements":[{"assignments":[7091],"declarations":[{"constant":false,"id":7091,"mutability":"mutable","name":"pool_","nameLocation":"19512:5:23","nodeType":"VariableDeclaration","scope":7125,"src":"19499:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"},"typeName":{"id":7090,"nodeType":"UserDefinedTypeName","pathNode":{"id":7089,"name":"Pool","nameLocations":["19499:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5952,"src":"19499:4:23"},"referencedDeclaration":5952,"src":"19499:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"}},"visibility":"internal"}],"id":7095,"initialValue":{"baseExpression":{"id":7092,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"19520:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":7094,"indexExpression":{"id":7093,"name":"ETH_PID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"19525:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19520:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19499:34:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7097,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"19564:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19570:17:23","memberName":"stakeTokenAddress","nodeType":"MemberAccess","referencedDeclaration":5939,"src":"19564:23:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19599:3:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19591:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7099,"name":"address","nodeType":"ElementaryTypeName","src":"19591:7:23","typeDescriptions":{}}},"id":7102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19591:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19564:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45544820706f6f6c206d7573742062652063726561746564206669727374","id":7104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19617:32:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10","typeString":"literal_string \"ETH pool must be created first\""},"value":"ETH pool must be created first"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10","typeString":"literal_string \"ETH pool must be created first\""}],"id":7096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19543:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19543:116:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7106,"nodeType":"ExpressionStatement","src":"19543:116:23"},{"assignments":[7108],"declarations":[{"constant":false,"id":7108,"mutability":"mutable","name":"_amount","nameLocation":"19678:7:23","nodeType":"VariableDeclaration","scope":7125,"src":"19670:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7107,"name":"uint256","nodeType":"ElementaryTypeName","src":"19670:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7111,"initialValue":{"expression":{"id":7109,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19688:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19692:5:23","memberName":"value","nodeType":"MemberAccess","src":"19688:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19670:27:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7113,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"19715:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7114,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"19725:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19731:16:23","memberName":"minDepositAmount","nodeType":"MemberAccess","referencedDeclaration":5949,"src":"19725:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19715:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964206465706f73697420616d6f756e74","id":7117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19749:24:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec","typeString":"literal_string \"invalid deposit amount\""},"value":"invalid deposit amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec","typeString":"literal_string \"invalid deposit amount\""}],"id":7112,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19707:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19707:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7119,"nodeType":"ExpressionStatement","src":"19707:67:23"},{"expression":{"arguments":[{"id":7121,"name":"ETH_PID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"19793:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7122,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"19802:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7120,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"19784:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19784:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7124,"nodeType":"ExpressionStatement","src":"19784:26:23"}]},"documentation":{"id":7084,"nodeType":"StructuredDocumentation","src":"19371:62:23","text":" @notice Deposit staking ETH for RCC rewards"},"functionSelector":"f6326fb3","id":7126,"implemented":true,"kind":"function","modifiers":[{"id":7087,"kind":"modifierInvocation","modifierName":{"id":7086,"name":"whenNotPaused","nameLocations":["19475:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":922,"src":"19475:13:23"},"nodeType":"ModifierInvocation","src":"19475:13:23"}],"name":"depositETH","nameLocation":"19447:10:23","nodeType":"FunctionDefinition","parameters":{"id":7085,"nodeType":"ParameterList","parameters":[],"src":"19457:2:23"},"returnParameters":{"id":7088,"nodeType":"ParameterList","parameters":[],"src":"19489:0:23"},"scope":7832,"src":"19438:379:23","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":7185,"nodeType":"Block","src":"20250:544:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7140,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"20394:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20402:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20394:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6465706f736974206e6f7420737570706f727420455448207374616b696e67","id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20405:33:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757","typeString":"literal_string \"deposit not support ETH staking\""},"value":"deposit not support ETH staking"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757","typeString":"literal_string \"deposit not support ETH staking\""}],"id":7139,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20386:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20386:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7145,"nodeType":"ExpressionStatement","src":"20386:53:23"},{"assignments":[7148],"declarations":[{"constant":false,"id":7148,"mutability":"mutable","name":"pool_","nameLocation":"20462:5:23","nodeType":"VariableDeclaration","scope":7185,"src":"20449:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"},"typeName":{"id":7147,"nodeType":"UserDefinedTypeName","pathNode":{"id":7146,"name":"Pool","nameLocations":["20449:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5952,"src":"20449:4:23"},"referencedDeclaration":5952,"src":"20449:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"}},"visibility":"internal"}],"id":7152,"initialValue":{"baseExpression":{"id":7149,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"20470:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":7151,"indexExpression":{"id":7150,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"20475:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20470:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20449:31:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7154,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"20498:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7155,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"20508:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20514:16:23","memberName":"minDepositAmount","nodeType":"MemberAccess","referencedDeclaration":5949,"src":"20508:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20498:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964206465706f73697420616d6f756e74","id":7158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20532:24:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec","typeString":"literal_string \"invalid deposit amount\""},"value":"invalid deposit amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec","typeString":"literal_string \"invalid deposit amount\""}],"id":7153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20490:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20490:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7160,"nodeType":"ExpressionStatement","src":"20490:67:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7161,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"20571:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20581:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20571:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7179,"nodeType":"IfStatement","src":"20567:188:23","trueBody":{"id":7178,"nodeType":"Block","src":"20584:171:23","statements":[{"expression":{"arguments":[{"expression":{"id":7169,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20664:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20668:6:23","memberName":"sender","nodeType":"MemberAccess","src":"20664:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7173,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20700:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_RCCStake_$7832","typeString":"contract RCCStake"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RCCStake_$7832","typeString":"contract RCCStake"}],"id":7172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20692:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7171,"name":"address","nodeType":"ElementaryTypeName","src":"20692:7:23","typeDescriptions":{}}},"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20692:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7175,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"20723:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7165,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"20605:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20611:17:23","memberName":"stakeTokenAddress","nodeType":"MemberAccess","referencedDeclaration":5939,"src":"20605:23:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7164,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"20598:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1646_$","typeString":"type(contract IERC20)"}},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20598:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20630:16:23","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"20598:48:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1646_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20598:146:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7177,"nodeType":"ExpressionStatement","src":"20598:146:23"}]}},{"expression":{"arguments":[{"id":7181,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"20773:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7182,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"20779:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7180,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"20764:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20764:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7184,"nodeType":"ExpressionStatement","src":"20764:23:23"}]},"documentation":{"id":7127,"nodeType":"StructuredDocumentation","src":"19823:308:23","text":" @notice Deposit staking token for RCC rewards\n Before depositing, user needs approve this contract to be able to spend or transfer their staking tokens\n @param _pid       Id of the pool to be deposited to\n @param _amount    Amount of staking tokens to be deposited"},"functionSelector":"e2bbb158","id":7186,"implemented":true,"kind":"function","modifiers":[{"id":7134,"kind":"modifierInvocation","modifierName":{"id":7133,"name":"whenNotWithdrawPaused","nameLocations":["20213:21:23"],"nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"20213:21:23"},"nodeType":"ModifierInvocation","src":"20213:21:23"},{"arguments":[{"id":7136,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"20244:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7137,"kind":"modifierInvocation","modifierName":{"id":7135,"name":"checkPid","nameLocations":["20235:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":6141,"src":"20235:8:23"},"nodeType":"ModifierInvocation","src":"20235:14:23"}],"name":"deposit","nameLocation":"20145:7:23","nodeType":"FunctionDefinition","parameters":{"id":7132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7129,"mutability":"mutable","name":"_pid","nameLocation":"20170:4:23","nodeType":"VariableDeclaration","scope":7186,"src":"20162:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7128,"name":"uint256","nodeType":"ElementaryTypeName","src":"20162:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7131,"mutability":"mutable","name":"_amount","nameLocation":"20192:7:23","nodeType":"VariableDeclaration","scope":7186,"src":"20184:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7130,"name":"uint256","nodeType":"ElementaryTypeName","src":"20184:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20152:53:23"},"returnParameters":{"id":7138,"nodeType":"ParameterList","parameters":[],"src":"20250:0:23"},"scope":7832,"src":"20136:658:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7309,"nodeType":"Block","src":"21116:972:23","statements":[{"assignments":[7203],"declarations":[{"constant":false,"id":7203,"mutability":"mutable","name":"pool_","nameLocation":"21139:5:23","nodeType":"VariableDeclaration","scope":7309,"src":"21126:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"},"typeName":{"id":7202,"nodeType":"UserDefinedTypeName","pathNode":{"id":7201,"name":"Pool","nameLocations":["21126:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5952,"src":"21126:4:23"},"referencedDeclaration":5952,"src":"21126:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"}},"visibility":"internal"}],"id":7207,"initialValue":{"baseExpression":{"id":7204,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"21147:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":7206,"indexExpression":{"id":7205,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"21152:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21147:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21126:31:23"},{"assignments":[7210],"declarations":[{"constant":false,"id":7210,"mutability":"mutable","name":"user_","nameLocation":"21180:5:23","nodeType":"VariableDeclaration","scope":7309,"src":"21167:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"},"typeName":{"id":7209,"nodeType":"UserDefinedTypeName","pathNode":{"id":7208,"name":"User","nameLocations":["21167:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5968,"src":"21167:4:23"},"referencedDeclaration":5968,"src":"21167:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"}},"visibility":"internal"}],"id":7217,"initialValue":{"baseExpression":{"baseExpression":{"id":7211,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"21188:4:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$5968_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStake.User storage ref))"}},"id":7213,"indexExpression":{"id":7212,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"21193:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21188:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$5968_storage_$","typeString":"mapping(address => struct RCCStake.User storage ref)"}},"id":7216,"indexExpression":{"expression":{"id":7214,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21199:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21203:6:23","memberName":"sender","nodeType":"MemberAccess","src":"21199:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21188:22:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage","typeString":"struct RCCStake.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21167:43:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7219,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"21228:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21234:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"21228:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7221,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"21249:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21228:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e74207374616b696e6720616d6f756e74","id":7223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21258:29:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b","typeString":"literal_string \"insufficient staking amount\""},"value":"insufficient staking amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b","typeString":"literal_string \"insufficient staking amount\""}],"id":7218,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21220:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21220:68:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7225,"nodeType":"ExpressionStatement","src":"21220:68:23"},{"expression":{"arguments":[{"id":7227,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"21309:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7226,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[6568,7056],"referencedDeclaration":7056,"src":"21298:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21298:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7229,"nodeType":"ExpressionStatement","src":"21298:16:23"},{"assignments":[7231],"declarations":[{"constant":false,"id":7231,"mutability":"mutable","name":"pendingRCC_","nameLocation":"21332:11:23","nodeType":"VariableDeclaration","scope":7309,"src":"21324:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7230,"name":"uint256","nodeType":"ElementaryTypeName","src":"21324:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7244,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7232,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"21347:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21353:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"21347:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7234,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"21379:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21385:25:23","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":5945,"src":"21379:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21347:63:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21346:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"31","id":7238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21427:7:23","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"id":7239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21426:9:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"21346:89:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7241,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"21450:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21456:15:23","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":5961,"src":"21450:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21346:125:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21324:147:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7245,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"21485:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21499:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21485:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7255,"nodeType":"IfStatement","src":"21481:81:23","trueBody":{"id":7254,"nodeType":"Block","src":"21502:60:23","statements":[{"expression":{"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7248,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"21516:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21522:14:23","memberName":"pendingRewards","nodeType":"MemberAccess","referencedDeclaration":5963,"src":"21516:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7251,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"21540:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21516:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7253,"nodeType":"ExpressionStatement","src":"21516:35:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7256,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"21575:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21585:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21575:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7281,"nodeType":"IfStatement","src":"21571:288:23","trueBody":{"id":7280,"nodeType":"Block","src":"21588:271:23","statements":[{"expression":{"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7259,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"21602:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21608:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"21602:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7262,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"21623:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21602:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7264,"nodeType":"ExpressionStatement","src":"21602:28:23"},{"expression":{"arguments":[{"arguments":[{"id":7271,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"21726:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7272,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"21775:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21781:6:23","memberName":"number","nodeType":"MemberAccess","src":"21775:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":7274,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"21790:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21796:19:23","memberName":"unStakeLockedBlocks","nodeType":"MemberAccess","referencedDeclaration":5951,"src":"21790:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21775:40:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7270,"name":"UnStakeRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"21681:14:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_UnStakeRequest_$5957_storage_ptr_$","typeString":"type(struct RCCStake.UnStakeRequest storage pointer)"}},"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["21718:6:23","21755:18:23"],"names":["amount","unlockBlocksCounts"],"nodeType":"FunctionCall","src":"21681:153:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$5957_memory_ptr","typeString":"struct RCCStake.UnStakeRequest memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UnStakeRequest_$5957_memory_ptr","typeString":"struct RCCStake.UnStakeRequest memory"}],"expression":{"expression":{"id":7265,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"21644:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21650:8:23","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"21644:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage","typeString":"struct RCCStake.UnStakeRequest storage ref[] storage ref"}},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21659:4:23","memberName":"push","nodeType":"MemberAccess","src":"21644:19:23","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage_ptr_$_t_struct$_UnStakeRequest_$5957_storage_$returns$__$attached_to$_t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage_ptr_$","typeString":"function (struct RCCStake.UnStakeRequest storage ref[] storage pointer,struct RCCStake.UnStakeRequest storage ref)"}},"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21644:204:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7279,"nodeType":"ExpressionStatement","src":"21644:204:23"}]}},{"expression":{"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7282,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"21868:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21874:16:23","memberName":"stakeTokenAmount","nodeType":"MemberAccess","referencedDeclaration":5947,"src":"21868:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7285,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"21894:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21868:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7287,"nodeType":"ExpressionStatement","src":"21868:33:23"},{"expression":{"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7288,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"21911:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21917:15:23","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":5961,"src":"21911:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7291,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"21949:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21955:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"21949:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7293,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"21969:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21975:25:23","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":5945,"src":"21969:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21949:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21948:53:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"31","id":7297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22017:7:23","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"id":7298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22016:9:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"21948:77:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21911:114:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7301,"nodeType":"ExpressionStatement","src":"21911:114:23"},{"eventCall":{"arguments":[{"expression":{"id":7303,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22055:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22059:6:23","memberName":"sender","nodeType":"MemberAccess","src":"22055:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7305,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"22067:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7306,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"22073:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7302,"name":"RequestUnstake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"22040:14:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22040:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7308,"nodeType":"EmitStatement","src":"22035:46:23"}]},"documentation":{"id":7187,"nodeType":"StructuredDocumentation","src":"20800:183:23","text":" @notice Unstake staking tokens\n @param _pid       Id of the pool to be withdrawn from\n @param _amount    amount of staking tokens to be withdrawn"},"functionSelector":"9e2c8a5b","id":7310,"implemented":true,"kind":"function","modifiers":[{"id":7194,"kind":"modifierInvocation","modifierName":{"id":7193,"name":"whenNotPaused","nameLocations":["21065:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":922,"src":"21065:13:23"},"nodeType":"ModifierInvocation","src":"21065:13:23"},{"id":7196,"kind":"modifierInvocation","modifierName":{"id":7195,"name":"whenNotWithdrawPaused","nameLocations":["21079:21:23"],"nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"21079:21:23"},"nodeType":"ModifierInvocation","src":"21079:21:23"},{"arguments":[{"id":7198,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"21110:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7199,"kind":"modifierInvocation","modifierName":{"id":7197,"name":"checkPid","nameLocations":["21101:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":6141,"src":"21101:8:23"},"nodeType":"ModifierInvocation","src":"21101:14:23"}],"name":"unstake","nameLocation":"20997:7:23","nodeType":"FunctionDefinition","parameters":{"id":7192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7189,"mutability":"mutable","name":"_pid","nameLocation":"21022:4:23","nodeType":"VariableDeclaration","scope":7310,"src":"21014:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7188,"name":"uint256","nodeType":"ElementaryTypeName","src":"21014:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7191,"mutability":"mutable","name":"_amount","nameLocation":"21044:7:23","nodeType":"VariableDeclaration","scope":7310,"src":"21036:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7190,"name":"uint256","nodeType":"ElementaryTypeName","src":"21036:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21004:53:23"},"returnParameters":{"id":7200,"nodeType":"ParameterList","parameters":[],"src":"21116:0:23"},"scope":7832,"src":"20988:1100:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7472,"nodeType":"Block","src":"22498:1189:23","statements":[{"assignments":[7325],"declarations":[{"constant":false,"id":7325,"mutability":"mutable","name":"pool_","nameLocation":"22521:5:23","nodeType":"VariableDeclaration","scope":7472,"src":"22508:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"},"typeName":{"id":7324,"nodeType":"UserDefinedTypeName","pathNode":{"id":7323,"name":"Pool","nameLocations":["22508:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5952,"src":"22508:4:23"},"referencedDeclaration":5952,"src":"22508:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"}},"visibility":"internal"}],"id":7329,"initialValue":{"baseExpression":{"id":7326,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"22529:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":7328,"indexExpression":{"id":7327,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"22534:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22529:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22508:31:23"},{"assignments":[7332],"declarations":[{"constant":false,"id":7332,"mutability":"mutable","name":"user_","nameLocation":"22562:5:23","nodeType":"VariableDeclaration","scope":7472,"src":"22549:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"},"typeName":{"id":7331,"nodeType":"UserDefinedTypeName","pathNode":{"id":7330,"name":"User","nameLocations":["22549:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5968,"src":"22549:4:23"},"referencedDeclaration":5968,"src":"22549:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"}},"visibility":"internal"}],"id":7339,"initialValue":{"baseExpression":{"baseExpression":{"id":7333,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"22570:4:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$5968_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStake.User storage ref))"}},"id":7335,"indexExpression":{"id":7334,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"22575:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22570:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$5968_storage_$","typeString":"mapping(address => struct RCCStake.User storage ref)"}},"id":7338,"indexExpression":{"expression":{"id":7336,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22581:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22585:6:23","memberName":"sender","nodeType":"MemberAccess","src":"22581:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22570:22:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage","typeString":"struct RCCStake.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22549:43:23"},{"assignments":[7341],"declarations":[{"constant":false,"id":7341,"mutability":"mutable","name":"pendingWithdraw_","nameLocation":"22610:16:23","nodeType":"VariableDeclaration","scope":7472,"src":"22602:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7340,"name":"uint256","nodeType":"ElementaryTypeName","src":"22602:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7342,"nodeType":"VariableDeclarationStatement","src":"22602:24:23"},{"assignments":[7344],"declarations":[{"constant":false,"id":7344,"mutability":"mutable","name":"popNum_","nameLocation":"22644:7:23","nodeType":"VariableDeclaration","scope":7472,"src":"22636:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7343,"name":"uint256","nodeType":"ElementaryTypeName","src":"22636:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7345,"nodeType":"VariableDeclarationStatement","src":"22636:15:23"},{"body":{"id":7382,"nodeType":"Block","src":"22770:219:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"id":7358,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"22788:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22794:8:23","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"22788:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage","typeString":"struct RCCStake.UnStakeRequest storage ref[] storage ref"}},"id":7361,"indexExpression":{"id":7360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"22803:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22788:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$5957_storage","typeString":"struct RCCStake.UnStakeRequest storage ref"}},"id":7362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22806:18:23","memberName":"unlockBlocksCounts","nodeType":"MemberAccess","referencedDeclaration":5956,"src":"22788:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7363,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"22828:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22834:6:23","memberName":"number","nodeType":"MemberAccess","src":"22828:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22788:52:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7368,"nodeType":"IfStatement","src":"22784:96:23","trueBody":{"id":7367,"nodeType":"Block","src":"22842:38:23","statements":[{"id":7366,"nodeType":"Break","src":"22860:5:23"}]}},{"expression":{"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7369,"name":"pendingWithdraw_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"22893:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7370,"name":"pendingWithdraw_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"22912:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"expression":{"id":7371,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"22931:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22937:8:23","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"22931:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage","typeString":"struct RCCStake.UnStakeRequest storage ref[] storage ref"}},"id":7374,"indexExpression":{"id":7373,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"22946:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22931:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$5957_storage","typeString":"struct RCCStake.UnStakeRequest storage ref"}},"id":7375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22949:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5954,"src":"22931:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22912:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22893:62:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7378,"nodeType":"ExpressionStatement","src":"22893:62:23"},{"expression":{"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22969:9:23","subExpression":{"id":7379,"name":"popNum_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"22969:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7381,"nodeType":"ExpressionStatement","src":"22969:9:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7350,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"22738:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":7351,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"22742:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22748:8:23","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"22742:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage","typeString":"struct RCCStake.UnStakeRequest storage ref[] storage ref"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22757:6:23","memberName":"length","nodeType":"MemberAccess","src":"22742:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22738:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7383,"initializationExpression":{"assignments":[7347],"declarations":[{"constant":false,"id":7347,"mutability":"mutable","name":"i","nameLocation":"22731:1:23","nodeType":"VariableDeclaration","scope":7383,"src":"22723:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7346,"name":"uint256","nodeType":"ElementaryTypeName","src":"22723:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7349,"initialValue":{"hexValue":"30","id":7348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22735:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22723:13:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22765:3:23","subExpression":{"id":7355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"22765:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7357,"nodeType":"ExpressionStatement","src":"22765:3:23"},"nodeType":"ForStatement","src":"22718:271:23"},{"body":{"id":7411,"nodeType":"Block","src":"23090:72:23","statements":[{"expression":{"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7398,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"23104:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23110:8:23","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"23104:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage","typeString":"struct RCCStake.UnStakeRequest storage ref[] storage ref"}},"id":7402,"indexExpression":{"id":7400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"23119:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23104:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$5957_storage","typeString":"struct RCCStake.UnStakeRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":7403,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"23124:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23130:8:23","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"23124:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage","typeString":"struct RCCStake.UnStakeRequest storage ref[] storage ref"}},"id":7408,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7405,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"23139:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7406,"name":"popNum_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"23143:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23139:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23124:27:23","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$5957_storage","typeString":"struct RCCStake.UnStakeRequest storage ref"}},"src":"23104:47:23","typeDescriptions":{"typeIdentifier":"t_struct$_UnStakeRequest_$5957_storage","typeString":"struct RCCStake.UnStakeRequest storage ref"}},"id":7410,"nodeType":"ExpressionStatement","src":"23104:47:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"23048:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7389,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"23052:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23058:8:23","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"23052:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage","typeString":"struct RCCStake.UnStakeRequest storage ref[] storage ref"}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23067:6:23","memberName":"length","nodeType":"MemberAccess","src":"23052:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7392,"name":"popNum_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"23076:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23052:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23048:35:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7412,"initializationExpression":{"assignments":[7385],"declarations":[{"constant":false,"id":7385,"mutability":"mutable","name":"i","nameLocation":"23041:1:23","nodeType":"VariableDeclaration","scope":7412,"src":"23033:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7384,"name":"uint256","nodeType":"ElementaryTypeName","src":"23033:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7387,"initialValue":{"hexValue":"30","id":7386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23045:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23033:13:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23085:3:23","subExpression":{"id":7395,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"23085:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7397,"nodeType":"ExpressionStatement","src":"23085:3:23"},"nodeType":"ForStatement","src":"23028:134:23"},{"body":{"id":7430,"nodeType":"Block","src":"23209:45:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":7423,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"23223:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23229:8:23","memberName":"requests","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"23223:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage","typeString":"struct RCCStake.UnStakeRequest storage ref[] storage ref"}},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23238:3:23","memberName":"pop","nodeType":"MemberAccess","src":"23223:18:23","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_UnStakeRequest_$5957_storage_$dyn_storage_ptr_$","typeString":"function (struct RCCStake.UnStakeRequest storage ref[] storage pointer)"}},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23223:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7429,"nodeType":"ExpressionStatement","src":"23223:20:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"23191:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7418,"name":"popNum_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"23195:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23191:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7431,"initializationExpression":{"assignments":[7414],"declarations":[{"constant":false,"id":7414,"mutability":"mutable","name":"i","nameLocation":"23184:1:23","nodeType":"VariableDeclaration","scope":7431,"src":"23176:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7413,"name":"uint256","nodeType":"ElementaryTypeName","src":"23176:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7416,"initialValue":{"hexValue":"30","id":7415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23188:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23176:13:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23204:3:23","subExpression":{"id":7420,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"23204:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7422,"nodeType":"ExpressionStatement","src":"23204:3:23"},"nodeType":"ForStatement","src":"23171:83:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7432,"name":"pendingWithdraw_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"23267:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23286:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23267:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7462,"nodeType":"IfStatement","src":"23263:345:23","trueBody":{"id":7461,"nodeType":"Block","src":"23289:319:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7435,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"23307:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23313:17:23","memberName":"stakeTokenAddress","nodeType":"MemberAccess","referencedDeclaration":5939,"src":"23307:23:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":7439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23342:3:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23334:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7437,"name":"address","nodeType":"ElementaryTypeName","src":"23334:7:23","typeDescriptions":{}}},"id":7440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23334:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23307:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7459,"nodeType":"Block","src":"23433:165:23","statements":[{"expression":{"arguments":[{"expression":{"id":7454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23517:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23521:6:23","memberName":"sender","nodeType":"MemberAccess","src":"23517:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7456,"name":"pendingWithdraw_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"23549:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7450,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"23458:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23464:17:23","memberName":"stakeTokenAddress","nodeType":"MemberAccess","referencedDeclaration":5939,"src":"23458:23:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7449,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"23451:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1646_$","typeString":"type(contract IERC20)"}},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23451:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23483:12:23","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1691,"src":"23451:44:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1646_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1646_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23451:132:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7458,"nodeType":"ExpressionStatement","src":"23451:132:23"}]},"id":7460,"nodeType":"IfStatement","src":"23303:295:23","trueBody":{"id":7448,"nodeType":"Block","src":"23348:79:23","statements":[{"expression":{"arguments":[{"expression":{"id":7443,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23383:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23387:6:23","memberName":"sender","nodeType":"MemberAccess","src":"23383:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7445,"name":"pendingWithdraw_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"23395:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7442,"name":"_safeETHTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"23366:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23366:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7447,"nodeType":"ExpressionStatement","src":"23366:46:23"}]}}]}},{"eventCall":{"arguments":[{"expression":{"id":7464,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23631:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23635:6:23","memberName":"sender","nodeType":"MemberAccess","src":"23631:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7466,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"23643:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7467,"name":"pendingWithdraw_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"23649:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7468,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"23667:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23673:6:23","memberName":"number","nodeType":"MemberAccess","src":"23667:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7463,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"23622:8:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23622:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7471,"nodeType":"EmitStatement","src":"23617:63:23"}]},"documentation":{"id":7311,"nodeType":"StructuredDocumentation","src":"22094:295:23","text":" @notice Withdraw the unlock unstake amount\n @param _pid       Id of the pool to be withdrawn from\n 功能: 提取一个池子里所有的代币\n - 提取池子里所有的代币；\n - 拿走所有的奖励；\n - 更新池子\n - 发射事件"},"functionSelector":"2e1a7d4d","id":7473,"implemented":true,"kind":"function","modifiers":[{"id":7316,"kind":"modifierInvocation","modifierName":{"id":7315,"name":"whenNotPaused","nameLocations":["22447:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":922,"src":"22447:13:23"},"nodeType":"ModifierInvocation","src":"22447:13:23"},{"id":7318,"kind":"modifierInvocation","modifierName":{"id":7317,"name":"whenNotWithdrawPaused","nameLocations":["22461:21:23"],"nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"22461:21:23"},"nodeType":"ModifierInvocation","src":"22461:21:23"},{"arguments":[{"id":7320,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"22492:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7321,"kind":"modifierInvocation","modifierName":{"id":7319,"name":"checkPid","nameLocations":["22483:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":6141,"src":"22483:8:23"},"nodeType":"ModifierInvocation","src":"22483:14:23"}],"name":"withdraw","nameLocation":"22403:8:23","nodeType":"FunctionDefinition","parameters":{"id":7314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7313,"mutability":"mutable","name":"_pid","nameLocation":"22429:4:23","nodeType":"VariableDeclaration","scope":7473,"src":"22421:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7312,"name":"uint256","nodeType":"ElementaryTypeName","src":"22421:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22411:28:23"},"returnParameters":{"id":7322,"nodeType":"ParameterList","parameters":[],"src":"22498:0:23"},"scope":7832,"src":"22394:1293:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7563,"nodeType":"Block","src":"23989:627:23","statements":[{"assignments":[7488],"declarations":[{"constant":false,"id":7488,"mutability":"mutable","name":"pool_","nameLocation":"24012:5:23","nodeType":"VariableDeclaration","scope":7563,"src":"23999:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"},"typeName":{"id":7487,"nodeType":"UserDefinedTypeName","pathNode":{"id":7486,"name":"Pool","nameLocations":["23999:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5952,"src":"23999:4:23"},"referencedDeclaration":5952,"src":"23999:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"}},"visibility":"internal"}],"id":7492,"initialValue":{"baseExpression":{"id":7489,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"24020:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":7491,"indexExpression":{"id":7490,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"24025:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24020:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"23999:31:23"},{"assignments":[7495],"declarations":[{"constant":false,"id":7495,"mutability":"mutable","name":"user_","nameLocation":"24053:5:23","nodeType":"VariableDeclaration","scope":7563,"src":"24040:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"},"typeName":{"id":7494,"nodeType":"UserDefinedTypeName","pathNode":{"id":7493,"name":"User","nameLocations":["24040:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5968,"src":"24040:4:23"},"referencedDeclaration":5968,"src":"24040:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"}},"visibility":"internal"}],"id":7502,"initialValue":{"baseExpression":{"baseExpression":{"id":7496,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"24061:4:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$5968_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStake.User storage ref))"}},"id":7498,"indexExpression":{"id":7497,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"24066:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24061:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$5968_storage_$","typeString":"mapping(address => struct RCCStake.User storage ref)"}},"id":7501,"indexExpression":{"expression":{"id":7499,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24072:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24076:6:23","memberName":"sender","nodeType":"MemberAccess","src":"24072:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24061:22:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage","typeString":"struct RCCStake.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"24040:43:23"},{"expression":{"arguments":[{"id":7504,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"24104:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7503,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[6568,7056],"referencedDeclaration":7056,"src":"24093:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24093:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7506,"nodeType":"ExpressionStatement","src":"24093:16:23"},{"assignments":[7508],"declarations":[{"constant":false,"id":7508,"mutability":"mutable","name":"pendingRCC_","nameLocation":"24127:11:23","nodeType":"VariableDeclaration","scope":7563,"src":"24119:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7507,"name":"uint256","nodeType":"ElementaryTypeName","src":"24119:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7524,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7509,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7495,"src":"24142:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24148:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"24142:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7511,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"24174:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24180:25:23","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":5945,"src":"24174:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24142:63:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24141:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"31","id":7515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24222:7:23","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"id":7516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24221:9:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"24141:89:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7518,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7495,"src":"24245:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24251:15:23","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":5961,"src":"24245:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24141:125:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":7521,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7495,"src":"24281:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24287:14:23","memberName":"pendingRewards","nodeType":"MemberAccess","referencedDeclaration":5963,"src":"24281:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24141:160:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24119:182:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7525,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"24315:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24329:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24315:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7541,"nodeType":"IfStatement","src":"24311:125:23","trueBody":{"id":7540,"nodeType":"Block","src":"24332:104:23","statements":[{"expression":{"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7528,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7495,"src":"24346:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24352:14:23","memberName":"pendingRewards","nodeType":"MemberAccess","referencedDeclaration":5963,"src":"24346:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24369:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24346:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7533,"nodeType":"ExpressionStatement","src":"24346:24:23"},{"expression":{"arguments":[{"expression":{"id":7535,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24401:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24405:6:23","memberName":"sender","nodeType":"MemberAccess","src":"24401:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7537,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"24413:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7534,"name":"_safeRCCTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"24384:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24384:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7539,"nodeType":"ExpressionStatement","src":"24384:41:23"}]}},{"expression":{"id":7554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7542,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7495,"src":"24445:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24451:15:23","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":5961,"src":"24445:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7545,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7495,"src":"24482:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24488:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"24482:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7547,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"24502:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24508:25:23","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":5945,"src":"24502:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24482:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24481:53:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"31","id":7551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24550:7:23","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"id":7552,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24549:9:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"24481:77:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24445:113:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7555,"nodeType":"ExpressionStatement","src":"24445:113:23"},{"eventCall":{"arguments":[{"expression":{"id":7557,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24579:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24583:6:23","memberName":"sender","nodeType":"MemberAccess","src":"24579:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7559,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"24591:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7560,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"24597:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7556,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"24573:5:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24573:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7562,"nodeType":"EmitStatement","src":"24568:41:23"}]},"documentation":{"id":7474,"nodeType":"StructuredDocumentation","src":"23693:193:23","text":" @notice Claim RCC tokens reward\n @param _pid       Id of the pool to be claimed from\n 索取、主张、索赔\n TODO: 这段逻辑谁调用？"},"functionSelector":"379607f5","id":7564,"implemented":true,"kind":"function","modifiers":[{"id":7479,"kind":"modifierInvocation","modifierName":{"id":7478,"name":"whenNotPaused","nameLocations":["23941:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":922,"src":"23941:13:23"},"nodeType":"ModifierInvocation","src":"23941:13:23"},{"arguments":[{"id":7481,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"23964:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7482,"kind":"modifierInvocation","modifierName":{"id":7480,"name":"checkPid","nameLocations":["23955:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":6141,"src":"23955:8:23"},"nodeType":"ModifierInvocation","src":"23955:14:23"},{"id":7484,"kind":"modifierInvocation","modifierName":{"id":7483,"name":"whenNotClaimPaused","nameLocations":["23970:18:23"],"nodeType":"IdentifierPath","referencedDeclaration":6151,"src":"23970:18:23"},"nodeType":"ModifierInvocation","src":"23970:18:23"}],"name":"claim","nameLocation":"23900:5:23","nodeType":"FunctionDefinition","parameters":{"id":7477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7476,"mutability":"mutable","name":"_pid","nameLocation":"23923:4:23","nodeType":"VariableDeclaration","scope":7564,"src":"23915:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7475,"name":"uint256","nodeType":"ElementaryTypeName","src":"23915:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23905:28:23"},"returnParameters":{"id":7485,"nodeType":"ParameterList","parameters":[],"src":"23989:0:23"},"scope":7832,"src":"23891:725:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7746,"nodeType":"Block","src":"24985:1941:23","statements":[{"assignments":[7574],"declarations":[{"constant":false,"id":7574,"mutability":"mutable","name":"pool_","nameLocation":"25008:5:23","nodeType":"VariableDeclaration","scope":7746,"src":"24995:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"},"typeName":{"id":7573,"nodeType":"UserDefinedTypeName","pathNode":{"id":7572,"name":"Pool","nameLocations":["24995:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5952,"src":"24995:4:23"},"referencedDeclaration":5952,"src":"24995:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool"}},"visibility":"internal"}],"id":7578,"initialValue":{"baseExpression":{"id":7575,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"25016:4:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5952_storage_$dyn_storage","typeString":"struct RCCStake.Pool storage ref[] storage ref"}},"id":7577,"indexExpression":{"id":7576,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"25021:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25016:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage","typeString":"struct RCCStake.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"24995:31:23"},{"assignments":[7581],"declarations":[{"constant":false,"id":7581,"mutability":"mutable","name":"user_","nameLocation":"25049:5:23","nodeType":"VariableDeclaration","scope":7746,"src":"25036:18:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"},"typeName":{"id":7580,"nodeType":"UserDefinedTypeName","pathNode":{"id":7579,"name":"User","nameLocations":["25036:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5968,"src":"25036:4:23"},"referencedDeclaration":5968,"src":"25036:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User"}},"visibility":"internal"}],"id":7588,"initialValue":{"baseExpression":{"baseExpression":{"id":7582,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"25057:4:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_User_$5968_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct RCCStake.User storage ref))"}},"id":7584,"indexExpression":{"id":7583,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"25062:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25057:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$5968_storage_$","typeString":"mapping(address => struct RCCStake.User storage ref)"}},"id":7587,"indexExpression":{"expression":{"id":7585,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25068:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25072:6:23","memberName":"sender","nodeType":"MemberAccess","src":"25068:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25057:22:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage","typeString":"struct RCCStake.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"25036:43:23"},{"expression":{"arguments":[{"id":7590,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"25100:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7589,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[6568,7056],"referencedDeclaration":7056,"src":"25089:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25089:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7592,"nodeType":"ExpressionStatement","src":"25089:16:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7593,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"25161:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25167:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"25161:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25181:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25161:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7669,"nodeType":"IfStatement","src":"25157:873:23","trueBody":{"id":7668,"nodeType":"Block","src":"25184:846:23","statements":[{"assignments":[7598,7600],"declarations":[{"constant":false,"id":7598,"mutability":"mutable","name":"success1","nameLocation":"25204:8:23","nodeType":"VariableDeclaration","scope":7668,"src":"25199:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7597,"name":"bool","nodeType":"ElementaryTypeName","src":"25199:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7600,"mutability":"mutable","name":"accStakeToken","nameLocation":"25222:13:23","nodeType":"VariableDeclaration","scope":7668,"src":"25214:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7599,"name":"uint256","nodeType":"ElementaryTypeName","src":"25214:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7607,"initialValue":{"arguments":[{"expression":{"id":7604,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"25281:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25287:25:23","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":5945,"src":"25281:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":7601,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"25239:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25245:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"25239:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25257:6:23","memberName":"tryMul","nodeType":"MemberAccess","referencedDeclaration":2639,"src":"25239:24:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25239:87:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"25198:128:23"},{"expression":{"arguments":[{"id":7609,"name":"success1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"25348:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"75736572207374616b6520616d6f756e74206f766572666c6f77","id":7610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25358:28:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c","typeString":"literal_string \"user stake amount overflow\""},"value":"user stake amount overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c","typeString":"literal_string \"user stake amount overflow\""}],"id":7608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"25340:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25340:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7612,"nodeType":"ExpressionStatement","src":"25340:47:23"},{"expression":{"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7613,"name":"success1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"25402:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7614,"name":"accStakeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"25412:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7615,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"25401:25:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":7618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25450:7:23","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"id":7616,"name":"accStakeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"25429:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25443:6:23","memberName":"tryDiv","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"25429:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25429:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"src":"25401:57:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7621,"nodeType":"ExpressionStatement","src":"25401:57:23"},{"expression":{"arguments":[{"id":7623,"name":"success1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"25480:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616363756d756c617465207265776172647320706572207374616b65206f766572666c6f77","id":7624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25490:39:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e","typeString":"literal_string \"accumulate rewards per stake overflow\""},"value":"accumulate rewards per stake overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e","typeString":"literal_string \"accumulate rewards per stake overflow\""}],"id":7622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"25472:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25472:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7626,"nodeType":"ExpressionStatement","src":"25472:58:23"},{"assignments":[7628,7630],"declarations":[{"constant":false,"id":7628,"mutability":"mutable","name":"success2","nameLocation":"25551:8:23","nodeType":"VariableDeclaration","scope":7668,"src":"25546:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7627,"name":"bool","nodeType":"ElementaryTypeName","src":"25546:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7630,"mutability":"mutable","name":"pendingRCC_","nameLocation":"25569:11:23","nodeType":"VariableDeclaration","scope":7668,"src":"25561:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7629,"name":"uint256","nodeType":"ElementaryTypeName","src":"25561:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7636,"initialValue":{"arguments":[{"expression":{"id":7633,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"25622:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25628:15:23","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":5961,"src":"25622:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7631,"name":"accStakeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"25584:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25598:6:23","memberName":"trySub","nodeType":"MemberAccess","referencedDeclaration":2597,"src":"25584:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25584:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"25545:112:23"},{"expression":{"arguments":[{"id":7638,"name":"success2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7628,"src":"25679:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"70656e64696e672072657761726473206f766572666c6f77","id":7639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25689:26:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4","typeString":"literal_string \"pending rewards overflow\""},"value":"pending rewards overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4","typeString":"literal_string \"pending rewards overflow\""}],"id":7637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"25671:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25671:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7641,"nodeType":"ExpressionStatement","src":"25671:45:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7642,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7630,"src":"25734:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25748:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25734:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7667,"nodeType":"IfStatement","src":"25730:290:23","trueBody":{"id":7666,"nodeType":"Block","src":"25751:269:23","statements":[{"assignments":[7646,7648],"declarations":[{"constant":false,"id":7646,"mutability":"mutable","name":"success3","nameLocation":"25775:8:23","nodeType":"VariableDeclaration","scope":7666,"src":"25770:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7645,"name":"bool","nodeType":"ElementaryTypeName","src":"25770:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7648,"mutability":"mutable","name":"_pendingRCC","nameLocation":"25793:11:23","nodeType":"VariableDeclaration","scope":7666,"src":"25785:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7647,"name":"uint256","nodeType":"ElementaryTypeName","src":"25785:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7654,"initialValue":{"arguments":[{"id":7652,"name":"pendingRCC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7630,"src":"25878:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":7649,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"25808:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25835:14:23","memberName":"pendingRewards","nodeType":"MemberAccess","referencedDeclaration":5963,"src":"25808:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25871:6:23","memberName":"tryAdd","nodeType":"MemberAccess","referencedDeclaration":2569,"src":"25808:69:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25808:82:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"25769:121:23"},{"expression":{"arguments":[{"id":7656,"name":"success3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"25916:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"70656e64696e672072657761726473206f766572666c6f77","id":7657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25926:26:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4","typeString":"literal_string \"pending rewards overflow\""},"value":"pending rewards overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4","typeString":"literal_string \"pending rewards overflow\""}],"id":7655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"25908:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25908:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7659,"nodeType":"ExpressionStatement","src":"25908:45:23"},{"expression":{"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7660,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"25971:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25977:14:23","memberName":"pendingRewards","nodeType":"MemberAccess","referencedDeclaration":5963,"src":"25971:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7663,"name":"_pendingRCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"25994:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25971:34:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7665,"nodeType":"ExpressionStatement","src":"25971:34:23"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7670,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"26085:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26095:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26085:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7695,"nodeType":"IfStatement","src":"26081:262:23","trueBody":{"id":7694,"nodeType":"Block","src":"26098:245:23","statements":[{"assignments":[7674,7676],"declarations":[{"constant":false,"id":7674,"mutability":"mutable","name":"success4","nameLocation":"26118:8:23","nodeType":"VariableDeclaration","scope":7694,"src":"26113:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7673,"name":"bool","nodeType":"ElementaryTypeName","src":"26113:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7676,"mutability":"mutable","name":"accStakeAmount","nameLocation":"26136:14:23","nodeType":"VariableDeclaration","scope":7694,"src":"26128:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7675,"name":"uint256","nodeType":"ElementaryTypeName","src":"26128:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7682,"initialValue":{"arguments":[{"expression":{"id":7679,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"26186:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26192:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"26186:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7677,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"26154:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26162:6:23","memberName":"tryMul","nodeType":"MemberAccess","referencedDeclaration":2639,"src":"26154:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26154:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"26112:105:23"},{"expression":{"arguments":[{"id":7684,"name":"success4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"26239:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616363756d756c617465207374616b6520616d6f756e74206f766572666c6f77","id":7685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26249:34:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720","typeString":"literal_string \"accumulate stake amount overflow\""},"value":"accumulate stake amount overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720","typeString":"literal_string \"accumulate stake amount overflow\""}],"id":7683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"26231:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26231:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7687,"nodeType":"ExpressionStatement","src":"26231:53:23"},{"expression":{"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7688,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"26298:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26304:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"26298:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7691,"name":"accStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"26318:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26298:34:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7693,"nodeType":"ExpressionStatement","src":"26298:34:23"}]}},{"assignments":[7697,7699],"declarations":[{"constant":false,"id":7697,"mutability":"mutable","name":"success5","nameLocation":"26403:8:23","nodeType":"VariableDeclaration","scope":7746,"src":"26398:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7696,"name":"bool","nodeType":"ElementaryTypeName","src":"26398:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7699,"mutability":"mutable","name":"_stakeTokenAmount","nameLocation":"26421:17:23","nodeType":"VariableDeclaration","scope":7746,"src":"26413:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7698,"name":"uint256","nodeType":"ElementaryTypeName","src":"26413:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7705,"initialValue":{"arguments":[{"id":7703,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"26498:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":7700,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"26442:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26461:16:23","memberName":"stakeTokenAmount","nodeType":"MemberAccess","referencedDeclaration":5947,"src":"26442:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26491:6:23","memberName":"tryAdd","nodeType":"MemberAccess","referencedDeclaration":2569,"src":"26442:55:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26442:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"26397:109:23"},{"expression":{"arguments":[{"id":7707,"name":"success5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"26524:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7374616b6520746f6b656e20616d6f756e74206f766572666c6f77","id":7708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26534:29:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf","typeString":"literal_string \"stake token amount overflow\""},"value":"stake token amount overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf","typeString":"literal_string \"stake token amount overflow\""}],"id":7706,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"26516:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26516:48:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7710,"nodeType":"ExpressionStatement","src":"26516:48:23"},{"expression":{"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7711,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"26574:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26580:16:23","memberName":"stakeTokenAmount","nodeType":"MemberAccess","referencedDeclaration":5947,"src":"26574:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7714,"name":"_stakeTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"26599:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26574:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7716,"nodeType":"ExpressionStatement","src":"26574:42:23"},{"assignments":[7718,7720],"declarations":[{"constant":false,"id":7718,"mutability":"mutable","name":"success6","nameLocation":"26633:8:23","nodeType":"VariableDeclaration","scope":7746,"src":"26628:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7717,"name":"bool","nodeType":"ElementaryTypeName","src":"26628:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7720,"mutability":"mutable","name":"_finishedRewards","nameLocation":"26651:16:23","nodeType":"VariableDeclaration","scope":7746,"src":"26643:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7719,"name":"uint256","nodeType":"ElementaryTypeName","src":"26643:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7727,"initialValue":{"arguments":[{"expression":{"id":7724,"name":"pool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"26709:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5952_storage_ptr","typeString":"struct RCCStake.Pool storage pointer"}},"id":7725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26715:25:23","memberName":"accumulateRewardsPerStake","nodeType":"MemberAccess","referencedDeclaration":5945,"src":"26709:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":7721,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"26671:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26677:11:23","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5959,"src":"26671:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26689:6:23","memberName":"tryMul","nodeType":"MemberAccess","referencedDeclaration":2639,"src":"26671:24:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26671:79:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"26627:123:23"},{"expression":{"arguments":[{"id":7729,"name":"success6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"26768:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"75736572207374416d6f756e74206d756c206163635243435065725354206f766572666c6f77","id":7730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26778:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5","typeString":"literal_string \"user stAmount mul accRCCPerST overflow\""},"value":"user stAmount mul accRCCPerST overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5","typeString":"literal_string \"user stAmount mul accRCCPerST overflow\""}],"id":7728,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"26760:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26760:59:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7732,"nodeType":"ExpressionStatement","src":"26760:59:23"},{"expression":{"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7733,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"26829:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$5968_storage_ptr","typeString":"struct RCCStake.User storage pointer"}},"id":7735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26835:15:23","memberName":"finishedRewards","nodeType":"MemberAccess","referencedDeclaration":5961,"src":"26829:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7736,"name":"_finishedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"26853:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26829:40:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7738,"nodeType":"ExpressionStatement","src":"26829:40:23"},{"eventCall":{"arguments":[{"expression":{"id":7740,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26893:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26897:6:23","memberName":"sender","nodeType":"MemberAccess","src":"26893:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7742,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"26905:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7743,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"26911:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7739,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"26885:7:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26885:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7745,"nodeType":"EmitStatement","src":"26880:39:23"}]},"documentation":{"id":7565,"nodeType":"StructuredDocumentation","src":"24726:196:23","text":" @notice Deposit staking token for RCC rewards\n @param _pid       Id of the pool to be deposited to\n @param _amount    Amount of staking tokens to be deposited"},"id":7747,"implemented":true,"kind":"function","modifiers":[],"name":"_deposit","nameLocation":"24936:8:23","nodeType":"FunctionDefinition","parameters":{"id":7570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7567,"mutability":"mutable","name":"_pid","nameLocation":"24953:4:23","nodeType":"VariableDeclaration","scope":7747,"src":"24945:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7566,"name":"uint256","nodeType":"ElementaryTypeName","src":"24945:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7569,"mutability":"mutable","name":"_amount","nameLocation":"24967:7:23","nodeType":"VariableDeclaration","scope":7747,"src":"24959:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7568,"name":"uint256","nodeType":"ElementaryTypeName","src":"24959:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24944:31:23"},"returnParameters":{"id":7571,"nodeType":"ParameterList","parameters":[],"src":"24985:0:23"},"scope":7832,"src":"24927:1999:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7785,"nodeType":"Block","src":"27244:201:23","statements":[{"assignments":[7756],"declarations":[{"constant":false,"id":7756,"mutability":"mutable","name":"RCCBal","nameLocation":"27262:6:23","nodeType":"VariableDeclaration","scope":7785,"src":"27254:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7755,"name":"uint256","nodeType":"ElementaryTypeName","src":"27254:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7764,"initialValue":{"arguments":[{"arguments":[{"id":7761,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"27293:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_RCCStake_$7832","typeString":"contract RCCStake"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RCCStake_$7832","typeString":"contract RCCStake"}],"id":7760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27285:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7759,"name":"address","nodeType":"ElementaryTypeName","src":"27285:7:23","typeDescriptions":{}}},"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27285:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7757,"name":"RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"27271:3:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27275:9:23","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1603,"src":"27271:13:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27271:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27254:45:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7765,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"27313:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7766,"name":"RCCBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"27324:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27313:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7783,"nodeType":"Block","src":"27389:50:23","statements":[{"expression":{"arguments":[{"id":7779,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"27416:3:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7780,"name":"RCCBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"27421:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7776,"name":"RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"27403:3:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27407:8:23","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1613,"src":"27403:12:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27403:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7782,"nodeType":"ExpressionStatement","src":"27403:25:23"}]},"id":7784,"nodeType":"IfStatement","src":"27309:130:23","trueBody":{"id":7775,"nodeType":"Block","src":"27332:51:23","statements":[{"expression":{"arguments":[{"id":7771,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"27359:3:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7772,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"27364:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7768,"name":"RCC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"27346:3:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1646","typeString":"contract IERC20"}},"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27350:8:23","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1613,"src":"27346:12:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27346:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7774,"nodeType":"ExpressionStatement","src":"27346:26:23"}]}}]},"documentation":{"id":7748,"nodeType":"StructuredDocumentation","src":"26932:242:23","text":" @notice Safe RCC transfer function, just in case if rounding error causes pool to not have enough RCCs\n @param _to        Address to get transferred RCCs\n @param _amount    Amount of RCC to be transferred"},"id":7786,"implemented":true,"kind":"function","modifiers":[],"name":"_safeRCCTransfer","nameLocation":"27188:16:23","nodeType":"FunctionDefinition","parameters":{"id":7753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7750,"mutability":"mutable","name":"_to","nameLocation":"27213:3:23","nodeType":"VariableDeclaration","scope":7786,"src":"27205:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7749,"name":"address","nodeType":"ElementaryTypeName","src":"27205:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7752,"mutability":"mutable","name":"_amount","nameLocation":"27226:7:23","nodeType":"VariableDeclaration","scope":7786,"src":"27218:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7751,"name":"uint256","nodeType":"ElementaryTypeName","src":"27218:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27204:30:23"},"returnParameters":{"id":7754,"nodeType":"ParameterList","parameters":[],"src":"27244:0:23"},"scope":7832,"src":"27179:266:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7830,"nodeType":"Block","src":"27974:399:23","statements":[{"assignments":[7795,7797],"declarations":[{"constant":false,"id":7795,"mutability":"mutable","name":"success","nameLocation":"28047:7:23","nodeType":"VariableDeclaration","scope":7830,"src":"28042:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7794,"name":"bool","nodeType":"ElementaryTypeName","src":"28042:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7797,"mutability":"mutable","name":"data","nameLocation":"28069:4:23","nodeType":"VariableDeclaration","scope":7830,"src":"28056:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7796,"name":"bytes","nodeType":"ElementaryTypeName","src":"28056:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7807,"initialValue":{"arguments":[{"hexValue":"","id":7805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28124:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":7800,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"28085:3:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28077:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7798,"name":"address","nodeType":"ElementaryTypeName","src":"28077:7:23","typeDescriptions":{}}},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28077:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28090:4:23","memberName":"call","nodeType":"MemberAccess","src":"28077:17:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7803,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7791,"src":"28102:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"28077:33:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28077:59:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"28041:95:23"},{"expression":{"arguments":[{"id":7809,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"28154:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e736665722063616c6c206661696c6564","id":7810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28163:26:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b","typeString":"literal_string \"ETH transfer call failed\""},"value":"ETH transfer call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b","typeString":"literal_string \"ETH transfer call failed\""}],"id":7808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"28146:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28146:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7812,"nodeType":"ExpressionStatement","src":"28146:44:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7813,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7797,"src":"28204:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28209:6:23","memberName":"length","nodeType":"MemberAccess","src":"28204:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28218:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28204:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7829,"nodeType":"IfStatement","src":"28200:167:23","trueBody":{"id":7828,"nodeType":"Block","src":"28221:146:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":7820,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7797,"src":"28271:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":7822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28278:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":7821,"name":"bool","nodeType":"ElementaryTypeName","src":"28278:4:23","typeDescriptions":{}}}],"id":7823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"28277:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":7818,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"28260:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28264:6:23","memberName":"decode","nodeType":"MemberAccess","src":"28260:10:23","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28260:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206f7065726174696f6e20646964206e6f742073756363656564","id":7825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28302:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4","typeString":"literal_string \"ETH transfer operation did not succeed\""},"value":"ETH transfer operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4","typeString":"literal_string \"ETH transfer operation did not succeed\""}],"id":7817,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"28235:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28235:121:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7827,"nodeType":"ExpressionStatement","src":"28235:121:23"}]}}]},"documentation":{"id":7787,"nodeType":"StructuredDocumentation","src":"27451:453:23","text":" @notice Safe ETH transfer function\n @param _to        Address to get transferred ETH\n @param _amount    Amount of ETH to be transferred\n FIXME: 什么函数适合放在 internal，只有内部调用的；哪些函数是只能放在内部调用呢？\n - 转账，涉及到钱的；也不完全这样说，角色权限 + 控制也可以，看取舍，修饰符，方法就那几个，遍历一下也可；"},"id":7831,"implemented":true,"kind":"function","modifiers":[],"name":"_safeETHTransfer","nameLocation":"27918:16:23","nodeType":"FunctionDefinition","parameters":{"id":7792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7789,"mutability":"mutable","name":"_to","nameLocation":"27943:3:23","nodeType":"VariableDeclaration","scope":7831,"src":"27935:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7788,"name":"address","nodeType":"ElementaryTypeName","src":"27935:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7791,"mutability":"mutable","name":"_amount","nameLocation":"27956:7:23","nodeType":"VariableDeclaration","scope":7831,"src":"27948:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7790,"name":"uint256","nodeType":"ElementaryTypeName","src":"27948:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27934:30:23"},"returnParameters":{"id":7793,"nodeType":"ParameterList","parameters":[],"src":"27974:0:23"},"scope":7832,"src":"27909:464:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7833,"src":"893:27482:23","usedErrors":[379,382,643,648,883,886,1070,1073,1284,1297,1658,2065,2328],"usedEvents":[387,875,880,1082,1091,1100,1237,6013,6015,6017,6019,6021,6025,6029,6033,6045,6053,6061,6069,6077,6085,6095,6103,6111,6119,6127]}],"src":"32:28344:23"},"id":23}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220282d6e13f29150aea007485a29c89218031bb875cd2872ee118a69af5d9c60c364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0x2D PUSH15 0x13F29150AEA007485A29C89218031B 0xB8 PUSH22 0xCD2872EE118A69AF5D9C60C364736F6C634300081C00 CALLER ","sourceMap":"496:5741:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220282d6e13f29150aea007485a29c89218031bb875cd2872ee118a69af5d9c60c364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0x2D PUSH15 0x13F29150AEA007485A29C89218031B 0xB8 PUSH22 0xCD2872EE118A69AF5D9C60C364736F6C634300081C00 CALLER ","sourceMap":"496:5741:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122097c4a4a0f10223a68001c463b9d8fc3a2058c1f646ee54c14674cf1aa0a2b48c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xC4 LOG4 LOG0 CALL MUL 0x23 0xA6 DUP1 ADD 0xC4 PUSH4 0xB9D8FC3A KECCAK256 PC 0xC1 0xF6 CHAINID 0xEE SLOAD 0xC1 CHAINID PUSH21 0xCF1AA0A2B48C64736F6C634300081C003300000000 ","sourceMap":"698:8692:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122097c4a4a0f10223a68001c463b9d8fc3a2058c1f646ee54c14674cf1aa0a2b48c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xC4 LOG4 LOG0 CALL MUL 0x23 0xA6 DUP1 ADD 0xC4 PUSH4 0xB9D8FC3A KECCAK256 PC 0xC1 0xF6 CHAINID 0xEE SLOAD 0xC1 CHAINID PUSH21 0xCF1AA0A2B48C64736F6C634300081C003300000000 ","sourceMap":"698:8692:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd6f7f92807443dc7e228416221bebd35dca6310896354927f3b5b5b186ab58764736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT PUSH16 0x7F92807443DC7E228416221BEBD35DCA PUSH4 0x10896354 SWAP3 PUSH32 0x3B5B5B186AB58764736F6C634300081C00330000000000000000000000000000 ","sourceMap":"233:5815:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd6f7f92807443dc7e228416221bebd35dca6310896354927f3b5b5b186ab58764736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT PUSH16 0x7F92807443DC7E228416221BEBD35DCA PUSH4 0x10896354 SWAP3 PUSH32 0x3B5B5B186AB58764736F6C634300081C00330000000000000000000000000000 ","sourceMap":"233:5815:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004b89e72da43ab1ee05bd033fb62a621154a79713cd82d3cd8a0e9353695a64e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xB8 SWAP15 PUSH19 0xDA43AB1EE05BD033FB62A621154A79713CD82D EXTCODECOPY 0xD8 LOG0 0xE9 CALLDATALOAD CALLDATASIZE SWAP6 0xA6 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"411:484:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004b89e72da43ab1ee05bd033fb62a621154a79713cd82d3cd8a0e9353695a64e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xB8 SWAP15 PUSH19 0xDA43AB1EE05BD033FB62A621154A79713CD82D EXTCODECOPY 0xD8 LOG0 0xE9 CALLDATALOAD CALLDATASIZE SWAP6 0xA6 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"411:484:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/rcc-stake.sol":{"RCCStake":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"stakeTokenAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolWeight","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"minDepositAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unStakeLockedBlocks","type":"uint256"}],"name":"AddPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"RccReward","type":"uint256"}],"name":"Claim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"pid","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"GetRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[],"name":"PausedClaim","type":"event"},{"anonymous":false,"inputs":[],"name":"PausedWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RequestUnstake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"endBlock","type":"uint256"}],"name":"SetEndBlock","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"poolWeight","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalPoolWeight","type":"uint256"}],"name":"SetPoolWeight","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC20","name":"RCC","type":"address"}],"name":"SetRCC","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"rccPerBlock","type":"uint256"}],"name":"SetRCCPerBlock","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"startBlock","type":"uint256"}],"name":"SetStartBlock","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"pid","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Stake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"pid","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UnStake","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[],"name":"UnpausedClaim","type":"event"},{"anonymous":false,"inputs":[],"name":"UnpausedWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalRCC","type":"uint256"}],"name":"UpdatePool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"minDepositAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"unStakeLockedBlocks","type":"uint256"}],"name":"UpdatePoolInfo","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ETH_PID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RCC","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_stakeTokenAddress","type":"address"},{"internalType":"uint256","name":"_poolWeight","type":"uint256"},{"internalType":"uint256","name":"_minDepositAmount","type":"uint256"},{"internalType":"uint256","name":"_unStakeLockedBlocks","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"addPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"endBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_from","type":"uint256"},{"internalType":"uint256","name":"_to","type":"uint256"}],"name":"getMultiplier","outputs":[{"internalType":"uint256","name":"multiplier","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"getPendingRCC","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_RCC","type":"address"},{"internalType":"uint256","name":"_startBlock","type":"uint256"},{"internalType":"uint256","name":"_endBlock","type":"uint256"},{"internalType":"uint256","name":"_rccPerBlock","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pauseClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pauseWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"name":"pendingRCCByBlockNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pool","outputs":[{"internalType":"address","name":"stakeTokenAddress","type":"address"},{"internalType":"uint256","name":"poolWeight","type":"uint256"},{"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"internalType":"uint256","name":"accumulateRewardsPerStake","type":"uint256"},{"internalType":"uint256","name":"stakeTokenAmount","type":"uint256"},{"internalType":"uint256","name":"minDepositAmount","type":"uint256"},{"internalType":"uint256","name":"unStakeLockedBlocks","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pools","outputs":[{"internalType":"address","name":"stakeTokenAddress","type":"address"},{"internalType":"uint256","name":"poolWeight","type":"uint256"},{"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"internalType":"uint256","name":"accumulateRewardsPerStake","type":"uint256"},{"internalType":"uint256","name":"stakeTokenAmount","type":"uint256"},{"internalType":"uint256","name":"minDepositAmount","type":"uint256"},{"internalType":"uint256","name":"unStakeLockedBlocks","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rccPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_endBlock","type":"uint256"}],"name":"setEndBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_poolWeight","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"setPoolWeight","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_RCC","type":"address"}],"name":"setRCC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rccPerBlock","type":"uint256"}],"name":"setRCCPerBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_startBlock","type":"uint256"}],"name":"setStartBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"stakingBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"startBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalPoolWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpPauseWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpauseClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unstakeReleaseBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_minDepositAmount","type":"uint256"},{"internalType":"uint256","name":"_unStakeLockedBlocks","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"user","outputs":[{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"uint256","name":"finishedRewards","type":"uint256"},{"internalType":"uint256","name":"pendingRewards","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"users","outputs":[{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"uint256","name":"finishedRewards","type":"uint256"},{"internalType":"uint256","name":"pendingRewards","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"withdrawAmount","outputs":[{"internalType":"uint256","name":"requestAmount","type":"uint256"},{"internalType":"uint256","name":"pendingWithdrawAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x60BE PUSH2 0x6C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x39B3 ADD MSTORE DUP2 DUP2 PUSH2 0x3A08 ADD MSTORE PUSH2 0x3C9E ADD MSTORE PUSH2 0x60BE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2FF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E2C8A5B GT PUSH2 0x190 JUMPI DUP1 PUSH4 0xBFC3EBBA GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xE2BBB158 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF6326FB3 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0xB41 JUMPI DUP1 PUSH4 0xFAD07ECE EQ PUSH2 0xB4B JUMPI DUP1 PUSH4 0xFE313112 EQ PUSH2 0xB74 JUMPI DUP1 PUSH4 0xFF423357 EQ PUSH2 0xBB7 JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0xAC6 JUMPI DUP1 PUSH4 0xF35E4A6E EQ PUSH2 0xAEF JUMPI DUP1 PUSH4 0xF5485D32 EQ PUSH2 0xB18 JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0xBFC3EBBA EQ PUSH2 0x9F2 JUMPI DUP1 PUSH4 0xC397920E EQ PUSH2 0xA1D JUMPI DUP1 PUSH4 0xC713AA94 EQ PUSH2 0xA34 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xA5D JUMPI DUP1 PUSH4 0xD86C0444 EQ PUSH2 0xA86 JUMPI DUP1 PUSH4 0xDE065CAA EQ PUSH2 0xAAF JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0xAB5E124A GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xB3944D52 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xB3944D52 EQ PUSH2 0x94A JUMPI DUP1 PUSH4 0xB6D9D919 EQ PUSH2 0x975 JUMPI DUP1 PUSH4 0xB908AFA8 EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0xBED66C08 EQ PUSH2 0x9C9 JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0xAB5E124A EQ PUSH2 0x8B1 JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x8DC JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x91F JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x9E2C8A5B EQ PUSH2 0x78B JUMPI DUP1 PUSH4 0xA17BFF83 EQ PUSH2 0x7B4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x7DF JUMPI DUP1 PUSH4 0xA27D9279 EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0xA72D5BF4 EQ PUSH2 0x847 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x872 JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x48CD4CB1 GT PUSH2 0x24F JUMPI DUP1 PUSH4 0x6155E3DE GT PUSH2 0x208 JUMPI DUP1 PUSH4 0x75B238FC GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x6FA JUMPI DUP1 PUSH4 0x8FF095F9 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x74E JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x6155E3DE EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0x70FF0173 EQ PUSH2 0x6A4 JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0x4EC81AF1 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x620 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x64B JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x2BC JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x296 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x37849B3C EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0x41721AB7 EQ PUSH2 0x54A JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x2F3FFB9F EQ PUSH2 0x48E JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x2559004 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x83C6323 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x11548234 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x23B6443E EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3FF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x46B3 JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x46FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x356 PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x47D4 JUMP JUMPDEST PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x4873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x426 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x48C4 JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x4948 JUMP JUMPDEST PUSH2 0x1129 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A3 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x46FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x4948 JUMP JUMPDEST PUSH2 0x115E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x47D4 JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x518 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4988 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x548 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x1210 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x571 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x49BF JUMP JUMPDEST PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59C PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST PUSH2 0x157B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x4BFD JUMP JUMPDEST PUSH2 0x181C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x183B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x635 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x660 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x46FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68B PUSH2 0x1B86 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A2 PUSH2 0x1C49 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B9 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E4 PUSH2 0x1C7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x721 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x4C59 JUMP JUMPDEST PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x74C PUSH2 0x1DC6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x775 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x4948 JUMP JUMPDEST PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x782 SWAP2 SWAP1 PUSH2 0x46FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x4C59 JUMP JUMPDEST PUSH2 0x1F03 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C9 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F4 PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x801 SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x831 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82C SWAP2 SWAP1 PUSH2 0x47D4 JUMP JUMPDEST PUSH2 0x2218 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83E SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85C PUSH2 0x2276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x869 SWAP2 SWAP1 PUSH2 0x4873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x899 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x4C99 JUMP JUMPDEST PUSH2 0x229C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4988 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C6 PUSH2 0x22C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x46FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x903 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8FE SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x22D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x916 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x934 PUSH2 0x234B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x4DC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95F PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96C SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x997 SWAP2 SWAP1 PUSH2 0x4E11 JUMP JUMPDEST PUSH2 0x2391 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B3 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C0 SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x2732 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA07 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA32 PUSH2 0x27DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x28A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x4948 JUMP JUMPDEST PUSH2 0x2947 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAAD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x4E8C JUMP JUMPDEST PUSH2 0x2969 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC4 PUSH2 0x2AAC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE8 SWAP2 SWAP1 PUSH2 0x4C59 JUMP JUMPDEST PUSH2 0x2B6F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB16 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x2D21 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x4EDF JUMP JUMPDEST PUSH2 0x2DC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB49 PUSH2 0x2E9C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB72 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x4F0C JUMP JUMPDEST PUSH2 0x2FB8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBAE SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD9 SWAP2 SWAP1 PUSH2 0x47D4 JUMP JUMPDEST PUSH2 0x319D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBEC SWAP3 SWAP2 SWAP1 PUSH2 0x4F5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xC68 JUMPI POP PUSH2 0xC67 DUP3 PUSH2 0x32FE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBC SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD53 PUSH2 0x3368 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7E PUSH2 0x3390 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC5 SWAP1 PUSH2 0x5040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0xE16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0D SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xE2C JUMPI PUSH2 0xE2B PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xF24 JUMPI NUMBER DUP5 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEBC JUMPI PUSH2 0xEBB PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0xF24 JUMPI DUP4 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEEA JUMPI PUSH2 0xEE9 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP4 PUSH2 0xF07 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP3 POP DUP2 DUP1 PUSH2 0xF14 SWAP1 PUSH2 0x50F2 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE96 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP5 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP PUSH2 0xF3B SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xFB9 JUMPI DUP4 PUSH1 0x3 ADD DUP3 DUP3 PUSH2 0xF52 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF63 JUMPI PUSH2 0xF62 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD DUP5 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF87 JUMPI PUSH2 0xF86 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF28 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x100F JUMPI DUP4 PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH2 0xFD9 JUMPI PUSH2 0xFD8 PUSH2 0x516E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP SWAP1 SSTORE DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xFBD JUMP JUMPDEST POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x10D1 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1080 JUMPI PUSH2 0x107B CALLER DUP4 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x10CF CALLER DUP4 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x34E3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST NUMBER DUP7 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1119 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1132 DUP3 PUSH2 0xD48 JUMP JUMPDEST PUSH2 0x113B DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH2 0x1145 DUP4 DUP4 PUSH2 0x3576 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1166 PUSH2 0x3677 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D4 DUP3 DUP3 PUSH2 0x367F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x1218 PUSH2 0x3390 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x1260 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1257 SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A7 SWAP1 PUSH2 0x51E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x12C6 JUMPI PUSH2 0x12C5 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1333 DUP5 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x5209 JUMP JUMPDEST PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST PUSH2 0x1370 SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x139A JUMPI PUSH1 0x0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1399 CALLER DUP3 PUSH2 0x3781 JUMP JUMPDEST JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x13B7 SWAP2 SWAP1 PUSH2 0x5209 JUMP JUMPDEST PUSH2 0x13C1 SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1410 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1436 JUMPI PUSH2 0x1435 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD DUP7 LT DUP1 ISZERO PUSH2 0x14C0 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x1527 JUMPI PUSH1 0x0 PUSH2 0x14D5 DUP6 PUSH1 0x2 ADD SLOAD DUP9 PUSH2 0x1CA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP7 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x14EC SWAP2 SWAP1 PUSH2 0x5209 JUMP JUMPDEST PUSH2 0x14F6 SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST SWAP1 POP DUP3 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x150D SWAP2 SWAP1 PUSH2 0x5209 JUMP JUMPDEST PUSH2 0x1517 SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST DUP5 PUSH2 0x1522 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1554 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST PUSH2 0x155E SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1585 PUSH2 0x3975 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x15D3 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1608 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1616 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x164D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x169D JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP7 DUP9 GT ISZERO PUSH2 0x16E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D7 SWAP1 PUSH2 0x531D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 GT PUSH2 0x1723 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171A SWAP1 PUSH2 0x53AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x172B PUSH2 0x399D JUMP JUMPDEST PUSH2 0x1733 PUSH2 0x39A7 JUMP JUMPDEST PUSH2 0x1740 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0x3576 JUMP JUMPDEST POP PUSH2 0x176B PUSH32 0xF47FC0C09EBBFE308D89B8035681A1164B9882BCFD49EB89861067738A30F5AB CALLER PUSH2 0x3576 JUMP JUMPDEST POP PUSH2 0x1796 PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE CALLER PUSH2 0x3576 JUMP JUMPDEST POP PUSH2 0x17A0 DUP10 PUSH2 0x2DC8 JUMP JUMPDEST DUP8 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1811 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1808 SWAP2 SWAP1 PUSH2 0x541E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1824 PUSH2 0x39B1 JUMP JUMPDEST PUSH2 0x182D DUP3 PUSH2 0x3A97 JUMP JUMPDEST PUSH2 0x1837 DUP3 DUP3 PUSH2 0x3AC5 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x1883 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187A SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1899 JUMPI PUSH2 0x1898 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x18BA JUMPI POP PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x18DB JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1902 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x18F4 DUP7 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x3BE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1946 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193D SWAP1 PUSH2 0x5485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x195B PUSH1 0x4 SLOAD DUP3 PUSH2 0x3C37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x19A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199A SWAP1 PUSH2 0x5485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x0 DUP1 PUSH2 0x19D3 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x3BE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1A17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0E SWAP1 PUSH2 0x5485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A2A DUP4 DUP3 PUSH2 0x3C37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x1A72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A69 SWAP1 PUSH2 0x5485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A8C DUP4 DUP11 PUSH1 0x3 ADD SLOAD PUSH2 0x3C6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1AD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC7 SWAP1 PUSH2 0x5485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP10 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST NUMBER DUP6 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x2 ADD SLOAD DUP8 PUSH32 0xF5D2D72D9B25D6853AFD7D0554A113B705234B6A68BB36B7F143662994632411 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B1C SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B38 PUSH2 0x3C9C JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B6C PUSH2 0x3D23 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x1BB0 DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1BFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF6 SWAP1 PUSH2 0x5517 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x2523DFDAFA00190F21A4CBD0C25179C8DD3CB34A6C17FEA952ECCA8FA8332C0E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1C67 DUP2 PUSH2 0x183B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1C56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x1CE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CDE SWAP1 PUSH2 0x5583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD DUP4 LT ISZERO PUSH2 0x1CF7 JUMPI PUSH1 0x0 SLOAD SWAP3 POP JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x1D07 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH2 0x1D15 SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST GT PUSH2 0x1D55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D4C SWAP1 PUSH2 0x5583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D77 PUSH1 0x2 SLOAD DUP6 DUP6 PUSH2 0x1D69 SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST PUSH2 0x3BE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x1DBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB6 SWAP1 PUSH2 0x55EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x1DF0 DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E37 SWAP1 PUSH2 0x565B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x443BF540E8151617CD5C39A681CC35A5A22BE078B6F0CF16E5BD822B4C4B61FF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E95 PUSH2 0x3368 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F0B PUSH2 0x3390 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1F5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F52 SWAP1 PUSH2 0x5040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x1FA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F9A SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FB9 JUMPI PUSH2 0x1FB8 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x2064 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205B SWAP1 PUSH2 0x56C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x206D DUP6 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2091 SWAP2 SWAP1 PUSH2 0x5209 JUMP JUMPDEST PUSH2 0x209B SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST PUSH2 0x20A5 SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x20CC JUMPI DUP1 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20C4 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0x2158 JUMPI DUP5 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20E9 SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x6 ADD SLOAD NUMBER PUSH2 0x2115 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP JUMPDEST DUP5 DUP4 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x216C SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2190 SWAP2 SWAP1 PUSH2 0x5209 JUMP JUMPDEST PUSH2 0x219A SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x21AD SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC80277265097707F6F12A4AC4C09D46C9926E2EEA2536F63616CB04D9FCAD7D6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x21FB SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x2262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2259 SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x226D DUP5 DUP5 NUMBER PUSH2 0x141F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x22E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x23BB DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x2483 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x23F6 JUMPI PUSH2 0x23F5 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x247E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2475 SWAP1 PUSH2 0x5733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24F3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24E9 SWAP1 PUSH2 0x5733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x2536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x252D SWAP1 PUSH2 0x579F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER LT PUSH2 0x257A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2571 SWAP1 PUSH2 0x580B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2589 JUMPI PUSH2 0x2588 PUSH2 0x1C49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD NUMBER GT PUSH2 0x259B JUMPI PUSH1 0x0 SLOAD PUSH2 0x259D JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP DUP6 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x25B1 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP DUP1 DUP7 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA296FCE13E7A0E622B3A892E66220C248337289483A3CFA4130CDE0CAA1346 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x26FD SWAP3 SWAP2 SWAP1 PUSH2 0x4F5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xF47FC0C09EBBFE308D89B8035681A1164B9882BCFD49EB89861067738A30F5AB DUP2 JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x275C DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x279F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2796 SWAP1 PUSH2 0x53AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x4C70925B625536DD633F6BD2D615C67FDDC2E7C63C31164047A981A0DF3FEE54 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x2806 DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284D SWAP1 PUSH2 0x5877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x27C975733BACECA09666FAE356A901E083676848AAF9710150079385DAAE743 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x28CA DUP2 PUSH2 0x3562 JUMP JUMPDEST DUP2 PUSH1 0x0 SLOAD GT ISZERO PUSH2 0x290F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2906 SWAP1 PUSH2 0x531D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x1132C5BACCB51DA3D049FABC819697DC845FA224AD59D9B555507D6446B40850 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2950 DUP3 PUSH2 0xD48 JUMP JUMPDEST PUSH2 0x2959 DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH2 0x2963 DUP4 DUP4 PUSH2 0x367F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x29B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A8 SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x29DB DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP6 LT PUSH2 0x2A22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A19 SWAP1 PUSH2 0x58E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2A37 JUMPI PUSH2 0x2A36 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2A61 JUMPI PUSH2 0x2A60 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP5 DUP7 PUSH32 0x30DFFDEDAA3E3B4849298233F7CD71D229956E875AB09270498C96B7CF9181FD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x2AD6 DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B1C SWAP1 PUSH2 0x565B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7C8FAF23A72A53EB5C2C466DC81386A58B2A27D0CC3C7C580A3C12E372BA313 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2BBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BB6 SWAP1 PUSH2 0x5040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x2C07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BFE SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SUB PUSH2 0x2C4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C41 SWAP1 PUSH2 0x594F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2C60 JUMPI PUSH2 0x2C5F PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP1 PUSH1 0x5 ADD SLOAD DUP4 GT PUSH2 0x2CB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CAD SWAP1 PUSH2 0x59BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x2D11 JUMPI PUSH2 0x2D10 CALLER ADDRESS DUP6 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D4B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x2D1B DUP5 DUP5 PUSH2 0x3DCD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x2D4B DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x2D90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D87 SWAP1 PUSH2 0x531D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x63B90B79F11A0F132BCB2C4A4DDD44ABDA45C1308A83B2919318DF7F5F8B7BE4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x2DF2 DUP2 PUSH2 0x3562 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x153AAE53B92218044BD5F43922617C6B253E50AC98A41B44C3ACB5625DED3488 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2EA4 PUSH2 0x3390 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x2EBB JUMPI PUSH2 0x2EBA PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F55 SWAP1 PUSH2 0x5A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP DUP2 PUSH1 0x5 ADD SLOAD DUP2 GT PUSH2 0x2FA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FA0 SWAP1 PUSH2 0x59BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FB4 PUSH1 0x0 DUP3 PUSH2 0x3DCD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x2FE2 DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP5 LT PUSH2 0x3029 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3020 SWAP1 PUSH2 0x58E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x306C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3063 SWAP1 PUSH2 0x5A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x307B JUMPI PUSH2 0x307A PUSH2 0x1C49 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x3090 JUMPI PUSH2 0x308F PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x30AF SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST PUSH2 0x30B9 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x30D4 JUMPI PUSH2 0x30D3 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH32 0x4B8FA3D6A87CB21D1BF4978BF60628AE358A28AC7F39DE1751A481C6DD957617 DUP5 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x311D SWAP3 SWAP2 SWAP1 PUSH2 0x4F5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x313B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x31E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31DF SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x32F4 JUMPI NUMBER DUP3 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3265 JUMPI PUSH2 0x3264 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0x32B2 JUMPI DUP2 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3292 JUMPI PUSH2 0x3291 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 PUSH2 0x32AF SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP4 POP JUMPDEST DUP2 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x32C8 JUMPI PUSH2 0x32C7 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x32E5 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP5 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x323F JUMP JUMPDEST POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3398 PUSH2 0x1B61 JUMP JUMPDEST ISZERO PUSH2 0x33CF JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x33F8 SWAP1 PUSH2 0x5AE4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3435 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x343A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x347F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3476 SWAP1 PUSH2 0x5B45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x34DD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x349D SWAP2 SWAP1 PUSH2 0x5B7A JUMP JUMPDEST PUSH2 0x34DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34D3 SWAP1 PUSH2 0x5C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x355D DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3516 SWAP3 SWAP2 SWAP1 PUSH2 0x5C39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x4196 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3573 DUP2 PUSH2 0x356E PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x4238 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3581 PUSH2 0x3368 JUMP JUMPDEST SWAP1 POP PUSH2 0x358D DUP5 DUP5 PUSH2 0x1E8A JUMP JUMPDEST PUSH2 0x366B JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3607 PUSH2 0x3677 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x368A PUSH2 0x3368 JUMP JUMPDEST SWAP1 POP PUSH2 0x3696 DUP5 DUP5 PUSH2 0x1E8A JUMP JUMPDEST ISZERO PUSH2 0x3775 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3711 PUSH2 0x3677 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x377B JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37DE SWAP2 SWAP1 PUSH2 0x5C62 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x37FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x381F SWAP2 SWAP1 PUSH2 0x5C92 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT PUSH2 0x38CE JUMPI PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3885 SWAP3 SWAP2 SWAP1 PUSH2 0x5C39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38C8 SWAP2 SWAP1 PUSH2 0x5B7A JUMP JUMPDEST POP PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x392B SWAP3 SWAP2 SWAP1 PUSH2 0x5C39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x394A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x396E SWAP2 SWAP1 PUSH2 0x5B7A JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39A5 PUSH2 0x4289 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x39AF PUSH2 0x4289 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3A5E JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A45 PUSH2 0x42C9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3A95 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0xF47FC0C09EBBFE308D89B8035681A1164B9882BCFD49EB89861067738A30F5AB PUSH2 0x3AC1 DUP2 PUSH2 0x3562 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3B2D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B2A SWAP2 SWAP1 PUSH2 0x5CD4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3B6E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B65 SWAP2 SWAP1 PUSH2 0x5C62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x3BD5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BCC SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BDF DUP4 DUP4 PUSH2 0x4320 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 SUB PUSH2 0x3BFC JUMPI PUSH1 0x1 PUSH1 0x0 SWAP2 POP SWAP2 POP PUSH2 0x3C30 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 MUL SWAP1 POP DUP4 DUP6 DUP3 DUP2 PUSH2 0x3C14 JUMPI PUSH2 0x3C13 PUSH2 0x524B JUMP JUMPDEST JUMPDEST DIV EQ PUSH2 0x3C27 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x3C30 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SUB PUSH2 0x3C4E JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x3C66 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x3C60 JUMPI PUSH2 0x3C5F PUSH2 0x524B JUMP JUMPDEST JUMPDEST DIV SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP6 ADD SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x3C8C JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x3C95 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D21 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3DC7 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3D80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5D01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x4196 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3DE3 JUMPI PUSH2 0x3DE2 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x3E50 DUP5 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x3FF8 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3E7B DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x3BE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3EBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB6 SWAP1 PUSH2 0x5D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3EDA PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x3C37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x3F22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F19 SWAP1 PUSH2 0x5E16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3F3C DUP6 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0x4393 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3F80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F77 SWAP1 PUSH2 0x5E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x3FF3 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3FA3 DUP4 DUP9 PUSH1 0x2 ADD SLOAD PUSH2 0x3C6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3FE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FDE SWAP1 PUSH2 0x5E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP8 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x406B JUMPI PUSH1 0x0 DUP1 PUSH2 0x401B DUP4 PUSH1 0x0 ADD SLOAD DUP7 PUSH2 0x3BE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x405F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4056 SWAP1 PUSH2 0x5EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4085 DUP6 DUP6 PUSH1 0x4 ADD SLOAD PUSH2 0x3C6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x40C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C0 SWAP1 PUSH2 0x5F5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x40F0 DUP7 PUSH1 0x3 ADD SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x3BE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x4134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x412B SWAP1 PUSH2 0x5FEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP8 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP10 PUSH1 0x40 MLOAD PUSH2 0x4184 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x41B9 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x41D4 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x41F0 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x4232 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4229 SWAP2 SWAP1 PUSH2 0x5C62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4242 DUP3 DUP3 PUSH2 0x1E8A JUMP JUMPDEST PUSH2 0x4285 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x427C SWAP3 SWAP2 SWAP1 PUSH2 0x600C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4291 PUSH2 0x43BB JUMP JUMPDEST PUSH2 0x42C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F7 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x43DB JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4329 DUP3 PUSH2 0x43E5 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x4386 JUMPI PUSH2 0x4380 DUP3 DUP3 PUSH2 0x44B2 JUMP JUMPDEST POP PUSH2 0x438F JUMP JUMPDEST PUSH2 0x438E PUSH2 0x4536 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x43AA JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x43B4 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 SUB SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43C5 PUSH2 0x3975 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x4441 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4438 SWAP2 SWAP1 PUSH2 0x5C62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x446E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x43DB JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x44DC SWAP2 SWAP1 PUSH2 0x6071 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4517 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x451C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x452C DUP6 DUP4 DUP4 PUSH2 0x4573 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x4571 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x4588 JUMPI PUSH2 0x4583 DUP3 PUSH2 0x4602 JUMP JUMPDEST PUSH2 0x45FA JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x45B0 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x45F2 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45E9 SWAP2 SWAP1 PUSH2 0x5C62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x45FB JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x4615 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4690 DUP2 PUSH2 0x465B JUMP JUMPDEST DUP2 EQ PUSH2 0x469B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46AD DUP2 PUSH2 0x4687 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46C9 JUMPI PUSH2 0x46C8 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x46D7 DUP5 DUP3 DUP6 ADD PUSH2 0x469E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x46F5 DUP2 PUSH2 0x46E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4710 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x46EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4729 DUP2 PUSH2 0x4716 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4744 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4720 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4753 DUP2 PUSH2 0x4716 JUMP JUMPDEST DUP2 EQ PUSH2 0x475E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4770 DUP2 PUSH2 0x474A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A1 DUP3 PUSH2 0x4776 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47B1 DUP2 PUSH2 0x4796 JUMP JUMPDEST DUP2 EQ PUSH2 0x47BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x47CE DUP2 PUSH2 0x47A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47EB JUMPI PUSH2 0x47EA PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x47F9 DUP6 DUP3 DUP7 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x480A DUP6 DUP3 DUP7 ADD PUSH2 0x47BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4839 PUSH2 0x4834 PUSH2 0x482F DUP5 PUSH2 0x4776 JUMP JUMPDEST PUSH2 0x4814 JUMP JUMPDEST PUSH2 0x4776 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x484B DUP3 PUSH2 0x481E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x485D DUP3 PUSH2 0x4840 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x486D DUP2 PUSH2 0x4852 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4888 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48A1 DUP2 PUSH2 0x488E JUMP JUMPDEST DUP2 EQ PUSH2 0x48AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48BE DUP2 PUSH2 0x4898 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48DA JUMPI PUSH2 0x48D9 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48E8 DUP5 DUP3 DUP6 ADD PUSH2 0x48AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48FA DUP2 PUSH2 0x488E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4915 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x48F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4931 JUMPI PUSH2 0x4930 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x493F DUP5 DUP3 DUP6 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x495F JUMPI PUSH2 0x495E PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x496D DUP6 DUP3 DUP7 ADD PUSH2 0x48AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x497E DUP6 DUP3 DUP7 ADD PUSH2 0x47BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x499D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x49AA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x49B7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4720 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x49D8 JUMPI PUSH2 0x49D7 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49E6 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x49F7 DUP7 DUP3 DUP8 ADD PUSH2 0x47BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4A08 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1D DUP3 PUSH2 0x4796 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A2D DUP2 PUSH2 0x4A12 JUMP JUMPDEST DUP2 EQ PUSH2 0x4A38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A4A DUP2 PUSH2 0x4A24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4A6A JUMPI PUSH2 0x4A69 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A78 DUP8 DUP3 DUP9 ADD PUSH2 0x4A3B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4A89 DUP8 DUP3 DUP9 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4A9A DUP8 DUP3 DUP9 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4AAB DUP8 DUP3 DUP9 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4B0A DUP3 PUSH2 0x4AC1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4B29 JUMPI PUSH2 0x4B28 PUSH2 0x4AD2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3C PUSH2 0x4647 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B48 DUP3 DUP3 PUSH2 0x4B01 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4B68 JUMPI PUSH2 0x4B67 PUSH2 0x4AD2 JUMP JUMPDEST JUMPDEST PUSH2 0x4B71 DUP3 PUSH2 0x4AC1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA0 PUSH2 0x4B9B DUP5 PUSH2 0x4B4D JUMP JUMPDEST PUSH2 0x4B32 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4BBC JUMPI PUSH2 0x4BBB PUSH2 0x4ABC JUMP JUMPDEST JUMPDEST PUSH2 0x4BC7 DUP5 DUP3 DUP6 PUSH2 0x4B7E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4BE4 JUMPI PUSH2 0x4BE3 PUSH2 0x4AB7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4BF4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C14 JUMPI PUSH2 0x4C13 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C22 DUP6 DUP3 DUP7 ADD PUSH2 0x47BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C43 JUMPI PUSH2 0x4C42 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST PUSH2 0x4C4F DUP6 DUP3 DUP7 ADD PUSH2 0x4BCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C70 JUMPI PUSH2 0x4C6F PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C7E DUP6 DUP3 DUP7 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4C8F DUP6 DUP3 DUP7 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4CAF JUMPI PUSH2 0x4CAE PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CBD DUP5 DUP3 DUP6 ADD PUSH2 0x47BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CCF DUP2 PUSH2 0x4796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x4CEA PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x4CC6 JUMP JUMPDEST PUSH2 0x4CF7 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x4D04 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x4D11 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x4D1E PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x4D2B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x4D38 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x4720 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D7E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D63 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D95 DUP3 PUSH2 0x4D44 JUMP JUMPDEST PUSH2 0x4D9F DUP2 DUP6 PUSH2 0x4D4F JUMP JUMPDEST SWAP4 POP PUSH2 0x4DAF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4D60 JUMP JUMPDEST PUSH2 0x4DB8 DUP2 PUSH2 0x4AC1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DDD DUP2 DUP5 PUSH2 0x4D8A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4DEE DUP2 PUSH2 0x46E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x4DF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E0B DUP2 PUSH2 0x4DE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4E2D JUMPI PUSH2 0x4E2C PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4E3B DUP9 DUP3 DUP10 ADD PUSH2 0x47BF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4E4C DUP9 DUP3 DUP10 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4E5D DUP9 DUP3 DUP10 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4E6E DUP9 DUP3 DUP10 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x4E7F DUP9 DUP3 DUP10 ADD PUSH2 0x4DFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4EA5 JUMPI PUSH2 0x4EA4 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4EB3 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4EC4 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4ED5 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EF5 JUMPI PUSH2 0x4EF4 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F03 DUP5 DUP3 DUP6 ADD PUSH2 0x4A3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4F25 JUMPI PUSH2 0x4F24 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F33 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4F44 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4F55 DUP7 DUP3 DUP8 ADD PUSH2 0x4DFC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4F74 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x4F81 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4720 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C696420706964000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FBE PUSH1 0xB DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x4FC9 DUP3 PUSH2 0x4F88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FED DUP2 PUSH2 0x4FB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7769746864726177206973207061757365640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x502A PUSH1 0x12 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5035 DUP3 PUSH2 0x4FF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5059 DUP2 PUSH2 0x501D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x50C9 DUP3 PUSH2 0x4716 JUMP JUMPDEST SWAP2 POP PUSH2 0x50D4 DUP4 PUSH2 0x4716 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x50EC JUMPI PUSH2 0x50EB PUSH2 0x508F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50FD DUP3 PUSH2 0x4716 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x512F JUMPI PUSH2 0x512E PUSH2 0x508F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5145 DUP3 PUSH2 0x4716 JUMP JUMPDEST SWAP2 POP PUSH2 0x5150 DUP4 PUSH2 0x4716 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5168 JUMPI PUSH2 0x5167 PUSH2 0x508F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x636C61696D206973207061757365640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D3 PUSH1 0xF DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x51DE DUP3 PUSH2 0x519D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5202 DUP2 PUSH2 0x51C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5214 DUP3 PUSH2 0x4716 JUMP JUMPDEST SWAP2 POP PUSH2 0x521F DUP4 PUSH2 0x4716 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x522D DUP2 PUSH2 0x4716 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x5244 JUMPI PUSH2 0x5243 PUSH2 0x508F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5285 DUP3 PUSH2 0x4716 JUMP JUMPDEST SWAP2 POP PUSH2 0x5290 DUP4 PUSH2 0x4716 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x52A0 JUMPI PUSH2 0x529F PUSH2 0x524B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x737461727420626C6F636B206D757374206265206C657373207468616E20656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420626C6F636B00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5307 PUSH1 0x27 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5312 DUP3 PUSH2 0x52AB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5336 DUP2 PUSH2 0x52FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7263632070657220626C6F636B206D7573742062652067726561746572207468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E203000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5399 PUSH1 0x24 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x53A4 DUP3 PUSH2 0x533D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53C8 DUP2 PUSH2 0x538C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5408 PUSH2 0x5403 PUSH2 0x53FE DUP5 PUSH2 0x53CF JUMP JUMPDEST PUSH2 0x4814 JUMP JUMPDEST PUSH2 0x53D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5418 DUP2 PUSH2 0x53ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5433 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x540F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F766572666C6F77000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x546F PUSH1 0x8 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x547A DUP3 PUSH2 0x5439 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x549E DUP2 PUSH2 0x5462 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77697468647261772068617320616C7265616479206265656E20756E70617573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5501 PUSH1 0x22 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x550C DUP3 PUSH2 0x54A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5530 DUP2 PUSH2 0x54F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C69642072616E676500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x556D PUSH1 0xD DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5578 DUP3 PUSH2 0x5537 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x559C DUP2 PUSH2 0x5560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D756C7469706C696572206F766572666C6F7700000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55D9 PUSH1 0x13 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x55E4 DUP3 PUSH2 0x55A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5608 DUP2 PUSH2 0x55CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x636C61696D2068617320616C7265616479206265656E20756E70617573656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5645 PUSH1 0x1F DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5650 DUP3 PUSH2 0x560F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5674 DUP2 PUSH2 0x5638 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E74207374616B696E6720616D6F756E740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56B1 PUSH1 0x1B DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x56BC DUP3 PUSH2 0x567B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x56E0 DUP2 PUSH2 0x56A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x74686520666972737420706F6F6C206D7573742062652045544820706F6F6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x571D PUSH1 0x1F DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5728 DUP3 PUSH2 0x56E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x574C DUP2 PUSH2 0x5710 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C6964207769746864726177206C6F636B656420626C6F636B730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5789 PUSH1 0x1E DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5794 DUP3 PUSH2 0x5753 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x57B8 DUP2 PUSH2 0x577C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C726561647920656E64656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57F5 PUSH1 0xD DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5800 DUP3 PUSH2 0x57BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5824 DUP2 PUSH2 0x57E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77697468647261772068617320616C7265616479206265656E20706175736564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5861 PUSH1 0x20 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x586C DUP3 PUSH2 0x582B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5890 DUP2 PUSH2 0x5854 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420706F6F6C2069640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58CD PUSH1 0xF DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x58D8 DUP3 PUSH2 0x5897 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x58FC DUP2 PUSH2 0x58C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6465706F736974206E6F7420737570706F727420455448207374616B696E6700 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5939 PUSH1 0x1F DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5944 DUP3 PUSH2 0x5903 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5968 DUP2 PUSH2 0x592C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C6964206465706F73697420616D6F756E7400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59A5 PUSH1 0x16 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x59B0 DUP3 PUSH2 0x596F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x59D4 DUP2 PUSH2 0x5998 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45544820706F6F6C206D75737420626520637265617465642066697273740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A11 PUSH1 0x1E DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5A1C DUP3 PUSH2 0x59DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A40 DUP2 PUSH2 0x5A04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420706F6F6C2077656967687400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7D PUSH1 0x13 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5A88 DUP3 PUSH2 0x5A47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5AAC DUP2 PUSH2 0x5A70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ACE PUSH1 0x0 DUP4 PUSH2 0x5AB3 JUMP JUMPDEST SWAP2 POP PUSH2 0x5AD9 DUP3 PUSH2 0x5ABE JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AEF DUP3 PUSH2 0x5AC1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E736665722063616C6C206661696C65640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2F PUSH1 0x18 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5B3A DUP3 PUSH2 0x5AF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B5E DUP2 PUSH2 0x5B22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B74 DUP2 PUSH2 0x4DE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B90 JUMPI PUSH2 0x5B8F PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5B9E DUP5 DUP3 DUP6 ADD PUSH2 0x5B65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206F7065726174696F6E20646964206E6F742073 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7563636565640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C03 PUSH1 0x26 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5C0E DUP3 PUSH2 0x5BA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C32 DUP2 PUSH2 0x5BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5C4E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4CC6 JUMP JUMPDEST PUSH2 0x5C5B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4720 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4CC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5C8C DUP2 PUSH2 0x474A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CA8 JUMPI PUSH2 0x5CA7 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CB6 DUP5 DUP3 DUP6 ADD PUSH2 0x5C7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5CCE DUP2 PUSH2 0x4898 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CEA JUMPI PUSH2 0x5CE9 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CF8 DUP5 DUP3 DUP6 ADD PUSH2 0x5CBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5D16 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4CC6 JUMP JUMPDEST PUSH2 0x5D23 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4CC6 JUMP JUMPDEST PUSH2 0x5D30 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4720 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x75736572207374616B6520616D6F756E74206F766572666C6F77000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D6E PUSH1 0x1A DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5D79 DUP3 PUSH2 0x5D38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5D9D DUP2 PUSH2 0x5D61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616363756D756C617465207265776172647320706572207374616B65206F7665 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72666C6F77000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E00 PUSH1 0x25 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5E0B DUP3 PUSH2 0x5DA4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5E2F DUP2 PUSH2 0x5DF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x70656E64696E672072657761726473206F766572666C6F770000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E6C PUSH1 0x18 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5E77 DUP3 PUSH2 0x5E36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5E9B DUP2 PUSH2 0x5E5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616363756D756C617465207374616B6520616D6F756E74206F766572666C6F77 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ED8 PUSH1 0x20 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5EE3 DUP3 PUSH2 0x5EA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5F07 DUP2 PUSH2 0x5ECB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7374616B6520746F6B656E20616D6F756E74206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F44 PUSH1 0x1B DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5F4F DUP3 PUSH2 0x5F0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5F73 DUP2 PUSH2 0x5F37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x75736572207374416D6F756E74206D756C206163635243435065725354206F76 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572666C6F770000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FD6 PUSH1 0x26 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5FE1 DUP3 PUSH2 0x5F7A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6005 DUP2 PUSH2 0x5FC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6021 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4CC6 JUMP JUMPDEST PUSH2 0x602E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x48F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x604B DUP3 PUSH2 0x6035 JUMP JUMPDEST PUSH2 0x6055 DUP2 DUP6 PUSH2 0x5AB3 JUMP JUMPDEST SWAP4 POP PUSH2 0x6065 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4D60 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x607D DUP3 DUP5 PUSH2 0x6040 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL PUSH31 0x61F31F01927762E05D2C7B3BA029E4F18BE78B3106E9D06D6A8FF72681064 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"893:27482:23:-:0;;;1171:4:2;1128:48;;;;;;;;;893:27482:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_5929":{"entryPoint":7294,"id":5929,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_28":{"entryPoint":8721,"id":28,"parameterSlots":0,"returnSlots":0},"@ETH_PID_5937":{"entryPoint":10199,"id":5937,"parameterSlots":0,"returnSlots":0},"@RCC_5981":{"entryPoint":8822,"id":5981,"parameterSlots":0,"returnSlots":0},"@UPGRADE_INTERFACE_VERSION_640":{"entryPoint":9035,"id":640,"parameterSlots":0,"returnSlots":0},"@UPGRADE_ROLE_5934":{"entryPoint":9998,"id":5934,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_63":{"entryPoint":14749,"id":63,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_670":{"entryPoint":14759,"id":670,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_6241":{"entryPoint":14999,"id":6241,"parameterSlots":1,"returnSlots":0},"@_callOptionalReturn_2013":{"entryPoint":16790,"id":2013,"parameterSlots":2,"returnSlots":0},"@_checkInitializing_538":{"entryPoint":17033,"id":538,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_1557":{"entryPoint":17718,"id":1557,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_746":{"entryPoint":15516,"id":746,"parameterSlots":0,"returnSlots":0},"@_checkProxy_730":{"entryPoint":14769,"id":730,"parameterSlots":0,"returnSlots":0},"@_checkRole_129":{"entryPoint":13666,"id":129,"parameterSlots":1,"returnSlots":0},"@_checkRole_150":{"entryPoint":16952,"id":150,"parameterSlots":2,"returnSlots":0},"@_deposit_7747":{"entryPoint":15821,"id":7747,"parameterSlots":2,"returnSlots":0},"@_getAccessControlStorage_46":{"entryPoint":13160,"id":46,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_615":{"entryPoint":14709,"id":615,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_870":{"entryPoint":15651,"id":870,"parameterSlots":0,"returnSlots":1},"@_grantRole_315":{"entryPoint":13686,"id":315,"parameterSlots":2,"returnSlots":1},"@_isInitializing_606":{"entryPoint":17339,"id":606,"parameterSlots":0,"returnSlots":1},"@_msgSender_826":{"entryPoint":13943,"id":826,"parameterSlots":0,"returnSlots":1},"@_requireNotPaused_958":{"entryPoint":13200,"id":958,"parameterSlots":0,"returnSlots":0},"@_revert_2314":{"entryPoint":17922,"id":2314,"parameterSlots":1,"returnSlots":0},"@_revokeRole_361":{"entryPoint":13951,"id":361,"parameterSlots":2,"returnSlots":1},"@_safeETHTransfer_7831":{"entryPoint":13265,"id":7831,"parameterSlots":2,"returnSlots":0},"@_safeRCCTransfer_7786":{"entryPoint":14209,"id":7786,"parameterSlots":2,"returnSlots":0},"@_setImplementation_1337":{"entryPoint":17381,"id":1337,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_797":{"entryPoint":15045,"id":797,"parameterSlots":2,"returnSlots":0},"@addPool_6523":{"entryPoint":9105,"id":6523,"parameterSlots":5,"returnSlots":0},"@claimPaused_5978":{"entryPoint":8902,"id":5978,"parameterSlots":0,"returnSlots":0},"@claim_7564":{"entryPoint":4624,"id":7564,"parameterSlots":1,"returnSlots":0},"@depositETH_7126":{"entryPoint":11932,"id":7126,"parameterSlots":0,"returnSlots":0},"@deposit_7186":{"entryPoint":11119,"id":7186,"parameterSlots":2,"returnSlots":0},"@endBlock_5972":{"entryPoint":3189,"id":5972,"parameterSlots":0,"returnSlots":0},"@functionDelegateCall_2232":{"entryPoint":17586,"id":2232,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_2424":{"entryPoint":17371,"id":2424,"parameterSlots":1,"returnSlots":1},"@getImplementation_1310":{"entryPoint":17097,"id":1310,"parameterSlots":0,"returnSlots":1},"@getMultiplier_6702":{"entryPoint":7330,"id":6702,"parameterSlots":2,"returnSlots":1},"@getPendingRCC_6723":{"entryPoint":8728,"id":6723,"parameterSlots":2,"returnSlots":1},"@getPoolLength_6637":{"entryPoint":9092,"id":6637,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_171":{"entryPoint":3400,"id":171,"parameterSlots":1,"returnSlots":1},"@grantRole_190":{"entryPoint":4393,"id":190,"parameterSlots":2,"returnSlots":0},"@hasRole_116":{"entryPoint":7818,"id":116,"parameterSlots":2,"returnSlots":1},"@initialize_6231":{"entryPoint":5499,"id":6231,"parameterSlots":4,"returnSlots":0},"@massUpdatePools_7083":{"entryPoint":7241,"id":7083,"parameterSlots":0,"returnSlots":0},"@pauseClaim_6322":{"entryPoint":7622,"id":6322,"parameterSlots":0,"returnSlots":0},"@pauseWithdraw_6280":{"entryPoint":7046,"id":6280,"parameterSlots":0,"returnSlots":0},"@paused_946":{"entryPoint":7009,"id":946,"parameterSlots":0,"returnSlots":1},"@pendingRCCByBlockNumber_6816":{"entryPoint":5151,"id":6816,"parameterSlots":3,"returnSlots":1},"@pool_5987":{"entryPoint":12587,"id":5987,"parameterSlots":0,"returnSlots":0},"@pools_6001":{"entryPoint":8921,"id":6001,"parameterSlots":0,"returnSlots":0},"@proxiableUUID_688":{"entryPoint":6958,"id":688,"parameterSlots":0,"returnSlots":1},"@rccPerBlock_5974":{"entryPoint":7288,"id":5974,"parameterSlots":0,"returnSlots":0},"@renounceRole_232":{"entryPoint":4446,"id":232,"parameterSlots":2,"returnSlots":0},"@revokeRole_209":{"entryPoint":10567,"id":209,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_1718":{"entryPoint":15691,"id":1718,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1691":{"entryPoint":13539,"id":1691,"parameterSlots":3,"returnSlots":0},"@setEndBlock_6392":{"entryPoint":10400,"id":6392,"parameterSlots":1,"returnSlots":0},"@setPoolWeight_6627":{"entryPoint":12216,"id":6627,"parameterSlots":3,"returnSlots":0},"@setRCCPerBlock_6417":{"entryPoint":10034,"id":6417,"parameterSlots":1,"returnSlots":0},"@setRCC_6260":{"entryPoint":11720,"id":6260,"parameterSlots":1,"returnSlots":0},"@setStartBlock_6367":{"entryPoint":11553,"id":6367,"parameterSlots":1,"returnSlots":0},"@stToken_5997":{"entryPoint":3362,"id":5997,"parameterSlots":0,"returnSlots":0},"@stakingBalance_6837":{"entryPoint":3195,"id":6837,"parameterSlots":2,"returnSlots":1},"@startBlock_5970":{"entryPoint":5493,"id":5970,"parameterSlots":0,"returnSlots":0},"@supportsInterface_1059":{"entryPoint":13054,"id":1059,"parameterSlots":1,"returnSlots":1},"@supportsInterface_91":{"entryPoint":3061,"id":91,"parameterSlots":1,"returnSlots":1},"@totalPoolWeight_5983":{"entryPoint":3183,"id":5983,"parameterSlots":0,"returnSlots":0},"@tryAdd_2569":{"entryPoint":15469,"id":2569,"parameterSlots":2,"returnSlots":2},"@tryDiv_2667":{"entryPoint":15415,"id":2667,"parameterSlots":2,"returnSlots":2},"@tryMul_2639":{"entryPoint":15332,"id":2639,"parameterSlots":2,"returnSlots":2},"@trySub_2597":{"entryPoint":17299,"id":2597,"parameterSlots":2,"returnSlots":2},"@unpPauseWithdraw_6301":{"entryPoint":10204,"id":6301,"parameterSlots":0,"returnSlots":0},"@unpauseClaim_6342":{"entryPoint":10924,"id":6342,"parameterSlots":0,"returnSlots":0},"@unstakeReleaseBlocks_5994":{"entryPoint":8715,"id":5994,"parameterSlots":0,"returnSlots":0},"@unstake_7310":{"entryPoint":7939,"id":7310,"parameterSlots":2,"returnSlots":0},"@updatePool_6568":{"entryPoint":10601,"id":6568,"parameterSlots":3,"returnSlots":0},"@updatePool_7056":{"entryPoint":6203,"id":7056,"parameterSlots":1,"returnSlots":0},"@upgradeToAndCall_1373":{"entryPoint":17184,"id":1373,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_708":{"entryPoint":6172,"id":708,"parameterSlots":2,"returnSlots":0},"@user_6008":{"entryPoint":4569,"id":6008,"parameterSlots":0,"returnSlots":0},"@users_5992":{"entryPoint":8860,"id":5992,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_2272":{"entryPoint":17779,"id":2272,"parameterSlots":3,"returnSlots":1},"@withdrawAmount_6906":{"entryPoint":12701,"id":6906,"parameterSlots":2,"returnSlots":2},"@withdrawPaused_5976":{"entryPoint":4427,"id":5976,"parameterSlots":0,"returnSlots":0},"@withdraw_7473":{"entryPoint":3446,"id":7473,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":19341,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":18367,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":19964,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":23397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":18607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":23743,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":18078,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":19407,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$1646":{"entryPoint":19003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":18273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":23677,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":19609,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":19453,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bool":{"entryPoint":19985,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":23418,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":18628,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":23764,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":18760,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":18099,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$1646":{"entryPoint":20191,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$1646t_uint256t_uint256t_uint256":{"entryPoint":19024,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":18715,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":23698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":18388,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_uint256":{"entryPoint":18879,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":19545,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_bool":{"entryPoint":20236,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":20108,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":19654,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":18156,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":18673,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":24640,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IERC20_$1646_to_t_address_fromStack":{"entryPoint":18532,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":21519,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":19850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe_to_t_string_memory_ptr_fromStack":{"entryPoint":22288,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d_to_t_string_memory_ptr_fromStack":{"entryPoint":22612,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757_to_t_string_memory_ptr_fromStack":{"entryPoint":22828,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4_to_t_string_memory_ptr_fromStack":{"entryPoint":23542,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e_to_t_string_memory_ptr_fromStack":{"entryPoint":24051,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b_to_t_string_memory_ptr_fromStack":{"entryPoint":22180,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18_to_t_string_memory_ptr_fromStack":{"entryPoint":22720,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa_to_t_string_memory_ptr_fromStack":{"entryPoint":20934,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b_to_t_string_memory_ptr_fromStack":{"entryPoint":23330,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720_to_t_string_memory_ptr_fromStack":{"entryPoint":24267,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10_to_t_string_memory_ptr_fromStack":{"entryPoint":23044,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1_to_t_string_memory_ptr_fromStack":{"entryPoint":23152,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c_to_t_string_memory_ptr_fromStack":{"entryPoint":23905,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf_to_t_string_memory_ptr_fromStack":{"entryPoint":24375,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9_to_t_string_memory_ptr_fromStack":{"entryPoint":20401,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0_to_t_string_memory_ptr_fromStack":{"entryPoint":20509,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81_to_t_string_memory_ptr_fromStack":{"entryPoint":21748,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5_to_t_string_memory_ptr_fromStack":{"entryPoint":24521,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691_to_t_string_memory_ptr_fromStack":{"entryPoint":22396,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23233,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4_to_t_string_memory_ptr_fromStack":{"entryPoint":24159,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9_to_t_string_memory_ptr_fromStack":{"entryPoint":22072,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4_to_t_string_memory_ptr_fromStack":{"entryPoint":21388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f_to_t_string_memory_ptr_fromStack":{"entryPoint":21602,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec_to_t_string_memory_ptr_fromStack":{"entryPoint":22936,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524_to_t_string_memory_ptr_fromStack":{"entryPoint":21964,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97_to_t_string_memory_ptr_fromStack":{"entryPoint":22504,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa_to_t_string_memory_ptr_fromStack":{"entryPoint":21856,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347_to_t_string_memory_ptr_fromStack":{"entryPoint":21242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":18208,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":24689,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":23268,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":23650,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":23809,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":24588,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":23609,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":19669,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":18171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":18688,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$1646__to_t_address__fromStack_reversed":{"entryPoint":18547,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":21534,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22323,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22647,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22863,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23577,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":24086,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22215,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22755,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20969,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23365,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":24302,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23079,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23187,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23940,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":24410,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20544,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21783,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":24556,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22431,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":24194,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22107,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21637,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22971,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21999,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22539,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21891,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":18223,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":20319,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":18824,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":19250,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":17991,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":19277,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":24629,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":19780,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23219,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":19791,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":20670,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":21114,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":21001,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":20794,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":18326,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":18144,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":18574,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":18011,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$1646":{"entryPoint":18962,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":21455,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":18294,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":18198,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":21465,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$1646_to_t_address":{"entryPoint":18514,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":21485,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":18496,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":18462,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":19326,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":19808,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":19201,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":18452,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":20722,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":20623,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":21067,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":20846,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":20576,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":19154,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":19127,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":19132,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":18006,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":18001,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":19137,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe":{"entryPoint":22247,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d":{"entryPoint":22571,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757":{"entryPoint":22787,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4":{"entryPoint":23463,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e":{"entryPoint":23972,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b":{"entryPoint":22139,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18":{"entryPoint":22679,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa":{"entryPoint":20893,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b":{"entryPoint":23289,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720":{"entryPoint":24226,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10":{"entryPoint":23003,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1":{"entryPoint":23111,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c":{"entryPoint":23864,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf":{"entryPoint":24334,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9":{"entryPoint":20360,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0":{"entryPoint":20468,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81":{"entryPoint":21669,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5":{"entryPoint":24442,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691":{"entryPoint":22355,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":23230,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4":{"entryPoint":24118,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9":{"entryPoint":22031,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4":{"entryPoint":21309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f":{"entryPoint":21561,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec":{"entryPoint":22895,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524":{"entryPoint":21923,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97":{"entryPoint":22463,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa":{"entryPoint":21815,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347":{"entryPoint":21163,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":18344,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":19941,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":18584,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":18055,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$1646":{"entryPoint":18980,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":18250,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:52427:24","nodeType":"YulBlock","src":"0:52427:24","statements":[{"body":{"nativeSrc":"47:35:24","nodeType":"YulBlock","src":"47:35:24","statements":[{"nativeSrc":"57:19:24","nodeType":"YulAssignment","src":"57:19:24","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:24","nodeType":"YulLiteral","src":"73:2:24","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:24","nodeType":"YulIdentifier","src":"67:5:24"},"nativeSrc":"67:9:24","nodeType":"YulFunctionCall","src":"67:9:24"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:24","nodeType":"YulIdentifier","src":"57:6:24"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:24","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:24","nodeType":"YulTypedName","src":"40:6:24","type":""}],"src":"7:75:24"},{"body":{"nativeSrc":"177:28:24","nodeType":"YulBlock","src":"177:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:24","nodeType":"YulLiteral","src":"194:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:24","nodeType":"YulLiteral","src":"197:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:24","nodeType":"YulIdentifier","src":"187:6:24"},"nativeSrc":"187:12:24","nodeType":"YulFunctionCall","src":"187:12:24"},"nativeSrc":"187:12:24","nodeType":"YulExpressionStatement","src":"187:12:24"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:24","nodeType":"YulFunctionDefinition","src":"88:117:24"},{"body":{"nativeSrc":"300:28:24","nodeType":"YulBlock","src":"300:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:24","nodeType":"YulLiteral","src":"317:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:24","nodeType":"YulLiteral","src":"320:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:24","nodeType":"YulIdentifier","src":"310:6:24"},"nativeSrc":"310:12:24","nodeType":"YulFunctionCall","src":"310:12:24"},"nativeSrc":"310:12:24","nodeType":"YulExpressionStatement","src":"310:12:24"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:24","nodeType":"YulFunctionDefinition","src":"211:117:24"},{"body":{"nativeSrc":"378:105:24","nodeType":"YulBlock","src":"378:105:24","statements":[{"nativeSrc":"388:89:24","nodeType":"YulAssignment","src":"388:89:24","value":{"arguments":[{"name":"value","nativeSrc":"403:5:24","nodeType":"YulIdentifier","src":"403:5:24"},{"kind":"number","nativeSrc":"410:66:24","nodeType":"YulLiteral","src":"410:66:24","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:24","nodeType":"YulIdentifier","src":"399:3:24"},"nativeSrc":"399:78:24","nodeType":"YulFunctionCall","src":"399:78:24"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:24","nodeType":"YulIdentifier","src":"388:7:24"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:24","nodeType":"YulTypedName","src":"360:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:24","nodeType":"YulTypedName","src":"370:7:24","type":""}],"src":"334:149:24"},{"body":{"nativeSrc":"531:78:24","nodeType":"YulBlock","src":"531:78:24","statements":[{"body":{"nativeSrc":"587:16:24","nodeType":"YulBlock","src":"587:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:24","nodeType":"YulLiteral","src":"596:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:24","nodeType":"YulLiteral","src":"599:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:24","nodeType":"YulIdentifier","src":"589:6:24"},"nativeSrc":"589:12:24","nodeType":"YulFunctionCall","src":"589:12:24"},"nativeSrc":"589:12:24","nodeType":"YulExpressionStatement","src":"589:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:24","nodeType":"YulIdentifier","src":"554:5:24"},{"arguments":[{"name":"value","nativeSrc":"578:5:24","nodeType":"YulIdentifier","src":"578:5:24"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:24","nodeType":"YulIdentifier","src":"561:16:24"},"nativeSrc":"561:23:24","nodeType":"YulFunctionCall","src":"561:23:24"}],"functionName":{"name":"eq","nativeSrc":"551:2:24","nodeType":"YulIdentifier","src":"551:2:24"},"nativeSrc":"551:34:24","nodeType":"YulFunctionCall","src":"551:34:24"}],"functionName":{"name":"iszero","nativeSrc":"544:6:24","nodeType":"YulIdentifier","src":"544:6:24"},"nativeSrc":"544:42:24","nodeType":"YulFunctionCall","src":"544:42:24"},"nativeSrc":"541:62:24","nodeType":"YulIf","src":"541:62:24"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:24","nodeType":"YulTypedName","src":"524:5:24","type":""}],"src":"489:120:24"},{"body":{"nativeSrc":"666:86:24","nodeType":"YulBlock","src":"666:86:24","statements":[{"nativeSrc":"676:29:24","nodeType":"YulAssignment","src":"676:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:24","nodeType":"YulIdentifier","src":"698:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:24","nodeType":"YulIdentifier","src":"685:12:24"},"nativeSrc":"685:20:24","nodeType":"YulFunctionCall","src":"685:20:24"},"variableNames":[{"name":"value","nativeSrc":"676:5:24","nodeType":"YulIdentifier","src":"676:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:24","nodeType":"YulIdentifier","src":"740:5:24"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:24","nodeType":"YulIdentifier","src":"714:25:24"},"nativeSrc":"714:32:24","nodeType":"YulFunctionCall","src":"714:32:24"},"nativeSrc":"714:32:24","nodeType":"YulExpressionStatement","src":"714:32:24"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:24","nodeType":"YulTypedName","src":"644:6:24","type":""},{"name":"end","nativeSrc":"652:3:24","nodeType":"YulTypedName","src":"652:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:24","nodeType":"YulTypedName","src":"660:5:24","type":""}],"src":"615:137:24"},{"body":{"nativeSrc":"823:262:24","nodeType":"YulBlock","src":"823:262:24","statements":[{"body":{"nativeSrc":"869:83:24","nodeType":"YulBlock","src":"869:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:24","nodeType":"YulIdentifier","src":"871:77:24"},"nativeSrc":"871:79:24","nodeType":"YulFunctionCall","src":"871:79:24"},"nativeSrc":"871:79:24","nodeType":"YulExpressionStatement","src":"871:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:24","nodeType":"YulIdentifier","src":"844:7:24"},{"name":"headStart","nativeSrc":"853:9:24","nodeType":"YulIdentifier","src":"853:9:24"}],"functionName":{"name":"sub","nativeSrc":"840:3:24","nodeType":"YulIdentifier","src":"840:3:24"},"nativeSrc":"840:23:24","nodeType":"YulFunctionCall","src":"840:23:24"},{"kind":"number","nativeSrc":"865:2:24","nodeType":"YulLiteral","src":"865:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:24","nodeType":"YulIdentifier","src":"836:3:24"},"nativeSrc":"836:32:24","nodeType":"YulFunctionCall","src":"836:32:24"},"nativeSrc":"833:119:24","nodeType":"YulIf","src":"833:119:24"},{"nativeSrc":"962:116:24","nodeType":"YulBlock","src":"962:116:24","statements":[{"nativeSrc":"977:15:24","nodeType":"YulVariableDeclaration","src":"977:15:24","value":{"kind":"number","nativeSrc":"991:1:24","nodeType":"YulLiteral","src":"991:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:24","nodeType":"YulTypedName","src":"981:6:24","type":""}]},{"nativeSrc":"1006:62:24","nodeType":"YulAssignment","src":"1006:62:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:24","nodeType":"YulIdentifier","src":"1040:9:24"},{"name":"offset","nativeSrc":"1051:6:24","nodeType":"YulIdentifier","src":"1051:6:24"}],"functionName":{"name":"add","nativeSrc":"1036:3:24","nodeType":"YulIdentifier","src":"1036:3:24"},"nativeSrc":"1036:22:24","nodeType":"YulFunctionCall","src":"1036:22:24"},{"name":"dataEnd","nativeSrc":"1060:7:24","nodeType":"YulIdentifier","src":"1060:7:24"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:24","nodeType":"YulIdentifier","src":"1016:19:24"},"nativeSrc":"1016:52:24","nodeType":"YulFunctionCall","src":"1016:52:24"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:24","nodeType":"YulIdentifier","src":"1006:6:24"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:24","nodeType":"YulTypedName","src":"793:9:24","type":""},{"name":"dataEnd","nativeSrc":"804:7:24","nodeType":"YulTypedName","src":"804:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:24","nodeType":"YulTypedName","src":"816:6:24","type":""}],"src":"758:327:24"},{"body":{"nativeSrc":"1133:48:24","nodeType":"YulBlock","src":"1133:48:24","statements":[{"nativeSrc":"1143:32:24","nodeType":"YulAssignment","src":"1143:32:24","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:24","nodeType":"YulIdentifier","src":"1168:5:24"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:24","nodeType":"YulIdentifier","src":"1161:6:24"},"nativeSrc":"1161:13:24","nodeType":"YulFunctionCall","src":"1161:13:24"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:24","nodeType":"YulIdentifier","src":"1154:6:24"},"nativeSrc":"1154:21:24","nodeType":"YulFunctionCall","src":"1154:21:24"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:24","nodeType":"YulIdentifier","src":"1143:7:24"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:24","nodeType":"YulTypedName","src":"1115:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:24","nodeType":"YulTypedName","src":"1125:7:24","type":""}],"src":"1091:90:24"},{"body":{"nativeSrc":"1246:50:24","nodeType":"YulBlock","src":"1246:50:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:24","nodeType":"YulIdentifier","src":"1263:3:24"},{"arguments":[{"name":"value","nativeSrc":"1283:5:24","nodeType":"YulIdentifier","src":"1283:5:24"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:24","nodeType":"YulIdentifier","src":"1268:14:24"},"nativeSrc":"1268:21:24","nodeType":"YulFunctionCall","src":"1268:21:24"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:24","nodeType":"YulIdentifier","src":"1256:6:24"},"nativeSrc":"1256:34:24","nodeType":"YulFunctionCall","src":"1256:34:24"},"nativeSrc":"1256:34:24","nodeType":"YulExpressionStatement","src":"1256:34:24"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:24","nodeType":"YulTypedName","src":"1234:5:24","type":""},{"name":"pos","nativeSrc":"1241:3:24","nodeType":"YulTypedName","src":"1241:3:24","type":""}],"src":"1187:109:24"},{"body":{"nativeSrc":"1394:118:24","nodeType":"YulBlock","src":"1394:118:24","statements":[{"nativeSrc":"1404:26:24","nodeType":"YulAssignment","src":"1404:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:24","nodeType":"YulIdentifier","src":"1416:9:24"},{"kind":"number","nativeSrc":"1427:2:24","nodeType":"YulLiteral","src":"1427:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:24","nodeType":"YulIdentifier","src":"1412:3:24"},"nativeSrc":"1412:18:24","nodeType":"YulFunctionCall","src":"1412:18:24"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:24","nodeType":"YulIdentifier","src":"1404:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:24","nodeType":"YulIdentifier","src":"1478:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:24","nodeType":"YulIdentifier","src":"1491:9:24"},{"kind":"number","nativeSrc":"1502:1:24","nodeType":"YulLiteral","src":"1502:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:24","nodeType":"YulIdentifier","src":"1487:3:24"},"nativeSrc":"1487:17:24","nodeType":"YulFunctionCall","src":"1487:17:24"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:24","nodeType":"YulIdentifier","src":"1440:37:24"},"nativeSrc":"1440:65:24","nodeType":"YulFunctionCall","src":"1440:65:24"},"nativeSrc":"1440:65:24","nodeType":"YulExpressionStatement","src":"1440:65:24"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:24","nodeType":"YulTypedName","src":"1366:9:24","type":""},{"name":"value0","nativeSrc":"1378:6:24","nodeType":"YulTypedName","src":"1378:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:24","nodeType":"YulTypedName","src":"1389:4:24","type":""}],"src":"1302:210:24"},{"body":{"nativeSrc":"1563:32:24","nodeType":"YulBlock","src":"1563:32:24","statements":[{"nativeSrc":"1573:16:24","nodeType":"YulAssignment","src":"1573:16:24","value":{"name":"value","nativeSrc":"1584:5:24","nodeType":"YulIdentifier","src":"1584:5:24"},"variableNames":[{"name":"cleaned","nativeSrc":"1573:7:24","nodeType":"YulIdentifier","src":"1573:7:24"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1518:77:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1545:5:24","nodeType":"YulTypedName","src":"1545:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1555:7:24","nodeType":"YulTypedName","src":"1555:7:24","type":""}],"src":"1518:77:24"},{"body":{"nativeSrc":"1666:53:24","nodeType":"YulBlock","src":"1666:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1683:3:24","nodeType":"YulIdentifier","src":"1683:3:24"},{"arguments":[{"name":"value","nativeSrc":"1706:5:24","nodeType":"YulIdentifier","src":"1706:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1688:17:24","nodeType":"YulIdentifier","src":"1688:17:24"},"nativeSrc":"1688:24:24","nodeType":"YulFunctionCall","src":"1688:24:24"}],"functionName":{"name":"mstore","nativeSrc":"1676:6:24","nodeType":"YulIdentifier","src":"1676:6:24"},"nativeSrc":"1676:37:24","nodeType":"YulFunctionCall","src":"1676:37:24"},"nativeSrc":"1676:37:24","nodeType":"YulExpressionStatement","src":"1676:37:24"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1601:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1654:5:24","nodeType":"YulTypedName","src":"1654:5:24","type":""},{"name":"pos","nativeSrc":"1661:3:24","nodeType":"YulTypedName","src":"1661:3:24","type":""}],"src":"1601:118:24"},{"body":{"nativeSrc":"1823:124:24","nodeType":"YulBlock","src":"1823:124:24","statements":[{"nativeSrc":"1833:26:24","nodeType":"YulAssignment","src":"1833:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"1845:9:24","nodeType":"YulIdentifier","src":"1845:9:24"},{"kind":"number","nativeSrc":"1856:2:24","nodeType":"YulLiteral","src":"1856:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1841:3:24","nodeType":"YulIdentifier","src":"1841:3:24"},"nativeSrc":"1841:18:24","nodeType":"YulFunctionCall","src":"1841:18:24"},"variableNames":[{"name":"tail","nativeSrc":"1833:4:24","nodeType":"YulIdentifier","src":"1833:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1913:6:24","nodeType":"YulIdentifier","src":"1913:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"1926:9:24","nodeType":"YulIdentifier","src":"1926:9:24"},{"kind":"number","nativeSrc":"1937:1:24","nodeType":"YulLiteral","src":"1937:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1922:3:24","nodeType":"YulIdentifier","src":"1922:3:24"},"nativeSrc":"1922:17:24","nodeType":"YulFunctionCall","src":"1922:17:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1869:43:24","nodeType":"YulIdentifier","src":"1869:43:24"},"nativeSrc":"1869:71:24","nodeType":"YulFunctionCall","src":"1869:71:24"},"nativeSrc":"1869:71:24","nodeType":"YulExpressionStatement","src":"1869:71:24"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1725:222:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1795:9:24","nodeType":"YulTypedName","src":"1795:9:24","type":""},{"name":"value0","nativeSrc":"1807:6:24","nodeType":"YulTypedName","src":"1807:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1818:4:24","nodeType":"YulTypedName","src":"1818:4:24","type":""}],"src":"1725:222:24"},{"body":{"nativeSrc":"1996:79:24","nodeType":"YulBlock","src":"1996:79:24","statements":[{"body":{"nativeSrc":"2053:16:24","nodeType":"YulBlock","src":"2053:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2062:1:24","nodeType":"YulLiteral","src":"2062:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2065:1:24","nodeType":"YulLiteral","src":"2065:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2055:6:24","nodeType":"YulIdentifier","src":"2055:6:24"},"nativeSrc":"2055:12:24","nodeType":"YulFunctionCall","src":"2055:12:24"},"nativeSrc":"2055:12:24","nodeType":"YulExpressionStatement","src":"2055:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2019:5:24","nodeType":"YulIdentifier","src":"2019:5:24"},{"arguments":[{"name":"value","nativeSrc":"2044:5:24","nodeType":"YulIdentifier","src":"2044:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2026:17:24","nodeType":"YulIdentifier","src":"2026:17:24"},"nativeSrc":"2026:24:24","nodeType":"YulFunctionCall","src":"2026:24:24"}],"functionName":{"name":"eq","nativeSrc":"2016:2:24","nodeType":"YulIdentifier","src":"2016:2:24"},"nativeSrc":"2016:35:24","nodeType":"YulFunctionCall","src":"2016:35:24"}],"functionName":{"name":"iszero","nativeSrc":"2009:6:24","nodeType":"YulIdentifier","src":"2009:6:24"},"nativeSrc":"2009:43:24","nodeType":"YulFunctionCall","src":"2009:43:24"},"nativeSrc":"2006:63:24","nodeType":"YulIf","src":"2006:63:24"}]},"name":"validator_revert_t_uint256","nativeSrc":"1953:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1989:5:24","nodeType":"YulTypedName","src":"1989:5:24","type":""}],"src":"1953:122:24"},{"body":{"nativeSrc":"2133:87:24","nodeType":"YulBlock","src":"2133:87:24","statements":[{"nativeSrc":"2143:29:24","nodeType":"YulAssignment","src":"2143:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"2165:6:24","nodeType":"YulIdentifier","src":"2165:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"2152:12:24","nodeType":"YulIdentifier","src":"2152:12:24"},"nativeSrc":"2152:20:24","nodeType":"YulFunctionCall","src":"2152:20:24"},"variableNames":[{"name":"value","nativeSrc":"2143:5:24","nodeType":"YulIdentifier","src":"2143:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2208:5:24","nodeType":"YulIdentifier","src":"2208:5:24"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2181:26:24","nodeType":"YulIdentifier","src":"2181:26:24"},"nativeSrc":"2181:33:24","nodeType":"YulFunctionCall","src":"2181:33:24"},"nativeSrc":"2181:33:24","nodeType":"YulExpressionStatement","src":"2181:33:24"}]},"name":"abi_decode_t_uint256","nativeSrc":"2081:139:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2111:6:24","nodeType":"YulTypedName","src":"2111:6:24","type":""},{"name":"end","nativeSrc":"2119:3:24","nodeType":"YulTypedName","src":"2119:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2127:5:24","nodeType":"YulTypedName","src":"2127:5:24","type":""}],"src":"2081:139:24"},{"body":{"nativeSrc":"2271:81:24","nodeType":"YulBlock","src":"2271:81:24","statements":[{"nativeSrc":"2281:65:24","nodeType":"YulAssignment","src":"2281:65:24","value":{"arguments":[{"name":"value","nativeSrc":"2296:5:24","nodeType":"YulIdentifier","src":"2296:5:24"},{"kind":"number","nativeSrc":"2303:42:24","nodeType":"YulLiteral","src":"2303:42:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2292:3:24","nodeType":"YulIdentifier","src":"2292:3:24"},"nativeSrc":"2292:54:24","nodeType":"YulFunctionCall","src":"2292:54:24"},"variableNames":[{"name":"cleaned","nativeSrc":"2281:7:24","nodeType":"YulIdentifier","src":"2281:7:24"}]}]},"name":"cleanup_t_uint160","nativeSrc":"2226:126:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2253:5:24","nodeType":"YulTypedName","src":"2253:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2263:7:24","nodeType":"YulTypedName","src":"2263:7:24","type":""}],"src":"2226:126:24"},{"body":{"nativeSrc":"2403:51:24","nodeType":"YulBlock","src":"2403:51:24","statements":[{"nativeSrc":"2413:35:24","nodeType":"YulAssignment","src":"2413:35:24","value":{"arguments":[{"name":"value","nativeSrc":"2442:5:24","nodeType":"YulIdentifier","src":"2442:5:24"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2424:17:24","nodeType":"YulIdentifier","src":"2424:17:24"},"nativeSrc":"2424:24:24","nodeType":"YulFunctionCall","src":"2424:24:24"},"variableNames":[{"name":"cleaned","nativeSrc":"2413:7:24","nodeType":"YulIdentifier","src":"2413:7:24"}]}]},"name":"cleanup_t_address","nativeSrc":"2358:96:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2385:5:24","nodeType":"YulTypedName","src":"2385:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2395:7:24","nodeType":"YulTypedName","src":"2395:7:24","type":""}],"src":"2358:96:24"},{"body":{"nativeSrc":"2503:79:24","nodeType":"YulBlock","src":"2503:79:24","statements":[{"body":{"nativeSrc":"2560:16:24","nodeType":"YulBlock","src":"2560:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2569:1:24","nodeType":"YulLiteral","src":"2569:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"2572:1:24","nodeType":"YulLiteral","src":"2572:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2562:6:24","nodeType":"YulIdentifier","src":"2562:6:24"},"nativeSrc":"2562:12:24","nodeType":"YulFunctionCall","src":"2562:12:24"},"nativeSrc":"2562:12:24","nodeType":"YulExpressionStatement","src":"2562:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2526:5:24","nodeType":"YulIdentifier","src":"2526:5:24"},{"arguments":[{"name":"value","nativeSrc":"2551:5:24","nodeType":"YulIdentifier","src":"2551:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2533:17:24","nodeType":"YulIdentifier","src":"2533:17:24"},"nativeSrc":"2533:24:24","nodeType":"YulFunctionCall","src":"2533:24:24"}],"functionName":{"name":"eq","nativeSrc":"2523:2:24","nodeType":"YulIdentifier","src":"2523:2:24"},"nativeSrc":"2523:35:24","nodeType":"YulFunctionCall","src":"2523:35:24"}],"functionName":{"name":"iszero","nativeSrc":"2516:6:24","nodeType":"YulIdentifier","src":"2516:6:24"},"nativeSrc":"2516:43:24","nodeType":"YulFunctionCall","src":"2516:43:24"},"nativeSrc":"2513:63:24","nodeType":"YulIf","src":"2513:63:24"}]},"name":"validator_revert_t_address","nativeSrc":"2460:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2496:5:24","nodeType":"YulTypedName","src":"2496:5:24","type":""}],"src":"2460:122:24"},{"body":{"nativeSrc":"2640:87:24","nodeType":"YulBlock","src":"2640:87:24","statements":[{"nativeSrc":"2650:29:24","nodeType":"YulAssignment","src":"2650:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"2672:6:24","nodeType":"YulIdentifier","src":"2672:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"2659:12:24","nodeType":"YulIdentifier","src":"2659:12:24"},"nativeSrc":"2659:20:24","nodeType":"YulFunctionCall","src":"2659:20:24"},"variableNames":[{"name":"value","nativeSrc":"2650:5:24","nodeType":"YulIdentifier","src":"2650:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2715:5:24","nodeType":"YulIdentifier","src":"2715:5:24"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2688:26:24","nodeType":"YulIdentifier","src":"2688:26:24"},"nativeSrc":"2688:33:24","nodeType":"YulFunctionCall","src":"2688:33:24"},"nativeSrc":"2688:33:24","nodeType":"YulExpressionStatement","src":"2688:33:24"}]},"name":"abi_decode_t_address","nativeSrc":"2588:139:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2618:6:24","nodeType":"YulTypedName","src":"2618:6:24","type":""},{"name":"end","nativeSrc":"2626:3:24","nodeType":"YulTypedName","src":"2626:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2634:5:24","nodeType":"YulTypedName","src":"2634:5:24","type":""}],"src":"2588:139:24"},{"body":{"nativeSrc":"2816:391:24","nodeType":"YulBlock","src":"2816:391:24","statements":[{"body":{"nativeSrc":"2862:83:24","nodeType":"YulBlock","src":"2862:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2864:77:24","nodeType":"YulIdentifier","src":"2864:77:24"},"nativeSrc":"2864:79:24","nodeType":"YulFunctionCall","src":"2864:79:24"},"nativeSrc":"2864:79:24","nodeType":"YulExpressionStatement","src":"2864:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2837:7:24","nodeType":"YulIdentifier","src":"2837:7:24"},{"name":"headStart","nativeSrc":"2846:9:24","nodeType":"YulIdentifier","src":"2846:9:24"}],"functionName":{"name":"sub","nativeSrc":"2833:3:24","nodeType":"YulIdentifier","src":"2833:3:24"},"nativeSrc":"2833:23:24","nodeType":"YulFunctionCall","src":"2833:23:24"},{"kind":"number","nativeSrc":"2858:2:24","nodeType":"YulLiteral","src":"2858:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2829:3:24","nodeType":"YulIdentifier","src":"2829:3:24"},"nativeSrc":"2829:32:24","nodeType":"YulFunctionCall","src":"2829:32:24"},"nativeSrc":"2826:119:24","nodeType":"YulIf","src":"2826:119:24"},{"nativeSrc":"2955:117:24","nodeType":"YulBlock","src":"2955:117:24","statements":[{"nativeSrc":"2970:15:24","nodeType":"YulVariableDeclaration","src":"2970:15:24","value":{"kind":"number","nativeSrc":"2984:1:24","nodeType":"YulLiteral","src":"2984:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2974:6:24","nodeType":"YulTypedName","src":"2974:6:24","type":""}]},{"nativeSrc":"2999:63:24","nodeType":"YulAssignment","src":"2999:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3034:9:24","nodeType":"YulIdentifier","src":"3034:9:24"},{"name":"offset","nativeSrc":"3045:6:24","nodeType":"YulIdentifier","src":"3045:6:24"}],"functionName":{"name":"add","nativeSrc":"3030:3:24","nodeType":"YulIdentifier","src":"3030:3:24"},"nativeSrc":"3030:22:24","nodeType":"YulFunctionCall","src":"3030:22:24"},{"name":"dataEnd","nativeSrc":"3054:7:24","nodeType":"YulIdentifier","src":"3054:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3009:20:24","nodeType":"YulIdentifier","src":"3009:20:24"},"nativeSrc":"3009:53:24","nodeType":"YulFunctionCall","src":"3009:53:24"},"variableNames":[{"name":"value0","nativeSrc":"2999:6:24","nodeType":"YulIdentifier","src":"2999:6:24"}]}]},{"nativeSrc":"3082:118:24","nodeType":"YulBlock","src":"3082:118:24","statements":[{"nativeSrc":"3097:16:24","nodeType":"YulVariableDeclaration","src":"3097:16:24","value":{"kind":"number","nativeSrc":"3111:2:24","nodeType":"YulLiteral","src":"3111:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3101:6:24","nodeType":"YulTypedName","src":"3101:6:24","type":""}]},{"nativeSrc":"3127:63:24","nodeType":"YulAssignment","src":"3127:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3162:9:24","nodeType":"YulIdentifier","src":"3162:9:24"},{"name":"offset","nativeSrc":"3173:6:24","nodeType":"YulIdentifier","src":"3173:6:24"}],"functionName":{"name":"add","nativeSrc":"3158:3:24","nodeType":"YulIdentifier","src":"3158:3:24"},"nativeSrc":"3158:22:24","nodeType":"YulFunctionCall","src":"3158:22:24"},{"name":"dataEnd","nativeSrc":"3182:7:24","nodeType":"YulIdentifier","src":"3182:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3137:20:24","nodeType":"YulIdentifier","src":"3137:20:24"},"nativeSrc":"3137:53:24","nodeType":"YulFunctionCall","src":"3137:53:24"},"variableNames":[{"name":"value1","nativeSrc":"3127:6:24","nodeType":"YulIdentifier","src":"3127:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nativeSrc":"2733:474:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2778:9:24","nodeType":"YulTypedName","src":"2778:9:24","type":""},{"name":"dataEnd","nativeSrc":"2789:7:24","nodeType":"YulTypedName","src":"2789:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2801:6:24","nodeType":"YulTypedName","src":"2801:6:24","type":""},{"name":"value1","nativeSrc":"2809:6:24","nodeType":"YulTypedName","src":"2809:6:24","type":""}],"src":"2733:474:24"},{"body":{"nativeSrc":"3245:28:24","nodeType":"YulBlock","src":"3245:28:24","statements":[{"nativeSrc":"3255:12:24","nodeType":"YulAssignment","src":"3255:12:24","value":{"name":"value","nativeSrc":"3262:5:24","nodeType":"YulIdentifier","src":"3262:5:24"},"variableNames":[{"name":"ret","nativeSrc":"3255:3:24","nodeType":"YulIdentifier","src":"3255:3:24"}]}]},"name":"identity","nativeSrc":"3213:60:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3231:5:24","nodeType":"YulTypedName","src":"3231:5:24","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3241:3:24","nodeType":"YulTypedName","src":"3241:3:24","type":""}],"src":"3213:60:24"},{"body":{"nativeSrc":"3339:82:24","nodeType":"YulBlock","src":"3339:82:24","statements":[{"nativeSrc":"3349:66:24","nodeType":"YulAssignment","src":"3349:66:24","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3407:5:24","nodeType":"YulIdentifier","src":"3407:5:24"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3389:17:24","nodeType":"YulIdentifier","src":"3389:17:24"},"nativeSrc":"3389:24:24","nodeType":"YulFunctionCall","src":"3389:24:24"}],"functionName":{"name":"identity","nativeSrc":"3380:8:24","nodeType":"YulIdentifier","src":"3380:8:24"},"nativeSrc":"3380:34:24","nodeType":"YulFunctionCall","src":"3380:34:24"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3362:17:24","nodeType":"YulIdentifier","src":"3362:17:24"},"nativeSrc":"3362:53:24","nodeType":"YulFunctionCall","src":"3362:53:24"},"variableNames":[{"name":"converted","nativeSrc":"3349:9:24","nodeType":"YulIdentifier","src":"3349:9:24"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"3279:142:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3319:5:24","nodeType":"YulTypedName","src":"3319:5:24","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3329:9:24","nodeType":"YulTypedName","src":"3329:9:24","type":""}],"src":"3279:142:24"},{"body":{"nativeSrc":"3487:66:24","nodeType":"YulBlock","src":"3487:66:24","statements":[{"nativeSrc":"3497:50:24","nodeType":"YulAssignment","src":"3497:50:24","value":{"arguments":[{"name":"value","nativeSrc":"3541:5:24","nodeType":"YulIdentifier","src":"3541:5:24"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"3510:30:24","nodeType":"YulIdentifier","src":"3510:30:24"},"nativeSrc":"3510:37:24","nodeType":"YulFunctionCall","src":"3510:37:24"},"variableNames":[{"name":"converted","nativeSrc":"3497:9:24","nodeType":"YulIdentifier","src":"3497:9:24"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"3427:126:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3467:5:24","nodeType":"YulTypedName","src":"3467:5:24","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3477:9:24","nodeType":"YulTypedName","src":"3477:9:24","type":""}],"src":"3427:126:24"},{"body":{"nativeSrc":"3634:66:24","nodeType":"YulBlock","src":"3634:66:24","statements":[{"nativeSrc":"3644:50:24","nodeType":"YulAssignment","src":"3644:50:24","value":{"arguments":[{"name":"value","nativeSrc":"3688:5:24","nodeType":"YulIdentifier","src":"3688:5:24"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"3657:30:24","nodeType":"YulIdentifier","src":"3657:30:24"},"nativeSrc":"3657:37:24","nodeType":"YulFunctionCall","src":"3657:37:24"},"variableNames":[{"name":"converted","nativeSrc":"3644:9:24","nodeType":"YulIdentifier","src":"3644:9:24"}]}]},"name":"convert_t_contract$_IERC20_$1646_to_t_address","nativeSrc":"3559:141:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3614:5:24","nodeType":"YulTypedName","src":"3614:5:24","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3624:9:24","nodeType":"YulTypedName","src":"3624:9:24","type":""}],"src":"3559:141:24"},{"body":{"nativeSrc":"3786:81:24","nodeType":"YulBlock","src":"3786:81:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3803:3:24","nodeType":"YulIdentifier","src":"3803:3:24"},{"arguments":[{"name":"value","nativeSrc":"3854:5:24","nodeType":"YulIdentifier","src":"3854:5:24"}],"functionName":{"name":"convert_t_contract$_IERC20_$1646_to_t_address","nativeSrc":"3808:45:24","nodeType":"YulIdentifier","src":"3808:45:24"},"nativeSrc":"3808:52:24","nodeType":"YulFunctionCall","src":"3808:52:24"}],"functionName":{"name":"mstore","nativeSrc":"3796:6:24","nodeType":"YulIdentifier","src":"3796:6:24"},"nativeSrc":"3796:65:24","nodeType":"YulFunctionCall","src":"3796:65:24"},"nativeSrc":"3796:65:24","nodeType":"YulExpressionStatement","src":"3796:65:24"}]},"name":"abi_encode_t_contract$_IERC20_$1646_to_t_address_fromStack","nativeSrc":"3706:161:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3774:5:24","nodeType":"YulTypedName","src":"3774:5:24","type":""},{"name":"pos","nativeSrc":"3781:3:24","nodeType":"YulTypedName","src":"3781:3:24","type":""}],"src":"3706:161:24"},{"body":{"nativeSrc":"3986:139:24","nodeType":"YulBlock","src":"3986:139:24","statements":[{"nativeSrc":"3996:26:24","nodeType":"YulAssignment","src":"3996:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"4008:9:24","nodeType":"YulIdentifier","src":"4008:9:24"},{"kind":"number","nativeSrc":"4019:2:24","nodeType":"YulLiteral","src":"4019:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4004:3:24","nodeType":"YulIdentifier","src":"4004:3:24"},"nativeSrc":"4004:18:24","nodeType":"YulFunctionCall","src":"4004:18:24"},"variableNames":[{"name":"tail","nativeSrc":"3996:4:24","nodeType":"YulIdentifier","src":"3996:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4091:6:24","nodeType":"YulIdentifier","src":"4091:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"4104:9:24","nodeType":"YulIdentifier","src":"4104:9:24"},{"kind":"number","nativeSrc":"4115:1:24","nodeType":"YulLiteral","src":"4115:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4100:3:24","nodeType":"YulIdentifier","src":"4100:3:24"},"nativeSrc":"4100:17:24","nodeType":"YulFunctionCall","src":"4100:17:24"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$1646_to_t_address_fromStack","nativeSrc":"4032:58:24","nodeType":"YulIdentifier","src":"4032:58:24"},"nativeSrc":"4032:86:24","nodeType":"YulFunctionCall","src":"4032:86:24"},"nativeSrc":"4032:86:24","nodeType":"YulExpressionStatement","src":"4032:86:24"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1646__to_t_address__fromStack_reversed","nativeSrc":"3873:252:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3958:9:24","nodeType":"YulTypedName","src":"3958:9:24","type":""},{"name":"value0","nativeSrc":"3970:6:24","nodeType":"YulTypedName","src":"3970:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3981:4:24","nodeType":"YulTypedName","src":"3981:4:24","type":""}],"src":"3873:252:24"},{"body":{"nativeSrc":"4176:32:24","nodeType":"YulBlock","src":"4176:32:24","statements":[{"nativeSrc":"4186:16:24","nodeType":"YulAssignment","src":"4186:16:24","value":{"name":"value","nativeSrc":"4197:5:24","nodeType":"YulIdentifier","src":"4197:5:24"},"variableNames":[{"name":"cleaned","nativeSrc":"4186:7:24","nodeType":"YulIdentifier","src":"4186:7:24"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4131:77:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4158:5:24","nodeType":"YulTypedName","src":"4158:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4168:7:24","nodeType":"YulTypedName","src":"4168:7:24","type":""}],"src":"4131:77:24"},{"body":{"nativeSrc":"4257:79:24","nodeType":"YulBlock","src":"4257:79:24","statements":[{"body":{"nativeSrc":"4314:16:24","nodeType":"YulBlock","src":"4314:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4323:1:24","nodeType":"YulLiteral","src":"4323:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"4326:1:24","nodeType":"YulLiteral","src":"4326:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4316:6:24","nodeType":"YulIdentifier","src":"4316:6:24"},"nativeSrc":"4316:12:24","nodeType":"YulFunctionCall","src":"4316:12:24"},"nativeSrc":"4316:12:24","nodeType":"YulExpressionStatement","src":"4316:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4280:5:24","nodeType":"YulIdentifier","src":"4280:5:24"},{"arguments":[{"name":"value","nativeSrc":"4305:5:24","nodeType":"YulIdentifier","src":"4305:5:24"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"4287:17:24","nodeType":"YulIdentifier","src":"4287:17:24"},"nativeSrc":"4287:24:24","nodeType":"YulFunctionCall","src":"4287:24:24"}],"functionName":{"name":"eq","nativeSrc":"4277:2:24","nodeType":"YulIdentifier","src":"4277:2:24"},"nativeSrc":"4277:35:24","nodeType":"YulFunctionCall","src":"4277:35:24"}],"functionName":{"name":"iszero","nativeSrc":"4270:6:24","nodeType":"YulIdentifier","src":"4270:6:24"},"nativeSrc":"4270:43:24","nodeType":"YulFunctionCall","src":"4270:43:24"},"nativeSrc":"4267:63:24","nodeType":"YulIf","src":"4267:63:24"}]},"name":"validator_revert_t_bytes32","nativeSrc":"4214:122:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4250:5:24","nodeType":"YulTypedName","src":"4250:5:24","type":""}],"src":"4214:122:24"},{"body":{"nativeSrc":"4394:87:24","nodeType":"YulBlock","src":"4394:87:24","statements":[{"nativeSrc":"4404:29:24","nodeType":"YulAssignment","src":"4404:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"4426:6:24","nodeType":"YulIdentifier","src":"4426:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"4413:12:24","nodeType":"YulIdentifier","src":"4413:12:24"},"nativeSrc":"4413:20:24","nodeType":"YulFunctionCall","src":"4413:20:24"},"variableNames":[{"name":"value","nativeSrc":"4404:5:24","nodeType":"YulIdentifier","src":"4404:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4469:5:24","nodeType":"YulIdentifier","src":"4469:5:24"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"4442:26:24","nodeType":"YulIdentifier","src":"4442:26:24"},"nativeSrc":"4442:33:24","nodeType":"YulFunctionCall","src":"4442:33:24"},"nativeSrc":"4442:33:24","nodeType":"YulExpressionStatement","src":"4442:33:24"}]},"name":"abi_decode_t_bytes32","nativeSrc":"4342:139:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4372:6:24","nodeType":"YulTypedName","src":"4372:6:24","type":""},{"name":"end","nativeSrc":"4380:3:24","nodeType":"YulTypedName","src":"4380:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4388:5:24","nodeType":"YulTypedName","src":"4388:5:24","type":""}],"src":"4342:139:24"},{"body":{"nativeSrc":"4553:263:24","nodeType":"YulBlock","src":"4553:263:24","statements":[{"body":{"nativeSrc":"4599:83:24","nodeType":"YulBlock","src":"4599:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4601:77:24","nodeType":"YulIdentifier","src":"4601:77:24"},"nativeSrc":"4601:79:24","nodeType":"YulFunctionCall","src":"4601:79:24"},"nativeSrc":"4601:79:24","nodeType":"YulExpressionStatement","src":"4601:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4574:7:24","nodeType":"YulIdentifier","src":"4574:7:24"},{"name":"headStart","nativeSrc":"4583:9:24","nodeType":"YulIdentifier","src":"4583:9:24"}],"functionName":{"name":"sub","nativeSrc":"4570:3:24","nodeType":"YulIdentifier","src":"4570:3:24"},"nativeSrc":"4570:23:24","nodeType":"YulFunctionCall","src":"4570:23:24"},{"kind":"number","nativeSrc":"4595:2:24","nodeType":"YulLiteral","src":"4595:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4566:3:24","nodeType":"YulIdentifier","src":"4566:3:24"},"nativeSrc":"4566:32:24","nodeType":"YulFunctionCall","src":"4566:32:24"},"nativeSrc":"4563:119:24","nodeType":"YulIf","src":"4563:119:24"},{"nativeSrc":"4692:117:24","nodeType":"YulBlock","src":"4692:117:24","statements":[{"nativeSrc":"4707:15:24","nodeType":"YulVariableDeclaration","src":"4707:15:24","value":{"kind":"number","nativeSrc":"4721:1:24","nodeType":"YulLiteral","src":"4721:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4711:6:24","nodeType":"YulTypedName","src":"4711:6:24","type":""}]},{"nativeSrc":"4736:63:24","nodeType":"YulAssignment","src":"4736:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4771:9:24","nodeType":"YulIdentifier","src":"4771:9:24"},{"name":"offset","nativeSrc":"4782:6:24","nodeType":"YulIdentifier","src":"4782:6:24"}],"functionName":{"name":"add","nativeSrc":"4767:3:24","nodeType":"YulIdentifier","src":"4767:3:24"},"nativeSrc":"4767:22:24","nodeType":"YulFunctionCall","src":"4767:22:24"},{"name":"dataEnd","nativeSrc":"4791:7:24","nodeType":"YulIdentifier","src":"4791:7:24"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"4746:20:24","nodeType":"YulIdentifier","src":"4746:20:24"},"nativeSrc":"4746:53:24","nodeType":"YulFunctionCall","src":"4746:53:24"},"variableNames":[{"name":"value0","nativeSrc":"4736:6:24","nodeType":"YulIdentifier","src":"4736:6:24"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"4487:329:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4523:9:24","nodeType":"YulTypedName","src":"4523:9:24","type":""},{"name":"dataEnd","nativeSrc":"4534:7:24","nodeType":"YulTypedName","src":"4534:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4546:6:24","nodeType":"YulTypedName","src":"4546:6:24","type":""}],"src":"4487:329:24"},{"body":{"nativeSrc":"4887:53:24","nodeType":"YulBlock","src":"4887:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4904:3:24","nodeType":"YulIdentifier","src":"4904:3:24"},{"arguments":[{"name":"value","nativeSrc":"4927:5:24","nodeType":"YulIdentifier","src":"4927:5:24"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"4909:17:24","nodeType":"YulIdentifier","src":"4909:17:24"},"nativeSrc":"4909:24:24","nodeType":"YulFunctionCall","src":"4909:24:24"}],"functionName":{"name":"mstore","nativeSrc":"4897:6:24","nodeType":"YulIdentifier","src":"4897:6:24"},"nativeSrc":"4897:37:24","nodeType":"YulFunctionCall","src":"4897:37:24"},"nativeSrc":"4897:37:24","nodeType":"YulExpressionStatement","src":"4897:37:24"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4822:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4875:5:24","nodeType":"YulTypedName","src":"4875:5:24","type":""},{"name":"pos","nativeSrc":"4882:3:24","nodeType":"YulTypedName","src":"4882:3:24","type":""}],"src":"4822:118:24"},{"body":{"nativeSrc":"5044:124:24","nodeType":"YulBlock","src":"5044:124:24","statements":[{"nativeSrc":"5054:26:24","nodeType":"YulAssignment","src":"5054:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"5066:9:24","nodeType":"YulIdentifier","src":"5066:9:24"},{"kind":"number","nativeSrc":"5077:2:24","nodeType":"YulLiteral","src":"5077:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5062:3:24","nodeType":"YulIdentifier","src":"5062:3:24"},"nativeSrc":"5062:18:24","nodeType":"YulFunctionCall","src":"5062:18:24"},"variableNames":[{"name":"tail","nativeSrc":"5054:4:24","nodeType":"YulIdentifier","src":"5054:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5134:6:24","nodeType":"YulIdentifier","src":"5134:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"5147:9:24","nodeType":"YulIdentifier","src":"5147:9:24"},{"kind":"number","nativeSrc":"5158:1:24","nodeType":"YulLiteral","src":"5158:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5143:3:24","nodeType":"YulIdentifier","src":"5143:3:24"},"nativeSrc":"5143:17:24","nodeType":"YulFunctionCall","src":"5143:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5090:43:24","nodeType":"YulIdentifier","src":"5090:43:24"},"nativeSrc":"5090:71:24","nodeType":"YulFunctionCall","src":"5090:71:24"},"nativeSrc":"5090:71:24","nodeType":"YulExpressionStatement","src":"5090:71:24"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"4946:222:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5016:9:24","nodeType":"YulTypedName","src":"5016:9:24","type":""},{"name":"value0","nativeSrc":"5028:6:24","nodeType":"YulTypedName","src":"5028:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5039:4:24","nodeType":"YulTypedName","src":"5039:4:24","type":""}],"src":"4946:222:24"},{"body":{"nativeSrc":"5240:263:24","nodeType":"YulBlock","src":"5240:263:24","statements":[{"body":{"nativeSrc":"5286:83:24","nodeType":"YulBlock","src":"5286:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5288:77:24","nodeType":"YulIdentifier","src":"5288:77:24"},"nativeSrc":"5288:79:24","nodeType":"YulFunctionCall","src":"5288:79:24"},"nativeSrc":"5288:79:24","nodeType":"YulExpressionStatement","src":"5288:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5261:7:24","nodeType":"YulIdentifier","src":"5261:7:24"},{"name":"headStart","nativeSrc":"5270:9:24","nodeType":"YulIdentifier","src":"5270:9:24"}],"functionName":{"name":"sub","nativeSrc":"5257:3:24","nodeType":"YulIdentifier","src":"5257:3:24"},"nativeSrc":"5257:23:24","nodeType":"YulFunctionCall","src":"5257:23:24"},{"kind":"number","nativeSrc":"5282:2:24","nodeType":"YulLiteral","src":"5282:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5253:3:24","nodeType":"YulIdentifier","src":"5253:3:24"},"nativeSrc":"5253:32:24","nodeType":"YulFunctionCall","src":"5253:32:24"},"nativeSrc":"5250:119:24","nodeType":"YulIf","src":"5250:119:24"},{"nativeSrc":"5379:117:24","nodeType":"YulBlock","src":"5379:117:24","statements":[{"nativeSrc":"5394:15:24","nodeType":"YulVariableDeclaration","src":"5394:15:24","value":{"kind":"number","nativeSrc":"5408:1:24","nodeType":"YulLiteral","src":"5408:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5398:6:24","nodeType":"YulTypedName","src":"5398:6:24","type":""}]},{"nativeSrc":"5423:63:24","nodeType":"YulAssignment","src":"5423:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5458:9:24","nodeType":"YulIdentifier","src":"5458:9:24"},{"name":"offset","nativeSrc":"5469:6:24","nodeType":"YulIdentifier","src":"5469:6:24"}],"functionName":{"name":"add","nativeSrc":"5454:3:24","nodeType":"YulIdentifier","src":"5454:3:24"},"nativeSrc":"5454:22:24","nodeType":"YulFunctionCall","src":"5454:22:24"},{"name":"dataEnd","nativeSrc":"5478:7:24","nodeType":"YulIdentifier","src":"5478:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5433:20:24","nodeType":"YulIdentifier","src":"5433:20:24"},"nativeSrc":"5433:53:24","nodeType":"YulFunctionCall","src":"5433:53:24"},"variableNames":[{"name":"value0","nativeSrc":"5423:6:24","nodeType":"YulIdentifier","src":"5423:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5174:329:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5210:9:24","nodeType":"YulTypedName","src":"5210:9:24","type":""},{"name":"dataEnd","nativeSrc":"5221:7:24","nodeType":"YulTypedName","src":"5221:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5233:6:24","nodeType":"YulTypedName","src":"5233:6:24","type":""}],"src":"5174:329:24"},{"body":{"nativeSrc":"5592:391:24","nodeType":"YulBlock","src":"5592:391:24","statements":[{"body":{"nativeSrc":"5638:83:24","nodeType":"YulBlock","src":"5638:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5640:77:24","nodeType":"YulIdentifier","src":"5640:77:24"},"nativeSrc":"5640:79:24","nodeType":"YulFunctionCall","src":"5640:79:24"},"nativeSrc":"5640:79:24","nodeType":"YulExpressionStatement","src":"5640:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5613:7:24","nodeType":"YulIdentifier","src":"5613:7:24"},{"name":"headStart","nativeSrc":"5622:9:24","nodeType":"YulIdentifier","src":"5622:9:24"}],"functionName":{"name":"sub","nativeSrc":"5609:3:24","nodeType":"YulIdentifier","src":"5609:3:24"},"nativeSrc":"5609:23:24","nodeType":"YulFunctionCall","src":"5609:23:24"},{"kind":"number","nativeSrc":"5634:2:24","nodeType":"YulLiteral","src":"5634:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5605:3:24","nodeType":"YulIdentifier","src":"5605:3:24"},"nativeSrc":"5605:32:24","nodeType":"YulFunctionCall","src":"5605:32:24"},"nativeSrc":"5602:119:24","nodeType":"YulIf","src":"5602:119:24"},{"nativeSrc":"5731:117:24","nodeType":"YulBlock","src":"5731:117:24","statements":[{"nativeSrc":"5746:15:24","nodeType":"YulVariableDeclaration","src":"5746:15:24","value":{"kind":"number","nativeSrc":"5760:1:24","nodeType":"YulLiteral","src":"5760:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5750:6:24","nodeType":"YulTypedName","src":"5750:6:24","type":""}]},{"nativeSrc":"5775:63:24","nodeType":"YulAssignment","src":"5775:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5810:9:24","nodeType":"YulIdentifier","src":"5810:9:24"},{"name":"offset","nativeSrc":"5821:6:24","nodeType":"YulIdentifier","src":"5821:6:24"}],"functionName":{"name":"add","nativeSrc":"5806:3:24","nodeType":"YulIdentifier","src":"5806:3:24"},"nativeSrc":"5806:22:24","nodeType":"YulFunctionCall","src":"5806:22:24"},{"name":"dataEnd","nativeSrc":"5830:7:24","nodeType":"YulIdentifier","src":"5830:7:24"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"5785:20:24","nodeType":"YulIdentifier","src":"5785:20:24"},"nativeSrc":"5785:53:24","nodeType":"YulFunctionCall","src":"5785:53:24"},"variableNames":[{"name":"value0","nativeSrc":"5775:6:24","nodeType":"YulIdentifier","src":"5775:6:24"}]}]},{"nativeSrc":"5858:118:24","nodeType":"YulBlock","src":"5858:118:24","statements":[{"nativeSrc":"5873:16:24","nodeType":"YulVariableDeclaration","src":"5873:16:24","value":{"kind":"number","nativeSrc":"5887:2:24","nodeType":"YulLiteral","src":"5887:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5877:6:24","nodeType":"YulTypedName","src":"5877:6:24","type":""}]},{"nativeSrc":"5903:63:24","nodeType":"YulAssignment","src":"5903:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5938:9:24","nodeType":"YulIdentifier","src":"5938:9:24"},{"name":"offset","nativeSrc":"5949:6:24","nodeType":"YulIdentifier","src":"5949:6:24"}],"functionName":{"name":"add","nativeSrc":"5934:3:24","nodeType":"YulIdentifier","src":"5934:3:24"},"nativeSrc":"5934:22:24","nodeType":"YulFunctionCall","src":"5934:22:24"},{"name":"dataEnd","nativeSrc":"5958:7:24","nodeType":"YulIdentifier","src":"5958:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5913:20:24","nodeType":"YulIdentifier","src":"5913:20:24"},"nativeSrc":"5913:53:24","nodeType":"YulFunctionCall","src":"5913:53:24"},"variableNames":[{"name":"value1","nativeSrc":"5903:6:24","nodeType":"YulIdentifier","src":"5903:6:24"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"5509:474:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5554:9:24","nodeType":"YulTypedName","src":"5554:9:24","type":""},{"name":"dataEnd","nativeSrc":"5565:7:24","nodeType":"YulTypedName","src":"5565:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5577:6:24","nodeType":"YulTypedName","src":"5577:6:24","type":""},{"name":"value1","nativeSrc":"5585:6:24","nodeType":"YulTypedName","src":"5585:6:24","type":""}],"src":"5509:474:24"},{"body":{"nativeSrc":"6143:288:24","nodeType":"YulBlock","src":"6143:288:24","statements":[{"nativeSrc":"6153:26:24","nodeType":"YulAssignment","src":"6153:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"6165:9:24","nodeType":"YulIdentifier","src":"6165:9:24"},{"kind":"number","nativeSrc":"6176:2:24","nodeType":"YulLiteral","src":"6176:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6161:3:24","nodeType":"YulIdentifier","src":"6161:3:24"},"nativeSrc":"6161:18:24","nodeType":"YulFunctionCall","src":"6161:18:24"},"variableNames":[{"name":"tail","nativeSrc":"6153:4:24","nodeType":"YulIdentifier","src":"6153:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6233:6:24","nodeType":"YulIdentifier","src":"6233:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"6246:9:24","nodeType":"YulIdentifier","src":"6246:9:24"},{"kind":"number","nativeSrc":"6257:1:24","nodeType":"YulLiteral","src":"6257:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6242:3:24","nodeType":"YulIdentifier","src":"6242:3:24"},"nativeSrc":"6242:17:24","nodeType":"YulFunctionCall","src":"6242:17:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6189:43:24","nodeType":"YulIdentifier","src":"6189:43:24"},"nativeSrc":"6189:71:24","nodeType":"YulFunctionCall","src":"6189:71:24"},"nativeSrc":"6189:71:24","nodeType":"YulExpressionStatement","src":"6189:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6314:6:24","nodeType":"YulIdentifier","src":"6314:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"6327:9:24","nodeType":"YulIdentifier","src":"6327:9:24"},{"kind":"number","nativeSrc":"6338:2:24","nodeType":"YulLiteral","src":"6338:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6323:3:24","nodeType":"YulIdentifier","src":"6323:3:24"},"nativeSrc":"6323:18:24","nodeType":"YulFunctionCall","src":"6323:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6270:43:24","nodeType":"YulIdentifier","src":"6270:43:24"},"nativeSrc":"6270:72:24","nodeType":"YulFunctionCall","src":"6270:72:24"},"nativeSrc":"6270:72:24","nodeType":"YulExpressionStatement","src":"6270:72:24"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6396:6:24","nodeType":"YulIdentifier","src":"6396:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"6409:9:24","nodeType":"YulIdentifier","src":"6409:9:24"},{"kind":"number","nativeSrc":"6420:2:24","nodeType":"YulLiteral","src":"6420:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6405:3:24","nodeType":"YulIdentifier","src":"6405:3:24"},"nativeSrc":"6405:18:24","nodeType":"YulFunctionCall","src":"6405:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6352:43:24","nodeType":"YulIdentifier","src":"6352:43:24"},"nativeSrc":"6352:72:24","nodeType":"YulFunctionCall","src":"6352:72:24"},"nativeSrc":"6352:72:24","nodeType":"YulExpressionStatement","src":"6352:72:24"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"5989:442:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6099:9:24","nodeType":"YulTypedName","src":"6099:9:24","type":""},{"name":"value2","nativeSrc":"6111:6:24","nodeType":"YulTypedName","src":"6111:6:24","type":""},{"name":"value1","nativeSrc":"6119:6:24","nodeType":"YulTypedName","src":"6119:6:24","type":""},{"name":"value0","nativeSrc":"6127:6:24","nodeType":"YulTypedName","src":"6127:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6138:4:24","nodeType":"YulTypedName","src":"6138:4:24","type":""}],"src":"5989:442:24"},{"body":{"nativeSrc":"6537:519:24","nodeType":"YulBlock","src":"6537:519:24","statements":[{"body":{"nativeSrc":"6583:83:24","nodeType":"YulBlock","src":"6583:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6585:77:24","nodeType":"YulIdentifier","src":"6585:77:24"},"nativeSrc":"6585:79:24","nodeType":"YulFunctionCall","src":"6585:79:24"},"nativeSrc":"6585:79:24","nodeType":"YulExpressionStatement","src":"6585:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6558:7:24","nodeType":"YulIdentifier","src":"6558:7:24"},{"name":"headStart","nativeSrc":"6567:9:24","nodeType":"YulIdentifier","src":"6567:9:24"}],"functionName":{"name":"sub","nativeSrc":"6554:3:24","nodeType":"YulIdentifier","src":"6554:3:24"},"nativeSrc":"6554:23:24","nodeType":"YulFunctionCall","src":"6554:23:24"},{"kind":"number","nativeSrc":"6579:2:24","nodeType":"YulLiteral","src":"6579:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6550:3:24","nodeType":"YulIdentifier","src":"6550:3:24"},"nativeSrc":"6550:32:24","nodeType":"YulFunctionCall","src":"6550:32:24"},"nativeSrc":"6547:119:24","nodeType":"YulIf","src":"6547:119:24"},{"nativeSrc":"6676:117:24","nodeType":"YulBlock","src":"6676:117:24","statements":[{"nativeSrc":"6691:15:24","nodeType":"YulVariableDeclaration","src":"6691:15:24","value":{"kind":"number","nativeSrc":"6705:1:24","nodeType":"YulLiteral","src":"6705:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6695:6:24","nodeType":"YulTypedName","src":"6695:6:24","type":""}]},{"nativeSrc":"6720:63:24","nodeType":"YulAssignment","src":"6720:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6755:9:24","nodeType":"YulIdentifier","src":"6755:9:24"},{"name":"offset","nativeSrc":"6766:6:24","nodeType":"YulIdentifier","src":"6766:6:24"}],"functionName":{"name":"add","nativeSrc":"6751:3:24","nodeType":"YulIdentifier","src":"6751:3:24"},"nativeSrc":"6751:22:24","nodeType":"YulFunctionCall","src":"6751:22:24"},{"name":"dataEnd","nativeSrc":"6775:7:24","nodeType":"YulIdentifier","src":"6775:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6730:20:24","nodeType":"YulIdentifier","src":"6730:20:24"},"nativeSrc":"6730:53:24","nodeType":"YulFunctionCall","src":"6730:53:24"},"variableNames":[{"name":"value0","nativeSrc":"6720:6:24","nodeType":"YulIdentifier","src":"6720:6:24"}]}]},{"nativeSrc":"6803:118:24","nodeType":"YulBlock","src":"6803:118:24","statements":[{"nativeSrc":"6818:16:24","nodeType":"YulVariableDeclaration","src":"6818:16:24","value":{"kind":"number","nativeSrc":"6832:2:24","nodeType":"YulLiteral","src":"6832:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6822:6:24","nodeType":"YulTypedName","src":"6822:6:24","type":""}]},{"nativeSrc":"6848:63:24","nodeType":"YulAssignment","src":"6848:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6883:9:24","nodeType":"YulIdentifier","src":"6883:9:24"},{"name":"offset","nativeSrc":"6894:6:24","nodeType":"YulIdentifier","src":"6894:6:24"}],"functionName":{"name":"add","nativeSrc":"6879:3:24","nodeType":"YulIdentifier","src":"6879:3:24"},"nativeSrc":"6879:22:24","nodeType":"YulFunctionCall","src":"6879:22:24"},{"name":"dataEnd","nativeSrc":"6903:7:24","nodeType":"YulIdentifier","src":"6903:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6858:20:24","nodeType":"YulIdentifier","src":"6858:20:24"},"nativeSrc":"6858:53:24","nodeType":"YulFunctionCall","src":"6858:53:24"},"variableNames":[{"name":"value1","nativeSrc":"6848:6:24","nodeType":"YulIdentifier","src":"6848:6:24"}]}]},{"nativeSrc":"6931:118:24","nodeType":"YulBlock","src":"6931:118:24","statements":[{"nativeSrc":"6946:16:24","nodeType":"YulVariableDeclaration","src":"6946:16:24","value":{"kind":"number","nativeSrc":"6960:2:24","nodeType":"YulLiteral","src":"6960:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"6950:6:24","nodeType":"YulTypedName","src":"6950:6:24","type":""}]},{"nativeSrc":"6976:63:24","nodeType":"YulAssignment","src":"6976:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7011:9:24","nodeType":"YulIdentifier","src":"7011:9:24"},{"name":"offset","nativeSrc":"7022:6:24","nodeType":"YulIdentifier","src":"7022:6:24"}],"functionName":{"name":"add","nativeSrc":"7007:3:24","nodeType":"YulIdentifier","src":"7007:3:24"},"nativeSrc":"7007:22:24","nodeType":"YulFunctionCall","src":"7007:22:24"},{"name":"dataEnd","nativeSrc":"7031:7:24","nodeType":"YulIdentifier","src":"7031:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6986:20:24","nodeType":"YulIdentifier","src":"6986:20:24"},"nativeSrc":"6986:53:24","nodeType":"YulFunctionCall","src":"6986:53:24"},"variableNames":[{"name":"value2","nativeSrc":"6976:6:24","nodeType":"YulIdentifier","src":"6976:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256","nativeSrc":"6437:619:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6491:9:24","nodeType":"YulTypedName","src":"6491:9:24","type":""},{"name":"dataEnd","nativeSrc":"6502:7:24","nodeType":"YulTypedName","src":"6502:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6514:6:24","nodeType":"YulTypedName","src":"6514:6:24","type":""},{"name":"value1","nativeSrc":"6522:6:24","nodeType":"YulTypedName","src":"6522:6:24","type":""},{"name":"value2","nativeSrc":"6530:6:24","nodeType":"YulTypedName","src":"6530:6:24","type":""}],"src":"6437:619:24"},{"body":{"nativeSrc":"7122:51:24","nodeType":"YulBlock","src":"7122:51:24","statements":[{"nativeSrc":"7132:35:24","nodeType":"YulAssignment","src":"7132:35:24","value":{"arguments":[{"name":"value","nativeSrc":"7161:5:24","nodeType":"YulIdentifier","src":"7161:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"7143:17:24","nodeType":"YulIdentifier","src":"7143:17:24"},"nativeSrc":"7143:24:24","nodeType":"YulFunctionCall","src":"7143:24:24"},"variableNames":[{"name":"cleaned","nativeSrc":"7132:7:24","nodeType":"YulIdentifier","src":"7132:7:24"}]}]},"name":"cleanup_t_contract$_IERC20_$1646","nativeSrc":"7062:111:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7104:5:24","nodeType":"YulTypedName","src":"7104:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7114:7:24","nodeType":"YulTypedName","src":"7114:7:24","type":""}],"src":"7062:111:24"},{"body":{"nativeSrc":"7237:94:24","nodeType":"YulBlock","src":"7237:94:24","statements":[{"body":{"nativeSrc":"7309:16:24","nodeType":"YulBlock","src":"7309:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7318:1:24","nodeType":"YulLiteral","src":"7318:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"7321:1:24","nodeType":"YulLiteral","src":"7321:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7311:6:24","nodeType":"YulIdentifier","src":"7311:6:24"},"nativeSrc":"7311:12:24","nodeType":"YulFunctionCall","src":"7311:12:24"},"nativeSrc":"7311:12:24","nodeType":"YulExpressionStatement","src":"7311:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7260:5:24","nodeType":"YulIdentifier","src":"7260:5:24"},{"arguments":[{"name":"value","nativeSrc":"7300:5:24","nodeType":"YulIdentifier","src":"7300:5:24"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$1646","nativeSrc":"7267:32:24","nodeType":"YulIdentifier","src":"7267:32:24"},"nativeSrc":"7267:39:24","nodeType":"YulFunctionCall","src":"7267:39:24"}],"functionName":{"name":"eq","nativeSrc":"7257:2:24","nodeType":"YulIdentifier","src":"7257:2:24"},"nativeSrc":"7257:50:24","nodeType":"YulFunctionCall","src":"7257:50:24"}],"functionName":{"name":"iszero","nativeSrc":"7250:6:24","nodeType":"YulIdentifier","src":"7250:6:24"},"nativeSrc":"7250:58:24","nodeType":"YulFunctionCall","src":"7250:58:24"},"nativeSrc":"7247:78:24","nodeType":"YulIf","src":"7247:78:24"}]},"name":"validator_revert_t_contract$_IERC20_$1646","nativeSrc":"7179:152:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7230:5:24","nodeType":"YulTypedName","src":"7230:5:24","type":""}],"src":"7179:152:24"},{"body":{"nativeSrc":"7404:102:24","nodeType":"YulBlock","src":"7404:102:24","statements":[{"nativeSrc":"7414:29:24","nodeType":"YulAssignment","src":"7414:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"7436:6:24","nodeType":"YulIdentifier","src":"7436:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"7423:12:24","nodeType":"YulIdentifier","src":"7423:12:24"},"nativeSrc":"7423:20:24","nodeType":"YulFunctionCall","src":"7423:20:24"},"variableNames":[{"name":"value","nativeSrc":"7414:5:24","nodeType":"YulIdentifier","src":"7414:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7494:5:24","nodeType":"YulIdentifier","src":"7494:5:24"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$1646","nativeSrc":"7452:41:24","nodeType":"YulIdentifier","src":"7452:41:24"},"nativeSrc":"7452:48:24","nodeType":"YulFunctionCall","src":"7452:48:24"},"nativeSrc":"7452:48:24","nodeType":"YulExpressionStatement","src":"7452:48:24"}]},"name":"abi_decode_t_contract$_IERC20_$1646","nativeSrc":"7337:169:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7382:6:24","nodeType":"YulTypedName","src":"7382:6:24","type":""},{"name":"end","nativeSrc":"7390:3:24","nodeType":"YulTypedName","src":"7390:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7398:5:24","nodeType":"YulTypedName","src":"7398:5:24","type":""}],"src":"7337:169:24"},{"body":{"nativeSrc":"7644:663:24","nodeType":"YulBlock","src":"7644:663:24","statements":[{"body":{"nativeSrc":"7691:83:24","nodeType":"YulBlock","src":"7691:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7693:77:24","nodeType":"YulIdentifier","src":"7693:77:24"},"nativeSrc":"7693:79:24","nodeType":"YulFunctionCall","src":"7693:79:24"},"nativeSrc":"7693:79:24","nodeType":"YulExpressionStatement","src":"7693:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7665:7:24","nodeType":"YulIdentifier","src":"7665:7:24"},{"name":"headStart","nativeSrc":"7674:9:24","nodeType":"YulIdentifier","src":"7674:9:24"}],"functionName":{"name":"sub","nativeSrc":"7661:3:24","nodeType":"YulIdentifier","src":"7661:3:24"},"nativeSrc":"7661:23:24","nodeType":"YulFunctionCall","src":"7661:23:24"},{"kind":"number","nativeSrc":"7686:3:24","nodeType":"YulLiteral","src":"7686:3:24","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"7657:3:24","nodeType":"YulIdentifier","src":"7657:3:24"},"nativeSrc":"7657:33:24","nodeType":"YulFunctionCall","src":"7657:33:24"},"nativeSrc":"7654:120:24","nodeType":"YulIf","src":"7654:120:24"},{"nativeSrc":"7784:132:24","nodeType":"YulBlock","src":"7784:132:24","statements":[{"nativeSrc":"7799:15:24","nodeType":"YulVariableDeclaration","src":"7799:15:24","value":{"kind":"number","nativeSrc":"7813:1:24","nodeType":"YulLiteral","src":"7813:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7803:6:24","nodeType":"YulTypedName","src":"7803:6:24","type":""}]},{"nativeSrc":"7828:78:24","nodeType":"YulAssignment","src":"7828:78:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7878:9:24","nodeType":"YulIdentifier","src":"7878:9:24"},{"name":"offset","nativeSrc":"7889:6:24","nodeType":"YulIdentifier","src":"7889:6:24"}],"functionName":{"name":"add","nativeSrc":"7874:3:24","nodeType":"YulIdentifier","src":"7874:3:24"},"nativeSrc":"7874:22:24","nodeType":"YulFunctionCall","src":"7874:22:24"},{"name":"dataEnd","nativeSrc":"7898:7:24","nodeType":"YulIdentifier","src":"7898:7:24"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$1646","nativeSrc":"7838:35:24","nodeType":"YulIdentifier","src":"7838:35:24"},"nativeSrc":"7838:68:24","nodeType":"YulFunctionCall","src":"7838:68:24"},"variableNames":[{"name":"value0","nativeSrc":"7828:6:24","nodeType":"YulIdentifier","src":"7828:6:24"}]}]},{"nativeSrc":"7926:118:24","nodeType":"YulBlock","src":"7926:118:24","statements":[{"nativeSrc":"7941:16:24","nodeType":"YulVariableDeclaration","src":"7941:16:24","value":{"kind":"number","nativeSrc":"7955:2:24","nodeType":"YulLiteral","src":"7955:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7945:6:24","nodeType":"YulTypedName","src":"7945:6:24","type":""}]},{"nativeSrc":"7971:63:24","nodeType":"YulAssignment","src":"7971:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8006:9:24","nodeType":"YulIdentifier","src":"8006:9:24"},{"name":"offset","nativeSrc":"8017:6:24","nodeType":"YulIdentifier","src":"8017:6:24"}],"functionName":{"name":"add","nativeSrc":"8002:3:24","nodeType":"YulIdentifier","src":"8002:3:24"},"nativeSrc":"8002:22:24","nodeType":"YulFunctionCall","src":"8002:22:24"},{"name":"dataEnd","nativeSrc":"8026:7:24","nodeType":"YulIdentifier","src":"8026:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7981:20:24","nodeType":"YulIdentifier","src":"7981:20:24"},"nativeSrc":"7981:53:24","nodeType":"YulFunctionCall","src":"7981:53:24"},"variableNames":[{"name":"value1","nativeSrc":"7971:6:24","nodeType":"YulIdentifier","src":"7971:6:24"}]}]},{"nativeSrc":"8054:118:24","nodeType":"YulBlock","src":"8054:118:24","statements":[{"nativeSrc":"8069:16:24","nodeType":"YulVariableDeclaration","src":"8069:16:24","value":{"kind":"number","nativeSrc":"8083:2:24","nodeType":"YulLiteral","src":"8083:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"8073:6:24","nodeType":"YulTypedName","src":"8073:6:24","type":""}]},{"nativeSrc":"8099:63:24","nodeType":"YulAssignment","src":"8099:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8134:9:24","nodeType":"YulIdentifier","src":"8134:9:24"},{"name":"offset","nativeSrc":"8145:6:24","nodeType":"YulIdentifier","src":"8145:6:24"}],"functionName":{"name":"add","nativeSrc":"8130:3:24","nodeType":"YulIdentifier","src":"8130:3:24"},"nativeSrc":"8130:22:24","nodeType":"YulFunctionCall","src":"8130:22:24"},{"name":"dataEnd","nativeSrc":"8154:7:24","nodeType":"YulIdentifier","src":"8154:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8109:20:24","nodeType":"YulIdentifier","src":"8109:20:24"},"nativeSrc":"8109:53:24","nodeType":"YulFunctionCall","src":"8109:53:24"},"variableNames":[{"name":"value2","nativeSrc":"8099:6:24","nodeType":"YulIdentifier","src":"8099:6:24"}]}]},{"nativeSrc":"8182:118:24","nodeType":"YulBlock","src":"8182:118:24","statements":[{"nativeSrc":"8197:16:24","nodeType":"YulVariableDeclaration","src":"8197:16:24","value":{"kind":"number","nativeSrc":"8211:2:24","nodeType":"YulLiteral","src":"8211:2:24","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"8201:6:24","nodeType":"YulTypedName","src":"8201:6:24","type":""}]},{"nativeSrc":"8227:63:24","nodeType":"YulAssignment","src":"8227:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8262:9:24","nodeType":"YulIdentifier","src":"8262:9:24"},{"name":"offset","nativeSrc":"8273:6:24","nodeType":"YulIdentifier","src":"8273:6:24"}],"functionName":{"name":"add","nativeSrc":"8258:3:24","nodeType":"YulIdentifier","src":"8258:3:24"},"nativeSrc":"8258:22:24","nodeType":"YulFunctionCall","src":"8258:22:24"},{"name":"dataEnd","nativeSrc":"8282:7:24","nodeType":"YulIdentifier","src":"8282:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8237:20:24","nodeType":"YulIdentifier","src":"8237:20:24"},"nativeSrc":"8237:53:24","nodeType":"YulFunctionCall","src":"8237:53:24"},"variableNames":[{"name":"value3","nativeSrc":"8227:6:24","nodeType":"YulIdentifier","src":"8227:6:24"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$1646t_uint256t_uint256t_uint256","nativeSrc":"7512:795:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7590:9:24","nodeType":"YulTypedName","src":"7590:9:24","type":""},{"name":"dataEnd","nativeSrc":"7601:7:24","nodeType":"YulTypedName","src":"7601:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7613:6:24","nodeType":"YulTypedName","src":"7613:6:24","type":""},{"name":"value1","nativeSrc":"7621:6:24","nodeType":"YulTypedName","src":"7621:6:24","type":""},{"name":"value2","nativeSrc":"7629:6:24","nodeType":"YulTypedName","src":"7629:6:24","type":""},{"name":"value3","nativeSrc":"7637:6:24","nodeType":"YulTypedName","src":"7637:6:24","type":""}],"src":"7512:795:24"},{"body":{"nativeSrc":"8402:28:24","nodeType":"YulBlock","src":"8402:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8419:1:24","nodeType":"YulLiteral","src":"8419:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"8422:1:24","nodeType":"YulLiteral","src":"8422:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8412:6:24","nodeType":"YulIdentifier","src":"8412:6:24"},"nativeSrc":"8412:12:24","nodeType":"YulFunctionCall","src":"8412:12:24"},"nativeSrc":"8412:12:24","nodeType":"YulExpressionStatement","src":"8412:12:24"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8313:117:24","nodeType":"YulFunctionDefinition","src":"8313:117:24"},{"body":{"nativeSrc":"8525:28:24","nodeType":"YulBlock","src":"8525:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8542:1:24","nodeType":"YulLiteral","src":"8542:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"8545:1:24","nodeType":"YulLiteral","src":"8545:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8535:6:24","nodeType":"YulIdentifier","src":"8535:6:24"},"nativeSrc":"8535:12:24","nodeType":"YulFunctionCall","src":"8535:12:24"},"nativeSrc":"8535:12:24","nodeType":"YulExpressionStatement","src":"8535:12:24"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"8436:117:24","nodeType":"YulFunctionDefinition","src":"8436:117:24"},{"body":{"nativeSrc":"8607:54:24","nodeType":"YulBlock","src":"8607:54:24","statements":[{"nativeSrc":"8617:38:24","nodeType":"YulAssignment","src":"8617:38:24","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8635:5:24","nodeType":"YulIdentifier","src":"8635:5:24"},{"kind":"number","nativeSrc":"8642:2:24","nodeType":"YulLiteral","src":"8642:2:24","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"8631:3:24","nodeType":"YulIdentifier","src":"8631:3:24"},"nativeSrc":"8631:14:24","nodeType":"YulFunctionCall","src":"8631:14:24"},{"arguments":[{"kind":"number","nativeSrc":"8651:2:24","nodeType":"YulLiteral","src":"8651:2:24","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"8647:3:24","nodeType":"YulIdentifier","src":"8647:3:24"},"nativeSrc":"8647:7:24","nodeType":"YulFunctionCall","src":"8647:7:24"}],"functionName":{"name":"and","nativeSrc":"8627:3:24","nodeType":"YulIdentifier","src":"8627:3:24"},"nativeSrc":"8627:28:24","nodeType":"YulFunctionCall","src":"8627:28:24"},"variableNames":[{"name":"result","nativeSrc":"8617:6:24","nodeType":"YulIdentifier","src":"8617:6:24"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"8559:102:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8590:5:24","nodeType":"YulTypedName","src":"8590:5:24","type":""}],"returnVariables":[{"name":"result","nativeSrc":"8600:6:24","nodeType":"YulTypedName","src":"8600:6:24","type":""}],"src":"8559:102:24"},{"body":{"nativeSrc":"8695:152:24","nodeType":"YulBlock","src":"8695:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8712:1:24","nodeType":"YulLiteral","src":"8712:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"8715:77:24","nodeType":"YulLiteral","src":"8715:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8705:6:24","nodeType":"YulIdentifier","src":"8705:6:24"},"nativeSrc":"8705:88:24","nodeType":"YulFunctionCall","src":"8705:88:24"},"nativeSrc":"8705:88:24","nodeType":"YulExpressionStatement","src":"8705:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8809:1:24","nodeType":"YulLiteral","src":"8809:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"8812:4:24","nodeType":"YulLiteral","src":"8812:4:24","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"8802:6:24","nodeType":"YulIdentifier","src":"8802:6:24"},"nativeSrc":"8802:15:24","nodeType":"YulFunctionCall","src":"8802:15:24"},"nativeSrc":"8802:15:24","nodeType":"YulExpressionStatement","src":"8802:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8833:1:24","nodeType":"YulLiteral","src":"8833:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"8836:4:24","nodeType":"YulLiteral","src":"8836:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8826:6:24","nodeType":"YulIdentifier","src":"8826:6:24"},"nativeSrc":"8826:15:24","nodeType":"YulFunctionCall","src":"8826:15:24"},"nativeSrc":"8826:15:24","nodeType":"YulExpressionStatement","src":"8826:15:24"}]},"name":"panic_error_0x41","nativeSrc":"8667:180:24","nodeType":"YulFunctionDefinition","src":"8667:180:24"},{"body":{"nativeSrc":"8896:238:24","nodeType":"YulBlock","src":"8896:238:24","statements":[{"nativeSrc":"8906:58:24","nodeType":"YulVariableDeclaration","src":"8906:58:24","value":{"arguments":[{"name":"memPtr","nativeSrc":"8928:6:24","nodeType":"YulIdentifier","src":"8928:6:24"},{"arguments":[{"name":"size","nativeSrc":"8958:4:24","nodeType":"YulIdentifier","src":"8958:4:24"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"8936:21:24","nodeType":"YulIdentifier","src":"8936:21:24"},"nativeSrc":"8936:27:24","nodeType":"YulFunctionCall","src":"8936:27:24"}],"functionName":{"name":"add","nativeSrc":"8924:3:24","nodeType":"YulIdentifier","src":"8924:3:24"},"nativeSrc":"8924:40:24","nodeType":"YulFunctionCall","src":"8924:40:24"},"variables":[{"name":"newFreePtr","nativeSrc":"8910:10:24","nodeType":"YulTypedName","src":"8910:10:24","type":""}]},{"body":{"nativeSrc":"9075:22:24","nodeType":"YulBlock","src":"9075:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9077:16:24","nodeType":"YulIdentifier","src":"9077:16:24"},"nativeSrc":"9077:18:24","nodeType":"YulFunctionCall","src":"9077:18:24"},"nativeSrc":"9077:18:24","nodeType":"YulExpressionStatement","src":"9077:18:24"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"9018:10:24","nodeType":"YulIdentifier","src":"9018:10:24"},{"kind":"number","nativeSrc":"9030:18:24","nodeType":"YulLiteral","src":"9030:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9015:2:24","nodeType":"YulIdentifier","src":"9015:2:24"},"nativeSrc":"9015:34:24","nodeType":"YulFunctionCall","src":"9015:34:24"},{"arguments":[{"name":"newFreePtr","nativeSrc":"9054:10:24","nodeType":"YulIdentifier","src":"9054:10:24"},{"name":"memPtr","nativeSrc":"9066:6:24","nodeType":"YulIdentifier","src":"9066:6:24"}],"functionName":{"name":"lt","nativeSrc":"9051:2:24","nodeType":"YulIdentifier","src":"9051:2:24"},"nativeSrc":"9051:22:24","nodeType":"YulFunctionCall","src":"9051:22:24"}],"functionName":{"name":"or","nativeSrc":"9012:2:24","nodeType":"YulIdentifier","src":"9012:2:24"},"nativeSrc":"9012:62:24","nodeType":"YulFunctionCall","src":"9012:62:24"},"nativeSrc":"9009:88:24","nodeType":"YulIf","src":"9009:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9113:2:24","nodeType":"YulLiteral","src":"9113:2:24","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"9117:10:24","nodeType":"YulIdentifier","src":"9117:10:24"}],"functionName":{"name":"mstore","nativeSrc":"9106:6:24","nodeType":"YulIdentifier","src":"9106:6:24"},"nativeSrc":"9106:22:24","nodeType":"YulFunctionCall","src":"9106:22:24"},"nativeSrc":"9106:22:24","nodeType":"YulExpressionStatement","src":"9106:22:24"}]},"name":"finalize_allocation","nativeSrc":"8853:281:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"8882:6:24","nodeType":"YulTypedName","src":"8882:6:24","type":""},{"name":"size","nativeSrc":"8890:4:24","nodeType":"YulTypedName","src":"8890:4:24","type":""}],"src":"8853:281:24"},{"body":{"nativeSrc":"9181:88:24","nodeType":"YulBlock","src":"9181:88:24","statements":[{"nativeSrc":"9191:30:24","nodeType":"YulAssignment","src":"9191:30:24","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"9201:18:24","nodeType":"YulIdentifier","src":"9201:18:24"},"nativeSrc":"9201:20:24","nodeType":"YulFunctionCall","src":"9201:20:24"},"variableNames":[{"name":"memPtr","nativeSrc":"9191:6:24","nodeType":"YulIdentifier","src":"9191:6:24"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"9250:6:24","nodeType":"YulIdentifier","src":"9250:6:24"},{"name":"size","nativeSrc":"9258:4:24","nodeType":"YulIdentifier","src":"9258:4:24"}],"functionName":{"name":"finalize_allocation","nativeSrc":"9230:19:24","nodeType":"YulIdentifier","src":"9230:19:24"},"nativeSrc":"9230:33:24","nodeType":"YulFunctionCall","src":"9230:33:24"},"nativeSrc":"9230:33:24","nodeType":"YulExpressionStatement","src":"9230:33:24"}]},"name":"allocate_memory","nativeSrc":"9140:129:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"9165:4:24","nodeType":"YulTypedName","src":"9165:4:24","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"9174:6:24","nodeType":"YulTypedName","src":"9174:6:24","type":""}],"src":"9140:129:24"},{"body":{"nativeSrc":"9341:241:24","nodeType":"YulBlock","src":"9341:241:24","statements":[{"body":{"nativeSrc":"9446:22:24","nodeType":"YulBlock","src":"9446:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9448:16:24","nodeType":"YulIdentifier","src":"9448:16:24"},"nativeSrc":"9448:18:24","nodeType":"YulFunctionCall","src":"9448:18:24"},"nativeSrc":"9448:18:24","nodeType":"YulExpressionStatement","src":"9448:18:24"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"9418:6:24","nodeType":"YulIdentifier","src":"9418:6:24"},{"kind":"number","nativeSrc":"9426:18:24","nodeType":"YulLiteral","src":"9426:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9415:2:24","nodeType":"YulIdentifier","src":"9415:2:24"},"nativeSrc":"9415:30:24","nodeType":"YulFunctionCall","src":"9415:30:24"},"nativeSrc":"9412:56:24","nodeType":"YulIf","src":"9412:56:24"},{"nativeSrc":"9478:37:24","nodeType":"YulAssignment","src":"9478:37:24","value":{"arguments":[{"name":"length","nativeSrc":"9508:6:24","nodeType":"YulIdentifier","src":"9508:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"9486:21:24","nodeType":"YulIdentifier","src":"9486:21:24"},"nativeSrc":"9486:29:24","nodeType":"YulFunctionCall","src":"9486:29:24"},"variableNames":[{"name":"size","nativeSrc":"9478:4:24","nodeType":"YulIdentifier","src":"9478:4:24"}]},{"nativeSrc":"9552:23:24","nodeType":"YulAssignment","src":"9552:23:24","value":{"arguments":[{"name":"size","nativeSrc":"9564:4:24","nodeType":"YulIdentifier","src":"9564:4:24"},{"kind":"number","nativeSrc":"9570:4:24","nodeType":"YulLiteral","src":"9570:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9560:3:24","nodeType":"YulIdentifier","src":"9560:3:24"},"nativeSrc":"9560:15:24","nodeType":"YulFunctionCall","src":"9560:15:24"},"variableNames":[{"name":"size","nativeSrc":"9552:4:24","nodeType":"YulIdentifier","src":"9552:4:24"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"9275:307:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"9325:6:24","nodeType":"YulTypedName","src":"9325:6:24","type":""}],"returnVariables":[{"name":"size","nativeSrc":"9336:4:24","nodeType":"YulTypedName","src":"9336:4:24","type":""}],"src":"9275:307:24"},{"body":{"nativeSrc":"9652:84:24","nodeType":"YulBlock","src":"9652:84:24","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"9676:3:24","nodeType":"YulIdentifier","src":"9676:3:24"},{"name":"src","nativeSrc":"9681:3:24","nodeType":"YulIdentifier","src":"9681:3:24"},{"name":"length","nativeSrc":"9686:6:24","nodeType":"YulIdentifier","src":"9686:6:24"}],"functionName":{"name":"calldatacopy","nativeSrc":"9663:12:24","nodeType":"YulIdentifier","src":"9663:12:24"},"nativeSrc":"9663:30:24","nodeType":"YulFunctionCall","src":"9663:30:24"},"nativeSrc":"9663:30:24","nodeType":"YulExpressionStatement","src":"9663:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9713:3:24","nodeType":"YulIdentifier","src":"9713:3:24"},{"name":"length","nativeSrc":"9718:6:24","nodeType":"YulIdentifier","src":"9718:6:24"}],"functionName":{"name":"add","nativeSrc":"9709:3:24","nodeType":"YulIdentifier","src":"9709:3:24"},"nativeSrc":"9709:16:24","nodeType":"YulFunctionCall","src":"9709:16:24"},{"kind":"number","nativeSrc":"9727:1:24","nodeType":"YulLiteral","src":"9727:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"9702:6:24","nodeType":"YulIdentifier","src":"9702:6:24"},"nativeSrc":"9702:27:24","nodeType":"YulFunctionCall","src":"9702:27:24"},"nativeSrc":"9702:27:24","nodeType":"YulExpressionStatement","src":"9702:27:24"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"9588:148:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9634:3:24","nodeType":"YulTypedName","src":"9634:3:24","type":""},{"name":"dst","nativeSrc":"9639:3:24","nodeType":"YulTypedName","src":"9639:3:24","type":""},{"name":"length","nativeSrc":"9644:6:24","nodeType":"YulTypedName","src":"9644:6:24","type":""}],"src":"9588:148:24"},{"body":{"nativeSrc":"9825:340:24","nodeType":"YulBlock","src":"9825:340:24","statements":[{"nativeSrc":"9835:74:24","nodeType":"YulAssignment","src":"9835:74:24","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"9901:6:24","nodeType":"YulIdentifier","src":"9901:6:24"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"9860:40:24","nodeType":"YulIdentifier","src":"9860:40:24"},"nativeSrc":"9860:48:24","nodeType":"YulFunctionCall","src":"9860:48:24"}],"functionName":{"name":"allocate_memory","nativeSrc":"9844:15:24","nodeType":"YulIdentifier","src":"9844:15:24"},"nativeSrc":"9844:65:24","nodeType":"YulFunctionCall","src":"9844:65:24"},"variableNames":[{"name":"array","nativeSrc":"9835:5:24","nodeType":"YulIdentifier","src":"9835:5:24"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"9925:5:24","nodeType":"YulIdentifier","src":"9925:5:24"},{"name":"length","nativeSrc":"9932:6:24","nodeType":"YulIdentifier","src":"9932:6:24"}],"functionName":{"name":"mstore","nativeSrc":"9918:6:24","nodeType":"YulIdentifier","src":"9918:6:24"},"nativeSrc":"9918:21:24","nodeType":"YulFunctionCall","src":"9918:21:24"},"nativeSrc":"9918:21:24","nodeType":"YulExpressionStatement","src":"9918:21:24"},{"nativeSrc":"9948:27:24","nodeType":"YulVariableDeclaration","src":"9948:27:24","value":{"arguments":[{"name":"array","nativeSrc":"9963:5:24","nodeType":"YulIdentifier","src":"9963:5:24"},{"kind":"number","nativeSrc":"9970:4:24","nodeType":"YulLiteral","src":"9970:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9959:3:24","nodeType":"YulIdentifier","src":"9959:3:24"},"nativeSrc":"9959:16:24","nodeType":"YulFunctionCall","src":"9959:16:24"},"variables":[{"name":"dst","nativeSrc":"9952:3:24","nodeType":"YulTypedName","src":"9952:3:24","type":""}]},{"body":{"nativeSrc":"10013:83:24","nodeType":"YulBlock","src":"10013:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"10015:77:24","nodeType":"YulIdentifier","src":"10015:77:24"},"nativeSrc":"10015:79:24","nodeType":"YulFunctionCall","src":"10015:79:24"},"nativeSrc":"10015:79:24","nodeType":"YulExpressionStatement","src":"10015:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9994:3:24","nodeType":"YulIdentifier","src":"9994:3:24"},{"name":"length","nativeSrc":"9999:6:24","nodeType":"YulIdentifier","src":"9999:6:24"}],"functionName":{"name":"add","nativeSrc":"9990:3:24","nodeType":"YulIdentifier","src":"9990:3:24"},"nativeSrc":"9990:16:24","nodeType":"YulFunctionCall","src":"9990:16:24"},{"name":"end","nativeSrc":"10008:3:24","nodeType":"YulIdentifier","src":"10008:3:24"}],"functionName":{"name":"gt","nativeSrc":"9987:2:24","nodeType":"YulIdentifier","src":"9987:2:24"},"nativeSrc":"9987:25:24","nodeType":"YulFunctionCall","src":"9987:25:24"},"nativeSrc":"9984:112:24","nodeType":"YulIf","src":"9984:112:24"},{"expression":{"arguments":[{"name":"src","nativeSrc":"10142:3:24","nodeType":"YulIdentifier","src":"10142:3:24"},{"name":"dst","nativeSrc":"10147:3:24","nodeType":"YulIdentifier","src":"10147:3:24"},{"name":"length","nativeSrc":"10152:6:24","nodeType":"YulIdentifier","src":"10152:6:24"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"10105:36:24","nodeType":"YulIdentifier","src":"10105:36:24"},"nativeSrc":"10105:54:24","nodeType":"YulFunctionCall","src":"10105:54:24"},"nativeSrc":"10105:54:24","nodeType":"YulExpressionStatement","src":"10105:54:24"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"9742:423:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9798:3:24","nodeType":"YulTypedName","src":"9798:3:24","type":""},{"name":"length","nativeSrc":"9803:6:24","nodeType":"YulTypedName","src":"9803:6:24","type":""},{"name":"end","nativeSrc":"9811:3:24","nodeType":"YulTypedName","src":"9811:3:24","type":""}],"returnVariables":[{"name":"array","nativeSrc":"9819:5:24","nodeType":"YulTypedName","src":"9819:5:24","type":""}],"src":"9742:423:24"},{"body":{"nativeSrc":"10245:277:24","nodeType":"YulBlock","src":"10245:277:24","statements":[{"body":{"nativeSrc":"10294:83:24","nodeType":"YulBlock","src":"10294:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"10296:77:24","nodeType":"YulIdentifier","src":"10296:77:24"},"nativeSrc":"10296:79:24","nodeType":"YulFunctionCall","src":"10296:79:24"},"nativeSrc":"10296:79:24","nodeType":"YulExpressionStatement","src":"10296:79:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"10273:6:24","nodeType":"YulIdentifier","src":"10273:6:24"},{"kind":"number","nativeSrc":"10281:4:24","nodeType":"YulLiteral","src":"10281:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"10269:3:24","nodeType":"YulIdentifier","src":"10269:3:24"},"nativeSrc":"10269:17:24","nodeType":"YulFunctionCall","src":"10269:17:24"},{"name":"end","nativeSrc":"10288:3:24","nodeType":"YulIdentifier","src":"10288:3:24"}],"functionName":{"name":"slt","nativeSrc":"10265:3:24","nodeType":"YulIdentifier","src":"10265:3:24"},"nativeSrc":"10265:27:24","nodeType":"YulFunctionCall","src":"10265:27:24"}],"functionName":{"name":"iszero","nativeSrc":"10258:6:24","nodeType":"YulIdentifier","src":"10258:6:24"},"nativeSrc":"10258:35:24","nodeType":"YulFunctionCall","src":"10258:35:24"},"nativeSrc":"10255:122:24","nodeType":"YulIf","src":"10255:122:24"},{"nativeSrc":"10386:34:24","nodeType":"YulVariableDeclaration","src":"10386:34:24","value":{"arguments":[{"name":"offset","nativeSrc":"10413:6:24","nodeType":"YulIdentifier","src":"10413:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"10400:12:24","nodeType":"YulIdentifier","src":"10400:12:24"},"nativeSrc":"10400:20:24","nodeType":"YulFunctionCall","src":"10400:20:24"},"variables":[{"name":"length","nativeSrc":"10390:6:24","nodeType":"YulTypedName","src":"10390:6:24","type":""}]},{"nativeSrc":"10429:87:24","nodeType":"YulAssignment","src":"10429:87:24","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"10489:6:24","nodeType":"YulIdentifier","src":"10489:6:24"},{"kind":"number","nativeSrc":"10497:4:24","nodeType":"YulLiteral","src":"10497:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10485:3:24","nodeType":"YulIdentifier","src":"10485:3:24"},"nativeSrc":"10485:17:24","nodeType":"YulFunctionCall","src":"10485:17:24"},{"name":"length","nativeSrc":"10504:6:24","nodeType":"YulIdentifier","src":"10504:6:24"},{"name":"end","nativeSrc":"10512:3:24","nodeType":"YulIdentifier","src":"10512:3:24"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"10438:46:24","nodeType":"YulIdentifier","src":"10438:46:24"},"nativeSrc":"10438:78:24","nodeType":"YulFunctionCall","src":"10438:78:24"},"variableNames":[{"name":"array","nativeSrc":"10429:5:24","nodeType":"YulIdentifier","src":"10429:5:24"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"10184:338:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10223:6:24","nodeType":"YulTypedName","src":"10223:6:24","type":""},{"name":"end","nativeSrc":"10231:3:24","nodeType":"YulTypedName","src":"10231:3:24","type":""}],"returnVariables":[{"name":"array","nativeSrc":"10239:5:24","nodeType":"YulTypedName","src":"10239:5:24","type":""}],"src":"10184:338:24"},{"body":{"nativeSrc":"10620:560:24","nodeType":"YulBlock","src":"10620:560:24","statements":[{"body":{"nativeSrc":"10666:83:24","nodeType":"YulBlock","src":"10666:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10668:77:24","nodeType":"YulIdentifier","src":"10668:77:24"},"nativeSrc":"10668:79:24","nodeType":"YulFunctionCall","src":"10668:79:24"},"nativeSrc":"10668:79:24","nodeType":"YulExpressionStatement","src":"10668:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10641:7:24","nodeType":"YulIdentifier","src":"10641:7:24"},{"name":"headStart","nativeSrc":"10650:9:24","nodeType":"YulIdentifier","src":"10650:9:24"}],"functionName":{"name":"sub","nativeSrc":"10637:3:24","nodeType":"YulIdentifier","src":"10637:3:24"},"nativeSrc":"10637:23:24","nodeType":"YulFunctionCall","src":"10637:23:24"},{"kind":"number","nativeSrc":"10662:2:24","nodeType":"YulLiteral","src":"10662:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10633:3:24","nodeType":"YulIdentifier","src":"10633:3:24"},"nativeSrc":"10633:32:24","nodeType":"YulFunctionCall","src":"10633:32:24"},"nativeSrc":"10630:119:24","nodeType":"YulIf","src":"10630:119:24"},{"nativeSrc":"10759:117:24","nodeType":"YulBlock","src":"10759:117:24","statements":[{"nativeSrc":"10774:15:24","nodeType":"YulVariableDeclaration","src":"10774:15:24","value":{"kind":"number","nativeSrc":"10788:1:24","nodeType":"YulLiteral","src":"10788:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10778:6:24","nodeType":"YulTypedName","src":"10778:6:24","type":""}]},{"nativeSrc":"10803:63:24","nodeType":"YulAssignment","src":"10803:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10838:9:24","nodeType":"YulIdentifier","src":"10838:9:24"},{"name":"offset","nativeSrc":"10849:6:24","nodeType":"YulIdentifier","src":"10849:6:24"}],"functionName":{"name":"add","nativeSrc":"10834:3:24","nodeType":"YulIdentifier","src":"10834:3:24"},"nativeSrc":"10834:22:24","nodeType":"YulFunctionCall","src":"10834:22:24"},{"name":"dataEnd","nativeSrc":"10858:7:24","nodeType":"YulIdentifier","src":"10858:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10813:20:24","nodeType":"YulIdentifier","src":"10813:20:24"},"nativeSrc":"10813:53:24","nodeType":"YulFunctionCall","src":"10813:53:24"},"variableNames":[{"name":"value0","nativeSrc":"10803:6:24","nodeType":"YulIdentifier","src":"10803:6:24"}]}]},{"nativeSrc":"10886:287:24","nodeType":"YulBlock","src":"10886:287:24","statements":[{"nativeSrc":"10901:46:24","nodeType":"YulVariableDeclaration","src":"10901:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10932:9:24","nodeType":"YulIdentifier","src":"10932:9:24"},{"kind":"number","nativeSrc":"10943:2:24","nodeType":"YulLiteral","src":"10943:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10928:3:24","nodeType":"YulIdentifier","src":"10928:3:24"},"nativeSrc":"10928:18:24","nodeType":"YulFunctionCall","src":"10928:18:24"}],"functionName":{"name":"calldataload","nativeSrc":"10915:12:24","nodeType":"YulIdentifier","src":"10915:12:24"},"nativeSrc":"10915:32:24","nodeType":"YulFunctionCall","src":"10915:32:24"},"variables":[{"name":"offset","nativeSrc":"10905:6:24","nodeType":"YulTypedName","src":"10905:6:24","type":""}]},{"body":{"nativeSrc":"10994:83:24","nodeType":"YulBlock","src":"10994:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"10996:77:24","nodeType":"YulIdentifier","src":"10996:77:24"},"nativeSrc":"10996:79:24","nodeType":"YulFunctionCall","src":"10996:79:24"},"nativeSrc":"10996:79:24","nodeType":"YulExpressionStatement","src":"10996:79:24"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10966:6:24","nodeType":"YulIdentifier","src":"10966:6:24"},{"kind":"number","nativeSrc":"10974:18:24","nodeType":"YulLiteral","src":"10974:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10963:2:24","nodeType":"YulIdentifier","src":"10963:2:24"},"nativeSrc":"10963:30:24","nodeType":"YulFunctionCall","src":"10963:30:24"},"nativeSrc":"10960:117:24","nodeType":"YulIf","src":"10960:117:24"},{"nativeSrc":"11091:72:24","nodeType":"YulAssignment","src":"11091:72:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11135:9:24","nodeType":"YulIdentifier","src":"11135:9:24"},{"name":"offset","nativeSrc":"11146:6:24","nodeType":"YulIdentifier","src":"11146:6:24"}],"functionName":{"name":"add","nativeSrc":"11131:3:24","nodeType":"YulIdentifier","src":"11131:3:24"},"nativeSrc":"11131:22:24","nodeType":"YulFunctionCall","src":"11131:22:24"},{"name":"dataEnd","nativeSrc":"11155:7:24","nodeType":"YulIdentifier","src":"11155:7:24"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"11101:29:24","nodeType":"YulIdentifier","src":"11101:29:24"},"nativeSrc":"11101:62:24","nodeType":"YulFunctionCall","src":"11101:62:24"},"variableNames":[{"name":"value1","nativeSrc":"11091:6:24","nodeType":"YulIdentifier","src":"11091:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"10528:652:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10582:9:24","nodeType":"YulTypedName","src":"10582:9:24","type":""},{"name":"dataEnd","nativeSrc":"10593:7:24","nodeType":"YulTypedName","src":"10593:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10605:6:24","nodeType":"YulTypedName","src":"10605:6:24","type":""},{"name":"value1","nativeSrc":"10613:6:24","nodeType":"YulTypedName","src":"10613:6:24","type":""}],"src":"10528:652:24"},{"body":{"nativeSrc":"11269:391:24","nodeType":"YulBlock","src":"11269:391:24","statements":[{"body":{"nativeSrc":"11315:83:24","nodeType":"YulBlock","src":"11315:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11317:77:24","nodeType":"YulIdentifier","src":"11317:77:24"},"nativeSrc":"11317:79:24","nodeType":"YulFunctionCall","src":"11317:79:24"},"nativeSrc":"11317:79:24","nodeType":"YulExpressionStatement","src":"11317:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11290:7:24","nodeType":"YulIdentifier","src":"11290:7:24"},{"name":"headStart","nativeSrc":"11299:9:24","nodeType":"YulIdentifier","src":"11299:9:24"}],"functionName":{"name":"sub","nativeSrc":"11286:3:24","nodeType":"YulIdentifier","src":"11286:3:24"},"nativeSrc":"11286:23:24","nodeType":"YulFunctionCall","src":"11286:23:24"},{"kind":"number","nativeSrc":"11311:2:24","nodeType":"YulLiteral","src":"11311:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"11282:3:24","nodeType":"YulIdentifier","src":"11282:3:24"},"nativeSrc":"11282:32:24","nodeType":"YulFunctionCall","src":"11282:32:24"},"nativeSrc":"11279:119:24","nodeType":"YulIf","src":"11279:119:24"},{"nativeSrc":"11408:117:24","nodeType":"YulBlock","src":"11408:117:24","statements":[{"nativeSrc":"11423:15:24","nodeType":"YulVariableDeclaration","src":"11423:15:24","value":{"kind":"number","nativeSrc":"11437:1:24","nodeType":"YulLiteral","src":"11437:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11427:6:24","nodeType":"YulTypedName","src":"11427:6:24","type":""}]},{"nativeSrc":"11452:63:24","nodeType":"YulAssignment","src":"11452:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11487:9:24","nodeType":"YulIdentifier","src":"11487:9:24"},{"name":"offset","nativeSrc":"11498:6:24","nodeType":"YulIdentifier","src":"11498:6:24"}],"functionName":{"name":"add","nativeSrc":"11483:3:24","nodeType":"YulIdentifier","src":"11483:3:24"},"nativeSrc":"11483:22:24","nodeType":"YulFunctionCall","src":"11483:22:24"},{"name":"dataEnd","nativeSrc":"11507:7:24","nodeType":"YulIdentifier","src":"11507:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11462:20:24","nodeType":"YulIdentifier","src":"11462:20:24"},"nativeSrc":"11462:53:24","nodeType":"YulFunctionCall","src":"11462:53:24"},"variableNames":[{"name":"value0","nativeSrc":"11452:6:24","nodeType":"YulIdentifier","src":"11452:6:24"}]}]},{"nativeSrc":"11535:118:24","nodeType":"YulBlock","src":"11535:118:24","statements":[{"nativeSrc":"11550:16:24","nodeType":"YulVariableDeclaration","src":"11550:16:24","value":{"kind":"number","nativeSrc":"11564:2:24","nodeType":"YulLiteral","src":"11564:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11554:6:24","nodeType":"YulTypedName","src":"11554:6:24","type":""}]},{"nativeSrc":"11580:63:24","nodeType":"YulAssignment","src":"11580:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11615:9:24","nodeType":"YulIdentifier","src":"11615:9:24"},{"name":"offset","nativeSrc":"11626:6:24","nodeType":"YulIdentifier","src":"11626:6:24"}],"functionName":{"name":"add","nativeSrc":"11611:3:24","nodeType":"YulIdentifier","src":"11611:3:24"},"nativeSrc":"11611:22:24","nodeType":"YulFunctionCall","src":"11611:22:24"},{"name":"dataEnd","nativeSrc":"11635:7:24","nodeType":"YulIdentifier","src":"11635:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11590:20:24","nodeType":"YulIdentifier","src":"11590:20:24"},"nativeSrc":"11590:53:24","nodeType":"YulFunctionCall","src":"11590:53:24"},"variableNames":[{"name":"value1","nativeSrc":"11580:6:24","nodeType":"YulIdentifier","src":"11580:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nativeSrc":"11186:474:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11231:9:24","nodeType":"YulTypedName","src":"11231:9:24","type":""},{"name":"dataEnd","nativeSrc":"11242:7:24","nodeType":"YulTypedName","src":"11242:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11254:6:24","nodeType":"YulTypedName","src":"11254:6:24","type":""},{"name":"value1","nativeSrc":"11262:6:24","nodeType":"YulTypedName","src":"11262:6:24","type":""}],"src":"11186:474:24"},{"body":{"nativeSrc":"11732:263:24","nodeType":"YulBlock","src":"11732:263:24","statements":[{"body":{"nativeSrc":"11778:83:24","nodeType":"YulBlock","src":"11778:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11780:77:24","nodeType":"YulIdentifier","src":"11780:77:24"},"nativeSrc":"11780:79:24","nodeType":"YulFunctionCall","src":"11780:79:24"},"nativeSrc":"11780:79:24","nodeType":"YulExpressionStatement","src":"11780:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11753:7:24","nodeType":"YulIdentifier","src":"11753:7:24"},{"name":"headStart","nativeSrc":"11762:9:24","nodeType":"YulIdentifier","src":"11762:9:24"}],"functionName":{"name":"sub","nativeSrc":"11749:3:24","nodeType":"YulIdentifier","src":"11749:3:24"},"nativeSrc":"11749:23:24","nodeType":"YulFunctionCall","src":"11749:23:24"},{"kind":"number","nativeSrc":"11774:2:24","nodeType":"YulLiteral","src":"11774:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11745:3:24","nodeType":"YulIdentifier","src":"11745:3:24"},"nativeSrc":"11745:32:24","nodeType":"YulFunctionCall","src":"11745:32:24"},"nativeSrc":"11742:119:24","nodeType":"YulIf","src":"11742:119:24"},{"nativeSrc":"11871:117:24","nodeType":"YulBlock","src":"11871:117:24","statements":[{"nativeSrc":"11886:15:24","nodeType":"YulVariableDeclaration","src":"11886:15:24","value":{"kind":"number","nativeSrc":"11900:1:24","nodeType":"YulLiteral","src":"11900:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11890:6:24","nodeType":"YulTypedName","src":"11890:6:24","type":""}]},{"nativeSrc":"11915:63:24","nodeType":"YulAssignment","src":"11915:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11950:9:24","nodeType":"YulIdentifier","src":"11950:9:24"},{"name":"offset","nativeSrc":"11961:6:24","nodeType":"YulIdentifier","src":"11961:6:24"}],"functionName":{"name":"add","nativeSrc":"11946:3:24","nodeType":"YulIdentifier","src":"11946:3:24"},"nativeSrc":"11946:22:24","nodeType":"YulFunctionCall","src":"11946:22:24"},{"name":"dataEnd","nativeSrc":"11970:7:24","nodeType":"YulIdentifier","src":"11970:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11925:20:24","nodeType":"YulIdentifier","src":"11925:20:24"},"nativeSrc":"11925:53:24","nodeType":"YulFunctionCall","src":"11925:53:24"},"variableNames":[{"name":"value0","nativeSrc":"11915:6:24","nodeType":"YulIdentifier","src":"11915:6:24"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"11666:329:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11702:9:24","nodeType":"YulTypedName","src":"11702:9:24","type":""},{"name":"dataEnd","nativeSrc":"11713:7:24","nodeType":"YulTypedName","src":"11713:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11725:6:24","nodeType":"YulTypedName","src":"11725:6:24","type":""}],"src":"11666:329:24"},{"body":{"nativeSrc":"12066:53:24","nodeType":"YulBlock","src":"12066:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12083:3:24","nodeType":"YulIdentifier","src":"12083:3:24"},{"arguments":[{"name":"value","nativeSrc":"12106:5:24","nodeType":"YulIdentifier","src":"12106:5:24"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"12088:17:24","nodeType":"YulIdentifier","src":"12088:17:24"},"nativeSrc":"12088:24:24","nodeType":"YulFunctionCall","src":"12088:24:24"}],"functionName":{"name":"mstore","nativeSrc":"12076:6:24","nodeType":"YulIdentifier","src":"12076:6:24"},"nativeSrc":"12076:37:24","nodeType":"YulFunctionCall","src":"12076:37:24"},"nativeSrc":"12076:37:24","nodeType":"YulExpressionStatement","src":"12076:37:24"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12001:118:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12054:5:24","nodeType":"YulTypedName","src":"12054:5:24","type":""},{"name":"pos","nativeSrc":"12061:3:24","nodeType":"YulTypedName","src":"12061:3:24","type":""}],"src":"12001:118:24"},{"body":{"nativeSrc":"12391:620:24","nodeType":"YulBlock","src":"12391:620:24","statements":[{"nativeSrc":"12401:27:24","nodeType":"YulAssignment","src":"12401:27:24","value":{"arguments":[{"name":"headStart","nativeSrc":"12413:9:24","nodeType":"YulIdentifier","src":"12413:9:24"},{"kind":"number","nativeSrc":"12424:3:24","nodeType":"YulLiteral","src":"12424:3:24","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"12409:3:24","nodeType":"YulIdentifier","src":"12409:3:24"},"nativeSrc":"12409:19:24","nodeType":"YulFunctionCall","src":"12409:19:24"},"variableNames":[{"name":"tail","nativeSrc":"12401:4:24","nodeType":"YulIdentifier","src":"12401:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12482:6:24","nodeType":"YulIdentifier","src":"12482:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"12495:9:24","nodeType":"YulIdentifier","src":"12495:9:24"},{"kind":"number","nativeSrc":"12506:1:24","nodeType":"YulLiteral","src":"12506:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12491:3:24","nodeType":"YulIdentifier","src":"12491:3:24"},"nativeSrc":"12491:17:24","nodeType":"YulFunctionCall","src":"12491:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12438:43:24","nodeType":"YulIdentifier","src":"12438:43:24"},"nativeSrc":"12438:71:24","nodeType":"YulFunctionCall","src":"12438:71:24"},"nativeSrc":"12438:71:24","nodeType":"YulExpressionStatement","src":"12438:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12563:6:24","nodeType":"YulIdentifier","src":"12563:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"12576:9:24","nodeType":"YulIdentifier","src":"12576:9:24"},{"kind":"number","nativeSrc":"12587:2:24","nodeType":"YulLiteral","src":"12587:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12572:3:24","nodeType":"YulIdentifier","src":"12572:3:24"},"nativeSrc":"12572:18:24","nodeType":"YulFunctionCall","src":"12572:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12519:43:24","nodeType":"YulIdentifier","src":"12519:43:24"},"nativeSrc":"12519:72:24","nodeType":"YulFunctionCall","src":"12519:72:24"},"nativeSrc":"12519:72:24","nodeType":"YulExpressionStatement","src":"12519:72:24"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12645:6:24","nodeType":"YulIdentifier","src":"12645:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"12658:9:24","nodeType":"YulIdentifier","src":"12658:9:24"},{"kind":"number","nativeSrc":"12669:2:24","nodeType":"YulLiteral","src":"12669:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12654:3:24","nodeType":"YulIdentifier","src":"12654:3:24"},"nativeSrc":"12654:18:24","nodeType":"YulFunctionCall","src":"12654:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12601:43:24","nodeType":"YulIdentifier","src":"12601:43:24"},"nativeSrc":"12601:72:24","nodeType":"YulFunctionCall","src":"12601:72:24"},"nativeSrc":"12601:72:24","nodeType":"YulExpressionStatement","src":"12601:72:24"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12727:6:24","nodeType":"YulIdentifier","src":"12727:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"12740:9:24","nodeType":"YulIdentifier","src":"12740:9:24"},{"kind":"number","nativeSrc":"12751:2:24","nodeType":"YulLiteral","src":"12751:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12736:3:24","nodeType":"YulIdentifier","src":"12736:3:24"},"nativeSrc":"12736:18:24","nodeType":"YulFunctionCall","src":"12736:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12683:43:24","nodeType":"YulIdentifier","src":"12683:43:24"},"nativeSrc":"12683:72:24","nodeType":"YulFunctionCall","src":"12683:72:24"},"nativeSrc":"12683:72:24","nodeType":"YulExpressionStatement","src":"12683:72:24"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"12809:6:24","nodeType":"YulIdentifier","src":"12809:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"12822:9:24","nodeType":"YulIdentifier","src":"12822:9:24"},{"kind":"number","nativeSrc":"12833:3:24","nodeType":"YulLiteral","src":"12833:3:24","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12818:3:24","nodeType":"YulIdentifier","src":"12818:3:24"},"nativeSrc":"12818:19:24","nodeType":"YulFunctionCall","src":"12818:19:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12765:43:24","nodeType":"YulIdentifier","src":"12765:43:24"},"nativeSrc":"12765:73:24","nodeType":"YulFunctionCall","src":"12765:73:24"},"nativeSrc":"12765:73:24","nodeType":"YulExpressionStatement","src":"12765:73:24"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"12892:6:24","nodeType":"YulIdentifier","src":"12892:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"12905:9:24","nodeType":"YulIdentifier","src":"12905:9:24"},{"kind":"number","nativeSrc":"12916:3:24","nodeType":"YulLiteral","src":"12916:3:24","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12901:3:24","nodeType":"YulIdentifier","src":"12901:3:24"},"nativeSrc":"12901:19:24","nodeType":"YulFunctionCall","src":"12901:19:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12848:43:24","nodeType":"YulIdentifier","src":"12848:43:24"},"nativeSrc":"12848:73:24","nodeType":"YulFunctionCall","src":"12848:73:24"},"nativeSrc":"12848:73:24","nodeType":"YulExpressionStatement","src":"12848:73:24"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"12975:6:24","nodeType":"YulIdentifier","src":"12975:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"12988:9:24","nodeType":"YulIdentifier","src":"12988:9:24"},{"kind":"number","nativeSrc":"12999:3:24","nodeType":"YulLiteral","src":"12999:3:24","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12984:3:24","nodeType":"YulIdentifier","src":"12984:3:24"},"nativeSrc":"12984:19:24","nodeType":"YulFunctionCall","src":"12984:19:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12931:43:24","nodeType":"YulIdentifier","src":"12931:43:24"},"nativeSrc":"12931:73:24","nodeType":"YulFunctionCall","src":"12931:73:24"},"nativeSrc":"12931:73:24","nodeType":"YulExpressionStatement","src":"12931:73:24"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12125:886:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12315:9:24","nodeType":"YulTypedName","src":"12315:9:24","type":""},{"name":"value6","nativeSrc":"12327:6:24","nodeType":"YulTypedName","src":"12327:6:24","type":""},{"name":"value5","nativeSrc":"12335:6:24","nodeType":"YulTypedName","src":"12335:6:24","type":""},{"name":"value4","nativeSrc":"12343:6:24","nodeType":"YulTypedName","src":"12343:6:24","type":""},{"name":"value3","nativeSrc":"12351:6:24","nodeType":"YulTypedName","src":"12351:6:24","type":""},{"name":"value2","nativeSrc":"12359:6:24","nodeType":"YulTypedName","src":"12359:6:24","type":""},{"name":"value1","nativeSrc":"12367:6:24","nodeType":"YulTypedName","src":"12367:6:24","type":""},{"name":"value0","nativeSrc":"12375:6:24","nodeType":"YulTypedName","src":"12375:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12386:4:24","nodeType":"YulTypedName","src":"12386:4:24","type":""}],"src":"12125:886:24"},{"body":{"nativeSrc":"13076:40:24","nodeType":"YulBlock","src":"13076:40:24","statements":[{"nativeSrc":"13087:22:24","nodeType":"YulAssignment","src":"13087:22:24","value":{"arguments":[{"name":"value","nativeSrc":"13103:5:24","nodeType":"YulIdentifier","src":"13103:5:24"}],"functionName":{"name":"mload","nativeSrc":"13097:5:24","nodeType":"YulIdentifier","src":"13097:5:24"},"nativeSrc":"13097:12:24","nodeType":"YulFunctionCall","src":"13097:12:24"},"variableNames":[{"name":"length","nativeSrc":"13087:6:24","nodeType":"YulIdentifier","src":"13087:6:24"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"13017:99:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13059:5:24","nodeType":"YulTypedName","src":"13059:5:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"13069:6:24","nodeType":"YulTypedName","src":"13069:6:24","type":""}],"src":"13017:99:24"},{"body":{"nativeSrc":"13218:73:24","nodeType":"YulBlock","src":"13218:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13235:3:24","nodeType":"YulIdentifier","src":"13235:3:24"},{"name":"length","nativeSrc":"13240:6:24","nodeType":"YulIdentifier","src":"13240:6:24"}],"functionName":{"name":"mstore","nativeSrc":"13228:6:24","nodeType":"YulIdentifier","src":"13228:6:24"},"nativeSrc":"13228:19:24","nodeType":"YulFunctionCall","src":"13228:19:24"},"nativeSrc":"13228:19:24","nodeType":"YulExpressionStatement","src":"13228:19:24"},{"nativeSrc":"13256:29:24","nodeType":"YulAssignment","src":"13256:29:24","value":{"arguments":[{"name":"pos","nativeSrc":"13275:3:24","nodeType":"YulIdentifier","src":"13275:3:24"},{"kind":"number","nativeSrc":"13280:4:24","nodeType":"YulLiteral","src":"13280:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13271:3:24","nodeType":"YulIdentifier","src":"13271:3:24"},"nativeSrc":"13271:14:24","nodeType":"YulFunctionCall","src":"13271:14:24"},"variableNames":[{"name":"updated_pos","nativeSrc":"13256:11:24","nodeType":"YulIdentifier","src":"13256:11:24"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13122:169:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13190:3:24","nodeType":"YulTypedName","src":"13190:3:24","type":""},{"name":"length","nativeSrc":"13195:6:24","nodeType":"YulTypedName","src":"13195:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"13206:11:24","nodeType":"YulTypedName","src":"13206:11:24","type":""}],"src":"13122:169:24"},{"body":{"nativeSrc":"13359:186:24","nodeType":"YulBlock","src":"13359:186:24","statements":[{"nativeSrc":"13370:10:24","nodeType":"YulVariableDeclaration","src":"13370:10:24","value":{"kind":"number","nativeSrc":"13379:1:24","nodeType":"YulLiteral","src":"13379:1:24","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"13374:1:24","nodeType":"YulTypedName","src":"13374:1:24","type":""}]},{"body":{"nativeSrc":"13439:63:24","nodeType":"YulBlock","src":"13439:63:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"13464:3:24","nodeType":"YulIdentifier","src":"13464:3:24"},{"name":"i","nativeSrc":"13469:1:24","nodeType":"YulIdentifier","src":"13469:1:24"}],"functionName":{"name":"add","nativeSrc":"13460:3:24","nodeType":"YulIdentifier","src":"13460:3:24"},"nativeSrc":"13460:11:24","nodeType":"YulFunctionCall","src":"13460:11:24"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"13483:3:24","nodeType":"YulIdentifier","src":"13483:3:24"},{"name":"i","nativeSrc":"13488:1:24","nodeType":"YulIdentifier","src":"13488:1:24"}],"functionName":{"name":"add","nativeSrc":"13479:3:24","nodeType":"YulIdentifier","src":"13479:3:24"},"nativeSrc":"13479:11:24","nodeType":"YulFunctionCall","src":"13479:11:24"}],"functionName":{"name":"mload","nativeSrc":"13473:5:24","nodeType":"YulIdentifier","src":"13473:5:24"},"nativeSrc":"13473:18:24","nodeType":"YulFunctionCall","src":"13473:18:24"}],"functionName":{"name":"mstore","nativeSrc":"13453:6:24","nodeType":"YulIdentifier","src":"13453:6:24"},"nativeSrc":"13453:39:24","nodeType":"YulFunctionCall","src":"13453:39:24"},"nativeSrc":"13453:39:24","nodeType":"YulExpressionStatement","src":"13453:39:24"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"13400:1:24","nodeType":"YulIdentifier","src":"13400:1:24"},{"name":"length","nativeSrc":"13403:6:24","nodeType":"YulIdentifier","src":"13403:6:24"}],"functionName":{"name":"lt","nativeSrc":"13397:2:24","nodeType":"YulIdentifier","src":"13397:2:24"},"nativeSrc":"13397:13:24","nodeType":"YulFunctionCall","src":"13397:13:24"},"nativeSrc":"13389:113:24","nodeType":"YulForLoop","post":{"nativeSrc":"13411:19:24","nodeType":"YulBlock","src":"13411:19:24","statements":[{"nativeSrc":"13413:15:24","nodeType":"YulAssignment","src":"13413:15:24","value":{"arguments":[{"name":"i","nativeSrc":"13422:1:24","nodeType":"YulIdentifier","src":"13422:1:24"},{"kind":"number","nativeSrc":"13425:2:24","nodeType":"YulLiteral","src":"13425:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13418:3:24","nodeType":"YulIdentifier","src":"13418:3:24"},"nativeSrc":"13418:10:24","nodeType":"YulFunctionCall","src":"13418:10:24"},"variableNames":[{"name":"i","nativeSrc":"13413:1:24","nodeType":"YulIdentifier","src":"13413:1:24"}]}]},"pre":{"nativeSrc":"13393:3:24","nodeType":"YulBlock","src":"13393:3:24","statements":[]},"src":"13389:113:24"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"13522:3:24","nodeType":"YulIdentifier","src":"13522:3:24"},{"name":"length","nativeSrc":"13527:6:24","nodeType":"YulIdentifier","src":"13527:6:24"}],"functionName":{"name":"add","nativeSrc":"13518:3:24","nodeType":"YulIdentifier","src":"13518:3:24"},"nativeSrc":"13518:16:24","nodeType":"YulFunctionCall","src":"13518:16:24"},{"kind":"number","nativeSrc":"13536:1:24","nodeType":"YulLiteral","src":"13536:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"13511:6:24","nodeType":"YulIdentifier","src":"13511:6:24"},"nativeSrc":"13511:27:24","nodeType":"YulFunctionCall","src":"13511:27:24"},"nativeSrc":"13511:27:24","nodeType":"YulExpressionStatement","src":"13511:27:24"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"13297:248:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"13341:3:24","nodeType":"YulTypedName","src":"13341:3:24","type":""},{"name":"dst","nativeSrc":"13346:3:24","nodeType":"YulTypedName","src":"13346:3:24","type":""},{"name":"length","nativeSrc":"13351:6:24","nodeType":"YulTypedName","src":"13351:6:24","type":""}],"src":"13297:248:24"},{"body":{"nativeSrc":"13643:285:24","nodeType":"YulBlock","src":"13643:285:24","statements":[{"nativeSrc":"13653:53:24","nodeType":"YulVariableDeclaration","src":"13653:53:24","value":{"arguments":[{"name":"value","nativeSrc":"13700:5:24","nodeType":"YulIdentifier","src":"13700:5:24"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"13667:32:24","nodeType":"YulIdentifier","src":"13667:32:24"},"nativeSrc":"13667:39:24","nodeType":"YulFunctionCall","src":"13667:39:24"},"variables":[{"name":"length","nativeSrc":"13657:6:24","nodeType":"YulTypedName","src":"13657:6:24","type":""}]},{"nativeSrc":"13715:78:24","nodeType":"YulAssignment","src":"13715:78:24","value":{"arguments":[{"name":"pos","nativeSrc":"13781:3:24","nodeType":"YulIdentifier","src":"13781:3:24"},{"name":"length","nativeSrc":"13786:6:24","nodeType":"YulIdentifier","src":"13786:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13722:58:24","nodeType":"YulIdentifier","src":"13722:58:24"},"nativeSrc":"13722:71:24","nodeType":"YulFunctionCall","src":"13722:71:24"},"variableNames":[{"name":"pos","nativeSrc":"13715:3:24","nodeType":"YulIdentifier","src":"13715:3:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13841:5:24","nodeType":"YulIdentifier","src":"13841:5:24"},{"kind":"number","nativeSrc":"13848:4:24","nodeType":"YulLiteral","src":"13848:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13837:3:24","nodeType":"YulIdentifier","src":"13837:3:24"},"nativeSrc":"13837:16:24","nodeType":"YulFunctionCall","src":"13837:16:24"},{"name":"pos","nativeSrc":"13855:3:24","nodeType":"YulIdentifier","src":"13855:3:24"},{"name":"length","nativeSrc":"13860:6:24","nodeType":"YulIdentifier","src":"13860:6:24"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"13802:34:24","nodeType":"YulIdentifier","src":"13802:34:24"},"nativeSrc":"13802:65:24","nodeType":"YulFunctionCall","src":"13802:65:24"},"nativeSrc":"13802:65:24","nodeType":"YulExpressionStatement","src":"13802:65:24"},{"nativeSrc":"13876:46:24","nodeType":"YulAssignment","src":"13876:46:24","value":{"arguments":[{"name":"pos","nativeSrc":"13887:3:24","nodeType":"YulIdentifier","src":"13887:3:24"},{"arguments":[{"name":"length","nativeSrc":"13914:6:24","nodeType":"YulIdentifier","src":"13914:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"13892:21:24","nodeType":"YulIdentifier","src":"13892:21:24"},"nativeSrc":"13892:29:24","nodeType":"YulFunctionCall","src":"13892:29:24"}],"functionName":{"name":"add","nativeSrc":"13883:3:24","nodeType":"YulIdentifier","src":"13883:3:24"},"nativeSrc":"13883:39:24","nodeType":"YulFunctionCall","src":"13883:39:24"},"variableNames":[{"name":"end","nativeSrc":"13876:3:24","nodeType":"YulIdentifier","src":"13876:3:24"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"13551:377:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13624:5:24","nodeType":"YulTypedName","src":"13624:5:24","type":""},{"name":"pos","nativeSrc":"13631:3:24","nodeType":"YulTypedName","src":"13631:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13639:3:24","nodeType":"YulTypedName","src":"13639:3:24","type":""}],"src":"13551:377:24"},{"body":{"nativeSrc":"14052:195:24","nodeType":"YulBlock","src":"14052:195:24","statements":[{"nativeSrc":"14062:26:24","nodeType":"YulAssignment","src":"14062:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"14074:9:24","nodeType":"YulIdentifier","src":"14074:9:24"},{"kind":"number","nativeSrc":"14085:2:24","nodeType":"YulLiteral","src":"14085:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14070:3:24","nodeType":"YulIdentifier","src":"14070:3:24"},"nativeSrc":"14070:18:24","nodeType":"YulFunctionCall","src":"14070:18:24"},"variableNames":[{"name":"tail","nativeSrc":"14062:4:24","nodeType":"YulIdentifier","src":"14062:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14109:9:24","nodeType":"YulIdentifier","src":"14109:9:24"},{"kind":"number","nativeSrc":"14120:1:24","nodeType":"YulLiteral","src":"14120:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14105:3:24","nodeType":"YulIdentifier","src":"14105:3:24"},"nativeSrc":"14105:17:24","nodeType":"YulFunctionCall","src":"14105:17:24"},{"arguments":[{"name":"tail","nativeSrc":"14128:4:24","nodeType":"YulIdentifier","src":"14128:4:24"},{"name":"headStart","nativeSrc":"14134:9:24","nodeType":"YulIdentifier","src":"14134:9:24"}],"functionName":{"name":"sub","nativeSrc":"14124:3:24","nodeType":"YulIdentifier","src":"14124:3:24"},"nativeSrc":"14124:20:24","nodeType":"YulFunctionCall","src":"14124:20:24"}],"functionName":{"name":"mstore","nativeSrc":"14098:6:24","nodeType":"YulIdentifier","src":"14098:6:24"},"nativeSrc":"14098:47:24","nodeType":"YulFunctionCall","src":"14098:47:24"},"nativeSrc":"14098:47:24","nodeType":"YulExpressionStatement","src":"14098:47:24"},{"nativeSrc":"14154:86:24","nodeType":"YulAssignment","src":"14154:86:24","value":{"arguments":[{"name":"value0","nativeSrc":"14226:6:24","nodeType":"YulIdentifier","src":"14226:6:24"},{"name":"tail","nativeSrc":"14235:4:24","nodeType":"YulIdentifier","src":"14235:4:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"14162:63:24","nodeType":"YulIdentifier","src":"14162:63:24"},"nativeSrc":"14162:78:24","nodeType":"YulFunctionCall","src":"14162:78:24"},"variableNames":[{"name":"tail","nativeSrc":"14154:4:24","nodeType":"YulIdentifier","src":"14154:4:24"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13934:313:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14024:9:24","nodeType":"YulTypedName","src":"14024:9:24","type":""},{"name":"value0","nativeSrc":"14036:6:24","nodeType":"YulTypedName","src":"14036:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14047:4:24","nodeType":"YulTypedName","src":"14047:4:24","type":""}],"src":"13934:313:24"},{"body":{"nativeSrc":"14293:76:24","nodeType":"YulBlock","src":"14293:76:24","statements":[{"body":{"nativeSrc":"14347:16:24","nodeType":"YulBlock","src":"14347:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14356:1:24","nodeType":"YulLiteral","src":"14356:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"14359:1:24","nodeType":"YulLiteral","src":"14359:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14349:6:24","nodeType":"YulIdentifier","src":"14349:6:24"},"nativeSrc":"14349:12:24","nodeType":"YulFunctionCall","src":"14349:12:24"},"nativeSrc":"14349:12:24","nodeType":"YulExpressionStatement","src":"14349:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14316:5:24","nodeType":"YulIdentifier","src":"14316:5:24"},{"arguments":[{"name":"value","nativeSrc":"14338:5:24","nodeType":"YulIdentifier","src":"14338:5:24"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"14323:14:24","nodeType":"YulIdentifier","src":"14323:14:24"},"nativeSrc":"14323:21:24","nodeType":"YulFunctionCall","src":"14323:21:24"}],"functionName":{"name":"eq","nativeSrc":"14313:2:24","nodeType":"YulIdentifier","src":"14313:2:24"},"nativeSrc":"14313:32:24","nodeType":"YulFunctionCall","src":"14313:32:24"}],"functionName":{"name":"iszero","nativeSrc":"14306:6:24","nodeType":"YulIdentifier","src":"14306:6:24"},"nativeSrc":"14306:40:24","nodeType":"YulFunctionCall","src":"14306:40:24"},"nativeSrc":"14303:60:24","nodeType":"YulIf","src":"14303:60:24"}]},"name":"validator_revert_t_bool","nativeSrc":"14253:116:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14286:5:24","nodeType":"YulTypedName","src":"14286:5:24","type":""}],"src":"14253:116:24"},{"body":{"nativeSrc":"14424:84:24","nodeType":"YulBlock","src":"14424:84:24","statements":[{"nativeSrc":"14434:29:24","nodeType":"YulAssignment","src":"14434:29:24","value":{"arguments":[{"name":"offset","nativeSrc":"14456:6:24","nodeType":"YulIdentifier","src":"14456:6:24"}],"functionName":{"name":"calldataload","nativeSrc":"14443:12:24","nodeType":"YulIdentifier","src":"14443:12:24"},"nativeSrc":"14443:20:24","nodeType":"YulFunctionCall","src":"14443:20:24"},"variableNames":[{"name":"value","nativeSrc":"14434:5:24","nodeType":"YulIdentifier","src":"14434:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"14496:5:24","nodeType":"YulIdentifier","src":"14496:5:24"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"14472:23:24","nodeType":"YulIdentifier","src":"14472:23:24"},"nativeSrc":"14472:30:24","nodeType":"YulFunctionCall","src":"14472:30:24"},"nativeSrc":"14472:30:24","nodeType":"YulExpressionStatement","src":"14472:30:24"}]},"name":"abi_decode_t_bool","nativeSrc":"14375:133:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14402:6:24","nodeType":"YulTypedName","src":"14402:6:24","type":""},{"name":"end","nativeSrc":"14410:3:24","nodeType":"YulTypedName","src":"14410:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"14418:5:24","nodeType":"YulTypedName","src":"14418:5:24","type":""}],"src":"14375:133:24"},{"body":{"nativeSrc":"14645:774:24","nodeType":"YulBlock","src":"14645:774:24","statements":[{"body":{"nativeSrc":"14692:83:24","nodeType":"YulBlock","src":"14692:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14694:77:24","nodeType":"YulIdentifier","src":"14694:77:24"},"nativeSrc":"14694:79:24","nodeType":"YulFunctionCall","src":"14694:79:24"},"nativeSrc":"14694:79:24","nodeType":"YulExpressionStatement","src":"14694:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14666:7:24","nodeType":"YulIdentifier","src":"14666:7:24"},{"name":"headStart","nativeSrc":"14675:9:24","nodeType":"YulIdentifier","src":"14675:9:24"}],"functionName":{"name":"sub","nativeSrc":"14662:3:24","nodeType":"YulIdentifier","src":"14662:3:24"},"nativeSrc":"14662:23:24","nodeType":"YulFunctionCall","src":"14662:23:24"},{"kind":"number","nativeSrc":"14687:3:24","nodeType":"YulLiteral","src":"14687:3:24","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"14658:3:24","nodeType":"YulIdentifier","src":"14658:3:24"},"nativeSrc":"14658:33:24","nodeType":"YulFunctionCall","src":"14658:33:24"},"nativeSrc":"14655:120:24","nodeType":"YulIf","src":"14655:120:24"},{"nativeSrc":"14785:117:24","nodeType":"YulBlock","src":"14785:117:24","statements":[{"nativeSrc":"14800:15:24","nodeType":"YulVariableDeclaration","src":"14800:15:24","value":{"kind":"number","nativeSrc":"14814:1:24","nodeType":"YulLiteral","src":"14814:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14804:6:24","nodeType":"YulTypedName","src":"14804:6:24","type":""}]},{"nativeSrc":"14829:63:24","nodeType":"YulAssignment","src":"14829:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14864:9:24","nodeType":"YulIdentifier","src":"14864:9:24"},{"name":"offset","nativeSrc":"14875:6:24","nodeType":"YulIdentifier","src":"14875:6:24"}],"functionName":{"name":"add","nativeSrc":"14860:3:24","nodeType":"YulIdentifier","src":"14860:3:24"},"nativeSrc":"14860:22:24","nodeType":"YulFunctionCall","src":"14860:22:24"},{"name":"dataEnd","nativeSrc":"14884:7:24","nodeType":"YulIdentifier","src":"14884:7:24"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14839:20:24","nodeType":"YulIdentifier","src":"14839:20:24"},"nativeSrc":"14839:53:24","nodeType":"YulFunctionCall","src":"14839:53:24"},"variableNames":[{"name":"value0","nativeSrc":"14829:6:24","nodeType":"YulIdentifier","src":"14829:6:24"}]}]},{"nativeSrc":"14912:118:24","nodeType":"YulBlock","src":"14912:118:24","statements":[{"nativeSrc":"14927:16:24","nodeType":"YulVariableDeclaration","src":"14927:16:24","value":{"kind":"number","nativeSrc":"14941:2:24","nodeType":"YulLiteral","src":"14941:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"14931:6:24","nodeType":"YulTypedName","src":"14931:6:24","type":""}]},{"nativeSrc":"14957:63:24","nodeType":"YulAssignment","src":"14957:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14992:9:24","nodeType":"YulIdentifier","src":"14992:9:24"},{"name":"offset","nativeSrc":"15003:6:24","nodeType":"YulIdentifier","src":"15003:6:24"}],"functionName":{"name":"add","nativeSrc":"14988:3:24","nodeType":"YulIdentifier","src":"14988:3:24"},"nativeSrc":"14988:22:24","nodeType":"YulFunctionCall","src":"14988:22:24"},{"name":"dataEnd","nativeSrc":"15012:7:24","nodeType":"YulIdentifier","src":"15012:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"14967:20:24","nodeType":"YulIdentifier","src":"14967:20:24"},"nativeSrc":"14967:53:24","nodeType":"YulFunctionCall","src":"14967:53:24"},"variableNames":[{"name":"value1","nativeSrc":"14957:6:24","nodeType":"YulIdentifier","src":"14957:6:24"}]}]},{"nativeSrc":"15040:118:24","nodeType":"YulBlock","src":"15040:118:24","statements":[{"nativeSrc":"15055:16:24","nodeType":"YulVariableDeclaration","src":"15055:16:24","value":{"kind":"number","nativeSrc":"15069:2:24","nodeType":"YulLiteral","src":"15069:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"15059:6:24","nodeType":"YulTypedName","src":"15059:6:24","type":""}]},{"nativeSrc":"15085:63:24","nodeType":"YulAssignment","src":"15085:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15120:9:24","nodeType":"YulIdentifier","src":"15120:9:24"},{"name":"offset","nativeSrc":"15131:6:24","nodeType":"YulIdentifier","src":"15131:6:24"}],"functionName":{"name":"add","nativeSrc":"15116:3:24","nodeType":"YulIdentifier","src":"15116:3:24"},"nativeSrc":"15116:22:24","nodeType":"YulFunctionCall","src":"15116:22:24"},{"name":"dataEnd","nativeSrc":"15140:7:24","nodeType":"YulIdentifier","src":"15140:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15095:20:24","nodeType":"YulIdentifier","src":"15095:20:24"},"nativeSrc":"15095:53:24","nodeType":"YulFunctionCall","src":"15095:53:24"},"variableNames":[{"name":"value2","nativeSrc":"15085:6:24","nodeType":"YulIdentifier","src":"15085:6:24"}]}]},{"nativeSrc":"15168:118:24","nodeType":"YulBlock","src":"15168:118:24","statements":[{"nativeSrc":"15183:16:24","nodeType":"YulVariableDeclaration","src":"15183:16:24","value":{"kind":"number","nativeSrc":"15197:2:24","nodeType":"YulLiteral","src":"15197:2:24","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"15187:6:24","nodeType":"YulTypedName","src":"15187:6:24","type":""}]},{"nativeSrc":"15213:63:24","nodeType":"YulAssignment","src":"15213:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15248:9:24","nodeType":"YulIdentifier","src":"15248:9:24"},{"name":"offset","nativeSrc":"15259:6:24","nodeType":"YulIdentifier","src":"15259:6:24"}],"functionName":{"name":"add","nativeSrc":"15244:3:24","nodeType":"YulIdentifier","src":"15244:3:24"},"nativeSrc":"15244:22:24","nodeType":"YulFunctionCall","src":"15244:22:24"},{"name":"dataEnd","nativeSrc":"15268:7:24","nodeType":"YulIdentifier","src":"15268:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15223:20:24","nodeType":"YulIdentifier","src":"15223:20:24"},"nativeSrc":"15223:53:24","nodeType":"YulFunctionCall","src":"15223:53:24"},"variableNames":[{"name":"value3","nativeSrc":"15213:6:24","nodeType":"YulIdentifier","src":"15213:6:24"}]}]},{"nativeSrc":"15296:116:24","nodeType":"YulBlock","src":"15296:116:24","statements":[{"nativeSrc":"15311:17:24","nodeType":"YulVariableDeclaration","src":"15311:17:24","value":{"kind":"number","nativeSrc":"15325:3:24","nodeType":"YulLiteral","src":"15325:3:24","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"15315:6:24","nodeType":"YulTypedName","src":"15315:6:24","type":""}]},{"nativeSrc":"15342:60:24","nodeType":"YulAssignment","src":"15342:60:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15374:9:24","nodeType":"YulIdentifier","src":"15374:9:24"},{"name":"offset","nativeSrc":"15385:6:24","nodeType":"YulIdentifier","src":"15385:6:24"}],"functionName":{"name":"add","nativeSrc":"15370:3:24","nodeType":"YulIdentifier","src":"15370:3:24"},"nativeSrc":"15370:22:24","nodeType":"YulFunctionCall","src":"15370:22:24"},{"name":"dataEnd","nativeSrc":"15394:7:24","nodeType":"YulIdentifier","src":"15394:7:24"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"15352:17:24","nodeType":"YulIdentifier","src":"15352:17:24"},"nativeSrc":"15352:50:24","nodeType":"YulFunctionCall","src":"15352:50:24"},"variableNames":[{"name":"value4","nativeSrc":"15342:6:24","nodeType":"YulIdentifier","src":"15342:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bool","nativeSrc":"14514:905:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14583:9:24","nodeType":"YulTypedName","src":"14583:9:24","type":""},{"name":"dataEnd","nativeSrc":"14594:7:24","nodeType":"YulTypedName","src":"14594:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14606:6:24","nodeType":"YulTypedName","src":"14606:6:24","type":""},{"name":"value1","nativeSrc":"14614:6:24","nodeType":"YulTypedName","src":"14614:6:24","type":""},{"name":"value2","nativeSrc":"14622:6:24","nodeType":"YulTypedName","src":"14622:6:24","type":""},{"name":"value3","nativeSrc":"14630:6:24","nodeType":"YulTypedName","src":"14630:6:24","type":""},{"name":"value4","nativeSrc":"14638:6:24","nodeType":"YulTypedName","src":"14638:6:24","type":""}],"src":"14514:905:24"},{"body":{"nativeSrc":"15525:519:24","nodeType":"YulBlock","src":"15525:519:24","statements":[{"body":{"nativeSrc":"15571:83:24","nodeType":"YulBlock","src":"15571:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15573:77:24","nodeType":"YulIdentifier","src":"15573:77:24"},"nativeSrc":"15573:79:24","nodeType":"YulFunctionCall","src":"15573:79:24"},"nativeSrc":"15573:79:24","nodeType":"YulExpressionStatement","src":"15573:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15546:7:24","nodeType":"YulIdentifier","src":"15546:7:24"},{"name":"headStart","nativeSrc":"15555:9:24","nodeType":"YulIdentifier","src":"15555:9:24"}],"functionName":{"name":"sub","nativeSrc":"15542:3:24","nodeType":"YulIdentifier","src":"15542:3:24"},"nativeSrc":"15542:23:24","nodeType":"YulFunctionCall","src":"15542:23:24"},{"kind":"number","nativeSrc":"15567:2:24","nodeType":"YulLiteral","src":"15567:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"15538:3:24","nodeType":"YulIdentifier","src":"15538:3:24"},"nativeSrc":"15538:32:24","nodeType":"YulFunctionCall","src":"15538:32:24"},"nativeSrc":"15535:119:24","nodeType":"YulIf","src":"15535:119:24"},{"nativeSrc":"15664:117:24","nodeType":"YulBlock","src":"15664:117:24","statements":[{"nativeSrc":"15679:15:24","nodeType":"YulVariableDeclaration","src":"15679:15:24","value":{"kind":"number","nativeSrc":"15693:1:24","nodeType":"YulLiteral","src":"15693:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15683:6:24","nodeType":"YulTypedName","src":"15683:6:24","type":""}]},{"nativeSrc":"15708:63:24","nodeType":"YulAssignment","src":"15708:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15743:9:24","nodeType":"YulIdentifier","src":"15743:9:24"},{"name":"offset","nativeSrc":"15754:6:24","nodeType":"YulIdentifier","src":"15754:6:24"}],"functionName":{"name":"add","nativeSrc":"15739:3:24","nodeType":"YulIdentifier","src":"15739:3:24"},"nativeSrc":"15739:22:24","nodeType":"YulFunctionCall","src":"15739:22:24"},{"name":"dataEnd","nativeSrc":"15763:7:24","nodeType":"YulIdentifier","src":"15763:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15718:20:24","nodeType":"YulIdentifier","src":"15718:20:24"},"nativeSrc":"15718:53:24","nodeType":"YulFunctionCall","src":"15718:53:24"},"variableNames":[{"name":"value0","nativeSrc":"15708:6:24","nodeType":"YulIdentifier","src":"15708:6:24"}]}]},{"nativeSrc":"15791:118:24","nodeType":"YulBlock","src":"15791:118:24","statements":[{"nativeSrc":"15806:16:24","nodeType":"YulVariableDeclaration","src":"15806:16:24","value":{"kind":"number","nativeSrc":"15820:2:24","nodeType":"YulLiteral","src":"15820:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15810:6:24","nodeType":"YulTypedName","src":"15810:6:24","type":""}]},{"nativeSrc":"15836:63:24","nodeType":"YulAssignment","src":"15836:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15871:9:24","nodeType":"YulIdentifier","src":"15871:9:24"},{"name":"offset","nativeSrc":"15882:6:24","nodeType":"YulIdentifier","src":"15882:6:24"}],"functionName":{"name":"add","nativeSrc":"15867:3:24","nodeType":"YulIdentifier","src":"15867:3:24"},"nativeSrc":"15867:22:24","nodeType":"YulFunctionCall","src":"15867:22:24"},{"name":"dataEnd","nativeSrc":"15891:7:24","nodeType":"YulIdentifier","src":"15891:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15846:20:24","nodeType":"YulIdentifier","src":"15846:20:24"},"nativeSrc":"15846:53:24","nodeType":"YulFunctionCall","src":"15846:53:24"},"variableNames":[{"name":"value1","nativeSrc":"15836:6:24","nodeType":"YulIdentifier","src":"15836:6:24"}]}]},{"nativeSrc":"15919:118:24","nodeType":"YulBlock","src":"15919:118:24","statements":[{"nativeSrc":"15934:16:24","nodeType":"YulVariableDeclaration","src":"15934:16:24","value":{"kind":"number","nativeSrc":"15948:2:24","nodeType":"YulLiteral","src":"15948:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"15938:6:24","nodeType":"YulTypedName","src":"15938:6:24","type":""}]},{"nativeSrc":"15964:63:24","nodeType":"YulAssignment","src":"15964:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15999:9:24","nodeType":"YulIdentifier","src":"15999:9:24"},{"name":"offset","nativeSrc":"16010:6:24","nodeType":"YulIdentifier","src":"16010:6:24"}],"functionName":{"name":"add","nativeSrc":"15995:3:24","nodeType":"YulIdentifier","src":"15995:3:24"},"nativeSrc":"15995:22:24","nodeType":"YulFunctionCall","src":"15995:22:24"},{"name":"dataEnd","nativeSrc":"16019:7:24","nodeType":"YulIdentifier","src":"16019:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15974:20:24","nodeType":"YulIdentifier","src":"15974:20:24"},"nativeSrc":"15974:53:24","nodeType":"YulFunctionCall","src":"15974:53:24"},"variableNames":[{"name":"value2","nativeSrc":"15964:6:24","nodeType":"YulIdentifier","src":"15964:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nativeSrc":"15425:619:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15479:9:24","nodeType":"YulTypedName","src":"15479:9:24","type":""},{"name":"dataEnd","nativeSrc":"15490:7:24","nodeType":"YulTypedName","src":"15490:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15502:6:24","nodeType":"YulTypedName","src":"15502:6:24","type":""},{"name":"value1","nativeSrc":"15510:6:24","nodeType":"YulTypedName","src":"15510:6:24","type":""},{"name":"value2","nativeSrc":"15518:6:24","nodeType":"YulTypedName","src":"15518:6:24","type":""}],"src":"15425:619:24"},{"body":{"nativeSrc":"16131:278:24","nodeType":"YulBlock","src":"16131:278:24","statements":[{"body":{"nativeSrc":"16177:83:24","nodeType":"YulBlock","src":"16177:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"16179:77:24","nodeType":"YulIdentifier","src":"16179:77:24"},"nativeSrc":"16179:79:24","nodeType":"YulFunctionCall","src":"16179:79:24"},"nativeSrc":"16179:79:24","nodeType":"YulExpressionStatement","src":"16179:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16152:7:24","nodeType":"YulIdentifier","src":"16152:7:24"},{"name":"headStart","nativeSrc":"16161:9:24","nodeType":"YulIdentifier","src":"16161:9:24"}],"functionName":{"name":"sub","nativeSrc":"16148:3:24","nodeType":"YulIdentifier","src":"16148:3:24"},"nativeSrc":"16148:23:24","nodeType":"YulFunctionCall","src":"16148:23:24"},{"kind":"number","nativeSrc":"16173:2:24","nodeType":"YulLiteral","src":"16173:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"16144:3:24","nodeType":"YulIdentifier","src":"16144:3:24"},"nativeSrc":"16144:32:24","nodeType":"YulFunctionCall","src":"16144:32:24"},"nativeSrc":"16141:119:24","nodeType":"YulIf","src":"16141:119:24"},{"nativeSrc":"16270:132:24","nodeType":"YulBlock","src":"16270:132:24","statements":[{"nativeSrc":"16285:15:24","nodeType":"YulVariableDeclaration","src":"16285:15:24","value":{"kind":"number","nativeSrc":"16299:1:24","nodeType":"YulLiteral","src":"16299:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"16289:6:24","nodeType":"YulTypedName","src":"16289:6:24","type":""}]},{"nativeSrc":"16314:78:24","nodeType":"YulAssignment","src":"16314:78:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16364:9:24","nodeType":"YulIdentifier","src":"16364:9:24"},{"name":"offset","nativeSrc":"16375:6:24","nodeType":"YulIdentifier","src":"16375:6:24"}],"functionName":{"name":"add","nativeSrc":"16360:3:24","nodeType":"YulIdentifier","src":"16360:3:24"},"nativeSrc":"16360:22:24","nodeType":"YulFunctionCall","src":"16360:22:24"},{"name":"dataEnd","nativeSrc":"16384:7:24","nodeType":"YulIdentifier","src":"16384:7:24"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$1646","nativeSrc":"16324:35:24","nodeType":"YulIdentifier","src":"16324:35:24"},"nativeSrc":"16324:68:24","nodeType":"YulFunctionCall","src":"16324:68:24"},"variableNames":[{"name":"value0","nativeSrc":"16314:6:24","nodeType":"YulIdentifier","src":"16314:6:24"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$1646","nativeSrc":"16050:359:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16101:9:24","nodeType":"YulTypedName","src":"16101:9:24","type":""},{"name":"dataEnd","nativeSrc":"16112:7:24","nodeType":"YulTypedName","src":"16112:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16124:6:24","nodeType":"YulTypedName","src":"16124:6:24","type":""}],"src":"16050:359:24"},{"body":{"nativeSrc":"16512:516:24","nodeType":"YulBlock","src":"16512:516:24","statements":[{"body":{"nativeSrc":"16558:83:24","nodeType":"YulBlock","src":"16558:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"16560:77:24","nodeType":"YulIdentifier","src":"16560:77:24"},"nativeSrc":"16560:79:24","nodeType":"YulFunctionCall","src":"16560:79:24"},"nativeSrc":"16560:79:24","nodeType":"YulExpressionStatement","src":"16560:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16533:7:24","nodeType":"YulIdentifier","src":"16533:7:24"},{"name":"headStart","nativeSrc":"16542:9:24","nodeType":"YulIdentifier","src":"16542:9:24"}],"functionName":{"name":"sub","nativeSrc":"16529:3:24","nodeType":"YulIdentifier","src":"16529:3:24"},"nativeSrc":"16529:23:24","nodeType":"YulFunctionCall","src":"16529:23:24"},{"kind":"number","nativeSrc":"16554:2:24","nodeType":"YulLiteral","src":"16554:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"16525:3:24","nodeType":"YulIdentifier","src":"16525:3:24"},"nativeSrc":"16525:32:24","nodeType":"YulFunctionCall","src":"16525:32:24"},"nativeSrc":"16522:119:24","nodeType":"YulIf","src":"16522:119:24"},{"nativeSrc":"16651:117:24","nodeType":"YulBlock","src":"16651:117:24","statements":[{"nativeSrc":"16666:15:24","nodeType":"YulVariableDeclaration","src":"16666:15:24","value":{"kind":"number","nativeSrc":"16680:1:24","nodeType":"YulLiteral","src":"16680:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"16670:6:24","nodeType":"YulTypedName","src":"16670:6:24","type":""}]},{"nativeSrc":"16695:63:24","nodeType":"YulAssignment","src":"16695:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16730:9:24","nodeType":"YulIdentifier","src":"16730:9:24"},{"name":"offset","nativeSrc":"16741:6:24","nodeType":"YulIdentifier","src":"16741:6:24"}],"functionName":{"name":"add","nativeSrc":"16726:3:24","nodeType":"YulIdentifier","src":"16726:3:24"},"nativeSrc":"16726:22:24","nodeType":"YulFunctionCall","src":"16726:22:24"},{"name":"dataEnd","nativeSrc":"16750:7:24","nodeType":"YulIdentifier","src":"16750:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"16705:20:24","nodeType":"YulIdentifier","src":"16705:20:24"},"nativeSrc":"16705:53:24","nodeType":"YulFunctionCall","src":"16705:53:24"},"variableNames":[{"name":"value0","nativeSrc":"16695:6:24","nodeType":"YulIdentifier","src":"16695:6:24"}]}]},{"nativeSrc":"16778:118:24","nodeType":"YulBlock","src":"16778:118:24","statements":[{"nativeSrc":"16793:16:24","nodeType":"YulVariableDeclaration","src":"16793:16:24","value":{"kind":"number","nativeSrc":"16807:2:24","nodeType":"YulLiteral","src":"16807:2:24","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"16797:6:24","nodeType":"YulTypedName","src":"16797:6:24","type":""}]},{"nativeSrc":"16823:63:24","nodeType":"YulAssignment","src":"16823:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16858:9:24","nodeType":"YulIdentifier","src":"16858:9:24"},{"name":"offset","nativeSrc":"16869:6:24","nodeType":"YulIdentifier","src":"16869:6:24"}],"functionName":{"name":"add","nativeSrc":"16854:3:24","nodeType":"YulIdentifier","src":"16854:3:24"},"nativeSrc":"16854:22:24","nodeType":"YulFunctionCall","src":"16854:22:24"},{"name":"dataEnd","nativeSrc":"16878:7:24","nodeType":"YulIdentifier","src":"16878:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"16833:20:24","nodeType":"YulIdentifier","src":"16833:20:24"},"nativeSrc":"16833:53:24","nodeType":"YulFunctionCall","src":"16833:53:24"},"variableNames":[{"name":"value1","nativeSrc":"16823:6:24","nodeType":"YulIdentifier","src":"16823:6:24"}]}]},{"nativeSrc":"16906:115:24","nodeType":"YulBlock","src":"16906:115:24","statements":[{"nativeSrc":"16921:16:24","nodeType":"YulVariableDeclaration","src":"16921:16:24","value":{"kind":"number","nativeSrc":"16935:2:24","nodeType":"YulLiteral","src":"16935:2:24","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"16925:6:24","nodeType":"YulTypedName","src":"16925:6:24","type":""}]},{"nativeSrc":"16951:60:24","nodeType":"YulAssignment","src":"16951:60:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16983:9:24","nodeType":"YulIdentifier","src":"16983:9:24"},{"name":"offset","nativeSrc":"16994:6:24","nodeType":"YulIdentifier","src":"16994:6:24"}],"functionName":{"name":"add","nativeSrc":"16979:3:24","nodeType":"YulIdentifier","src":"16979:3:24"},"nativeSrc":"16979:22:24","nodeType":"YulFunctionCall","src":"16979:22:24"},{"name":"dataEnd","nativeSrc":"17003:7:24","nodeType":"YulIdentifier","src":"17003:7:24"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"16961:17:24","nodeType":"YulIdentifier","src":"16961:17:24"},"nativeSrc":"16961:50:24","nodeType":"YulFunctionCall","src":"16961:50:24"},"variableNames":[{"name":"value2","nativeSrc":"16951:6:24","nodeType":"YulIdentifier","src":"16951:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_bool","nativeSrc":"16415:613:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16466:9:24","nodeType":"YulTypedName","src":"16466:9:24","type":""},{"name":"dataEnd","nativeSrc":"16477:7:24","nodeType":"YulTypedName","src":"16477:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16489:6:24","nodeType":"YulTypedName","src":"16489:6:24","type":""},{"name":"value1","nativeSrc":"16497:6:24","nodeType":"YulTypedName","src":"16497:6:24","type":""},{"name":"value2","nativeSrc":"16505:6:24","nodeType":"YulTypedName","src":"16505:6:24","type":""}],"src":"16415:613:24"},{"body":{"nativeSrc":"17160:206:24","nodeType":"YulBlock","src":"17160:206:24","statements":[{"nativeSrc":"17170:26:24","nodeType":"YulAssignment","src":"17170:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"17182:9:24","nodeType":"YulIdentifier","src":"17182:9:24"},{"kind":"number","nativeSrc":"17193:2:24","nodeType":"YulLiteral","src":"17193:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17178:3:24","nodeType":"YulIdentifier","src":"17178:3:24"},"nativeSrc":"17178:18:24","nodeType":"YulFunctionCall","src":"17178:18:24"},"variableNames":[{"name":"tail","nativeSrc":"17170:4:24","nodeType":"YulIdentifier","src":"17170:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"17250:6:24","nodeType":"YulIdentifier","src":"17250:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"17263:9:24","nodeType":"YulIdentifier","src":"17263:9:24"},{"kind":"number","nativeSrc":"17274:1:24","nodeType":"YulLiteral","src":"17274:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17259:3:24","nodeType":"YulIdentifier","src":"17259:3:24"},"nativeSrc":"17259:17:24","nodeType":"YulFunctionCall","src":"17259:17:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17206:43:24","nodeType":"YulIdentifier","src":"17206:43:24"},"nativeSrc":"17206:71:24","nodeType":"YulFunctionCall","src":"17206:71:24"},"nativeSrc":"17206:71:24","nodeType":"YulExpressionStatement","src":"17206:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"17331:6:24","nodeType":"YulIdentifier","src":"17331:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"17344:9:24","nodeType":"YulIdentifier","src":"17344:9:24"},{"kind":"number","nativeSrc":"17355:2:24","nodeType":"YulLiteral","src":"17355:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17340:3:24","nodeType":"YulIdentifier","src":"17340:3:24"},"nativeSrc":"17340:18:24","nodeType":"YulFunctionCall","src":"17340:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17287:43:24","nodeType":"YulIdentifier","src":"17287:43:24"},"nativeSrc":"17287:72:24","nodeType":"YulFunctionCall","src":"17287:72:24"},"nativeSrc":"17287:72:24","nodeType":"YulExpressionStatement","src":"17287:72:24"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"17034:332:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17124:9:24","nodeType":"YulTypedName","src":"17124:9:24","type":""},{"name":"value1","nativeSrc":"17136:6:24","nodeType":"YulTypedName","src":"17136:6:24","type":""},{"name":"value0","nativeSrc":"17144:6:24","nodeType":"YulTypedName","src":"17144:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17155:4:24","nodeType":"YulTypedName","src":"17155:4:24","type":""}],"src":"17034:332:24"},{"body":{"nativeSrc":"17478:55:24","nodeType":"YulBlock","src":"17478:55:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17500:6:24","nodeType":"YulIdentifier","src":"17500:6:24"},{"kind":"number","nativeSrc":"17508:1:24","nodeType":"YulLiteral","src":"17508:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17496:3:24","nodeType":"YulIdentifier","src":"17496:3:24"},"nativeSrc":"17496:14:24","nodeType":"YulFunctionCall","src":"17496:14:24"},{"hexValue":"696e76616c696420706964","kind":"string","nativeSrc":"17512:13:24","nodeType":"YulLiteral","src":"17512:13:24","type":"","value":"invalid pid"}],"functionName":{"name":"mstore","nativeSrc":"17489:6:24","nodeType":"YulIdentifier","src":"17489:6:24"},"nativeSrc":"17489:37:24","nodeType":"YulFunctionCall","src":"17489:37:24"},"nativeSrc":"17489:37:24","nodeType":"YulExpressionStatement","src":"17489:37:24"}]},"name":"store_literal_in_memory_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9","nativeSrc":"17372:161:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17470:6:24","nodeType":"YulTypedName","src":"17470:6:24","type":""}],"src":"17372:161:24"},{"body":{"nativeSrc":"17685:220:24","nodeType":"YulBlock","src":"17685:220:24","statements":[{"nativeSrc":"17695:74:24","nodeType":"YulAssignment","src":"17695:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"17761:3:24","nodeType":"YulIdentifier","src":"17761:3:24"},{"kind":"number","nativeSrc":"17766:2:24","nodeType":"YulLiteral","src":"17766:2:24","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17702:58:24","nodeType":"YulIdentifier","src":"17702:58:24"},"nativeSrc":"17702:67:24","nodeType":"YulFunctionCall","src":"17702:67:24"},"variableNames":[{"name":"pos","nativeSrc":"17695:3:24","nodeType":"YulIdentifier","src":"17695:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17867:3:24","nodeType":"YulIdentifier","src":"17867:3:24"}],"functionName":{"name":"store_literal_in_memory_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9","nativeSrc":"17778:88:24","nodeType":"YulIdentifier","src":"17778:88:24"},"nativeSrc":"17778:93:24","nodeType":"YulFunctionCall","src":"17778:93:24"},"nativeSrc":"17778:93:24","nodeType":"YulExpressionStatement","src":"17778:93:24"},{"nativeSrc":"17880:19:24","nodeType":"YulAssignment","src":"17880:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"17891:3:24","nodeType":"YulIdentifier","src":"17891:3:24"},{"kind":"number","nativeSrc":"17896:2:24","nodeType":"YulLiteral","src":"17896:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17887:3:24","nodeType":"YulIdentifier","src":"17887:3:24"},"nativeSrc":"17887:12:24","nodeType":"YulFunctionCall","src":"17887:12:24"},"variableNames":[{"name":"end","nativeSrc":"17880:3:24","nodeType":"YulIdentifier","src":"17880:3:24"}]}]},"name":"abi_encode_t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9_to_t_string_memory_ptr_fromStack","nativeSrc":"17539:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17673:3:24","nodeType":"YulTypedName","src":"17673:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17681:3:24","nodeType":"YulTypedName","src":"17681:3:24","type":""}],"src":"17539:366:24"},{"body":{"nativeSrc":"18082:248:24","nodeType":"YulBlock","src":"18082:248:24","statements":[{"nativeSrc":"18092:26:24","nodeType":"YulAssignment","src":"18092:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"18104:9:24","nodeType":"YulIdentifier","src":"18104:9:24"},{"kind":"number","nativeSrc":"18115:2:24","nodeType":"YulLiteral","src":"18115:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18100:3:24","nodeType":"YulIdentifier","src":"18100:3:24"},"nativeSrc":"18100:18:24","nodeType":"YulFunctionCall","src":"18100:18:24"},"variableNames":[{"name":"tail","nativeSrc":"18092:4:24","nodeType":"YulIdentifier","src":"18092:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18139:9:24","nodeType":"YulIdentifier","src":"18139:9:24"},{"kind":"number","nativeSrc":"18150:1:24","nodeType":"YulLiteral","src":"18150:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18135:3:24","nodeType":"YulIdentifier","src":"18135:3:24"},"nativeSrc":"18135:17:24","nodeType":"YulFunctionCall","src":"18135:17:24"},{"arguments":[{"name":"tail","nativeSrc":"18158:4:24","nodeType":"YulIdentifier","src":"18158:4:24"},{"name":"headStart","nativeSrc":"18164:9:24","nodeType":"YulIdentifier","src":"18164:9:24"}],"functionName":{"name":"sub","nativeSrc":"18154:3:24","nodeType":"YulIdentifier","src":"18154:3:24"},"nativeSrc":"18154:20:24","nodeType":"YulFunctionCall","src":"18154:20:24"}],"functionName":{"name":"mstore","nativeSrc":"18128:6:24","nodeType":"YulIdentifier","src":"18128:6:24"},"nativeSrc":"18128:47:24","nodeType":"YulFunctionCall","src":"18128:47:24"},"nativeSrc":"18128:47:24","nodeType":"YulExpressionStatement","src":"18128:47:24"},{"nativeSrc":"18184:139:24","nodeType":"YulAssignment","src":"18184:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"18318:4:24","nodeType":"YulIdentifier","src":"18318:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9_to_t_string_memory_ptr_fromStack","nativeSrc":"18192:124:24","nodeType":"YulIdentifier","src":"18192:124:24"},"nativeSrc":"18192:131:24","nodeType":"YulFunctionCall","src":"18192:131:24"},"variableNames":[{"name":"tail","nativeSrc":"18184:4:24","nodeType":"YulIdentifier","src":"18184:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17911:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18062:9:24","nodeType":"YulTypedName","src":"18062:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18077:4:24","nodeType":"YulTypedName","src":"18077:4:24","type":""}],"src":"17911:419:24"},{"body":{"nativeSrc":"18442:62:24","nodeType":"YulBlock","src":"18442:62:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18464:6:24","nodeType":"YulIdentifier","src":"18464:6:24"},{"kind":"number","nativeSrc":"18472:1:24","nodeType":"YulLiteral","src":"18472:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18460:3:24","nodeType":"YulIdentifier","src":"18460:3:24"},"nativeSrc":"18460:14:24","nodeType":"YulFunctionCall","src":"18460:14:24"},{"hexValue":"776974686472617720697320706175736564","kind":"string","nativeSrc":"18476:20:24","nodeType":"YulLiteral","src":"18476:20:24","type":"","value":"withdraw is paused"}],"functionName":{"name":"mstore","nativeSrc":"18453:6:24","nodeType":"YulIdentifier","src":"18453:6:24"},"nativeSrc":"18453:44:24","nodeType":"YulFunctionCall","src":"18453:44:24"},"nativeSrc":"18453:44:24","nodeType":"YulExpressionStatement","src":"18453:44:24"}]},"name":"store_literal_in_memory_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0","nativeSrc":"18336:168:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18434:6:24","nodeType":"YulTypedName","src":"18434:6:24","type":""}],"src":"18336:168:24"},{"body":{"nativeSrc":"18656:220:24","nodeType":"YulBlock","src":"18656:220:24","statements":[{"nativeSrc":"18666:74:24","nodeType":"YulAssignment","src":"18666:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"18732:3:24","nodeType":"YulIdentifier","src":"18732:3:24"},{"kind":"number","nativeSrc":"18737:2:24","nodeType":"YulLiteral","src":"18737:2:24","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18673:58:24","nodeType":"YulIdentifier","src":"18673:58:24"},"nativeSrc":"18673:67:24","nodeType":"YulFunctionCall","src":"18673:67:24"},"variableNames":[{"name":"pos","nativeSrc":"18666:3:24","nodeType":"YulIdentifier","src":"18666:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18838:3:24","nodeType":"YulIdentifier","src":"18838:3:24"}],"functionName":{"name":"store_literal_in_memory_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0","nativeSrc":"18749:88:24","nodeType":"YulIdentifier","src":"18749:88:24"},"nativeSrc":"18749:93:24","nodeType":"YulFunctionCall","src":"18749:93:24"},"nativeSrc":"18749:93:24","nodeType":"YulExpressionStatement","src":"18749:93:24"},{"nativeSrc":"18851:19:24","nodeType":"YulAssignment","src":"18851:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"18862:3:24","nodeType":"YulIdentifier","src":"18862:3:24"},{"kind":"number","nativeSrc":"18867:2:24","nodeType":"YulLiteral","src":"18867:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18858:3:24","nodeType":"YulIdentifier","src":"18858:3:24"},"nativeSrc":"18858:12:24","nodeType":"YulFunctionCall","src":"18858:12:24"},"variableNames":[{"name":"end","nativeSrc":"18851:3:24","nodeType":"YulIdentifier","src":"18851:3:24"}]}]},"name":"abi_encode_t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0_to_t_string_memory_ptr_fromStack","nativeSrc":"18510:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18644:3:24","nodeType":"YulTypedName","src":"18644:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18652:3:24","nodeType":"YulTypedName","src":"18652:3:24","type":""}],"src":"18510:366:24"},{"body":{"nativeSrc":"19053:248:24","nodeType":"YulBlock","src":"19053:248:24","statements":[{"nativeSrc":"19063:26:24","nodeType":"YulAssignment","src":"19063:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"19075:9:24","nodeType":"YulIdentifier","src":"19075:9:24"},{"kind":"number","nativeSrc":"19086:2:24","nodeType":"YulLiteral","src":"19086:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19071:3:24","nodeType":"YulIdentifier","src":"19071:3:24"},"nativeSrc":"19071:18:24","nodeType":"YulFunctionCall","src":"19071:18:24"},"variableNames":[{"name":"tail","nativeSrc":"19063:4:24","nodeType":"YulIdentifier","src":"19063:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19110:9:24","nodeType":"YulIdentifier","src":"19110:9:24"},{"kind":"number","nativeSrc":"19121:1:24","nodeType":"YulLiteral","src":"19121:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19106:3:24","nodeType":"YulIdentifier","src":"19106:3:24"},"nativeSrc":"19106:17:24","nodeType":"YulFunctionCall","src":"19106:17:24"},{"arguments":[{"name":"tail","nativeSrc":"19129:4:24","nodeType":"YulIdentifier","src":"19129:4:24"},{"name":"headStart","nativeSrc":"19135:9:24","nodeType":"YulIdentifier","src":"19135:9:24"}],"functionName":{"name":"sub","nativeSrc":"19125:3:24","nodeType":"YulIdentifier","src":"19125:3:24"},"nativeSrc":"19125:20:24","nodeType":"YulFunctionCall","src":"19125:20:24"}],"functionName":{"name":"mstore","nativeSrc":"19099:6:24","nodeType":"YulIdentifier","src":"19099:6:24"},"nativeSrc":"19099:47:24","nodeType":"YulFunctionCall","src":"19099:47:24"},"nativeSrc":"19099:47:24","nodeType":"YulExpressionStatement","src":"19099:47:24"},{"nativeSrc":"19155:139:24","nodeType":"YulAssignment","src":"19155:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"19289:4:24","nodeType":"YulIdentifier","src":"19289:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0_to_t_string_memory_ptr_fromStack","nativeSrc":"19163:124:24","nodeType":"YulIdentifier","src":"19163:124:24"},"nativeSrc":"19163:131:24","nodeType":"YulFunctionCall","src":"19163:131:24"},"variableNames":[{"name":"tail","nativeSrc":"19155:4:24","nodeType":"YulIdentifier","src":"19155:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18882:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19033:9:24","nodeType":"YulTypedName","src":"19033:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19048:4:24","nodeType":"YulTypedName","src":"19048:4:24","type":""}],"src":"18882:419:24"},{"body":{"nativeSrc":"19335:152:24","nodeType":"YulBlock","src":"19335:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19352:1:24","nodeType":"YulLiteral","src":"19352:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"19355:77:24","nodeType":"YulLiteral","src":"19355:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"19345:6:24","nodeType":"YulIdentifier","src":"19345:6:24"},"nativeSrc":"19345:88:24","nodeType":"YulFunctionCall","src":"19345:88:24"},"nativeSrc":"19345:88:24","nodeType":"YulExpressionStatement","src":"19345:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19449:1:24","nodeType":"YulLiteral","src":"19449:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"19452:4:24","nodeType":"YulLiteral","src":"19452:4:24","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"19442:6:24","nodeType":"YulIdentifier","src":"19442:6:24"},"nativeSrc":"19442:15:24","nodeType":"YulFunctionCall","src":"19442:15:24"},"nativeSrc":"19442:15:24","nodeType":"YulExpressionStatement","src":"19442:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19473:1:24","nodeType":"YulLiteral","src":"19473:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"19476:4:24","nodeType":"YulLiteral","src":"19476:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"19466:6:24","nodeType":"YulIdentifier","src":"19466:6:24"},"nativeSrc":"19466:15:24","nodeType":"YulFunctionCall","src":"19466:15:24"},"nativeSrc":"19466:15:24","nodeType":"YulExpressionStatement","src":"19466:15:24"}]},"name":"panic_error_0x32","nativeSrc":"19307:180:24","nodeType":"YulFunctionDefinition","src":"19307:180:24"},{"body":{"nativeSrc":"19521:152:24","nodeType":"YulBlock","src":"19521:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19538:1:24","nodeType":"YulLiteral","src":"19538:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"19541:77:24","nodeType":"YulLiteral","src":"19541:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"19531:6:24","nodeType":"YulIdentifier","src":"19531:6:24"},"nativeSrc":"19531:88:24","nodeType":"YulFunctionCall","src":"19531:88:24"},"nativeSrc":"19531:88:24","nodeType":"YulExpressionStatement","src":"19531:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19635:1:24","nodeType":"YulLiteral","src":"19635:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"19638:4:24","nodeType":"YulLiteral","src":"19638:4:24","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"19628:6:24","nodeType":"YulIdentifier","src":"19628:6:24"},"nativeSrc":"19628:15:24","nodeType":"YulFunctionCall","src":"19628:15:24"},"nativeSrc":"19628:15:24","nodeType":"YulExpressionStatement","src":"19628:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19659:1:24","nodeType":"YulLiteral","src":"19659:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"19662:4:24","nodeType":"YulLiteral","src":"19662:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"19652:6:24","nodeType":"YulIdentifier","src":"19652:6:24"},"nativeSrc":"19652:15:24","nodeType":"YulFunctionCall","src":"19652:15:24"},"nativeSrc":"19652:15:24","nodeType":"YulExpressionStatement","src":"19652:15:24"}]},"name":"panic_error_0x11","nativeSrc":"19493:180:24","nodeType":"YulFunctionDefinition","src":"19493:180:24"},{"body":{"nativeSrc":"19723:147:24","nodeType":"YulBlock","src":"19723:147:24","statements":[{"nativeSrc":"19733:25:24","nodeType":"YulAssignment","src":"19733:25:24","value":{"arguments":[{"name":"x","nativeSrc":"19756:1:24","nodeType":"YulIdentifier","src":"19756:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19738:17:24","nodeType":"YulIdentifier","src":"19738:17:24"},"nativeSrc":"19738:20:24","nodeType":"YulFunctionCall","src":"19738:20:24"},"variableNames":[{"name":"x","nativeSrc":"19733:1:24","nodeType":"YulIdentifier","src":"19733:1:24"}]},{"nativeSrc":"19767:25:24","nodeType":"YulAssignment","src":"19767:25:24","value":{"arguments":[{"name":"y","nativeSrc":"19790:1:24","nodeType":"YulIdentifier","src":"19790:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19772:17:24","nodeType":"YulIdentifier","src":"19772:17:24"},"nativeSrc":"19772:20:24","nodeType":"YulFunctionCall","src":"19772:20:24"},"variableNames":[{"name":"y","nativeSrc":"19767:1:24","nodeType":"YulIdentifier","src":"19767:1:24"}]},{"nativeSrc":"19801:16:24","nodeType":"YulAssignment","src":"19801:16:24","value":{"arguments":[{"name":"x","nativeSrc":"19812:1:24","nodeType":"YulIdentifier","src":"19812:1:24"},{"name":"y","nativeSrc":"19815:1:24","nodeType":"YulIdentifier","src":"19815:1:24"}],"functionName":{"name":"add","nativeSrc":"19808:3:24","nodeType":"YulIdentifier","src":"19808:3:24"},"nativeSrc":"19808:9:24","nodeType":"YulFunctionCall","src":"19808:9:24"},"variableNames":[{"name":"sum","nativeSrc":"19801:3:24","nodeType":"YulIdentifier","src":"19801:3:24"}]},{"body":{"nativeSrc":"19841:22:24","nodeType":"YulBlock","src":"19841:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"19843:16:24","nodeType":"YulIdentifier","src":"19843:16:24"},"nativeSrc":"19843:18:24","nodeType":"YulFunctionCall","src":"19843:18:24"},"nativeSrc":"19843:18:24","nodeType":"YulExpressionStatement","src":"19843:18:24"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"19833:1:24","nodeType":"YulIdentifier","src":"19833:1:24"},{"name":"sum","nativeSrc":"19836:3:24","nodeType":"YulIdentifier","src":"19836:3:24"}],"functionName":{"name":"gt","nativeSrc":"19830:2:24","nodeType":"YulIdentifier","src":"19830:2:24"},"nativeSrc":"19830:10:24","nodeType":"YulFunctionCall","src":"19830:10:24"},"nativeSrc":"19827:36:24","nodeType":"YulIf","src":"19827:36:24"}]},"name":"checked_add_t_uint256","nativeSrc":"19679:191:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"19710:1:24","nodeType":"YulTypedName","src":"19710:1:24","type":""},{"name":"y","nativeSrc":"19713:1:24","nodeType":"YulTypedName","src":"19713:1:24","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"19719:3:24","nodeType":"YulTypedName","src":"19719:3:24","type":""}],"src":"19679:191:24"},{"body":{"nativeSrc":"19919:190:24","nodeType":"YulBlock","src":"19919:190:24","statements":[{"nativeSrc":"19929:33:24","nodeType":"YulAssignment","src":"19929:33:24","value":{"arguments":[{"name":"value","nativeSrc":"19956:5:24","nodeType":"YulIdentifier","src":"19956:5:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19938:17:24","nodeType":"YulIdentifier","src":"19938:17:24"},"nativeSrc":"19938:24:24","nodeType":"YulFunctionCall","src":"19938:24:24"},"variableNames":[{"name":"value","nativeSrc":"19929:5:24","nodeType":"YulIdentifier","src":"19929:5:24"}]},{"body":{"nativeSrc":"20052:22:24","nodeType":"YulBlock","src":"20052:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20054:16:24","nodeType":"YulIdentifier","src":"20054:16:24"},"nativeSrc":"20054:18:24","nodeType":"YulFunctionCall","src":"20054:18:24"},"nativeSrc":"20054:18:24","nodeType":"YulExpressionStatement","src":"20054:18:24"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"19977:5:24","nodeType":"YulIdentifier","src":"19977:5:24"},{"kind":"number","nativeSrc":"19984:66:24","nodeType":"YulLiteral","src":"19984:66:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"19974:2:24","nodeType":"YulIdentifier","src":"19974:2:24"},"nativeSrc":"19974:77:24","nodeType":"YulFunctionCall","src":"19974:77:24"},"nativeSrc":"19971:103:24","nodeType":"YulIf","src":"19971:103:24"},{"nativeSrc":"20083:20:24","nodeType":"YulAssignment","src":"20083:20:24","value":{"arguments":[{"name":"value","nativeSrc":"20094:5:24","nodeType":"YulIdentifier","src":"20094:5:24"},{"kind":"number","nativeSrc":"20101:1:24","nodeType":"YulLiteral","src":"20101:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"20090:3:24","nodeType":"YulIdentifier","src":"20090:3:24"},"nativeSrc":"20090:13:24","nodeType":"YulFunctionCall","src":"20090:13:24"},"variableNames":[{"name":"ret","nativeSrc":"20083:3:24","nodeType":"YulIdentifier","src":"20083:3:24"}]}]},"name":"increment_t_uint256","nativeSrc":"19876:233:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19905:5:24","nodeType":"YulTypedName","src":"19905:5:24","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"19915:3:24","nodeType":"YulTypedName","src":"19915:3:24","type":""}],"src":"19876:233:24"},{"body":{"nativeSrc":"20160:149:24","nodeType":"YulBlock","src":"20160:149:24","statements":[{"nativeSrc":"20170:25:24","nodeType":"YulAssignment","src":"20170:25:24","value":{"arguments":[{"name":"x","nativeSrc":"20193:1:24","nodeType":"YulIdentifier","src":"20193:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20175:17:24","nodeType":"YulIdentifier","src":"20175:17:24"},"nativeSrc":"20175:20:24","nodeType":"YulFunctionCall","src":"20175:20:24"},"variableNames":[{"name":"x","nativeSrc":"20170:1:24","nodeType":"YulIdentifier","src":"20170:1:24"}]},{"nativeSrc":"20204:25:24","nodeType":"YulAssignment","src":"20204:25:24","value":{"arguments":[{"name":"y","nativeSrc":"20227:1:24","nodeType":"YulIdentifier","src":"20227:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20209:17:24","nodeType":"YulIdentifier","src":"20209:17:24"},"nativeSrc":"20209:20:24","nodeType":"YulFunctionCall","src":"20209:20:24"},"variableNames":[{"name":"y","nativeSrc":"20204:1:24","nodeType":"YulIdentifier","src":"20204:1:24"}]},{"nativeSrc":"20238:17:24","nodeType":"YulAssignment","src":"20238:17:24","value":{"arguments":[{"name":"x","nativeSrc":"20250:1:24","nodeType":"YulIdentifier","src":"20250:1:24"},{"name":"y","nativeSrc":"20253:1:24","nodeType":"YulIdentifier","src":"20253:1:24"}],"functionName":{"name":"sub","nativeSrc":"20246:3:24","nodeType":"YulIdentifier","src":"20246:3:24"},"nativeSrc":"20246:9:24","nodeType":"YulFunctionCall","src":"20246:9:24"},"variableNames":[{"name":"diff","nativeSrc":"20238:4:24","nodeType":"YulIdentifier","src":"20238:4:24"}]},{"body":{"nativeSrc":"20280:22:24","nodeType":"YulBlock","src":"20280:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20282:16:24","nodeType":"YulIdentifier","src":"20282:16:24"},"nativeSrc":"20282:18:24","nodeType":"YulFunctionCall","src":"20282:18:24"},"nativeSrc":"20282:18:24","nodeType":"YulExpressionStatement","src":"20282:18:24"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"20271:4:24","nodeType":"YulIdentifier","src":"20271:4:24"},{"name":"x","nativeSrc":"20277:1:24","nodeType":"YulIdentifier","src":"20277:1:24"}],"functionName":{"name":"gt","nativeSrc":"20268:2:24","nodeType":"YulIdentifier","src":"20268:2:24"},"nativeSrc":"20268:11:24","nodeType":"YulFunctionCall","src":"20268:11:24"},"nativeSrc":"20265:37:24","nodeType":"YulIf","src":"20265:37:24"}]},"name":"checked_sub_t_uint256","nativeSrc":"20115:194:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"20146:1:24","nodeType":"YulTypedName","src":"20146:1:24","type":""},{"name":"y","nativeSrc":"20149:1:24","nodeType":"YulTypedName","src":"20149:1:24","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"20155:4:24","nodeType":"YulTypedName","src":"20155:4:24","type":""}],"src":"20115:194:24"},{"body":{"nativeSrc":"20343:152:24","nodeType":"YulBlock","src":"20343:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20360:1:24","nodeType":"YulLiteral","src":"20360:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"20363:77:24","nodeType":"YulLiteral","src":"20363:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"20353:6:24","nodeType":"YulIdentifier","src":"20353:6:24"},"nativeSrc":"20353:88:24","nodeType":"YulFunctionCall","src":"20353:88:24"},"nativeSrc":"20353:88:24","nodeType":"YulExpressionStatement","src":"20353:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20457:1:24","nodeType":"YulLiteral","src":"20457:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"20460:4:24","nodeType":"YulLiteral","src":"20460:4:24","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"20450:6:24","nodeType":"YulIdentifier","src":"20450:6:24"},"nativeSrc":"20450:15:24","nodeType":"YulFunctionCall","src":"20450:15:24"},"nativeSrc":"20450:15:24","nodeType":"YulExpressionStatement","src":"20450:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20481:1:24","nodeType":"YulLiteral","src":"20481:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"20484:4:24","nodeType":"YulLiteral","src":"20484:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20474:6:24","nodeType":"YulIdentifier","src":"20474:6:24"},"nativeSrc":"20474:15:24","nodeType":"YulFunctionCall","src":"20474:15:24"},"nativeSrc":"20474:15:24","nodeType":"YulExpressionStatement","src":"20474:15:24"}]},"name":"panic_error_0x31","nativeSrc":"20315:180:24","nodeType":"YulFunctionDefinition","src":"20315:180:24"},{"body":{"nativeSrc":"20607:59:24","nodeType":"YulBlock","src":"20607:59:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20629:6:24","nodeType":"YulIdentifier","src":"20629:6:24"},{"kind":"number","nativeSrc":"20637:1:24","nodeType":"YulLiteral","src":"20637:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20625:3:24","nodeType":"YulIdentifier","src":"20625:3:24"},"nativeSrc":"20625:14:24","nodeType":"YulFunctionCall","src":"20625:14:24"},{"hexValue":"636c61696d20697320706175736564","kind":"string","nativeSrc":"20641:17:24","nodeType":"YulLiteral","src":"20641:17:24","type":"","value":"claim is paused"}],"functionName":{"name":"mstore","nativeSrc":"20618:6:24","nodeType":"YulIdentifier","src":"20618:6:24"},"nativeSrc":"20618:41:24","nodeType":"YulFunctionCall","src":"20618:41:24"},"nativeSrc":"20618:41:24","nodeType":"YulExpressionStatement","src":"20618:41:24"}]},"name":"store_literal_in_memory_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa","nativeSrc":"20501:165:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"20599:6:24","nodeType":"YulTypedName","src":"20599:6:24","type":""}],"src":"20501:165:24"},{"body":{"nativeSrc":"20818:220:24","nodeType":"YulBlock","src":"20818:220:24","statements":[{"nativeSrc":"20828:74:24","nodeType":"YulAssignment","src":"20828:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"20894:3:24","nodeType":"YulIdentifier","src":"20894:3:24"},{"kind":"number","nativeSrc":"20899:2:24","nodeType":"YulLiteral","src":"20899:2:24","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"20835:58:24","nodeType":"YulIdentifier","src":"20835:58:24"},"nativeSrc":"20835:67:24","nodeType":"YulFunctionCall","src":"20835:67:24"},"variableNames":[{"name":"pos","nativeSrc":"20828:3:24","nodeType":"YulIdentifier","src":"20828:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"21000:3:24","nodeType":"YulIdentifier","src":"21000:3:24"}],"functionName":{"name":"store_literal_in_memory_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa","nativeSrc":"20911:88:24","nodeType":"YulIdentifier","src":"20911:88:24"},"nativeSrc":"20911:93:24","nodeType":"YulFunctionCall","src":"20911:93:24"},"nativeSrc":"20911:93:24","nodeType":"YulExpressionStatement","src":"20911:93:24"},{"nativeSrc":"21013:19:24","nodeType":"YulAssignment","src":"21013:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"21024:3:24","nodeType":"YulIdentifier","src":"21024:3:24"},{"kind":"number","nativeSrc":"21029:2:24","nodeType":"YulLiteral","src":"21029:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21020:3:24","nodeType":"YulIdentifier","src":"21020:3:24"},"nativeSrc":"21020:12:24","nodeType":"YulFunctionCall","src":"21020:12:24"},"variableNames":[{"name":"end","nativeSrc":"21013:3:24","nodeType":"YulIdentifier","src":"21013:3:24"}]}]},"name":"abi_encode_t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa_to_t_string_memory_ptr_fromStack","nativeSrc":"20672:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20806:3:24","nodeType":"YulTypedName","src":"20806:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20814:3:24","nodeType":"YulTypedName","src":"20814:3:24","type":""}],"src":"20672:366:24"},{"body":{"nativeSrc":"21215:248:24","nodeType":"YulBlock","src":"21215:248:24","statements":[{"nativeSrc":"21225:26:24","nodeType":"YulAssignment","src":"21225:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"21237:9:24","nodeType":"YulIdentifier","src":"21237:9:24"},{"kind":"number","nativeSrc":"21248:2:24","nodeType":"YulLiteral","src":"21248:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21233:3:24","nodeType":"YulIdentifier","src":"21233:3:24"},"nativeSrc":"21233:18:24","nodeType":"YulFunctionCall","src":"21233:18:24"},"variableNames":[{"name":"tail","nativeSrc":"21225:4:24","nodeType":"YulIdentifier","src":"21225:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21272:9:24","nodeType":"YulIdentifier","src":"21272:9:24"},{"kind":"number","nativeSrc":"21283:1:24","nodeType":"YulLiteral","src":"21283:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21268:3:24","nodeType":"YulIdentifier","src":"21268:3:24"},"nativeSrc":"21268:17:24","nodeType":"YulFunctionCall","src":"21268:17:24"},{"arguments":[{"name":"tail","nativeSrc":"21291:4:24","nodeType":"YulIdentifier","src":"21291:4:24"},{"name":"headStart","nativeSrc":"21297:9:24","nodeType":"YulIdentifier","src":"21297:9:24"}],"functionName":{"name":"sub","nativeSrc":"21287:3:24","nodeType":"YulIdentifier","src":"21287:3:24"},"nativeSrc":"21287:20:24","nodeType":"YulFunctionCall","src":"21287:20:24"}],"functionName":{"name":"mstore","nativeSrc":"21261:6:24","nodeType":"YulIdentifier","src":"21261:6:24"},"nativeSrc":"21261:47:24","nodeType":"YulFunctionCall","src":"21261:47:24"},"nativeSrc":"21261:47:24","nodeType":"YulExpressionStatement","src":"21261:47:24"},{"nativeSrc":"21317:139:24","nodeType":"YulAssignment","src":"21317:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"21451:4:24","nodeType":"YulIdentifier","src":"21451:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa_to_t_string_memory_ptr_fromStack","nativeSrc":"21325:124:24","nodeType":"YulIdentifier","src":"21325:124:24"},"nativeSrc":"21325:131:24","nodeType":"YulFunctionCall","src":"21325:131:24"},"variableNames":[{"name":"tail","nativeSrc":"21317:4:24","nodeType":"YulIdentifier","src":"21317:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21044:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21195:9:24","nodeType":"YulTypedName","src":"21195:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21210:4:24","nodeType":"YulTypedName","src":"21210:4:24","type":""}],"src":"21044:419:24"},{"body":{"nativeSrc":"21517:362:24","nodeType":"YulBlock","src":"21517:362:24","statements":[{"nativeSrc":"21527:25:24","nodeType":"YulAssignment","src":"21527:25:24","value":{"arguments":[{"name":"x","nativeSrc":"21550:1:24","nodeType":"YulIdentifier","src":"21550:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21532:17:24","nodeType":"YulIdentifier","src":"21532:17:24"},"nativeSrc":"21532:20:24","nodeType":"YulFunctionCall","src":"21532:20:24"},"variableNames":[{"name":"x","nativeSrc":"21527:1:24","nodeType":"YulIdentifier","src":"21527:1:24"}]},{"nativeSrc":"21561:25:24","nodeType":"YulAssignment","src":"21561:25:24","value":{"arguments":[{"name":"y","nativeSrc":"21584:1:24","nodeType":"YulIdentifier","src":"21584:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21566:17:24","nodeType":"YulIdentifier","src":"21566:17:24"},"nativeSrc":"21566:20:24","nodeType":"YulFunctionCall","src":"21566:20:24"},"variableNames":[{"name":"y","nativeSrc":"21561:1:24","nodeType":"YulIdentifier","src":"21561:1:24"}]},{"nativeSrc":"21595:28:24","nodeType":"YulVariableDeclaration","src":"21595:28:24","value":{"arguments":[{"name":"x","nativeSrc":"21618:1:24","nodeType":"YulIdentifier","src":"21618:1:24"},{"name":"y","nativeSrc":"21621:1:24","nodeType":"YulIdentifier","src":"21621:1:24"}],"functionName":{"name":"mul","nativeSrc":"21614:3:24","nodeType":"YulIdentifier","src":"21614:3:24"},"nativeSrc":"21614:9:24","nodeType":"YulFunctionCall","src":"21614:9:24"},"variables":[{"name":"product_raw","nativeSrc":"21599:11:24","nodeType":"YulTypedName","src":"21599:11:24","type":""}]},{"nativeSrc":"21632:41:24","nodeType":"YulAssignment","src":"21632:41:24","value":{"arguments":[{"name":"product_raw","nativeSrc":"21661:11:24","nodeType":"YulIdentifier","src":"21661:11:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21643:17:24","nodeType":"YulIdentifier","src":"21643:17:24"},"nativeSrc":"21643:30:24","nodeType":"YulFunctionCall","src":"21643:30:24"},"variableNames":[{"name":"product","nativeSrc":"21632:7:24","nodeType":"YulIdentifier","src":"21632:7:24"}]},{"body":{"nativeSrc":"21850:22:24","nodeType":"YulBlock","src":"21850:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"21852:16:24","nodeType":"YulIdentifier","src":"21852:16:24"},"nativeSrc":"21852:18:24","nodeType":"YulFunctionCall","src":"21852:18:24"},"nativeSrc":"21852:18:24","nodeType":"YulExpressionStatement","src":"21852:18:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"21783:1:24","nodeType":"YulIdentifier","src":"21783:1:24"}],"functionName":{"name":"iszero","nativeSrc":"21776:6:24","nodeType":"YulIdentifier","src":"21776:6:24"},"nativeSrc":"21776:9:24","nodeType":"YulFunctionCall","src":"21776:9:24"},{"arguments":[{"name":"y","nativeSrc":"21806:1:24","nodeType":"YulIdentifier","src":"21806:1:24"},{"arguments":[{"name":"product","nativeSrc":"21813:7:24","nodeType":"YulIdentifier","src":"21813:7:24"},{"name":"x","nativeSrc":"21822:1:24","nodeType":"YulIdentifier","src":"21822:1:24"}],"functionName":{"name":"div","nativeSrc":"21809:3:24","nodeType":"YulIdentifier","src":"21809:3:24"},"nativeSrc":"21809:15:24","nodeType":"YulFunctionCall","src":"21809:15:24"}],"functionName":{"name":"eq","nativeSrc":"21803:2:24","nodeType":"YulIdentifier","src":"21803:2:24"},"nativeSrc":"21803:22:24","nodeType":"YulFunctionCall","src":"21803:22:24"}],"functionName":{"name":"or","nativeSrc":"21756:2:24","nodeType":"YulIdentifier","src":"21756:2:24"},"nativeSrc":"21756:83:24","nodeType":"YulFunctionCall","src":"21756:83:24"}],"functionName":{"name":"iszero","nativeSrc":"21736:6:24","nodeType":"YulIdentifier","src":"21736:6:24"},"nativeSrc":"21736:113:24","nodeType":"YulFunctionCall","src":"21736:113:24"},"nativeSrc":"21733:139:24","nodeType":"YulIf","src":"21733:139:24"}]},"name":"checked_mul_t_uint256","nativeSrc":"21469:410:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"21500:1:24","nodeType":"YulTypedName","src":"21500:1:24","type":""},{"name":"y","nativeSrc":"21503:1:24","nodeType":"YulTypedName","src":"21503:1:24","type":""}],"returnVariables":[{"name":"product","nativeSrc":"21509:7:24","nodeType":"YulTypedName","src":"21509:7:24","type":""}],"src":"21469:410:24"},{"body":{"nativeSrc":"21913:152:24","nodeType":"YulBlock","src":"21913:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21930:1:24","nodeType":"YulLiteral","src":"21930:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"21933:77:24","nodeType":"YulLiteral","src":"21933:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21923:6:24","nodeType":"YulIdentifier","src":"21923:6:24"},"nativeSrc":"21923:88:24","nodeType":"YulFunctionCall","src":"21923:88:24"},"nativeSrc":"21923:88:24","nodeType":"YulExpressionStatement","src":"21923:88:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22027:1:24","nodeType":"YulLiteral","src":"22027:1:24","type":"","value":"4"},{"kind":"number","nativeSrc":"22030:4:24","nodeType":"YulLiteral","src":"22030:4:24","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"22020:6:24","nodeType":"YulIdentifier","src":"22020:6:24"},"nativeSrc":"22020:15:24","nodeType":"YulFunctionCall","src":"22020:15:24"},"nativeSrc":"22020:15:24","nodeType":"YulExpressionStatement","src":"22020:15:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22051:1:24","nodeType":"YulLiteral","src":"22051:1:24","type":"","value":"0"},{"kind":"number","nativeSrc":"22054:4:24","nodeType":"YulLiteral","src":"22054:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"22044:6:24","nodeType":"YulIdentifier","src":"22044:6:24"},"nativeSrc":"22044:15:24","nodeType":"YulFunctionCall","src":"22044:15:24"},"nativeSrc":"22044:15:24","nodeType":"YulExpressionStatement","src":"22044:15:24"}]},"name":"panic_error_0x12","nativeSrc":"21885:180:24","nodeType":"YulFunctionDefinition","src":"21885:180:24"},{"body":{"nativeSrc":"22113:143:24","nodeType":"YulBlock","src":"22113:143:24","statements":[{"nativeSrc":"22123:25:24","nodeType":"YulAssignment","src":"22123:25:24","value":{"arguments":[{"name":"x","nativeSrc":"22146:1:24","nodeType":"YulIdentifier","src":"22146:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"22128:17:24","nodeType":"YulIdentifier","src":"22128:17:24"},"nativeSrc":"22128:20:24","nodeType":"YulFunctionCall","src":"22128:20:24"},"variableNames":[{"name":"x","nativeSrc":"22123:1:24","nodeType":"YulIdentifier","src":"22123:1:24"}]},{"nativeSrc":"22157:25:24","nodeType":"YulAssignment","src":"22157:25:24","value":{"arguments":[{"name":"y","nativeSrc":"22180:1:24","nodeType":"YulIdentifier","src":"22180:1:24"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"22162:17:24","nodeType":"YulIdentifier","src":"22162:17:24"},"nativeSrc":"22162:20:24","nodeType":"YulFunctionCall","src":"22162:20:24"},"variableNames":[{"name":"y","nativeSrc":"22157:1:24","nodeType":"YulIdentifier","src":"22157:1:24"}]},{"body":{"nativeSrc":"22204:22:24","nodeType":"YulBlock","src":"22204:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"22206:16:24","nodeType":"YulIdentifier","src":"22206:16:24"},"nativeSrc":"22206:18:24","nodeType":"YulFunctionCall","src":"22206:18:24"},"nativeSrc":"22206:18:24","nodeType":"YulExpressionStatement","src":"22206:18:24"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"22201:1:24","nodeType":"YulIdentifier","src":"22201:1:24"}],"functionName":{"name":"iszero","nativeSrc":"22194:6:24","nodeType":"YulIdentifier","src":"22194:6:24"},"nativeSrc":"22194:9:24","nodeType":"YulFunctionCall","src":"22194:9:24"},"nativeSrc":"22191:35:24","nodeType":"YulIf","src":"22191:35:24"},{"nativeSrc":"22236:14:24","nodeType":"YulAssignment","src":"22236:14:24","value":{"arguments":[{"name":"x","nativeSrc":"22245:1:24","nodeType":"YulIdentifier","src":"22245:1:24"},{"name":"y","nativeSrc":"22248:1:24","nodeType":"YulIdentifier","src":"22248:1:24"}],"functionName":{"name":"div","nativeSrc":"22241:3:24","nodeType":"YulIdentifier","src":"22241:3:24"},"nativeSrc":"22241:9:24","nodeType":"YulFunctionCall","src":"22241:9:24"},"variableNames":[{"name":"r","nativeSrc":"22236:1:24","nodeType":"YulIdentifier","src":"22236:1:24"}]}]},"name":"checked_div_t_uint256","nativeSrc":"22071:185:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"22102:1:24","nodeType":"YulTypedName","src":"22102:1:24","type":""},{"name":"y","nativeSrc":"22105:1:24","nodeType":"YulTypedName","src":"22105:1:24","type":""}],"returnVariables":[{"name":"r","nativeSrc":"22111:1:24","nodeType":"YulTypedName","src":"22111:1:24","type":""}],"src":"22071:185:24"},{"body":{"nativeSrc":"22368:120:24","nodeType":"YulBlock","src":"22368:120:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22390:6:24","nodeType":"YulIdentifier","src":"22390:6:24"},{"kind":"number","nativeSrc":"22398:1:24","nodeType":"YulLiteral","src":"22398:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22386:3:24","nodeType":"YulIdentifier","src":"22386:3:24"},"nativeSrc":"22386:14:24","nodeType":"YulFunctionCall","src":"22386:14:24"},{"hexValue":"737461727420626c6f636b206d757374206265206c657373207468616e20656e","kind":"string","nativeSrc":"22402:34:24","nodeType":"YulLiteral","src":"22402:34:24","type":"","value":"start block must be less than en"}],"functionName":{"name":"mstore","nativeSrc":"22379:6:24","nodeType":"YulIdentifier","src":"22379:6:24"},"nativeSrc":"22379:58:24","nodeType":"YulFunctionCall","src":"22379:58:24"},"nativeSrc":"22379:58:24","nodeType":"YulExpressionStatement","src":"22379:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22458:6:24","nodeType":"YulIdentifier","src":"22458:6:24"},{"kind":"number","nativeSrc":"22466:2:24","nodeType":"YulLiteral","src":"22466:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22454:3:24","nodeType":"YulIdentifier","src":"22454:3:24"},"nativeSrc":"22454:15:24","nodeType":"YulFunctionCall","src":"22454:15:24"},{"hexValue":"6420626c6f636b","kind":"string","nativeSrc":"22471:9:24","nodeType":"YulLiteral","src":"22471:9:24","type":"","value":"d block"}],"functionName":{"name":"mstore","nativeSrc":"22447:6:24","nodeType":"YulIdentifier","src":"22447:6:24"},"nativeSrc":"22447:34:24","nodeType":"YulFunctionCall","src":"22447:34:24"},"nativeSrc":"22447:34:24","nodeType":"YulExpressionStatement","src":"22447:34:24"}]},"name":"store_literal_in_memory_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347","nativeSrc":"22262:226:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"22360:6:24","nodeType":"YulTypedName","src":"22360:6:24","type":""}],"src":"22262:226:24"},{"body":{"nativeSrc":"22640:220:24","nodeType":"YulBlock","src":"22640:220:24","statements":[{"nativeSrc":"22650:74:24","nodeType":"YulAssignment","src":"22650:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"22716:3:24","nodeType":"YulIdentifier","src":"22716:3:24"},{"kind":"number","nativeSrc":"22721:2:24","nodeType":"YulLiteral","src":"22721:2:24","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22657:58:24","nodeType":"YulIdentifier","src":"22657:58:24"},"nativeSrc":"22657:67:24","nodeType":"YulFunctionCall","src":"22657:67:24"},"variableNames":[{"name":"pos","nativeSrc":"22650:3:24","nodeType":"YulIdentifier","src":"22650:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"22822:3:24","nodeType":"YulIdentifier","src":"22822:3:24"}],"functionName":{"name":"store_literal_in_memory_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347","nativeSrc":"22733:88:24","nodeType":"YulIdentifier","src":"22733:88:24"},"nativeSrc":"22733:93:24","nodeType":"YulFunctionCall","src":"22733:93:24"},"nativeSrc":"22733:93:24","nodeType":"YulExpressionStatement","src":"22733:93:24"},{"nativeSrc":"22835:19:24","nodeType":"YulAssignment","src":"22835:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"22846:3:24","nodeType":"YulIdentifier","src":"22846:3:24"},{"kind":"number","nativeSrc":"22851:2:24","nodeType":"YulLiteral","src":"22851:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22842:3:24","nodeType":"YulIdentifier","src":"22842:3:24"},"nativeSrc":"22842:12:24","nodeType":"YulFunctionCall","src":"22842:12:24"},"variableNames":[{"name":"end","nativeSrc":"22835:3:24","nodeType":"YulIdentifier","src":"22835:3:24"}]}]},"name":"abi_encode_t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347_to_t_string_memory_ptr_fromStack","nativeSrc":"22494:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22628:3:24","nodeType":"YulTypedName","src":"22628:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22636:3:24","nodeType":"YulTypedName","src":"22636:3:24","type":""}],"src":"22494:366:24"},{"body":{"nativeSrc":"23037:248:24","nodeType":"YulBlock","src":"23037:248:24","statements":[{"nativeSrc":"23047:26:24","nodeType":"YulAssignment","src":"23047:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"23059:9:24","nodeType":"YulIdentifier","src":"23059:9:24"},{"kind":"number","nativeSrc":"23070:2:24","nodeType":"YulLiteral","src":"23070:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23055:3:24","nodeType":"YulIdentifier","src":"23055:3:24"},"nativeSrc":"23055:18:24","nodeType":"YulFunctionCall","src":"23055:18:24"},"variableNames":[{"name":"tail","nativeSrc":"23047:4:24","nodeType":"YulIdentifier","src":"23047:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23094:9:24","nodeType":"YulIdentifier","src":"23094:9:24"},{"kind":"number","nativeSrc":"23105:1:24","nodeType":"YulLiteral","src":"23105:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23090:3:24","nodeType":"YulIdentifier","src":"23090:3:24"},"nativeSrc":"23090:17:24","nodeType":"YulFunctionCall","src":"23090:17:24"},{"arguments":[{"name":"tail","nativeSrc":"23113:4:24","nodeType":"YulIdentifier","src":"23113:4:24"},{"name":"headStart","nativeSrc":"23119:9:24","nodeType":"YulIdentifier","src":"23119:9:24"}],"functionName":{"name":"sub","nativeSrc":"23109:3:24","nodeType":"YulIdentifier","src":"23109:3:24"},"nativeSrc":"23109:20:24","nodeType":"YulFunctionCall","src":"23109:20:24"}],"functionName":{"name":"mstore","nativeSrc":"23083:6:24","nodeType":"YulIdentifier","src":"23083:6:24"},"nativeSrc":"23083:47:24","nodeType":"YulFunctionCall","src":"23083:47:24"},"nativeSrc":"23083:47:24","nodeType":"YulExpressionStatement","src":"23083:47:24"},{"nativeSrc":"23139:139:24","nodeType":"YulAssignment","src":"23139:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"23273:4:24","nodeType":"YulIdentifier","src":"23273:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347_to_t_string_memory_ptr_fromStack","nativeSrc":"23147:124:24","nodeType":"YulIdentifier","src":"23147:124:24"},"nativeSrc":"23147:131:24","nodeType":"YulFunctionCall","src":"23147:131:24"},"variableNames":[{"name":"tail","nativeSrc":"23139:4:24","nodeType":"YulIdentifier","src":"23139:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22866:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23017:9:24","nodeType":"YulTypedName","src":"23017:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23032:4:24","nodeType":"YulTypedName","src":"23032:4:24","type":""}],"src":"22866:419:24"},{"body":{"nativeSrc":"23397:117:24","nodeType":"YulBlock","src":"23397:117:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23419:6:24","nodeType":"YulIdentifier","src":"23419:6:24"},{"kind":"number","nativeSrc":"23427:1:24","nodeType":"YulLiteral","src":"23427:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23415:3:24","nodeType":"YulIdentifier","src":"23415:3:24"},"nativeSrc":"23415:14:24","nodeType":"YulFunctionCall","src":"23415:14:24"},{"hexValue":"7263632070657220626c6f636b206d7573742062652067726561746572207468","kind":"string","nativeSrc":"23431:34:24","nodeType":"YulLiteral","src":"23431:34:24","type":"","value":"rcc per block must be greater th"}],"functionName":{"name":"mstore","nativeSrc":"23408:6:24","nodeType":"YulIdentifier","src":"23408:6:24"},"nativeSrc":"23408:58:24","nodeType":"YulFunctionCall","src":"23408:58:24"},"nativeSrc":"23408:58:24","nodeType":"YulExpressionStatement","src":"23408:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23487:6:24","nodeType":"YulIdentifier","src":"23487:6:24"},{"kind":"number","nativeSrc":"23495:2:24","nodeType":"YulLiteral","src":"23495:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23483:3:24","nodeType":"YulIdentifier","src":"23483:3:24"},"nativeSrc":"23483:15:24","nodeType":"YulFunctionCall","src":"23483:15:24"},{"hexValue":"616e2030","kind":"string","nativeSrc":"23500:6:24","nodeType":"YulLiteral","src":"23500:6:24","type":"","value":"an 0"}],"functionName":{"name":"mstore","nativeSrc":"23476:6:24","nodeType":"YulIdentifier","src":"23476:6:24"},"nativeSrc":"23476:31:24","nodeType":"YulFunctionCall","src":"23476:31:24"},"nativeSrc":"23476:31:24","nodeType":"YulExpressionStatement","src":"23476:31:24"}]},"name":"store_literal_in_memory_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4","nativeSrc":"23291:223:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"23389:6:24","nodeType":"YulTypedName","src":"23389:6:24","type":""}],"src":"23291:223:24"},{"body":{"nativeSrc":"23666:220:24","nodeType":"YulBlock","src":"23666:220:24","statements":[{"nativeSrc":"23676:74:24","nodeType":"YulAssignment","src":"23676:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"23742:3:24","nodeType":"YulIdentifier","src":"23742:3:24"},{"kind":"number","nativeSrc":"23747:2:24","nodeType":"YulLiteral","src":"23747:2:24","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"23683:58:24","nodeType":"YulIdentifier","src":"23683:58:24"},"nativeSrc":"23683:67:24","nodeType":"YulFunctionCall","src":"23683:67:24"},"variableNames":[{"name":"pos","nativeSrc":"23676:3:24","nodeType":"YulIdentifier","src":"23676:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"23848:3:24","nodeType":"YulIdentifier","src":"23848:3:24"}],"functionName":{"name":"store_literal_in_memory_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4","nativeSrc":"23759:88:24","nodeType":"YulIdentifier","src":"23759:88:24"},"nativeSrc":"23759:93:24","nodeType":"YulFunctionCall","src":"23759:93:24"},"nativeSrc":"23759:93:24","nodeType":"YulExpressionStatement","src":"23759:93:24"},{"nativeSrc":"23861:19:24","nodeType":"YulAssignment","src":"23861:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"23872:3:24","nodeType":"YulIdentifier","src":"23872:3:24"},{"kind":"number","nativeSrc":"23877:2:24","nodeType":"YulLiteral","src":"23877:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23868:3:24","nodeType":"YulIdentifier","src":"23868:3:24"},"nativeSrc":"23868:12:24","nodeType":"YulFunctionCall","src":"23868:12:24"},"variableNames":[{"name":"end","nativeSrc":"23861:3:24","nodeType":"YulIdentifier","src":"23861:3:24"}]}]},"name":"abi_encode_t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4_to_t_string_memory_ptr_fromStack","nativeSrc":"23520:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23654:3:24","nodeType":"YulTypedName","src":"23654:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23662:3:24","nodeType":"YulTypedName","src":"23662:3:24","type":""}],"src":"23520:366:24"},{"body":{"nativeSrc":"24063:248:24","nodeType":"YulBlock","src":"24063:248:24","statements":[{"nativeSrc":"24073:26:24","nodeType":"YulAssignment","src":"24073:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"24085:9:24","nodeType":"YulIdentifier","src":"24085:9:24"},{"kind":"number","nativeSrc":"24096:2:24","nodeType":"YulLiteral","src":"24096:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24081:3:24","nodeType":"YulIdentifier","src":"24081:3:24"},"nativeSrc":"24081:18:24","nodeType":"YulFunctionCall","src":"24081:18:24"},"variableNames":[{"name":"tail","nativeSrc":"24073:4:24","nodeType":"YulIdentifier","src":"24073:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24120:9:24","nodeType":"YulIdentifier","src":"24120:9:24"},{"kind":"number","nativeSrc":"24131:1:24","nodeType":"YulLiteral","src":"24131:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24116:3:24","nodeType":"YulIdentifier","src":"24116:3:24"},"nativeSrc":"24116:17:24","nodeType":"YulFunctionCall","src":"24116:17:24"},{"arguments":[{"name":"tail","nativeSrc":"24139:4:24","nodeType":"YulIdentifier","src":"24139:4:24"},{"name":"headStart","nativeSrc":"24145:9:24","nodeType":"YulIdentifier","src":"24145:9:24"}],"functionName":{"name":"sub","nativeSrc":"24135:3:24","nodeType":"YulIdentifier","src":"24135:3:24"},"nativeSrc":"24135:20:24","nodeType":"YulFunctionCall","src":"24135:20:24"}],"functionName":{"name":"mstore","nativeSrc":"24109:6:24","nodeType":"YulIdentifier","src":"24109:6:24"},"nativeSrc":"24109:47:24","nodeType":"YulFunctionCall","src":"24109:47:24"},"nativeSrc":"24109:47:24","nodeType":"YulExpressionStatement","src":"24109:47:24"},{"nativeSrc":"24165:139:24","nodeType":"YulAssignment","src":"24165:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"24299:4:24","nodeType":"YulIdentifier","src":"24299:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4_to_t_string_memory_ptr_fromStack","nativeSrc":"24173:124:24","nodeType":"YulIdentifier","src":"24173:124:24"},"nativeSrc":"24173:131:24","nodeType":"YulFunctionCall","src":"24173:131:24"},"variableNames":[{"name":"tail","nativeSrc":"24165:4:24","nodeType":"YulIdentifier","src":"24165:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23892:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24043:9:24","nodeType":"YulTypedName","src":"24043:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24058:4:24","nodeType":"YulTypedName","src":"24058:4:24","type":""}],"src":"23892:419:24"},{"body":{"nativeSrc":"24370:32:24","nodeType":"YulBlock","src":"24370:32:24","statements":[{"nativeSrc":"24380:16:24","nodeType":"YulAssignment","src":"24380:16:24","value":{"name":"value","nativeSrc":"24391:5:24","nodeType":"YulIdentifier","src":"24391:5:24"},"variableNames":[{"name":"cleaned","nativeSrc":"24380:7:24","nodeType":"YulIdentifier","src":"24380:7:24"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"24317:85:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24352:5:24","nodeType":"YulTypedName","src":"24352:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"24362:7:24","nodeType":"YulTypedName","src":"24362:7:24","type":""}],"src":"24317:85:24"},{"body":{"nativeSrc":"24452:57:24","nodeType":"YulBlock","src":"24452:57:24","statements":[{"nativeSrc":"24462:41:24","nodeType":"YulAssignment","src":"24462:41:24","value":{"arguments":[{"name":"value","nativeSrc":"24477:5:24","nodeType":"YulIdentifier","src":"24477:5:24"},{"kind":"number","nativeSrc":"24484:18:24","nodeType":"YulLiteral","src":"24484:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"24473:3:24","nodeType":"YulIdentifier","src":"24473:3:24"},"nativeSrc":"24473:30:24","nodeType":"YulFunctionCall","src":"24473:30:24"},"variableNames":[{"name":"cleaned","nativeSrc":"24462:7:24","nodeType":"YulIdentifier","src":"24462:7:24"}]}]},"name":"cleanup_t_uint64","nativeSrc":"24408:101:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24434:5:24","nodeType":"YulTypedName","src":"24434:5:24","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"24444:7:24","nodeType":"YulTypedName","src":"24444:7:24","type":""}],"src":"24408:101:24"},{"body":{"nativeSrc":"24582:89:24","nodeType":"YulBlock","src":"24582:89:24","statements":[{"nativeSrc":"24592:73:24","nodeType":"YulAssignment","src":"24592:73:24","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"24657:5:24","nodeType":"YulIdentifier","src":"24657:5:24"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"24631:25:24","nodeType":"YulIdentifier","src":"24631:25:24"},"nativeSrc":"24631:32:24","nodeType":"YulFunctionCall","src":"24631:32:24"}],"functionName":{"name":"identity","nativeSrc":"24622:8:24","nodeType":"YulIdentifier","src":"24622:8:24"},"nativeSrc":"24622:42:24","nodeType":"YulFunctionCall","src":"24622:42:24"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"24605:16:24","nodeType":"YulIdentifier","src":"24605:16:24"},"nativeSrc":"24605:60:24","nodeType":"YulFunctionCall","src":"24605:60:24"},"variableNames":[{"name":"converted","nativeSrc":"24592:9:24","nodeType":"YulIdentifier","src":"24592:9:24"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"24515:156:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24562:5:24","nodeType":"YulTypedName","src":"24562:5:24","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"24572:9:24","nodeType":"YulTypedName","src":"24572:9:24","type":""}],"src":"24515:156:24"},{"body":{"nativeSrc":"24749:73:24","nodeType":"YulBlock","src":"24749:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24766:3:24","nodeType":"YulIdentifier","src":"24766:3:24"},{"arguments":[{"name":"value","nativeSrc":"24809:5:24","nodeType":"YulIdentifier","src":"24809:5:24"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"24771:37:24","nodeType":"YulIdentifier","src":"24771:37:24"},"nativeSrc":"24771:44:24","nodeType":"YulFunctionCall","src":"24771:44:24"}],"functionName":{"name":"mstore","nativeSrc":"24759:6:24","nodeType":"YulIdentifier","src":"24759:6:24"},"nativeSrc":"24759:57:24","nodeType":"YulFunctionCall","src":"24759:57:24"},"nativeSrc":"24759:57:24","nodeType":"YulExpressionStatement","src":"24759:57:24"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"24677:145:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24737:5:24","nodeType":"YulTypedName","src":"24737:5:24","type":""},{"name":"pos","nativeSrc":"24744:3:24","nodeType":"YulTypedName","src":"24744:3:24","type":""}],"src":"24677:145:24"},{"body":{"nativeSrc":"24933:131:24","nodeType":"YulBlock","src":"24933:131:24","statements":[{"nativeSrc":"24943:26:24","nodeType":"YulAssignment","src":"24943:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"24955:9:24","nodeType":"YulIdentifier","src":"24955:9:24"},{"kind":"number","nativeSrc":"24966:2:24","nodeType":"YulLiteral","src":"24966:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24951:3:24","nodeType":"YulIdentifier","src":"24951:3:24"},"nativeSrc":"24951:18:24","nodeType":"YulFunctionCall","src":"24951:18:24"},"variableNames":[{"name":"tail","nativeSrc":"24943:4:24","nodeType":"YulIdentifier","src":"24943:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"25030:6:24","nodeType":"YulIdentifier","src":"25030:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"25043:9:24","nodeType":"YulIdentifier","src":"25043:9:24"},{"kind":"number","nativeSrc":"25054:1:24","nodeType":"YulLiteral","src":"25054:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25039:3:24","nodeType":"YulIdentifier","src":"25039:3:24"},"nativeSrc":"25039:17:24","nodeType":"YulFunctionCall","src":"25039:17:24"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"24979:50:24","nodeType":"YulIdentifier","src":"24979:50:24"},"nativeSrc":"24979:78:24","nodeType":"YulFunctionCall","src":"24979:78:24"},"nativeSrc":"24979:78:24","nodeType":"YulExpressionStatement","src":"24979:78:24"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"24828:236:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24905:9:24","nodeType":"YulTypedName","src":"24905:9:24","type":""},{"name":"value0","nativeSrc":"24917:6:24","nodeType":"YulTypedName","src":"24917:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24928:4:24","nodeType":"YulTypedName","src":"24928:4:24","type":""}],"src":"24828:236:24"},{"body":{"nativeSrc":"25176:52:24","nodeType":"YulBlock","src":"25176:52:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"25198:6:24","nodeType":"YulIdentifier","src":"25198:6:24"},{"kind":"number","nativeSrc":"25206:1:24","nodeType":"YulLiteral","src":"25206:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25194:3:24","nodeType":"YulIdentifier","src":"25194:3:24"},"nativeSrc":"25194:14:24","nodeType":"YulFunctionCall","src":"25194:14:24"},{"hexValue":"6f766572666c6f77","kind":"string","nativeSrc":"25210:10:24","nodeType":"YulLiteral","src":"25210:10:24","type":"","value":"overflow"}],"functionName":{"name":"mstore","nativeSrc":"25187:6:24","nodeType":"YulIdentifier","src":"25187:6:24"},"nativeSrc":"25187:34:24","nodeType":"YulFunctionCall","src":"25187:34:24"},"nativeSrc":"25187:34:24","nodeType":"YulExpressionStatement","src":"25187:34:24"}]},"name":"store_literal_in_memory_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","nativeSrc":"25070:158:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"25168:6:24","nodeType":"YulTypedName","src":"25168:6:24","type":""}],"src":"25070:158:24"},{"body":{"nativeSrc":"25380:219:24","nodeType":"YulBlock","src":"25380:219:24","statements":[{"nativeSrc":"25390:73:24","nodeType":"YulAssignment","src":"25390:73:24","value":{"arguments":[{"name":"pos","nativeSrc":"25456:3:24","nodeType":"YulIdentifier","src":"25456:3:24"},{"kind":"number","nativeSrc":"25461:1:24","nodeType":"YulLiteral","src":"25461:1:24","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"25397:58:24","nodeType":"YulIdentifier","src":"25397:58:24"},"nativeSrc":"25397:66:24","nodeType":"YulFunctionCall","src":"25397:66:24"},"variableNames":[{"name":"pos","nativeSrc":"25390:3:24","nodeType":"YulIdentifier","src":"25390:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"25561:3:24","nodeType":"YulIdentifier","src":"25561:3:24"}],"functionName":{"name":"store_literal_in_memory_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f","nativeSrc":"25472:88:24","nodeType":"YulIdentifier","src":"25472:88:24"},"nativeSrc":"25472:93:24","nodeType":"YulFunctionCall","src":"25472:93:24"},"nativeSrc":"25472:93:24","nodeType":"YulExpressionStatement","src":"25472:93:24"},{"nativeSrc":"25574:19:24","nodeType":"YulAssignment","src":"25574:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"25585:3:24","nodeType":"YulIdentifier","src":"25585:3:24"},{"kind":"number","nativeSrc":"25590:2:24","nodeType":"YulLiteral","src":"25590:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25581:3:24","nodeType":"YulIdentifier","src":"25581:3:24"},"nativeSrc":"25581:12:24","nodeType":"YulFunctionCall","src":"25581:12:24"},"variableNames":[{"name":"end","nativeSrc":"25574:3:24","nodeType":"YulIdentifier","src":"25574:3:24"}]}]},"name":"abi_encode_t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f_to_t_string_memory_ptr_fromStack","nativeSrc":"25234:365:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25368:3:24","nodeType":"YulTypedName","src":"25368:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25376:3:24","nodeType":"YulTypedName","src":"25376:3:24","type":""}],"src":"25234:365:24"},{"body":{"nativeSrc":"25776:248:24","nodeType":"YulBlock","src":"25776:248:24","statements":[{"nativeSrc":"25786:26:24","nodeType":"YulAssignment","src":"25786:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"25798:9:24","nodeType":"YulIdentifier","src":"25798:9:24"},{"kind":"number","nativeSrc":"25809:2:24","nodeType":"YulLiteral","src":"25809:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25794:3:24","nodeType":"YulIdentifier","src":"25794:3:24"},"nativeSrc":"25794:18:24","nodeType":"YulFunctionCall","src":"25794:18:24"},"variableNames":[{"name":"tail","nativeSrc":"25786:4:24","nodeType":"YulIdentifier","src":"25786:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25833:9:24","nodeType":"YulIdentifier","src":"25833:9:24"},{"kind":"number","nativeSrc":"25844:1:24","nodeType":"YulLiteral","src":"25844:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25829:3:24","nodeType":"YulIdentifier","src":"25829:3:24"},"nativeSrc":"25829:17:24","nodeType":"YulFunctionCall","src":"25829:17:24"},{"arguments":[{"name":"tail","nativeSrc":"25852:4:24","nodeType":"YulIdentifier","src":"25852:4:24"},{"name":"headStart","nativeSrc":"25858:9:24","nodeType":"YulIdentifier","src":"25858:9:24"}],"functionName":{"name":"sub","nativeSrc":"25848:3:24","nodeType":"YulIdentifier","src":"25848:3:24"},"nativeSrc":"25848:20:24","nodeType":"YulFunctionCall","src":"25848:20:24"}],"functionName":{"name":"mstore","nativeSrc":"25822:6:24","nodeType":"YulIdentifier","src":"25822:6:24"},"nativeSrc":"25822:47:24","nodeType":"YulFunctionCall","src":"25822:47:24"},"nativeSrc":"25822:47:24","nodeType":"YulExpressionStatement","src":"25822:47:24"},{"nativeSrc":"25878:139:24","nodeType":"YulAssignment","src":"25878:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"26012:4:24","nodeType":"YulIdentifier","src":"26012:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f_to_t_string_memory_ptr_fromStack","nativeSrc":"25886:124:24","nodeType":"YulIdentifier","src":"25886:124:24"},"nativeSrc":"25886:131:24","nodeType":"YulFunctionCall","src":"25886:131:24"},"variableNames":[{"name":"tail","nativeSrc":"25878:4:24","nodeType":"YulIdentifier","src":"25878:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25605:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25756:9:24","nodeType":"YulTypedName","src":"25756:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25771:4:24","nodeType":"YulTypedName","src":"25771:4:24","type":""}],"src":"25605:419:24"},{"body":{"nativeSrc":"26136:115:24","nodeType":"YulBlock","src":"26136:115:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"26158:6:24","nodeType":"YulIdentifier","src":"26158:6:24"},{"kind":"number","nativeSrc":"26166:1:24","nodeType":"YulLiteral","src":"26166:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26154:3:24","nodeType":"YulIdentifier","src":"26154:3:24"},"nativeSrc":"26154:14:24","nodeType":"YulFunctionCall","src":"26154:14:24"},{"hexValue":"77697468647261772068617320616c7265616479206265656e20756e70617573","kind":"string","nativeSrc":"26170:34:24","nodeType":"YulLiteral","src":"26170:34:24","type":"","value":"withdraw has already been unpaus"}],"functionName":{"name":"mstore","nativeSrc":"26147:6:24","nodeType":"YulIdentifier","src":"26147:6:24"},"nativeSrc":"26147:58:24","nodeType":"YulFunctionCall","src":"26147:58:24"},"nativeSrc":"26147:58:24","nodeType":"YulExpressionStatement","src":"26147:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"26226:6:24","nodeType":"YulIdentifier","src":"26226:6:24"},{"kind":"number","nativeSrc":"26234:2:24","nodeType":"YulLiteral","src":"26234:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26222:3:24","nodeType":"YulIdentifier","src":"26222:3:24"},"nativeSrc":"26222:15:24","nodeType":"YulFunctionCall","src":"26222:15:24"},{"hexValue":"6564","kind":"string","nativeSrc":"26239:4:24","nodeType":"YulLiteral","src":"26239:4:24","type":"","value":"ed"}],"functionName":{"name":"mstore","nativeSrc":"26215:6:24","nodeType":"YulIdentifier","src":"26215:6:24"},"nativeSrc":"26215:29:24","nodeType":"YulFunctionCall","src":"26215:29:24"},"nativeSrc":"26215:29:24","nodeType":"YulExpressionStatement","src":"26215:29:24"}]},"name":"store_literal_in_memory_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81","nativeSrc":"26030:221:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"26128:6:24","nodeType":"YulTypedName","src":"26128:6:24","type":""}],"src":"26030:221:24"},{"body":{"nativeSrc":"26403:220:24","nodeType":"YulBlock","src":"26403:220:24","statements":[{"nativeSrc":"26413:74:24","nodeType":"YulAssignment","src":"26413:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"26479:3:24","nodeType":"YulIdentifier","src":"26479:3:24"},{"kind":"number","nativeSrc":"26484:2:24","nodeType":"YulLiteral","src":"26484:2:24","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"26420:58:24","nodeType":"YulIdentifier","src":"26420:58:24"},"nativeSrc":"26420:67:24","nodeType":"YulFunctionCall","src":"26420:67:24"},"variableNames":[{"name":"pos","nativeSrc":"26413:3:24","nodeType":"YulIdentifier","src":"26413:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"26585:3:24","nodeType":"YulIdentifier","src":"26585:3:24"}],"functionName":{"name":"store_literal_in_memory_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81","nativeSrc":"26496:88:24","nodeType":"YulIdentifier","src":"26496:88:24"},"nativeSrc":"26496:93:24","nodeType":"YulFunctionCall","src":"26496:93:24"},"nativeSrc":"26496:93:24","nodeType":"YulExpressionStatement","src":"26496:93:24"},{"nativeSrc":"26598:19:24","nodeType":"YulAssignment","src":"26598:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"26609:3:24","nodeType":"YulIdentifier","src":"26609:3:24"},{"kind":"number","nativeSrc":"26614:2:24","nodeType":"YulLiteral","src":"26614:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26605:3:24","nodeType":"YulIdentifier","src":"26605:3:24"},"nativeSrc":"26605:12:24","nodeType":"YulFunctionCall","src":"26605:12:24"},"variableNames":[{"name":"end","nativeSrc":"26598:3:24","nodeType":"YulIdentifier","src":"26598:3:24"}]}]},"name":"abi_encode_t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81_to_t_string_memory_ptr_fromStack","nativeSrc":"26257:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26391:3:24","nodeType":"YulTypedName","src":"26391:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26399:3:24","nodeType":"YulTypedName","src":"26399:3:24","type":""}],"src":"26257:366:24"},{"body":{"nativeSrc":"26800:248:24","nodeType":"YulBlock","src":"26800:248:24","statements":[{"nativeSrc":"26810:26:24","nodeType":"YulAssignment","src":"26810:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"26822:9:24","nodeType":"YulIdentifier","src":"26822:9:24"},{"kind":"number","nativeSrc":"26833:2:24","nodeType":"YulLiteral","src":"26833:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26818:3:24","nodeType":"YulIdentifier","src":"26818:3:24"},"nativeSrc":"26818:18:24","nodeType":"YulFunctionCall","src":"26818:18:24"},"variableNames":[{"name":"tail","nativeSrc":"26810:4:24","nodeType":"YulIdentifier","src":"26810:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26857:9:24","nodeType":"YulIdentifier","src":"26857:9:24"},{"kind":"number","nativeSrc":"26868:1:24","nodeType":"YulLiteral","src":"26868:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26853:3:24","nodeType":"YulIdentifier","src":"26853:3:24"},"nativeSrc":"26853:17:24","nodeType":"YulFunctionCall","src":"26853:17:24"},{"arguments":[{"name":"tail","nativeSrc":"26876:4:24","nodeType":"YulIdentifier","src":"26876:4:24"},{"name":"headStart","nativeSrc":"26882:9:24","nodeType":"YulIdentifier","src":"26882:9:24"}],"functionName":{"name":"sub","nativeSrc":"26872:3:24","nodeType":"YulIdentifier","src":"26872:3:24"},"nativeSrc":"26872:20:24","nodeType":"YulFunctionCall","src":"26872:20:24"}],"functionName":{"name":"mstore","nativeSrc":"26846:6:24","nodeType":"YulIdentifier","src":"26846:6:24"},"nativeSrc":"26846:47:24","nodeType":"YulFunctionCall","src":"26846:47:24"},"nativeSrc":"26846:47:24","nodeType":"YulExpressionStatement","src":"26846:47:24"},{"nativeSrc":"26902:139:24","nodeType":"YulAssignment","src":"26902:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"27036:4:24","nodeType":"YulIdentifier","src":"27036:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81_to_t_string_memory_ptr_fromStack","nativeSrc":"26910:124:24","nodeType":"YulIdentifier","src":"26910:124:24"},"nativeSrc":"26910:131:24","nodeType":"YulFunctionCall","src":"26910:131:24"},"variableNames":[{"name":"tail","nativeSrc":"26902:4:24","nodeType":"YulIdentifier","src":"26902:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26629:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26780:9:24","nodeType":"YulTypedName","src":"26780:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26795:4:24","nodeType":"YulTypedName","src":"26795:4:24","type":""}],"src":"26629:419:24"},{"body":{"nativeSrc":"27160:57:24","nodeType":"YulBlock","src":"27160:57:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"27182:6:24","nodeType":"YulIdentifier","src":"27182:6:24"},{"kind":"number","nativeSrc":"27190:1:24","nodeType":"YulLiteral","src":"27190:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27178:3:24","nodeType":"YulIdentifier","src":"27178:3:24"},"nativeSrc":"27178:14:24","nodeType":"YulFunctionCall","src":"27178:14:24"},{"hexValue":"696e76616c69642072616e6765","kind":"string","nativeSrc":"27194:15:24","nodeType":"YulLiteral","src":"27194:15:24","type":"","value":"invalid range"}],"functionName":{"name":"mstore","nativeSrc":"27171:6:24","nodeType":"YulIdentifier","src":"27171:6:24"},"nativeSrc":"27171:39:24","nodeType":"YulFunctionCall","src":"27171:39:24"},"nativeSrc":"27171:39:24","nodeType":"YulExpressionStatement","src":"27171:39:24"}]},"name":"store_literal_in_memory_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa","nativeSrc":"27054:163:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"27152:6:24","nodeType":"YulTypedName","src":"27152:6:24","type":""}],"src":"27054:163:24"},{"body":{"nativeSrc":"27369:220:24","nodeType":"YulBlock","src":"27369:220:24","statements":[{"nativeSrc":"27379:74:24","nodeType":"YulAssignment","src":"27379:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"27445:3:24","nodeType":"YulIdentifier","src":"27445:3:24"},{"kind":"number","nativeSrc":"27450:2:24","nodeType":"YulLiteral","src":"27450:2:24","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"27386:58:24","nodeType":"YulIdentifier","src":"27386:58:24"},"nativeSrc":"27386:67:24","nodeType":"YulFunctionCall","src":"27386:67:24"},"variableNames":[{"name":"pos","nativeSrc":"27379:3:24","nodeType":"YulIdentifier","src":"27379:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"27551:3:24","nodeType":"YulIdentifier","src":"27551:3:24"}],"functionName":{"name":"store_literal_in_memory_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa","nativeSrc":"27462:88:24","nodeType":"YulIdentifier","src":"27462:88:24"},"nativeSrc":"27462:93:24","nodeType":"YulFunctionCall","src":"27462:93:24"},"nativeSrc":"27462:93:24","nodeType":"YulExpressionStatement","src":"27462:93:24"},{"nativeSrc":"27564:19:24","nodeType":"YulAssignment","src":"27564:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"27575:3:24","nodeType":"YulIdentifier","src":"27575:3:24"},{"kind":"number","nativeSrc":"27580:2:24","nodeType":"YulLiteral","src":"27580:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27571:3:24","nodeType":"YulIdentifier","src":"27571:3:24"},"nativeSrc":"27571:12:24","nodeType":"YulFunctionCall","src":"27571:12:24"},"variableNames":[{"name":"end","nativeSrc":"27564:3:24","nodeType":"YulIdentifier","src":"27564:3:24"}]}]},"name":"abi_encode_t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa_to_t_string_memory_ptr_fromStack","nativeSrc":"27223:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"27357:3:24","nodeType":"YulTypedName","src":"27357:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"27365:3:24","nodeType":"YulTypedName","src":"27365:3:24","type":""}],"src":"27223:366:24"},{"body":{"nativeSrc":"27766:248:24","nodeType":"YulBlock","src":"27766:248:24","statements":[{"nativeSrc":"27776:26:24","nodeType":"YulAssignment","src":"27776:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"27788:9:24","nodeType":"YulIdentifier","src":"27788:9:24"},{"kind":"number","nativeSrc":"27799:2:24","nodeType":"YulLiteral","src":"27799:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27784:3:24","nodeType":"YulIdentifier","src":"27784:3:24"},"nativeSrc":"27784:18:24","nodeType":"YulFunctionCall","src":"27784:18:24"},"variableNames":[{"name":"tail","nativeSrc":"27776:4:24","nodeType":"YulIdentifier","src":"27776:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27823:9:24","nodeType":"YulIdentifier","src":"27823:9:24"},{"kind":"number","nativeSrc":"27834:1:24","nodeType":"YulLiteral","src":"27834:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27819:3:24","nodeType":"YulIdentifier","src":"27819:3:24"},"nativeSrc":"27819:17:24","nodeType":"YulFunctionCall","src":"27819:17:24"},{"arguments":[{"name":"tail","nativeSrc":"27842:4:24","nodeType":"YulIdentifier","src":"27842:4:24"},{"name":"headStart","nativeSrc":"27848:9:24","nodeType":"YulIdentifier","src":"27848:9:24"}],"functionName":{"name":"sub","nativeSrc":"27838:3:24","nodeType":"YulIdentifier","src":"27838:3:24"},"nativeSrc":"27838:20:24","nodeType":"YulFunctionCall","src":"27838:20:24"}],"functionName":{"name":"mstore","nativeSrc":"27812:6:24","nodeType":"YulIdentifier","src":"27812:6:24"},"nativeSrc":"27812:47:24","nodeType":"YulFunctionCall","src":"27812:47:24"},"nativeSrc":"27812:47:24","nodeType":"YulExpressionStatement","src":"27812:47:24"},{"nativeSrc":"27868:139:24","nodeType":"YulAssignment","src":"27868:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"28002:4:24","nodeType":"YulIdentifier","src":"28002:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa_to_t_string_memory_ptr_fromStack","nativeSrc":"27876:124:24","nodeType":"YulIdentifier","src":"27876:124:24"},"nativeSrc":"27876:131:24","nodeType":"YulFunctionCall","src":"27876:131:24"},"variableNames":[{"name":"tail","nativeSrc":"27868:4:24","nodeType":"YulIdentifier","src":"27868:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27595:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27746:9:24","nodeType":"YulTypedName","src":"27746:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27761:4:24","nodeType":"YulTypedName","src":"27761:4:24","type":""}],"src":"27595:419:24"},{"body":{"nativeSrc":"28126:63:24","nodeType":"YulBlock","src":"28126:63:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"28148:6:24","nodeType":"YulIdentifier","src":"28148:6:24"},{"kind":"number","nativeSrc":"28156:1:24","nodeType":"YulLiteral","src":"28156:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28144:3:24","nodeType":"YulIdentifier","src":"28144:3:24"},"nativeSrc":"28144:14:24","nodeType":"YulFunctionCall","src":"28144:14:24"},{"hexValue":"6d756c7469706c696572206f766572666c6f77","kind":"string","nativeSrc":"28160:21:24","nodeType":"YulLiteral","src":"28160:21:24","type":"","value":"multiplier overflow"}],"functionName":{"name":"mstore","nativeSrc":"28137:6:24","nodeType":"YulIdentifier","src":"28137:6:24"},"nativeSrc":"28137:45:24","nodeType":"YulFunctionCall","src":"28137:45:24"},"nativeSrc":"28137:45:24","nodeType":"YulExpressionStatement","src":"28137:45:24"}]},"name":"store_literal_in_memory_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524","nativeSrc":"28020:169:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"28118:6:24","nodeType":"YulTypedName","src":"28118:6:24","type":""}],"src":"28020:169:24"},{"body":{"nativeSrc":"28341:220:24","nodeType":"YulBlock","src":"28341:220:24","statements":[{"nativeSrc":"28351:74:24","nodeType":"YulAssignment","src":"28351:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"28417:3:24","nodeType":"YulIdentifier","src":"28417:3:24"},{"kind":"number","nativeSrc":"28422:2:24","nodeType":"YulLiteral","src":"28422:2:24","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"28358:58:24","nodeType":"YulIdentifier","src":"28358:58:24"},"nativeSrc":"28358:67:24","nodeType":"YulFunctionCall","src":"28358:67:24"},"variableNames":[{"name":"pos","nativeSrc":"28351:3:24","nodeType":"YulIdentifier","src":"28351:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"28523:3:24","nodeType":"YulIdentifier","src":"28523:3:24"}],"functionName":{"name":"store_literal_in_memory_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524","nativeSrc":"28434:88:24","nodeType":"YulIdentifier","src":"28434:88:24"},"nativeSrc":"28434:93:24","nodeType":"YulFunctionCall","src":"28434:93:24"},"nativeSrc":"28434:93:24","nodeType":"YulExpressionStatement","src":"28434:93:24"},{"nativeSrc":"28536:19:24","nodeType":"YulAssignment","src":"28536:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"28547:3:24","nodeType":"YulIdentifier","src":"28547:3:24"},{"kind":"number","nativeSrc":"28552:2:24","nodeType":"YulLiteral","src":"28552:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28543:3:24","nodeType":"YulIdentifier","src":"28543:3:24"},"nativeSrc":"28543:12:24","nodeType":"YulFunctionCall","src":"28543:12:24"},"variableNames":[{"name":"end","nativeSrc":"28536:3:24","nodeType":"YulIdentifier","src":"28536:3:24"}]}]},"name":"abi_encode_t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524_to_t_string_memory_ptr_fromStack","nativeSrc":"28195:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28329:3:24","nodeType":"YulTypedName","src":"28329:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28337:3:24","nodeType":"YulTypedName","src":"28337:3:24","type":""}],"src":"28195:366:24"},{"body":{"nativeSrc":"28738:248:24","nodeType":"YulBlock","src":"28738:248:24","statements":[{"nativeSrc":"28748:26:24","nodeType":"YulAssignment","src":"28748:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"28760:9:24","nodeType":"YulIdentifier","src":"28760:9:24"},{"kind":"number","nativeSrc":"28771:2:24","nodeType":"YulLiteral","src":"28771:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28756:3:24","nodeType":"YulIdentifier","src":"28756:3:24"},"nativeSrc":"28756:18:24","nodeType":"YulFunctionCall","src":"28756:18:24"},"variableNames":[{"name":"tail","nativeSrc":"28748:4:24","nodeType":"YulIdentifier","src":"28748:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28795:9:24","nodeType":"YulIdentifier","src":"28795:9:24"},{"kind":"number","nativeSrc":"28806:1:24","nodeType":"YulLiteral","src":"28806:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28791:3:24","nodeType":"YulIdentifier","src":"28791:3:24"},"nativeSrc":"28791:17:24","nodeType":"YulFunctionCall","src":"28791:17:24"},{"arguments":[{"name":"tail","nativeSrc":"28814:4:24","nodeType":"YulIdentifier","src":"28814:4:24"},{"name":"headStart","nativeSrc":"28820:9:24","nodeType":"YulIdentifier","src":"28820:9:24"}],"functionName":{"name":"sub","nativeSrc":"28810:3:24","nodeType":"YulIdentifier","src":"28810:3:24"},"nativeSrc":"28810:20:24","nodeType":"YulFunctionCall","src":"28810:20:24"}],"functionName":{"name":"mstore","nativeSrc":"28784:6:24","nodeType":"YulIdentifier","src":"28784:6:24"},"nativeSrc":"28784:47:24","nodeType":"YulFunctionCall","src":"28784:47:24"},"nativeSrc":"28784:47:24","nodeType":"YulExpressionStatement","src":"28784:47:24"},{"nativeSrc":"28840:139:24","nodeType":"YulAssignment","src":"28840:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"28974:4:24","nodeType":"YulIdentifier","src":"28974:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524_to_t_string_memory_ptr_fromStack","nativeSrc":"28848:124:24","nodeType":"YulIdentifier","src":"28848:124:24"},"nativeSrc":"28848:131:24","nodeType":"YulFunctionCall","src":"28848:131:24"},"variableNames":[{"name":"tail","nativeSrc":"28840:4:24","nodeType":"YulIdentifier","src":"28840:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"28567:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28718:9:24","nodeType":"YulTypedName","src":"28718:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28733:4:24","nodeType":"YulTypedName","src":"28733:4:24","type":""}],"src":"28567:419:24"},{"body":{"nativeSrc":"29098:75:24","nodeType":"YulBlock","src":"29098:75:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"29120:6:24","nodeType":"YulIdentifier","src":"29120:6:24"},{"kind":"number","nativeSrc":"29128:1:24","nodeType":"YulLiteral","src":"29128:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29116:3:24","nodeType":"YulIdentifier","src":"29116:3:24"},"nativeSrc":"29116:14:24","nodeType":"YulFunctionCall","src":"29116:14:24"},{"hexValue":"636c61696d2068617320616c7265616479206265656e20756e706175736564","kind":"string","nativeSrc":"29132:33:24","nodeType":"YulLiteral","src":"29132:33:24","type":"","value":"claim has already been unpaused"}],"functionName":{"name":"mstore","nativeSrc":"29109:6:24","nodeType":"YulIdentifier","src":"29109:6:24"},"nativeSrc":"29109:57:24","nodeType":"YulFunctionCall","src":"29109:57:24"},"nativeSrc":"29109:57:24","nodeType":"YulExpressionStatement","src":"29109:57:24"}]},"name":"store_literal_in_memory_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9","nativeSrc":"28992:181:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"29090:6:24","nodeType":"YulTypedName","src":"29090:6:24","type":""}],"src":"28992:181:24"},{"body":{"nativeSrc":"29325:220:24","nodeType":"YulBlock","src":"29325:220:24","statements":[{"nativeSrc":"29335:74:24","nodeType":"YulAssignment","src":"29335:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"29401:3:24","nodeType":"YulIdentifier","src":"29401:3:24"},{"kind":"number","nativeSrc":"29406:2:24","nodeType":"YulLiteral","src":"29406:2:24","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"29342:58:24","nodeType":"YulIdentifier","src":"29342:58:24"},"nativeSrc":"29342:67:24","nodeType":"YulFunctionCall","src":"29342:67:24"},"variableNames":[{"name":"pos","nativeSrc":"29335:3:24","nodeType":"YulIdentifier","src":"29335:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"29507:3:24","nodeType":"YulIdentifier","src":"29507:3:24"}],"functionName":{"name":"store_literal_in_memory_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9","nativeSrc":"29418:88:24","nodeType":"YulIdentifier","src":"29418:88:24"},"nativeSrc":"29418:93:24","nodeType":"YulFunctionCall","src":"29418:93:24"},"nativeSrc":"29418:93:24","nodeType":"YulExpressionStatement","src":"29418:93:24"},{"nativeSrc":"29520:19:24","nodeType":"YulAssignment","src":"29520:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"29531:3:24","nodeType":"YulIdentifier","src":"29531:3:24"},{"kind":"number","nativeSrc":"29536:2:24","nodeType":"YulLiteral","src":"29536:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29527:3:24","nodeType":"YulIdentifier","src":"29527:3:24"},"nativeSrc":"29527:12:24","nodeType":"YulFunctionCall","src":"29527:12:24"},"variableNames":[{"name":"end","nativeSrc":"29520:3:24","nodeType":"YulIdentifier","src":"29520:3:24"}]}]},"name":"abi_encode_t_stringliteral_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9_to_t_string_memory_ptr_fromStack","nativeSrc":"29179:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"29313:3:24","nodeType":"YulTypedName","src":"29313:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"29321:3:24","nodeType":"YulTypedName","src":"29321:3:24","type":""}],"src":"29179:366:24"},{"body":{"nativeSrc":"29722:248:24","nodeType":"YulBlock","src":"29722:248:24","statements":[{"nativeSrc":"29732:26:24","nodeType":"YulAssignment","src":"29732:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"29744:9:24","nodeType":"YulIdentifier","src":"29744:9:24"},{"kind":"number","nativeSrc":"29755:2:24","nodeType":"YulLiteral","src":"29755:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29740:3:24","nodeType":"YulIdentifier","src":"29740:3:24"},"nativeSrc":"29740:18:24","nodeType":"YulFunctionCall","src":"29740:18:24"},"variableNames":[{"name":"tail","nativeSrc":"29732:4:24","nodeType":"YulIdentifier","src":"29732:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29779:9:24","nodeType":"YulIdentifier","src":"29779:9:24"},{"kind":"number","nativeSrc":"29790:1:24","nodeType":"YulLiteral","src":"29790:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29775:3:24","nodeType":"YulIdentifier","src":"29775:3:24"},"nativeSrc":"29775:17:24","nodeType":"YulFunctionCall","src":"29775:17:24"},{"arguments":[{"name":"tail","nativeSrc":"29798:4:24","nodeType":"YulIdentifier","src":"29798:4:24"},{"name":"headStart","nativeSrc":"29804:9:24","nodeType":"YulIdentifier","src":"29804:9:24"}],"functionName":{"name":"sub","nativeSrc":"29794:3:24","nodeType":"YulIdentifier","src":"29794:3:24"},"nativeSrc":"29794:20:24","nodeType":"YulFunctionCall","src":"29794:20:24"}],"functionName":{"name":"mstore","nativeSrc":"29768:6:24","nodeType":"YulIdentifier","src":"29768:6:24"},"nativeSrc":"29768:47:24","nodeType":"YulFunctionCall","src":"29768:47:24"},"nativeSrc":"29768:47:24","nodeType":"YulExpressionStatement","src":"29768:47:24"},{"nativeSrc":"29824:139:24","nodeType":"YulAssignment","src":"29824:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"29958:4:24","nodeType":"YulIdentifier","src":"29958:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9_to_t_string_memory_ptr_fromStack","nativeSrc":"29832:124:24","nodeType":"YulIdentifier","src":"29832:124:24"},"nativeSrc":"29832:131:24","nodeType":"YulFunctionCall","src":"29832:131:24"},"variableNames":[{"name":"tail","nativeSrc":"29824:4:24","nodeType":"YulIdentifier","src":"29824:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"29551:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29702:9:24","nodeType":"YulTypedName","src":"29702:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29717:4:24","nodeType":"YulTypedName","src":"29717:4:24","type":""}],"src":"29551:419:24"},{"body":{"nativeSrc":"30082:71:24","nodeType":"YulBlock","src":"30082:71:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"30104:6:24","nodeType":"YulIdentifier","src":"30104:6:24"},{"kind":"number","nativeSrc":"30112:1:24","nodeType":"YulLiteral","src":"30112:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30100:3:24","nodeType":"YulIdentifier","src":"30100:3:24"},"nativeSrc":"30100:14:24","nodeType":"YulFunctionCall","src":"30100:14:24"},{"hexValue":"696e73756666696369656e74207374616b696e6720616d6f756e74","kind":"string","nativeSrc":"30116:29:24","nodeType":"YulLiteral","src":"30116:29:24","type":"","value":"insufficient staking amount"}],"functionName":{"name":"mstore","nativeSrc":"30093:6:24","nodeType":"YulIdentifier","src":"30093:6:24"},"nativeSrc":"30093:53:24","nodeType":"YulFunctionCall","src":"30093:53:24"},"nativeSrc":"30093:53:24","nodeType":"YulExpressionStatement","src":"30093:53:24"}]},"name":"store_literal_in_memory_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b","nativeSrc":"29976:177:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"30074:6:24","nodeType":"YulTypedName","src":"30074:6:24","type":""}],"src":"29976:177:24"},{"body":{"nativeSrc":"30305:220:24","nodeType":"YulBlock","src":"30305:220:24","statements":[{"nativeSrc":"30315:74:24","nodeType":"YulAssignment","src":"30315:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"30381:3:24","nodeType":"YulIdentifier","src":"30381:3:24"},{"kind":"number","nativeSrc":"30386:2:24","nodeType":"YulLiteral","src":"30386:2:24","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"30322:58:24","nodeType":"YulIdentifier","src":"30322:58:24"},"nativeSrc":"30322:67:24","nodeType":"YulFunctionCall","src":"30322:67:24"},"variableNames":[{"name":"pos","nativeSrc":"30315:3:24","nodeType":"YulIdentifier","src":"30315:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"30487:3:24","nodeType":"YulIdentifier","src":"30487:3:24"}],"functionName":{"name":"store_literal_in_memory_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b","nativeSrc":"30398:88:24","nodeType":"YulIdentifier","src":"30398:88:24"},"nativeSrc":"30398:93:24","nodeType":"YulFunctionCall","src":"30398:93:24"},"nativeSrc":"30398:93:24","nodeType":"YulExpressionStatement","src":"30398:93:24"},{"nativeSrc":"30500:19:24","nodeType":"YulAssignment","src":"30500:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"30511:3:24","nodeType":"YulIdentifier","src":"30511:3:24"},{"kind":"number","nativeSrc":"30516:2:24","nodeType":"YulLiteral","src":"30516:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30507:3:24","nodeType":"YulIdentifier","src":"30507:3:24"},"nativeSrc":"30507:12:24","nodeType":"YulFunctionCall","src":"30507:12:24"},"variableNames":[{"name":"end","nativeSrc":"30500:3:24","nodeType":"YulIdentifier","src":"30500:3:24"}]}]},"name":"abi_encode_t_stringliteral_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b_to_t_string_memory_ptr_fromStack","nativeSrc":"30159:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"30293:3:24","nodeType":"YulTypedName","src":"30293:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"30301:3:24","nodeType":"YulTypedName","src":"30301:3:24","type":""}],"src":"30159:366:24"},{"body":{"nativeSrc":"30702:248:24","nodeType":"YulBlock","src":"30702:248:24","statements":[{"nativeSrc":"30712:26:24","nodeType":"YulAssignment","src":"30712:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"30724:9:24","nodeType":"YulIdentifier","src":"30724:9:24"},{"kind":"number","nativeSrc":"30735:2:24","nodeType":"YulLiteral","src":"30735:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30720:3:24","nodeType":"YulIdentifier","src":"30720:3:24"},"nativeSrc":"30720:18:24","nodeType":"YulFunctionCall","src":"30720:18:24"},"variableNames":[{"name":"tail","nativeSrc":"30712:4:24","nodeType":"YulIdentifier","src":"30712:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30759:9:24","nodeType":"YulIdentifier","src":"30759:9:24"},{"kind":"number","nativeSrc":"30770:1:24","nodeType":"YulLiteral","src":"30770:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30755:3:24","nodeType":"YulIdentifier","src":"30755:3:24"},"nativeSrc":"30755:17:24","nodeType":"YulFunctionCall","src":"30755:17:24"},{"arguments":[{"name":"tail","nativeSrc":"30778:4:24","nodeType":"YulIdentifier","src":"30778:4:24"},{"name":"headStart","nativeSrc":"30784:9:24","nodeType":"YulIdentifier","src":"30784:9:24"}],"functionName":{"name":"sub","nativeSrc":"30774:3:24","nodeType":"YulIdentifier","src":"30774:3:24"},"nativeSrc":"30774:20:24","nodeType":"YulFunctionCall","src":"30774:20:24"}],"functionName":{"name":"mstore","nativeSrc":"30748:6:24","nodeType":"YulIdentifier","src":"30748:6:24"},"nativeSrc":"30748:47:24","nodeType":"YulFunctionCall","src":"30748:47:24"},"nativeSrc":"30748:47:24","nodeType":"YulExpressionStatement","src":"30748:47:24"},{"nativeSrc":"30804:139:24","nodeType":"YulAssignment","src":"30804:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"30938:4:24","nodeType":"YulIdentifier","src":"30938:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b_to_t_string_memory_ptr_fromStack","nativeSrc":"30812:124:24","nodeType":"YulIdentifier","src":"30812:124:24"},"nativeSrc":"30812:131:24","nodeType":"YulFunctionCall","src":"30812:131:24"},"variableNames":[{"name":"tail","nativeSrc":"30804:4:24","nodeType":"YulIdentifier","src":"30804:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"30531:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30682:9:24","nodeType":"YulTypedName","src":"30682:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"30697:4:24","nodeType":"YulTypedName","src":"30697:4:24","type":""}],"src":"30531:419:24"},{"body":{"nativeSrc":"31062:75:24","nodeType":"YulBlock","src":"31062:75:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"31084:6:24","nodeType":"YulIdentifier","src":"31084:6:24"},{"kind":"number","nativeSrc":"31092:1:24","nodeType":"YulLiteral","src":"31092:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31080:3:24","nodeType":"YulIdentifier","src":"31080:3:24"},"nativeSrc":"31080:14:24","nodeType":"YulFunctionCall","src":"31080:14:24"},{"hexValue":"74686520666972737420706f6f6c206d7573742062652045544820706f6f6c","kind":"string","nativeSrc":"31096:33:24","nodeType":"YulLiteral","src":"31096:33:24","type":"","value":"the first pool must be ETH pool"}],"functionName":{"name":"mstore","nativeSrc":"31073:6:24","nodeType":"YulIdentifier","src":"31073:6:24"},"nativeSrc":"31073:57:24","nodeType":"YulFunctionCall","src":"31073:57:24"},"nativeSrc":"31073:57:24","nodeType":"YulExpressionStatement","src":"31073:57:24"}]},"name":"store_literal_in_memory_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe","nativeSrc":"30956:181:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"31054:6:24","nodeType":"YulTypedName","src":"31054:6:24","type":""}],"src":"30956:181:24"},{"body":{"nativeSrc":"31289:220:24","nodeType":"YulBlock","src":"31289:220:24","statements":[{"nativeSrc":"31299:74:24","nodeType":"YulAssignment","src":"31299:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"31365:3:24","nodeType":"YulIdentifier","src":"31365:3:24"},{"kind":"number","nativeSrc":"31370:2:24","nodeType":"YulLiteral","src":"31370:2:24","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"31306:58:24","nodeType":"YulIdentifier","src":"31306:58:24"},"nativeSrc":"31306:67:24","nodeType":"YulFunctionCall","src":"31306:67:24"},"variableNames":[{"name":"pos","nativeSrc":"31299:3:24","nodeType":"YulIdentifier","src":"31299:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"31471:3:24","nodeType":"YulIdentifier","src":"31471:3:24"}],"functionName":{"name":"store_literal_in_memory_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe","nativeSrc":"31382:88:24","nodeType":"YulIdentifier","src":"31382:88:24"},"nativeSrc":"31382:93:24","nodeType":"YulFunctionCall","src":"31382:93:24"},"nativeSrc":"31382:93:24","nodeType":"YulExpressionStatement","src":"31382:93:24"},{"nativeSrc":"31484:19:24","nodeType":"YulAssignment","src":"31484:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"31495:3:24","nodeType":"YulIdentifier","src":"31495:3:24"},{"kind":"number","nativeSrc":"31500:2:24","nodeType":"YulLiteral","src":"31500:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31491:3:24","nodeType":"YulIdentifier","src":"31491:3:24"},"nativeSrc":"31491:12:24","nodeType":"YulFunctionCall","src":"31491:12:24"},"variableNames":[{"name":"end","nativeSrc":"31484:3:24","nodeType":"YulIdentifier","src":"31484:3:24"}]}]},"name":"abi_encode_t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe_to_t_string_memory_ptr_fromStack","nativeSrc":"31143:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31277:3:24","nodeType":"YulTypedName","src":"31277:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31285:3:24","nodeType":"YulTypedName","src":"31285:3:24","type":""}],"src":"31143:366:24"},{"body":{"nativeSrc":"31686:248:24","nodeType":"YulBlock","src":"31686:248:24","statements":[{"nativeSrc":"31696:26:24","nodeType":"YulAssignment","src":"31696:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"31708:9:24","nodeType":"YulIdentifier","src":"31708:9:24"},{"kind":"number","nativeSrc":"31719:2:24","nodeType":"YulLiteral","src":"31719:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31704:3:24","nodeType":"YulIdentifier","src":"31704:3:24"},"nativeSrc":"31704:18:24","nodeType":"YulFunctionCall","src":"31704:18:24"},"variableNames":[{"name":"tail","nativeSrc":"31696:4:24","nodeType":"YulIdentifier","src":"31696:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"31743:9:24","nodeType":"YulIdentifier","src":"31743:9:24"},{"kind":"number","nativeSrc":"31754:1:24","nodeType":"YulLiteral","src":"31754:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31739:3:24","nodeType":"YulIdentifier","src":"31739:3:24"},"nativeSrc":"31739:17:24","nodeType":"YulFunctionCall","src":"31739:17:24"},{"arguments":[{"name":"tail","nativeSrc":"31762:4:24","nodeType":"YulIdentifier","src":"31762:4:24"},{"name":"headStart","nativeSrc":"31768:9:24","nodeType":"YulIdentifier","src":"31768:9:24"}],"functionName":{"name":"sub","nativeSrc":"31758:3:24","nodeType":"YulIdentifier","src":"31758:3:24"},"nativeSrc":"31758:20:24","nodeType":"YulFunctionCall","src":"31758:20:24"}],"functionName":{"name":"mstore","nativeSrc":"31732:6:24","nodeType":"YulIdentifier","src":"31732:6:24"},"nativeSrc":"31732:47:24","nodeType":"YulFunctionCall","src":"31732:47:24"},"nativeSrc":"31732:47:24","nodeType":"YulExpressionStatement","src":"31732:47:24"},{"nativeSrc":"31788:139:24","nodeType":"YulAssignment","src":"31788:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"31922:4:24","nodeType":"YulIdentifier","src":"31922:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe_to_t_string_memory_ptr_fromStack","nativeSrc":"31796:124:24","nodeType":"YulIdentifier","src":"31796:124:24"},"nativeSrc":"31796:131:24","nodeType":"YulFunctionCall","src":"31796:131:24"},"variableNames":[{"name":"tail","nativeSrc":"31788:4:24","nodeType":"YulIdentifier","src":"31788:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"31515:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31666:9:24","nodeType":"YulTypedName","src":"31666:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"31681:4:24","nodeType":"YulTypedName","src":"31681:4:24","type":""}],"src":"31515:419:24"},{"body":{"nativeSrc":"32046:74:24","nodeType":"YulBlock","src":"32046:74:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"32068:6:24","nodeType":"YulIdentifier","src":"32068:6:24"},{"kind":"number","nativeSrc":"32076:1:24","nodeType":"YulLiteral","src":"32076:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32064:3:24","nodeType":"YulIdentifier","src":"32064:3:24"},"nativeSrc":"32064:14:24","nodeType":"YulFunctionCall","src":"32064:14:24"},{"hexValue":"696e76616c6964207769746864726177206c6f636b656420626c6f636b73","kind":"string","nativeSrc":"32080:32:24","nodeType":"YulLiteral","src":"32080:32:24","type":"","value":"invalid withdraw locked blocks"}],"functionName":{"name":"mstore","nativeSrc":"32057:6:24","nodeType":"YulIdentifier","src":"32057:6:24"},"nativeSrc":"32057:56:24","nodeType":"YulFunctionCall","src":"32057:56:24"},"nativeSrc":"32057:56:24","nodeType":"YulExpressionStatement","src":"32057:56:24"}]},"name":"store_literal_in_memory_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691","nativeSrc":"31940:180:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"32038:6:24","nodeType":"YulTypedName","src":"32038:6:24","type":""}],"src":"31940:180:24"},{"body":{"nativeSrc":"32272:220:24","nodeType":"YulBlock","src":"32272:220:24","statements":[{"nativeSrc":"32282:74:24","nodeType":"YulAssignment","src":"32282:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"32348:3:24","nodeType":"YulIdentifier","src":"32348:3:24"},{"kind":"number","nativeSrc":"32353:2:24","nodeType":"YulLiteral","src":"32353:2:24","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"32289:58:24","nodeType":"YulIdentifier","src":"32289:58:24"},"nativeSrc":"32289:67:24","nodeType":"YulFunctionCall","src":"32289:67:24"},"variableNames":[{"name":"pos","nativeSrc":"32282:3:24","nodeType":"YulIdentifier","src":"32282:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"32454:3:24","nodeType":"YulIdentifier","src":"32454:3:24"}],"functionName":{"name":"store_literal_in_memory_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691","nativeSrc":"32365:88:24","nodeType":"YulIdentifier","src":"32365:88:24"},"nativeSrc":"32365:93:24","nodeType":"YulFunctionCall","src":"32365:93:24"},"nativeSrc":"32365:93:24","nodeType":"YulExpressionStatement","src":"32365:93:24"},{"nativeSrc":"32467:19:24","nodeType":"YulAssignment","src":"32467:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"32478:3:24","nodeType":"YulIdentifier","src":"32478:3:24"},{"kind":"number","nativeSrc":"32483:2:24","nodeType":"YulLiteral","src":"32483:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32474:3:24","nodeType":"YulIdentifier","src":"32474:3:24"},"nativeSrc":"32474:12:24","nodeType":"YulFunctionCall","src":"32474:12:24"},"variableNames":[{"name":"end","nativeSrc":"32467:3:24","nodeType":"YulIdentifier","src":"32467:3:24"}]}]},"name":"abi_encode_t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691_to_t_string_memory_ptr_fromStack","nativeSrc":"32126:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"32260:3:24","nodeType":"YulTypedName","src":"32260:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"32268:3:24","nodeType":"YulTypedName","src":"32268:3:24","type":""}],"src":"32126:366:24"},{"body":{"nativeSrc":"32669:248:24","nodeType":"YulBlock","src":"32669:248:24","statements":[{"nativeSrc":"32679:26:24","nodeType":"YulAssignment","src":"32679:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"32691:9:24","nodeType":"YulIdentifier","src":"32691:9:24"},{"kind":"number","nativeSrc":"32702:2:24","nodeType":"YulLiteral","src":"32702:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32687:3:24","nodeType":"YulIdentifier","src":"32687:3:24"},"nativeSrc":"32687:18:24","nodeType":"YulFunctionCall","src":"32687:18:24"},"variableNames":[{"name":"tail","nativeSrc":"32679:4:24","nodeType":"YulIdentifier","src":"32679:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"32726:9:24","nodeType":"YulIdentifier","src":"32726:9:24"},{"kind":"number","nativeSrc":"32737:1:24","nodeType":"YulLiteral","src":"32737:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32722:3:24","nodeType":"YulIdentifier","src":"32722:3:24"},"nativeSrc":"32722:17:24","nodeType":"YulFunctionCall","src":"32722:17:24"},{"arguments":[{"name":"tail","nativeSrc":"32745:4:24","nodeType":"YulIdentifier","src":"32745:4:24"},{"name":"headStart","nativeSrc":"32751:9:24","nodeType":"YulIdentifier","src":"32751:9:24"}],"functionName":{"name":"sub","nativeSrc":"32741:3:24","nodeType":"YulIdentifier","src":"32741:3:24"},"nativeSrc":"32741:20:24","nodeType":"YulFunctionCall","src":"32741:20:24"}],"functionName":{"name":"mstore","nativeSrc":"32715:6:24","nodeType":"YulIdentifier","src":"32715:6:24"},"nativeSrc":"32715:47:24","nodeType":"YulFunctionCall","src":"32715:47:24"},"nativeSrc":"32715:47:24","nodeType":"YulExpressionStatement","src":"32715:47:24"},{"nativeSrc":"32771:139:24","nodeType":"YulAssignment","src":"32771:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"32905:4:24","nodeType":"YulIdentifier","src":"32905:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691_to_t_string_memory_ptr_fromStack","nativeSrc":"32779:124:24","nodeType":"YulIdentifier","src":"32779:124:24"},"nativeSrc":"32779:131:24","nodeType":"YulFunctionCall","src":"32779:131:24"},"variableNames":[{"name":"tail","nativeSrc":"32771:4:24","nodeType":"YulIdentifier","src":"32771:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"32498:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32649:9:24","nodeType":"YulTypedName","src":"32649:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32664:4:24","nodeType":"YulTypedName","src":"32664:4:24","type":""}],"src":"32498:419:24"},{"body":{"nativeSrc":"33029:57:24","nodeType":"YulBlock","src":"33029:57:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"33051:6:24","nodeType":"YulIdentifier","src":"33051:6:24"},{"kind":"number","nativeSrc":"33059:1:24","nodeType":"YulLiteral","src":"33059:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33047:3:24","nodeType":"YulIdentifier","src":"33047:3:24"},"nativeSrc":"33047:14:24","nodeType":"YulFunctionCall","src":"33047:14:24"},{"hexValue":"616c726561647920656e646564","kind":"string","nativeSrc":"33063:15:24","nodeType":"YulLiteral","src":"33063:15:24","type":"","value":"already ended"}],"functionName":{"name":"mstore","nativeSrc":"33040:6:24","nodeType":"YulIdentifier","src":"33040:6:24"},"nativeSrc":"33040:39:24","nodeType":"YulFunctionCall","src":"33040:39:24"},"nativeSrc":"33040:39:24","nodeType":"YulExpressionStatement","src":"33040:39:24"}]},"name":"store_literal_in_memory_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97","nativeSrc":"32923:163:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"33021:6:24","nodeType":"YulTypedName","src":"33021:6:24","type":""}],"src":"32923:163:24"},{"body":{"nativeSrc":"33238:220:24","nodeType":"YulBlock","src":"33238:220:24","statements":[{"nativeSrc":"33248:74:24","nodeType":"YulAssignment","src":"33248:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"33314:3:24","nodeType":"YulIdentifier","src":"33314:3:24"},{"kind":"number","nativeSrc":"33319:2:24","nodeType":"YulLiteral","src":"33319:2:24","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"33255:58:24","nodeType":"YulIdentifier","src":"33255:58:24"},"nativeSrc":"33255:67:24","nodeType":"YulFunctionCall","src":"33255:67:24"},"variableNames":[{"name":"pos","nativeSrc":"33248:3:24","nodeType":"YulIdentifier","src":"33248:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"33420:3:24","nodeType":"YulIdentifier","src":"33420:3:24"}],"functionName":{"name":"store_literal_in_memory_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97","nativeSrc":"33331:88:24","nodeType":"YulIdentifier","src":"33331:88:24"},"nativeSrc":"33331:93:24","nodeType":"YulFunctionCall","src":"33331:93:24"},"nativeSrc":"33331:93:24","nodeType":"YulExpressionStatement","src":"33331:93:24"},{"nativeSrc":"33433:19:24","nodeType":"YulAssignment","src":"33433:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"33444:3:24","nodeType":"YulIdentifier","src":"33444:3:24"},{"kind":"number","nativeSrc":"33449:2:24","nodeType":"YulLiteral","src":"33449:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33440:3:24","nodeType":"YulIdentifier","src":"33440:3:24"},"nativeSrc":"33440:12:24","nodeType":"YulFunctionCall","src":"33440:12:24"},"variableNames":[{"name":"end","nativeSrc":"33433:3:24","nodeType":"YulIdentifier","src":"33433:3:24"}]}]},"name":"abi_encode_t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97_to_t_string_memory_ptr_fromStack","nativeSrc":"33092:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"33226:3:24","nodeType":"YulTypedName","src":"33226:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"33234:3:24","nodeType":"YulTypedName","src":"33234:3:24","type":""}],"src":"33092:366:24"},{"body":{"nativeSrc":"33635:248:24","nodeType":"YulBlock","src":"33635:248:24","statements":[{"nativeSrc":"33645:26:24","nodeType":"YulAssignment","src":"33645:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"33657:9:24","nodeType":"YulIdentifier","src":"33657:9:24"},{"kind":"number","nativeSrc":"33668:2:24","nodeType":"YulLiteral","src":"33668:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33653:3:24","nodeType":"YulIdentifier","src":"33653:3:24"},"nativeSrc":"33653:18:24","nodeType":"YulFunctionCall","src":"33653:18:24"},"variableNames":[{"name":"tail","nativeSrc":"33645:4:24","nodeType":"YulIdentifier","src":"33645:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"33692:9:24","nodeType":"YulIdentifier","src":"33692:9:24"},{"kind":"number","nativeSrc":"33703:1:24","nodeType":"YulLiteral","src":"33703:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33688:3:24","nodeType":"YulIdentifier","src":"33688:3:24"},"nativeSrc":"33688:17:24","nodeType":"YulFunctionCall","src":"33688:17:24"},{"arguments":[{"name":"tail","nativeSrc":"33711:4:24","nodeType":"YulIdentifier","src":"33711:4:24"},{"name":"headStart","nativeSrc":"33717:9:24","nodeType":"YulIdentifier","src":"33717:9:24"}],"functionName":{"name":"sub","nativeSrc":"33707:3:24","nodeType":"YulIdentifier","src":"33707:3:24"},"nativeSrc":"33707:20:24","nodeType":"YulFunctionCall","src":"33707:20:24"}],"functionName":{"name":"mstore","nativeSrc":"33681:6:24","nodeType":"YulIdentifier","src":"33681:6:24"},"nativeSrc":"33681:47:24","nodeType":"YulFunctionCall","src":"33681:47:24"},"nativeSrc":"33681:47:24","nodeType":"YulExpressionStatement","src":"33681:47:24"},{"nativeSrc":"33737:139:24","nodeType":"YulAssignment","src":"33737:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"33871:4:24","nodeType":"YulIdentifier","src":"33871:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97_to_t_string_memory_ptr_fromStack","nativeSrc":"33745:124:24","nodeType":"YulIdentifier","src":"33745:124:24"},"nativeSrc":"33745:131:24","nodeType":"YulFunctionCall","src":"33745:131:24"},"variableNames":[{"name":"tail","nativeSrc":"33737:4:24","nodeType":"YulIdentifier","src":"33737:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"33464:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33615:9:24","nodeType":"YulTypedName","src":"33615:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"33630:4:24","nodeType":"YulTypedName","src":"33630:4:24","type":""}],"src":"33464:419:24"},{"body":{"nativeSrc":"33995:76:24","nodeType":"YulBlock","src":"33995:76:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"34017:6:24","nodeType":"YulIdentifier","src":"34017:6:24"},{"kind":"number","nativeSrc":"34025:1:24","nodeType":"YulLiteral","src":"34025:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"34013:3:24","nodeType":"YulIdentifier","src":"34013:3:24"},"nativeSrc":"34013:14:24","nodeType":"YulFunctionCall","src":"34013:14:24"},{"hexValue":"77697468647261772068617320616c7265616479206265656e20706175736564","kind":"string","nativeSrc":"34029:34:24","nodeType":"YulLiteral","src":"34029:34:24","type":"","value":"withdraw has already been paused"}],"functionName":{"name":"mstore","nativeSrc":"34006:6:24","nodeType":"YulIdentifier","src":"34006:6:24"},"nativeSrc":"34006:58:24","nodeType":"YulFunctionCall","src":"34006:58:24"},"nativeSrc":"34006:58:24","nodeType":"YulExpressionStatement","src":"34006:58:24"}]},"name":"store_literal_in_memory_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d","nativeSrc":"33889:182:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"33987:6:24","nodeType":"YulTypedName","src":"33987:6:24","type":""}],"src":"33889:182:24"},{"body":{"nativeSrc":"34223:220:24","nodeType":"YulBlock","src":"34223:220:24","statements":[{"nativeSrc":"34233:74:24","nodeType":"YulAssignment","src":"34233:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"34299:3:24","nodeType":"YulIdentifier","src":"34299:3:24"},{"kind":"number","nativeSrc":"34304:2:24","nodeType":"YulLiteral","src":"34304:2:24","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"34240:58:24","nodeType":"YulIdentifier","src":"34240:58:24"},"nativeSrc":"34240:67:24","nodeType":"YulFunctionCall","src":"34240:67:24"},"variableNames":[{"name":"pos","nativeSrc":"34233:3:24","nodeType":"YulIdentifier","src":"34233:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"34405:3:24","nodeType":"YulIdentifier","src":"34405:3:24"}],"functionName":{"name":"store_literal_in_memory_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d","nativeSrc":"34316:88:24","nodeType":"YulIdentifier","src":"34316:88:24"},"nativeSrc":"34316:93:24","nodeType":"YulFunctionCall","src":"34316:93:24"},"nativeSrc":"34316:93:24","nodeType":"YulExpressionStatement","src":"34316:93:24"},{"nativeSrc":"34418:19:24","nodeType":"YulAssignment","src":"34418:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"34429:3:24","nodeType":"YulIdentifier","src":"34429:3:24"},{"kind":"number","nativeSrc":"34434:2:24","nodeType":"YulLiteral","src":"34434:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34425:3:24","nodeType":"YulIdentifier","src":"34425:3:24"},"nativeSrc":"34425:12:24","nodeType":"YulFunctionCall","src":"34425:12:24"},"variableNames":[{"name":"end","nativeSrc":"34418:3:24","nodeType":"YulIdentifier","src":"34418:3:24"}]}]},"name":"abi_encode_t_stringliteral_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d_to_t_string_memory_ptr_fromStack","nativeSrc":"34077:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"34211:3:24","nodeType":"YulTypedName","src":"34211:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"34219:3:24","nodeType":"YulTypedName","src":"34219:3:24","type":""}],"src":"34077:366:24"},{"body":{"nativeSrc":"34620:248:24","nodeType":"YulBlock","src":"34620:248:24","statements":[{"nativeSrc":"34630:26:24","nodeType":"YulAssignment","src":"34630:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"34642:9:24","nodeType":"YulIdentifier","src":"34642:9:24"},{"kind":"number","nativeSrc":"34653:2:24","nodeType":"YulLiteral","src":"34653:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34638:3:24","nodeType":"YulIdentifier","src":"34638:3:24"},"nativeSrc":"34638:18:24","nodeType":"YulFunctionCall","src":"34638:18:24"},"variableNames":[{"name":"tail","nativeSrc":"34630:4:24","nodeType":"YulIdentifier","src":"34630:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"34677:9:24","nodeType":"YulIdentifier","src":"34677:9:24"},{"kind":"number","nativeSrc":"34688:1:24","nodeType":"YulLiteral","src":"34688:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"34673:3:24","nodeType":"YulIdentifier","src":"34673:3:24"},"nativeSrc":"34673:17:24","nodeType":"YulFunctionCall","src":"34673:17:24"},{"arguments":[{"name":"tail","nativeSrc":"34696:4:24","nodeType":"YulIdentifier","src":"34696:4:24"},{"name":"headStart","nativeSrc":"34702:9:24","nodeType":"YulIdentifier","src":"34702:9:24"}],"functionName":{"name":"sub","nativeSrc":"34692:3:24","nodeType":"YulIdentifier","src":"34692:3:24"},"nativeSrc":"34692:20:24","nodeType":"YulFunctionCall","src":"34692:20:24"}],"functionName":{"name":"mstore","nativeSrc":"34666:6:24","nodeType":"YulIdentifier","src":"34666:6:24"},"nativeSrc":"34666:47:24","nodeType":"YulFunctionCall","src":"34666:47:24"},"nativeSrc":"34666:47:24","nodeType":"YulExpressionStatement","src":"34666:47:24"},{"nativeSrc":"34722:139:24","nodeType":"YulAssignment","src":"34722:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"34856:4:24","nodeType":"YulIdentifier","src":"34856:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d_to_t_string_memory_ptr_fromStack","nativeSrc":"34730:124:24","nodeType":"YulIdentifier","src":"34730:124:24"},"nativeSrc":"34730:131:24","nodeType":"YulFunctionCall","src":"34730:131:24"},"variableNames":[{"name":"tail","nativeSrc":"34722:4:24","nodeType":"YulIdentifier","src":"34722:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"34449:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"34600:9:24","nodeType":"YulTypedName","src":"34600:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"34615:4:24","nodeType":"YulTypedName","src":"34615:4:24","type":""}],"src":"34449:419:24"},{"body":{"nativeSrc":"34980:59:24","nodeType":"YulBlock","src":"34980:59:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"35002:6:24","nodeType":"YulIdentifier","src":"35002:6:24"},{"kind":"number","nativeSrc":"35010:1:24","nodeType":"YulLiteral","src":"35010:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"34998:3:24","nodeType":"YulIdentifier","src":"34998:3:24"},"nativeSrc":"34998:14:24","nodeType":"YulFunctionCall","src":"34998:14:24"},{"hexValue":"696e76616c696420706f6f6c206964","kind":"string","nativeSrc":"35014:17:24","nodeType":"YulLiteral","src":"35014:17:24","type":"","value":"invalid pool id"}],"functionName":{"name":"mstore","nativeSrc":"34991:6:24","nodeType":"YulIdentifier","src":"34991:6:24"},"nativeSrc":"34991:41:24","nodeType":"YulFunctionCall","src":"34991:41:24"},"nativeSrc":"34991:41:24","nodeType":"YulExpressionStatement","src":"34991:41:24"}]},"name":"store_literal_in_memory_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18","nativeSrc":"34874:165:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"34972:6:24","nodeType":"YulTypedName","src":"34972:6:24","type":""}],"src":"34874:165:24"},{"body":{"nativeSrc":"35191:220:24","nodeType":"YulBlock","src":"35191:220:24","statements":[{"nativeSrc":"35201:74:24","nodeType":"YulAssignment","src":"35201:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"35267:3:24","nodeType":"YulIdentifier","src":"35267:3:24"},{"kind":"number","nativeSrc":"35272:2:24","nodeType":"YulLiteral","src":"35272:2:24","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"35208:58:24","nodeType":"YulIdentifier","src":"35208:58:24"},"nativeSrc":"35208:67:24","nodeType":"YulFunctionCall","src":"35208:67:24"},"variableNames":[{"name":"pos","nativeSrc":"35201:3:24","nodeType":"YulIdentifier","src":"35201:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"35373:3:24","nodeType":"YulIdentifier","src":"35373:3:24"}],"functionName":{"name":"store_literal_in_memory_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18","nativeSrc":"35284:88:24","nodeType":"YulIdentifier","src":"35284:88:24"},"nativeSrc":"35284:93:24","nodeType":"YulFunctionCall","src":"35284:93:24"},"nativeSrc":"35284:93:24","nodeType":"YulExpressionStatement","src":"35284:93:24"},{"nativeSrc":"35386:19:24","nodeType":"YulAssignment","src":"35386:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"35397:3:24","nodeType":"YulIdentifier","src":"35397:3:24"},{"kind":"number","nativeSrc":"35402:2:24","nodeType":"YulLiteral","src":"35402:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"35393:3:24","nodeType":"YulIdentifier","src":"35393:3:24"},"nativeSrc":"35393:12:24","nodeType":"YulFunctionCall","src":"35393:12:24"},"variableNames":[{"name":"end","nativeSrc":"35386:3:24","nodeType":"YulIdentifier","src":"35386:3:24"}]}]},"name":"abi_encode_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18_to_t_string_memory_ptr_fromStack","nativeSrc":"35045:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"35179:3:24","nodeType":"YulTypedName","src":"35179:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"35187:3:24","nodeType":"YulTypedName","src":"35187:3:24","type":""}],"src":"35045:366:24"},{"body":{"nativeSrc":"35588:248:24","nodeType":"YulBlock","src":"35588:248:24","statements":[{"nativeSrc":"35598:26:24","nodeType":"YulAssignment","src":"35598:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"35610:9:24","nodeType":"YulIdentifier","src":"35610:9:24"},{"kind":"number","nativeSrc":"35621:2:24","nodeType":"YulLiteral","src":"35621:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"35606:3:24","nodeType":"YulIdentifier","src":"35606:3:24"},"nativeSrc":"35606:18:24","nodeType":"YulFunctionCall","src":"35606:18:24"},"variableNames":[{"name":"tail","nativeSrc":"35598:4:24","nodeType":"YulIdentifier","src":"35598:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"35645:9:24","nodeType":"YulIdentifier","src":"35645:9:24"},{"kind":"number","nativeSrc":"35656:1:24","nodeType":"YulLiteral","src":"35656:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35641:3:24","nodeType":"YulIdentifier","src":"35641:3:24"},"nativeSrc":"35641:17:24","nodeType":"YulFunctionCall","src":"35641:17:24"},{"arguments":[{"name":"tail","nativeSrc":"35664:4:24","nodeType":"YulIdentifier","src":"35664:4:24"},{"name":"headStart","nativeSrc":"35670:9:24","nodeType":"YulIdentifier","src":"35670:9:24"}],"functionName":{"name":"sub","nativeSrc":"35660:3:24","nodeType":"YulIdentifier","src":"35660:3:24"},"nativeSrc":"35660:20:24","nodeType":"YulFunctionCall","src":"35660:20:24"}],"functionName":{"name":"mstore","nativeSrc":"35634:6:24","nodeType":"YulIdentifier","src":"35634:6:24"},"nativeSrc":"35634:47:24","nodeType":"YulFunctionCall","src":"35634:47:24"},"nativeSrc":"35634:47:24","nodeType":"YulExpressionStatement","src":"35634:47:24"},{"nativeSrc":"35690:139:24","nodeType":"YulAssignment","src":"35690:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"35824:4:24","nodeType":"YulIdentifier","src":"35824:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18_to_t_string_memory_ptr_fromStack","nativeSrc":"35698:124:24","nodeType":"YulIdentifier","src":"35698:124:24"},"nativeSrc":"35698:131:24","nodeType":"YulFunctionCall","src":"35698:131:24"},"variableNames":[{"name":"tail","nativeSrc":"35690:4:24","nodeType":"YulIdentifier","src":"35690:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"35417:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"35568:9:24","nodeType":"YulTypedName","src":"35568:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"35583:4:24","nodeType":"YulTypedName","src":"35583:4:24","type":""}],"src":"35417:419:24"},{"body":{"nativeSrc":"35948:75:24","nodeType":"YulBlock","src":"35948:75:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"35970:6:24","nodeType":"YulIdentifier","src":"35970:6:24"},{"kind":"number","nativeSrc":"35978:1:24","nodeType":"YulLiteral","src":"35978:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35966:3:24","nodeType":"YulIdentifier","src":"35966:3:24"},"nativeSrc":"35966:14:24","nodeType":"YulFunctionCall","src":"35966:14:24"},{"hexValue":"6465706f736974206e6f7420737570706f727420455448207374616b696e67","kind":"string","nativeSrc":"35982:33:24","nodeType":"YulLiteral","src":"35982:33:24","type":"","value":"deposit not support ETH staking"}],"functionName":{"name":"mstore","nativeSrc":"35959:6:24","nodeType":"YulIdentifier","src":"35959:6:24"},"nativeSrc":"35959:57:24","nodeType":"YulFunctionCall","src":"35959:57:24"},"nativeSrc":"35959:57:24","nodeType":"YulExpressionStatement","src":"35959:57:24"}]},"name":"store_literal_in_memory_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757","nativeSrc":"35842:181:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"35940:6:24","nodeType":"YulTypedName","src":"35940:6:24","type":""}],"src":"35842:181:24"},{"body":{"nativeSrc":"36175:220:24","nodeType":"YulBlock","src":"36175:220:24","statements":[{"nativeSrc":"36185:74:24","nodeType":"YulAssignment","src":"36185:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"36251:3:24","nodeType":"YulIdentifier","src":"36251:3:24"},{"kind":"number","nativeSrc":"36256:2:24","nodeType":"YulLiteral","src":"36256:2:24","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"36192:58:24","nodeType":"YulIdentifier","src":"36192:58:24"},"nativeSrc":"36192:67:24","nodeType":"YulFunctionCall","src":"36192:67:24"},"variableNames":[{"name":"pos","nativeSrc":"36185:3:24","nodeType":"YulIdentifier","src":"36185:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"36357:3:24","nodeType":"YulIdentifier","src":"36357:3:24"}],"functionName":{"name":"store_literal_in_memory_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757","nativeSrc":"36268:88:24","nodeType":"YulIdentifier","src":"36268:88:24"},"nativeSrc":"36268:93:24","nodeType":"YulFunctionCall","src":"36268:93:24"},"nativeSrc":"36268:93:24","nodeType":"YulExpressionStatement","src":"36268:93:24"},{"nativeSrc":"36370:19:24","nodeType":"YulAssignment","src":"36370:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"36381:3:24","nodeType":"YulIdentifier","src":"36381:3:24"},{"kind":"number","nativeSrc":"36386:2:24","nodeType":"YulLiteral","src":"36386:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36377:3:24","nodeType":"YulIdentifier","src":"36377:3:24"},"nativeSrc":"36377:12:24","nodeType":"YulFunctionCall","src":"36377:12:24"},"variableNames":[{"name":"end","nativeSrc":"36370:3:24","nodeType":"YulIdentifier","src":"36370:3:24"}]}]},"name":"abi_encode_t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757_to_t_string_memory_ptr_fromStack","nativeSrc":"36029:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"36163:3:24","nodeType":"YulTypedName","src":"36163:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"36171:3:24","nodeType":"YulTypedName","src":"36171:3:24","type":""}],"src":"36029:366:24"},{"body":{"nativeSrc":"36572:248:24","nodeType":"YulBlock","src":"36572:248:24","statements":[{"nativeSrc":"36582:26:24","nodeType":"YulAssignment","src":"36582:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"36594:9:24","nodeType":"YulIdentifier","src":"36594:9:24"},{"kind":"number","nativeSrc":"36605:2:24","nodeType":"YulLiteral","src":"36605:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36590:3:24","nodeType":"YulIdentifier","src":"36590:3:24"},"nativeSrc":"36590:18:24","nodeType":"YulFunctionCall","src":"36590:18:24"},"variableNames":[{"name":"tail","nativeSrc":"36582:4:24","nodeType":"YulIdentifier","src":"36582:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36629:9:24","nodeType":"YulIdentifier","src":"36629:9:24"},{"kind":"number","nativeSrc":"36640:1:24","nodeType":"YulLiteral","src":"36640:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36625:3:24","nodeType":"YulIdentifier","src":"36625:3:24"},"nativeSrc":"36625:17:24","nodeType":"YulFunctionCall","src":"36625:17:24"},{"arguments":[{"name":"tail","nativeSrc":"36648:4:24","nodeType":"YulIdentifier","src":"36648:4:24"},{"name":"headStart","nativeSrc":"36654:9:24","nodeType":"YulIdentifier","src":"36654:9:24"}],"functionName":{"name":"sub","nativeSrc":"36644:3:24","nodeType":"YulIdentifier","src":"36644:3:24"},"nativeSrc":"36644:20:24","nodeType":"YulFunctionCall","src":"36644:20:24"}],"functionName":{"name":"mstore","nativeSrc":"36618:6:24","nodeType":"YulIdentifier","src":"36618:6:24"},"nativeSrc":"36618:47:24","nodeType":"YulFunctionCall","src":"36618:47:24"},"nativeSrc":"36618:47:24","nodeType":"YulExpressionStatement","src":"36618:47:24"},{"nativeSrc":"36674:139:24","nodeType":"YulAssignment","src":"36674:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"36808:4:24","nodeType":"YulIdentifier","src":"36808:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757_to_t_string_memory_ptr_fromStack","nativeSrc":"36682:124:24","nodeType":"YulIdentifier","src":"36682:124:24"},"nativeSrc":"36682:131:24","nodeType":"YulFunctionCall","src":"36682:131:24"},"variableNames":[{"name":"tail","nativeSrc":"36674:4:24","nodeType":"YulIdentifier","src":"36674:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"36401:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"36552:9:24","nodeType":"YulTypedName","src":"36552:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"36567:4:24","nodeType":"YulTypedName","src":"36567:4:24","type":""}],"src":"36401:419:24"},{"body":{"nativeSrc":"36932:66:24","nodeType":"YulBlock","src":"36932:66:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"36954:6:24","nodeType":"YulIdentifier","src":"36954:6:24"},{"kind":"number","nativeSrc":"36962:1:24","nodeType":"YulLiteral","src":"36962:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36950:3:24","nodeType":"YulIdentifier","src":"36950:3:24"},"nativeSrc":"36950:14:24","nodeType":"YulFunctionCall","src":"36950:14:24"},{"hexValue":"696e76616c6964206465706f73697420616d6f756e74","kind":"string","nativeSrc":"36966:24:24","nodeType":"YulLiteral","src":"36966:24:24","type":"","value":"invalid deposit amount"}],"functionName":{"name":"mstore","nativeSrc":"36943:6:24","nodeType":"YulIdentifier","src":"36943:6:24"},"nativeSrc":"36943:48:24","nodeType":"YulFunctionCall","src":"36943:48:24"},"nativeSrc":"36943:48:24","nodeType":"YulExpressionStatement","src":"36943:48:24"}]},"name":"store_literal_in_memory_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec","nativeSrc":"36826:172:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"36924:6:24","nodeType":"YulTypedName","src":"36924:6:24","type":""}],"src":"36826:172:24"},{"body":{"nativeSrc":"37150:220:24","nodeType":"YulBlock","src":"37150:220:24","statements":[{"nativeSrc":"37160:74:24","nodeType":"YulAssignment","src":"37160:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"37226:3:24","nodeType":"YulIdentifier","src":"37226:3:24"},{"kind":"number","nativeSrc":"37231:2:24","nodeType":"YulLiteral","src":"37231:2:24","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"37167:58:24","nodeType":"YulIdentifier","src":"37167:58:24"},"nativeSrc":"37167:67:24","nodeType":"YulFunctionCall","src":"37167:67:24"},"variableNames":[{"name":"pos","nativeSrc":"37160:3:24","nodeType":"YulIdentifier","src":"37160:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"37332:3:24","nodeType":"YulIdentifier","src":"37332:3:24"}],"functionName":{"name":"store_literal_in_memory_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec","nativeSrc":"37243:88:24","nodeType":"YulIdentifier","src":"37243:88:24"},"nativeSrc":"37243:93:24","nodeType":"YulFunctionCall","src":"37243:93:24"},"nativeSrc":"37243:93:24","nodeType":"YulExpressionStatement","src":"37243:93:24"},{"nativeSrc":"37345:19:24","nodeType":"YulAssignment","src":"37345:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"37356:3:24","nodeType":"YulIdentifier","src":"37356:3:24"},{"kind":"number","nativeSrc":"37361:2:24","nodeType":"YulLiteral","src":"37361:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37352:3:24","nodeType":"YulIdentifier","src":"37352:3:24"},"nativeSrc":"37352:12:24","nodeType":"YulFunctionCall","src":"37352:12:24"},"variableNames":[{"name":"end","nativeSrc":"37345:3:24","nodeType":"YulIdentifier","src":"37345:3:24"}]}]},"name":"abi_encode_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec_to_t_string_memory_ptr_fromStack","nativeSrc":"37004:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"37138:3:24","nodeType":"YulTypedName","src":"37138:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"37146:3:24","nodeType":"YulTypedName","src":"37146:3:24","type":""}],"src":"37004:366:24"},{"body":{"nativeSrc":"37547:248:24","nodeType":"YulBlock","src":"37547:248:24","statements":[{"nativeSrc":"37557:26:24","nodeType":"YulAssignment","src":"37557:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"37569:9:24","nodeType":"YulIdentifier","src":"37569:9:24"},{"kind":"number","nativeSrc":"37580:2:24","nodeType":"YulLiteral","src":"37580:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37565:3:24","nodeType":"YulIdentifier","src":"37565:3:24"},"nativeSrc":"37565:18:24","nodeType":"YulFunctionCall","src":"37565:18:24"},"variableNames":[{"name":"tail","nativeSrc":"37557:4:24","nodeType":"YulIdentifier","src":"37557:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"37604:9:24","nodeType":"YulIdentifier","src":"37604:9:24"},{"kind":"number","nativeSrc":"37615:1:24","nodeType":"YulLiteral","src":"37615:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37600:3:24","nodeType":"YulIdentifier","src":"37600:3:24"},"nativeSrc":"37600:17:24","nodeType":"YulFunctionCall","src":"37600:17:24"},{"arguments":[{"name":"tail","nativeSrc":"37623:4:24","nodeType":"YulIdentifier","src":"37623:4:24"},{"name":"headStart","nativeSrc":"37629:9:24","nodeType":"YulIdentifier","src":"37629:9:24"}],"functionName":{"name":"sub","nativeSrc":"37619:3:24","nodeType":"YulIdentifier","src":"37619:3:24"},"nativeSrc":"37619:20:24","nodeType":"YulFunctionCall","src":"37619:20:24"}],"functionName":{"name":"mstore","nativeSrc":"37593:6:24","nodeType":"YulIdentifier","src":"37593:6:24"},"nativeSrc":"37593:47:24","nodeType":"YulFunctionCall","src":"37593:47:24"},"nativeSrc":"37593:47:24","nodeType":"YulExpressionStatement","src":"37593:47:24"},{"nativeSrc":"37649:139:24","nodeType":"YulAssignment","src":"37649:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"37783:4:24","nodeType":"YulIdentifier","src":"37783:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec_to_t_string_memory_ptr_fromStack","nativeSrc":"37657:124:24","nodeType":"YulIdentifier","src":"37657:124:24"},"nativeSrc":"37657:131:24","nodeType":"YulFunctionCall","src":"37657:131:24"},"variableNames":[{"name":"tail","nativeSrc":"37649:4:24","nodeType":"YulIdentifier","src":"37649:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"37376:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"37527:9:24","nodeType":"YulTypedName","src":"37527:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"37542:4:24","nodeType":"YulTypedName","src":"37542:4:24","type":""}],"src":"37376:419:24"},{"body":{"nativeSrc":"37907:74:24","nodeType":"YulBlock","src":"37907:74:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"37929:6:24","nodeType":"YulIdentifier","src":"37929:6:24"},{"kind":"number","nativeSrc":"37937:1:24","nodeType":"YulLiteral","src":"37937:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37925:3:24","nodeType":"YulIdentifier","src":"37925:3:24"},"nativeSrc":"37925:14:24","nodeType":"YulFunctionCall","src":"37925:14:24"},{"hexValue":"45544820706f6f6c206d7573742062652063726561746564206669727374","kind":"string","nativeSrc":"37941:32:24","nodeType":"YulLiteral","src":"37941:32:24","type":"","value":"ETH pool must be created first"}],"functionName":{"name":"mstore","nativeSrc":"37918:6:24","nodeType":"YulIdentifier","src":"37918:6:24"},"nativeSrc":"37918:56:24","nodeType":"YulFunctionCall","src":"37918:56:24"},"nativeSrc":"37918:56:24","nodeType":"YulExpressionStatement","src":"37918:56:24"}]},"name":"store_literal_in_memory_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10","nativeSrc":"37801:180:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"37899:6:24","nodeType":"YulTypedName","src":"37899:6:24","type":""}],"src":"37801:180:24"},{"body":{"nativeSrc":"38133:220:24","nodeType":"YulBlock","src":"38133:220:24","statements":[{"nativeSrc":"38143:74:24","nodeType":"YulAssignment","src":"38143:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"38209:3:24","nodeType":"YulIdentifier","src":"38209:3:24"},{"kind":"number","nativeSrc":"38214:2:24","nodeType":"YulLiteral","src":"38214:2:24","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"38150:58:24","nodeType":"YulIdentifier","src":"38150:58:24"},"nativeSrc":"38150:67:24","nodeType":"YulFunctionCall","src":"38150:67:24"},"variableNames":[{"name":"pos","nativeSrc":"38143:3:24","nodeType":"YulIdentifier","src":"38143:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"38315:3:24","nodeType":"YulIdentifier","src":"38315:3:24"}],"functionName":{"name":"store_literal_in_memory_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10","nativeSrc":"38226:88:24","nodeType":"YulIdentifier","src":"38226:88:24"},"nativeSrc":"38226:93:24","nodeType":"YulFunctionCall","src":"38226:93:24"},"nativeSrc":"38226:93:24","nodeType":"YulExpressionStatement","src":"38226:93:24"},{"nativeSrc":"38328:19:24","nodeType":"YulAssignment","src":"38328:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"38339:3:24","nodeType":"YulIdentifier","src":"38339:3:24"},{"kind":"number","nativeSrc":"38344:2:24","nodeType":"YulLiteral","src":"38344:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38335:3:24","nodeType":"YulIdentifier","src":"38335:3:24"},"nativeSrc":"38335:12:24","nodeType":"YulFunctionCall","src":"38335:12:24"},"variableNames":[{"name":"end","nativeSrc":"38328:3:24","nodeType":"YulIdentifier","src":"38328:3:24"}]}]},"name":"abi_encode_t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10_to_t_string_memory_ptr_fromStack","nativeSrc":"37987:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"38121:3:24","nodeType":"YulTypedName","src":"38121:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"38129:3:24","nodeType":"YulTypedName","src":"38129:3:24","type":""}],"src":"37987:366:24"},{"body":{"nativeSrc":"38530:248:24","nodeType":"YulBlock","src":"38530:248:24","statements":[{"nativeSrc":"38540:26:24","nodeType":"YulAssignment","src":"38540:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"38552:9:24","nodeType":"YulIdentifier","src":"38552:9:24"},{"kind":"number","nativeSrc":"38563:2:24","nodeType":"YulLiteral","src":"38563:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38548:3:24","nodeType":"YulIdentifier","src":"38548:3:24"},"nativeSrc":"38548:18:24","nodeType":"YulFunctionCall","src":"38548:18:24"},"variableNames":[{"name":"tail","nativeSrc":"38540:4:24","nodeType":"YulIdentifier","src":"38540:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"38587:9:24","nodeType":"YulIdentifier","src":"38587:9:24"},{"kind":"number","nativeSrc":"38598:1:24","nodeType":"YulLiteral","src":"38598:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38583:3:24","nodeType":"YulIdentifier","src":"38583:3:24"},"nativeSrc":"38583:17:24","nodeType":"YulFunctionCall","src":"38583:17:24"},{"arguments":[{"name":"tail","nativeSrc":"38606:4:24","nodeType":"YulIdentifier","src":"38606:4:24"},{"name":"headStart","nativeSrc":"38612:9:24","nodeType":"YulIdentifier","src":"38612:9:24"}],"functionName":{"name":"sub","nativeSrc":"38602:3:24","nodeType":"YulIdentifier","src":"38602:3:24"},"nativeSrc":"38602:20:24","nodeType":"YulFunctionCall","src":"38602:20:24"}],"functionName":{"name":"mstore","nativeSrc":"38576:6:24","nodeType":"YulIdentifier","src":"38576:6:24"},"nativeSrc":"38576:47:24","nodeType":"YulFunctionCall","src":"38576:47:24"},"nativeSrc":"38576:47:24","nodeType":"YulExpressionStatement","src":"38576:47:24"},{"nativeSrc":"38632:139:24","nodeType":"YulAssignment","src":"38632:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"38766:4:24","nodeType":"YulIdentifier","src":"38766:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10_to_t_string_memory_ptr_fromStack","nativeSrc":"38640:124:24","nodeType":"YulIdentifier","src":"38640:124:24"},"nativeSrc":"38640:131:24","nodeType":"YulFunctionCall","src":"38640:131:24"},"variableNames":[{"name":"tail","nativeSrc":"38632:4:24","nodeType":"YulIdentifier","src":"38632:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"38359:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38510:9:24","nodeType":"YulTypedName","src":"38510:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38525:4:24","nodeType":"YulTypedName","src":"38525:4:24","type":""}],"src":"38359:419:24"},{"body":{"nativeSrc":"38890:63:24","nodeType":"YulBlock","src":"38890:63:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"38912:6:24","nodeType":"YulIdentifier","src":"38912:6:24"},{"kind":"number","nativeSrc":"38920:1:24","nodeType":"YulLiteral","src":"38920:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38908:3:24","nodeType":"YulIdentifier","src":"38908:3:24"},"nativeSrc":"38908:14:24","nodeType":"YulFunctionCall","src":"38908:14:24"},{"hexValue":"696e76616c696420706f6f6c20776569676874","kind":"string","nativeSrc":"38924:21:24","nodeType":"YulLiteral","src":"38924:21:24","type":"","value":"invalid pool weight"}],"functionName":{"name":"mstore","nativeSrc":"38901:6:24","nodeType":"YulIdentifier","src":"38901:6:24"},"nativeSrc":"38901:45:24","nodeType":"YulFunctionCall","src":"38901:45:24"},"nativeSrc":"38901:45:24","nodeType":"YulExpressionStatement","src":"38901:45:24"}]},"name":"store_literal_in_memory_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1","nativeSrc":"38784:169:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"38882:6:24","nodeType":"YulTypedName","src":"38882:6:24","type":""}],"src":"38784:169:24"},{"body":{"nativeSrc":"39105:220:24","nodeType":"YulBlock","src":"39105:220:24","statements":[{"nativeSrc":"39115:74:24","nodeType":"YulAssignment","src":"39115:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"39181:3:24","nodeType":"YulIdentifier","src":"39181:3:24"},{"kind":"number","nativeSrc":"39186:2:24","nodeType":"YulLiteral","src":"39186:2:24","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"39122:58:24","nodeType":"YulIdentifier","src":"39122:58:24"},"nativeSrc":"39122:67:24","nodeType":"YulFunctionCall","src":"39122:67:24"},"variableNames":[{"name":"pos","nativeSrc":"39115:3:24","nodeType":"YulIdentifier","src":"39115:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"39287:3:24","nodeType":"YulIdentifier","src":"39287:3:24"}],"functionName":{"name":"store_literal_in_memory_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1","nativeSrc":"39198:88:24","nodeType":"YulIdentifier","src":"39198:88:24"},"nativeSrc":"39198:93:24","nodeType":"YulFunctionCall","src":"39198:93:24"},"nativeSrc":"39198:93:24","nodeType":"YulExpressionStatement","src":"39198:93:24"},{"nativeSrc":"39300:19:24","nodeType":"YulAssignment","src":"39300:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"39311:3:24","nodeType":"YulIdentifier","src":"39311:3:24"},{"kind":"number","nativeSrc":"39316:2:24","nodeType":"YulLiteral","src":"39316:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"39307:3:24","nodeType":"YulIdentifier","src":"39307:3:24"},"nativeSrc":"39307:12:24","nodeType":"YulFunctionCall","src":"39307:12:24"},"variableNames":[{"name":"end","nativeSrc":"39300:3:24","nodeType":"YulIdentifier","src":"39300:3:24"}]}]},"name":"abi_encode_t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1_to_t_string_memory_ptr_fromStack","nativeSrc":"38959:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"39093:3:24","nodeType":"YulTypedName","src":"39093:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"39101:3:24","nodeType":"YulTypedName","src":"39101:3:24","type":""}],"src":"38959:366:24"},{"body":{"nativeSrc":"39502:248:24","nodeType":"YulBlock","src":"39502:248:24","statements":[{"nativeSrc":"39512:26:24","nodeType":"YulAssignment","src":"39512:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"39524:9:24","nodeType":"YulIdentifier","src":"39524:9:24"},{"kind":"number","nativeSrc":"39535:2:24","nodeType":"YulLiteral","src":"39535:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"39520:3:24","nodeType":"YulIdentifier","src":"39520:3:24"},"nativeSrc":"39520:18:24","nodeType":"YulFunctionCall","src":"39520:18:24"},"variableNames":[{"name":"tail","nativeSrc":"39512:4:24","nodeType":"YulIdentifier","src":"39512:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"39559:9:24","nodeType":"YulIdentifier","src":"39559:9:24"},{"kind":"number","nativeSrc":"39570:1:24","nodeType":"YulLiteral","src":"39570:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"39555:3:24","nodeType":"YulIdentifier","src":"39555:3:24"},"nativeSrc":"39555:17:24","nodeType":"YulFunctionCall","src":"39555:17:24"},{"arguments":[{"name":"tail","nativeSrc":"39578:4:24","nodeType":"YulIdentifier","src":"39578:4:24"},{"name":"headStart","nativeSrc":"39584:9:24","nodeType":"YulIdentifier","src":"39584:9:24"}],"functionName":{"name":"sub","nativeSrc":"39574:3:24","nodeType":"YulIdentifier","src":"39574:3:24"},"nativeSrc":"39574:20:24","nodeType":"YulFunctionCall","src":"39574:20:24"}],"functionName":{"name":"mstore","nativeSrc":"39548:6:24","nodeType":"YulIdentifier","src":"39548:6:24"},"nativeSrc":"39548:47:24","nodeType":"YulFunctionCall","src":"39548:47:24"},"nativeSrc":"39548:47:24","nodeType":"YulExpressionStatement","src":"39548:47:24"},{"nativeSrc":"39604:139:24","nodeType":"YulAssignment","src":"39604:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"39738:4:24","nodeType":"YulIdentifier","src":"39738:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1_to_t_string_memory_ptr_fromStack","nativeSrc":"39612:124:24","nodeType":"YulIdentifier","src":"39612:124:24"},"nativeSrc":"39612:131:24","nodeType":"YulFunctionCall","src":"39612:131:24"},"variableNames":[{"name":"tail","nativeSrc":"39604:4:24","nodeType":"YulIdentifier","src":"39604:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"39331:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"39482:9:24","nodeType":"YulTypedName","src":"39482:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"39497:4:24","nodeType":"YulTypedName","src":"39497:4:24","type":""}],"src":"39331:419:24"},{"body":{"nativeSrc":"39869:34:24","nodeType":"YulBlock","src":"39869:34:24","statements":[{"nativeSrc":"39879:18:24","nodeType":"YulAssignment","src":"39879:18:24","value":{"name":"pos","nativeSrc":"39894:3:24","nodeType":"YulIdentifier","src":"39894:3:24"},"variableNames":[{"name":"updated_pos","nativeSrc":"39879:11:24","nodeType":"YulIdentifier","src":"39879:11:24"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"39756:147:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"39841:3:24","nodeType":"YulTypedName","src":"39841:3:24","type":""},{"name":"length","nativeSrc":"39846:6:24","nodeType":"YulTypedName","src":"39846:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"39857:11:24","nodeType":"YulTypedName","src":"39857:11:24","type":""}],"src":"39756:147:24"},{"body":{"nativeSrc":"40015:8:24","nodeType":"YulBlock","src":"40015:8:24","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"39909:114:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"40007:6:24","nodeType":"YulTypedName","src":"40007:6:24","type":""}],"src":"39909:114:24"},{"body":{"nativeSrc":"40192:235:24","nodeType":"YulBlock","src":"40192:235:24","statements":[{"nativeSrc":"40202:90:24","nodeType":"YulAssignment","src":"40202:90:24","value":{"arguments":[{"name":"pos","nativeSrc":"40285:3:24","nodeType":"YulIdentifier","src":"40285:3:24"},{"kind":"number","nativeSrc":"40290:1:24","nodeType":"YulLiteral","src":"40290:1:24","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"40209:75:24","nodeType":"YulIdentifier","src":"40209:75:24"},"nativeSrc":"40209:83:24","nodeType":"YulFunctionCall","src":"40209:83:24"},"variableNames":[{"name":"pos","nativeSrc":"40202:3:24","nodeType":"YulIdentifier","src":"40202:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"40390:3:24","nodeType":"YulIdentifier","src":"40390:3:24"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"40301:88:24","nodeType":"YulIdentifier","src":"40301:88:24"},"nativeSrc":"40301:93:24","nodeType":"YulFunctionCall","src":"40301:93:24"},"nativeSrc":"40301:93:24","nodeType":"YulExpressionStatement","src":"40301:93:24"},{"nativeSrc":"40403:18:24","nodeType":"YulAssignment","src":"40403:18:24","value":{"arguments":[{"name":"pos","nativeSrc":"40414:3:24","nodeType":"YulIdentifier","src":"40414:3:24"},{"kind":"number","nativeSrc":"40419:1:24","nodeType":"YulLiteral","src":"40419:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"40410:3:24","nodeType":"YulIdentifier","src":"40410:3:24"},"nativeSrc":"40410:11:24","nodeType":"YulFunctionCall","src":"40410:11:24"},"variableNames":[{"name":"end","nativeSrc":"40403:3:24","nodeType":"YulIdentifier","src":"40403:3:24"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"40029:398:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"40180:3:24","nodeType":"YulTypedName","src":"40180:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"40188:3:24","nodeType":"YulTypedName","src":"40188:3:24","type":""}],"src":"40029:398:24"},{"body":{"nativeSrc":"40621:191:24","nodeType":"YulBlock","src":"40621:191:24","statements":[{"nativeSrc":"40632:154:24","nodeType":"YulAssignment","src":"40632:154:24","value":{"arguments":[{"name":"pos","nativeSrc":"40782:3:24","nodeType":"YulIdentifier","src":"40782:3:24"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"40639:141:24","nodeType":"YulIdentifier","src":"40639:141:24"},"nativeSrc":"40639:147:24","nodeType":"YulFunctionCall","src":"40639:147:24"},"variableNames":[{"name":"pos","nativeSrc":"40632:3:24","nodeType":"YulIdentifier","src":"40632:3:24"}]},{"nativeSrc":"40796:10:24","nodeType":"YulAssignment","src":"40796:10:24","value":{"name":"pos","nativeSrc":"40803:3:24","nodeType":"YulIdentifier","src":"40803:3:24"},"variableNames":[{"name":"end","nativeSrc":"40796:3:24","nodeType":"YulIdentifier","src":"40796:3:24"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"40433:379:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"40608:3:24","nodeType":"YulTypedName","src":"40608:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"40617:3:24","nodeType":"YulTypedName","src":"40617:3:24","type":""}],"src":"40433:379:24"},{"body":{"nativeSrc":"40924:68:24","nodeType":"YulBlock","src":"40924:68:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"40946:6:24","nodeType":"YulIdentifier","src":"40946:6:24"},{"kind":"number","nativeSrc":"40954:1:24","nodeType":"YulLiteral","src":"40954:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"40942:3:24","nodeType":"YulIdentifier","src":"40942:3:24"},"nativeSrc":"40942:14:24","nodeType":"YulFunctionCall","src":"40942:14:24"},{"hexValue":"455448207472616e736665722063616c6c206661696c6564","kind":"string","nativeSrc":"40958:26:24","nodeType":"YulLiteral","src":"40958:26:24","type":"","value":"ETH transfer call failed"}],"functionName":{"name":"mstore","nativeSrc":"40935:6:24","nodeType":"YulIdentifier","src":"40935:6:24"},"nativeSrc":"40935:50:24","nodeType":"YulFunctionCall","src":"40935:50:24"},"nativeSrc":"40935:50:24","nodeType":"YulExpressionStatement","src":"40935:50:24"}]},"name":"store_literal_in_memory_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b","nativeSrc":"40818:174:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"40916:6:24","nodeType":"YulTypedName","src":"40916:6:24","type":""}],"src":"40818:174:24"},{"body":{"nativeSrc":"41144:220:24","nodeType":"YulBlock","src":"41144:220:24","statements":[{"nativeSrc":"41154:74:24","nodeType":"YulAssignment","src":"41154:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"41220:3:24","nodeType":"YulIdentifier","src":"41220:3:24"},{"kind":"number","nativeSrc":"41225:2:24","nodeType":"YulLiteral","src":"41225:2:24","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"41161:58:24","nodeType":"YulIdentifier","src":"41161:58:24"},"nativeSrc":"41161:67:24","nodeType":"YulFunctionCall","src":"41161:67:24"},"variableNames":[{"name":"pos","nativeSrc":"41154:3:24","nodeType":"YulIdentifier","src":"41154:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"41326:3:24","nodeType":"YulIdentifier","src":"41326:3:24"}],"functionName":{"name":"store_literal_in_memory_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b","nativeSrc":"41237:88:24","nodeType":"YulIdentifier","src":"41237:88:24"},"nativeSrc":"41237:93:24","nodeType":"YulFunctionCall","src":"41237:93:24"},"nativeSrc":"41237:93:24","nodeType":"YulExpressionStatement","src":"41237:93:24"},{"nativeSrc":"41339:19:24","nodeType":"YulAssignment","src":"41339:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"41350:3:24","nodeType":"YulIdentifier","src":"41350:3:24"},{"kind":"number","nativeSrc":"41355:2:24","nodeType":"YulLiteral","src":"41355:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"41346:3:24","nodeType":"YulIdentifier","src":"41346:3:24"},"nativeSrc":"41346:12:24","nodeType":"YulFunctionCall","src":"41346:12:24"},"variableNames":[{"name":"end","nativeSrc":"41339:3:24","nodeType":"YulIdentifier","src":"41339:3:24"}]}]},"name":"abi_encode_t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b_to_t_string_memory_ptr_fromStack","nativeSrc":"40998:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"41132:3:24","nodeType":"YulTypedName","src":"41132:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"41140:3:24","nodeType":"YulTypedName","src":"41140:3:24","type":""}],"src":"40998:366:24"},{"body":{"nativeSrc":"41541:248:24","nodeType":"YulBlock","src":"41541:248:24","statements":[{"nativeSrc":"41551:26:24","nodeType":"YulAssignment","src":"41551:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"41563:9:24","nodeType":"YulIdentifier","src":"41563:9:24"},{"kind":"number","nativeSrc":"41574:2:24","nodeType":"YulLiteral","src":"41574:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"41559:3:24","nodeType":"YulIdentifier","src":"41559:3:24"},"nativeSrc":"41559:18:24","nodeType":"YulFunctionCall","src":"41559:18:24"},"variableNames":[{"name":"tail","nativeSrc":"41551:4:24","nodeType":"YulIdentifier","src":"41551:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"41598:9:24","nodeType":"YulIdentifier","src":"41598:9:24"},{"kind":"number","nativeSrc":"41609:1:24","nodeType":"YulLiteral","src":"41609:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"41594:3:24","nodeType":"YulIdentifier","src":"41594:3:24"},"nativeSrc":"41594:17:24","nodeType":"YulFunctionCall","src":"41594:17:24"},{"arguments":[{"name":"tail","nativeSrc":"41617:4:24","nodeType":"YulIdentifier","src":"41617:4:24"},{"name":"headStart","nativeSrc":"41623:9:24","nodeType":"YulIdentifier","src":"41623:9:24"}],"functionName":{"name":"sub","nativeSrc":"41613:3:24","nodeType":"YulIdentifier","src":"41613:3:24"},"nativeSrc":"41613:20:24","nodeType":"YulFunctionCall","src":"41613:20:24"}],"functionName":{"name":"mstore","nativeSrc":"41587:6:24","nodeType":"YulIdentifier","src":"41587:6:24"},"nativeSrc":"41587:47:24","nodeType":"YulFunctionCall","src":"41587:47:24"},"nativeSrc":"41587:47:24","nodeType":"YulExpressionStatement","src":"41587:47:24"},{"nativeSrc":"41643:139:24","nodeType":"YulAssignment","src":"41643:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"41777:4:24","nodeType":"YulIdentifier","src":"41777:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b_to_t_string_memory_ptr_fromStack","nativeSrc":"41651:124:24","nodeType":"YulIdentifier","src":"41651:124:24"},"nativeSrc":"41651:131:24","nodeType":"YulFunctionCall","src":"41651:131:24"},"variableNames":[{"name":"tail","nativeSrc":"41643:4:24","nodeType":"YulIdentifier","src":"41643:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"41370:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"41521:9:24","nodeType":"YulTypedName","src":"41521:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"41536:4:24","nodeType":"YulTypedName","src":"41536:4:24","type":""}],"src":"41370:419:24"},{"body":{"nativeSrc":"41855:77:24","nodeType":"YulBlock","src":"41855:77:24","statements":[{"nativeSrc":"41865:22:24","nodeType":"YulAssignment","src":"41865:22:24","value":{"arguments":[{"name":"offset","nativeSrc":"41880:6:24","nodeType":"YulIdentifier","src":"41880:6:24"}],"functionName":{"name":"mload","nativeSrc":"41874:5:24","nodeType":"YulIdentifier","src":"41874:5:24"},"nativeSrc":"41874:13:24","nodeType":"YulFunctionCall","src":"41874:13:24"},"variableNames":[{"name":"value","nativeSrc":"41865:5:24","nodeType":"YulIdentifier","src":"41865:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"41920:5:24","nodeType":"YulIdentifier","src":"41920:5:24"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"41896:23:24","nodeType":"YulIdentifier","src":"41896:23:24"},"nativeSrc":"41896:30:24","nodeType":"YulFunctionCall","src":"41896:30:24"},"nativeSrc":"41896:30:24","nodeType":"YulExpressionStatement","src":"41896:30:24"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"41795:137:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"41833:6:24","nodeType":"YulTypedName","src":"41833:6:24","type":""},{"name":"end","nativeSrc":"41841:3:24","nodeType":"YulTypedName","src":"41841:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"41849:5:24","nodeType":"YulTypedName","src":"41849:5:24","type":""}],"src":"41795:137:24"},{"body":{"nativeSrc":"42012:271:24","nodeType":"YulBlock","src":"42012:271:24","statements":[{"body":{"nativeSrc":"42058:83:24","nodeType":"YulBlock","src":"42058:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"42060:77:24","nodeType":"YulIdentifier","src":"42060:77:24"},"nativeSrc":"42060:79:24","nodeType":"YulFunctionCall","src":"42060:79:24"},"nativeSrc":"42060:79:24","nodeType":"YulExpressionStatement","src":"42060:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"42033:7:24","nodeType":"YulIdentifier","src":"42033:7:24"},{"name":"headStart","nativeSrc":"42042:9:24","nodeType":"YulIdentifier","src":"42042:9:24"}],"functionName":{"name":"sub","nativeSrc":"42029:3:24","nodeType":"YulIdentifier","src":"42029:3:24"},"nativeSrc":"42029:23:24","nodeType":"YulFunctionCall","src":"42029:23:24"},{"kind":"number","nativeSrc":"42054:2:24","nodeType":"YulLiteral","src":"42054:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"42025:3:24","nodeType":"YulIdentifier","src":"42025:3:24"},"nativeSrc":"42025:32:24","nodeType":"YulFunctionCall","src":"42025:32:24"},"nativeSrc":"42022:119:24","nodeType":"YulIf","src":"42022:119:24"},{"nativeSrc":"42151:125:24","nodeType":"YulBlock","src":"42151:125:24","statements":[{"nativeSrc":"42166:15:24","nodeType":"YulVariableDeclaration","src":"42166:15:24","value":{"kind":"number","nativeSrc":"42180:1:24","nodeType":"YulLiteral","src":"42180:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"42170:6:24","nodeType":"YulTypedName","src":"42170:6:24","type":""}]},{"nativeSrc":"42195:71:24","nodeType":"YulAssignment","src":"42195:71:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"42238:9:24","nodeType":"YulIdentifier","src":"42238:9:24"},{"name":"offset","nativeSrc":"42249:6:24","nodeType":"YulIdentifier","src":"42249:6:24"}],"functionName":{"name":"add","nativeSrc":"42234:3:24","nodeType":"YulIdentifier","src":"42234:3:24"},"nativeSrc":"42234:22:24","nodeType":"YulFunctionCall","src":"42234:22:24"},{"name":"dataEnd","nativeSrc":"42258:7:24","nodeType":"YulIdentifier","src":"42258:7:24"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"42205:28:24","nodeType":"YulIdentifier","src":"42205:28:24"},"nativeSrc":"42205:61:24","nodeType":"YulFunctionCall","src":"42205:61:24"},"variableNames":[{"name":"value0","nativeSrc":"42195:6:24","nodeType":"YulIdentifier","src":"42195:6:24"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"41938:345:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"41982:9:24","nodeType":"YulTypedName","src":"41982:9:24","type":""},{"name":"dataEnd","nativeSrc":"41993:7:24","nodeType":"YulTypedName","src":"41993:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"42005:6:24","nodeType":"YulTypedName","src":"42005:6:24","type":""}],"src":"41938:345:24"},{"body":{"nativeSrc":"42395:119:24","nodeType":"YulBlock","src":"42395:119:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"42417:6:24","nodeType":"YulIdentifier","src":"42417:6:24"},{"kind":"number","nativeSrc":"42425:1:24","nodeType":"YulLiteral","src":"42425:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"42413:3:24","nodeType":"YulIdentifier","src":"42413:3:24"},"nativeSrc":"42413:14:24","nodeType":"YulFunctionCall","src":"42413:14:24"},{"hexValue":"455448207472616e73666572206f7065726174696f6e20646964206e6f742073","kind":"string","nativeSrc":"42429:34:24","nodeType":"YulLiteral","src":"42429:34:24","type":"","value":"ETH transfer operation did not s"}],"functionName":{"name":"mstore","nativeSrc":"42406:6:24","nodeType":"YulIdentifier","src":"42406:6:24"},"nativeSrc":"42406:58:24","nodeType":"YulFunctionCall","src":"42406:58:24"},"nativeSrc":"42406:58:24","nodeType":"YulExpressionStatement","src":"42406:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"42485:6:24","nodeType":"YulIdentifier","src":"42485:6:24"},{"kind":"number","nativeSrc":"42493:2:24","nodeType":"YulLiteral","src":"42493:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"42481:3:24","nodeType":"YulIdentifier","src":"42481:3:24"},"nativeSrc":"42481:15:24","nodeType":"YulFunctionCall","src":"42481:15:24"},{"hexValue":"756363656564","kind":"string","nativeSrc":"42498:8:24","nodeType":"YulLiteral","src":"42498:8:24","type":"","value":"ucceed"}],"functionName":{"name":"mstore","nativeSrc":"42474:6:24","nodeType":"YulIdentifier","src":"42474:6:24"},"nativeSrc":"42474:33:24","nodeType":"YulFunctionCall","src":"42474:33:24"},"nativeSrc":"42474:33:24","nodeType":"YulExpressionStatement","src":"42474:33:24"}]},"name":"store_literal_in_memory_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4","nativeSrc":"42289:225:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"42387:6:24","nodeType":"YulTypedName","src":"42387:6:24","type":""}],"src":"42289:225:24"},{"body":{"nativeSrc":"42666:220:24","nodeType":"YulBlock","src":"42666:220:24","statements":[{"nativeSrc":"42676:74:24","nodeType":"YulAssignment","src":"42676:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"42742:3:24","nodeType":"YulIdentifier","src":"42742:3:24"},{"kind":"number","nativeSrc":"42747:2:24","nodeType":"YulLiteral","src":"42747:2:24","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"42683:58:24","nodeType":"YulIdentifier","src":"42683:58:24"},"nativeSrc":"42683:67:24","nodeType":"YulFunctionCall","src":"42683:67:24"},"variableNames":[{"name":"pos","nativeSrc":"42676:3:24","nodeType":"YulIdentifier","src":"42676:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"42848:3:24","nodeType":"YulIdentifier","src":"42848:3:24"}],"functionName":{"name":"store_literal_in_memory_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4","nativeSrc":"42759:88:24","nodeType":"YulIdentifier","src":"42759:88:24"},"nativeSrc":"42759:93:24","nodeType":"YulFunctionCall","src":"42759:93:24"},"nativeSrc":"42759:93:24","nodeType":"YulExpressionStatement","src":"42759:93:24"},{"nativeSrc":"42861:19:24","nodeType":"YulAssignment","src":"42861:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"42872:3:24","nodeType":"YulIdentifier","src":"42872:3:24"},{"kind":"number","nativeSrc":"42877:2:24","nodeType":"YulLiteral","src":"42877:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"42868:3:24","nodeType":"YulIdentifier","src":"42868:3:24"},"nativeSrc":"42868:12:24","nodeType":"YulFunctionCall","src":"42868:12:24"},"variableNames":[{"name":"end","nativeSrc":"42861:3:24","nodeType":"YulIdentifier","src":"42861:3:24"}]}]},"name":"abi_encode_t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4_to_t_string_memory_ptr_fromStack","nativeSrc":"42520:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"42654:3:24","nodeType":"YulTypedName","src":"42654:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"42662:3:24","nodeType":"YulTypedName","src":"42662:3:24","type":""}],"src":"42520:366:24"},{"body":{"nativeSrc":"43063:248:24","nodeType":"YulBlock","src":"43063:248:24","statements":[{"nativeSrc":"43073:26:24","nodeType":"YulAssignment","src":"43073:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"43085:9:24","nodeType":"YulIdentifier","src":"43085:9:24"},{"kind":"number","nativeSrc":"43096:2:24","nodeType":"YulLiteral","src":"43096:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"43081:3:24","nodeType":"YulIdentifier","src":"43081:3:24"},"nativeSrc":"43081:18:24","nodeType":"YulFunctionCall","src":"43081:18:24"},"variableNames":[{"name":"tail","nativeSrc":"43073:4:24","nodeType":"YulIdentifier","src":"43073:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"43120:9:24","nodeType":"YulIdentifier","src":"43120:9:24"},{"kind":"number","nativeSrc":"43131:1:24","nodeType":"YulLiteral","src":"43131:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"43116:3:24","nodeType":"YulIdentifier","src":"43116:3:24"},"nativeSrc":"43116:17:24","nodeType":"YulFunctionCall","src":"43116:17:24"},{"arguments":[{"name":"tail","nativeSrc":"43139:4:24","nodeType":"YulIdentifier","src":"43139:4:24"},{"name":"headStart","nativeSrc":"43145:9:24","nodeType":"YulIdentifier","src":"43145:9:24"}],"functionName":{"name":"sub","nativeSrc":"43135:3:24","nodeType":"YulIdentifier","src":"43135:3:24"},"nativeSrc":"43135:20:24","nodeType":"YulFunctionCall","src":"43135:20:24"}],"functionName":{"name":"mstore","nativeSrc":"43109:6:24","nodeType":"YulIdentifier","src":"43109:6:24"},"nativeSrc":"43109:47:24","nodeType":"YulFunctionCall","src":"43109:47:24"},"nativeSrc":"43109:47:24","nodeType":"YulExpressionStatement","src":"43109:47:24"},{"nativeSrc":"43165:139:24","nodeType":"YulAssignment","src":"43165:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"43299:4:24","nodeType":"YulIdentifier","src":"43299:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4_to_t_string_memory_ptr_fromStack","nativeSrc":"43173:124:24","nodeType":"YulIdentifier","src":"43173:124:24"},"nativeSrc":"43173:131:24","nodeType":"YulFunctionCall","src":"43173:131:24"},"variableNames":[{"name":"tail","nativeSrc":"43165:4:24","nodeType":"YulIdentifier","src":"43165:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"42892:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"43043:9:24","nodeType":"YulTypedName","src":"43043:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"43058:4:24","nodeType":"YulTypedName","src":"43058:4:24","type":""}],"src":"42892:419:24"},{"body":{"nativeSrc":"43443:206:24","nodeType":"YulBlock","src":"43443:206:24","statements":[{"nativeSrc":"43453:26:24","nodeType":"YulAssignment","src":"43453:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"43465:9:24","nodeType":"YulIdentifier","src":"43465:9:24"},{"kind":"number","nativeSrc":"43476:2:24","nodeType":"YulLiteral","src":"43476:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"43461:3:24","nodeType":"YulIdentifier","src":"43461:3:24"},"nativeSrc":"43461:18:24","nodeType":"YulFunctionCall","src":"43461:18:24"},"variableNames":[{"name":"tail","nativeSrc":"43453:4:24","nodeType":"YulIdentifier","src":"43453:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"43533:6:24","nodeType":"YulIdentifier","src":"43533:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"43546:9:24","nodeType":"YulIdentifier","src":"43546:9:24"},{"kind":"number","nativeSrc":"43557:1:24","nodeType":"YulLiteral","src":"43557:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"43542:3:24","nodeType":"YulIdentifier","src":"43542:3:24"},"nativeSrc":"43542:17:24","nodeType":"YulFunctionCall","src":"43542:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"43489:43:24","nodeType":"YulIdentifier","src":"43489:43:24"},"nativeSrc":"43489:71:24","nodeType":"YulFunctionCall","src":"43489:71:24"},"nativeSrc":"43489:71:24","nodeType":"YulExpressionStatement","src":"43489:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"43614:6:24","nodeType":"YulIdentifier","src":"43614:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"43627:9:24","nodeType":"YulIdentifier","src":"43627:9:24"},{"kind":"number","nativeSrc":"43638:2:24","nodeType":"YulLiteral","src":"43638:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"43623:3:24","nodeType":"YulIdentifier","src":"43623:3:24"},"nativeSrc":"43623:18:24","nodeType":"YulFunctionCall","src":"43623:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"43570:43:24","nodeType":"YulIdentifier","src":"43570:43:24"},"nativeSrc":"43570:72:24","nodeType":"YulFunctionCall","src":"43570:72:24"},"nativeSrc":"43570:72:24","nodeType":"YulExpressionStatement","src":"43570:72:24"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"43317:332:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"43407:9:24","nodeType":"YulTypedName","src":"43407:9:24","type":""},{"name":"value1","nativeSrc":"43419:6:24","nodeType":"YulTypedName","src":"43419:6:24","type":""},{"name":"value0","nativeSrc":"43427:6:24","nodeType":"YulTypedName","src":"43427:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"43438:4:24","nodeType":"YulTypedName","src":"43438:4:24","type":""}],"src":"43317:332:24"},{"body":{"nativeSrc":"43753:124:24","nodeType":"YulBlock","src":"43753:124:24","statements":[{"nativeSrc":"43763:26:24","nodeType":"YulAssignment","src":"43763:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"43775:9:24","nodeType":"YulIdentifier","src":"43775:9:24"},{"kind":"number","nativeSrc":"43786:2:24","nodeType":"YulLiteral","src":"43786:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"43771:3:24","nodeType":"YulIdentifier","src":"43771:3:24"},"nativeSrc":"43771:18:24","nodeType":"YulFunctionCall","src":"43771:18:24"},"variableNames":[{"name":"tail","nativeSrc":"43763:4:24","nodeType":"YulIdentifier","src":"43763:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"43843:6:24","nodeType":"YulIdentifier","src":"43843:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"43856:9:24","nodeType":"YulIdentifier","src":"43856:9:24"},{"kind":"number","nativeSrc":"43867:1:24","nodeType":"YulLiteral","src":"43867:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"43852:3:24","nodeType":"YulIdentifier","src":"43852:3:24"},"nativeSrc":"43852:17:24","nodeType":"YulFunctionCall","src":"43852:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"43799:43:24","nodeType":"YulIdentifier","src":"43799:43:24"},"nativeSrc":"43799:71:24","nodeType":"YulFunctionCall","src":"43799:71:24"},"nativeSrc":"43799:71:24","nodeType":"YulExpressionStatement","src":"43799:71:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"43655:222:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"43725:9:24","nodeType":"YulTypedName","src":"43725:9:24","type":""},{"name":"value0","nativeSrc":"43737:6:24","nodeType":"YulTypedName","src":"43737:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"43748:4:24","nodeType":"YulTypedName","src":"43748:4:24","type":""}],"src":"43655:222:24"},{"body":{"nativeSrc":"43946:80:24","nodeType":"YulBlock","src":"43946:80:24","statements":[{"nativeSrc":"43956:22:24","nodeType":"YulAssignment","src":"43956:22:24","value":{"arguments":[{"name":"offset","nativeSrc":"43971:6:24","nodeType":"YulIdentifier","src":"43971:6:24"}],"functionName":{"name":"mload","nativeSrc":"43965:5:24","nodeType":"YulIdentifier","src":"43965:5:24"},"nativeSrc":"43965:13:24","nodeType":"YulFunctionCall","src":"43965:13:24"},"variableNames":[{"name":"value","nativeSrc":"43956:5:24","nodeType":"YulIdentifier","src":"43956:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"44014:5:24","nodeType":"YulIdentifier","src":"44014:5:24"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"43987:26:24","nodeType":"YulIdentifier","src":"43987:26:24"},"nativeSrc":"43987:33:24","nodeType":"YulFunctionCall","src":"43987:33:24"},"nativeSrc":"43987:33:24","nodeType":"YulExpressionStatement","src":"43987:33:24"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"43883:143:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"43924:6:24","nodeType":"YulTypedName","src":"43924:6:24","type":""},{"name":"end","nativeSrc":"43932:3:24","nodeType":"YulTypedName","src":"43932:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"43940:5:24","nodeType":"YulTypedName","src":"43940:5:24","type":""}],"src":"43883:143:24"},{"body":{"nativeSrc":"44109:274:24","nodeType":"YulBlock","src":"44109:274:24","statements":[{"body":{"nativeSrc":"44155:83:24","nodeType":"YulBlock","src":"44155:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"44157:77:24","nodeType":"YulIdentifier","src":"44157:77:24"},"nativeSrc":"44157:79:24","nodeType":"YulFunctionCall","src":"44157:79:24"},"nativeSrc":"44157:79:24","nodeType":"YulExpressionStatement","src":"44157:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"44130:7:24","nodeType":"YulIdentifier","src":"44130:7:24"},{"name":"headStart","nativeSrc":"44139:9:24","nodeType":"YulIdentifier","src":"44139:9:24"}],"functionName":{"name":"sub","nativeSrc":"44126:3:24","nodeType":"YulIdentifier","src":"44126:3:24"},"nativeSrc":"44126:23:24","nodeType":"YulFunctionCall","src":"44126:23:24"},{"kind":"number","nativeSrc":"44151:2:24","nodeType":"YulLiteral","src":"44151:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"44122:3:24","nodeType":"YulIdentifier","src":"44122:3:24"},"nativeSrc":"44122:32:24","nodeType":"YulFunctionCall","src":"44122:32:24"},"nativeSrc":"44119:119:24","nodeType":"YulIf","src":"44119:119:24"},{"nativeSrc":"44248:128:24","nodeType":"YulBlock","src":"44248:128:24","statements":[{"nativeSrc":"44263:15:24","nodeType":"YulVariableDeclaration","src":"44263:15:24","value":{"kind":"number","nativeSrc":"44277:1:24","nodeType":"YulLiteral","src":"44277:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"44267:6:24","nodeType":"YulTypedName","src":"44267:6:24","type":""}]},{"nativeSrc":"44292:74:24","nodeType":"YulAssignment","src":"44292:74:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"44338:9:24","nodeType":"YulIdentifier","src":"44338:9:24"},{"name":"offset","nativeSrc":"44349:6:24","nodeType":"YulIdentifier","src":"44349:6:24"}],"functionName":{"name":"add","nativeSrc":"44334:3:24","nodeType":"YulIdentifier","src":"44334:3:24"},"nativeSrc":"44334:22:24","nodeType":"YulFunctionCall","src":"44334:22:24"},{"name":"dataEnd","nativeSrc":"44358:7:24","nodeType":"YulIdentifier","src":"44358:7:24"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"44302:31:24","nodeType":"YulIdentifier","src":"44302:31:24"},"nativeSrc":"44302:64:24","nodeType":"YulFunctionCall","src":"44302:64:24"},"variableNames":[{"name":"value0","nativeSrc":"44292:6:24","nodeType":"YulIdentifier","src":"44292:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"44032:351:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"44079:9:24","nodeType":"YulTypedName","src":"44079:9:24","type":""},{"name":"dataEnd","nativeSrc":"44090:7:24","nodeType":"YulTypedName","src":"44090:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"44102:6:24","nodeType":"YulTypedName","src":"44102:6:24","type":""}],"src":"44032:351:24"},{"body":{"nativeSrc":"44452:80:24","nodeType":"YulBlock","src":"44452:80:24","statements":[{"nativeSrc":"44462:22:24","nodeType":"YulAssignment","src":"44462:22:24","value":{"arguments":[{"name":"offset","nativeSrc":"44477:6:24","nodeType":"YulIdentifier","src":"44477:6:24"}],"functionName":{"name":"mload","nativeSrc":"44471:5:24","nodeType":"YulIdentifier","src":"44471:5:24"},"nativeSrc":"44471:13:24","nodeType":"YulFunctionCall","src":"44471:13:24"},"variableNames":[{"name":"value","nativeSrc":"44462:5:24","nodeType":"YulIdentifier","src":"44462:5:24"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"44520:5:24","nodeType":"YulIdentifier","src":"44520:5:24"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"44493:26:24","nodeType":"YulIdentifier","src":"44493:26:24"},"nativeSrc":"44493:33:24","nodeType":"YulFunctionCall","src":"44493:33:24"},"nativeSrc":"44493:33:24","nodeType":"YulExpressionStatement","src":"44493:33:24"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"44389:143:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"44430:6:24","nodeType":"YulTypedName","src":"44430:6:24","type":""},{"name":"end","nativeSrc":"44438:3:24","nodeType":"YulTypedName","src":"44438:3:24","type":""}],"returnVariables":[{"name":"value","nativeSrc":"44446:5:24","nodeType":"YulTypedName","src":"44446:5:24","type":""}],"src":"44389:143:24"},{"body":{"nativeSrc":"44615:274:24","nodeType":"YulBlock","src":"44615:274:24","statements":[{"body":{"nativeSrc":"44661:83:24","nodeType":"YulBlock","src":"44661:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"44663:77:24","nodeType":"YulIdentifier","src":"44663:77:24"},"nativeSrc":"44663:79:24","nodeType":"YulFunctionCall","src":"44663:79:24"},"nativeSrc":"44663:79:24","nodeType":"YulExpressionStatement","src":"44663:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"44636:7:24","nodeType":"YulIdentifier","src":"44636:7:24"},{"name":"headStart","nativeSrc":"44645:9:24","nodeType":"YulIdentifier","src":"44645:9:24"}],"functionName":{"name":"sub","nativeSrc":"44632:3:24","nodeType":"YulIdentifier","src":"44632:3:24"},"nativeSrc":"44632:23:24","nodeType":"YulFunctionCall","src":"44632:23:24"},{"kind":"number","nativeSrc":"44657:2:24","nodeType":"YulLiteral","src":"44657:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"44628:3:24","nodeType":"YulIdentifier","src":"44628:3:24"},"nativeSrc":"44628:32:24","nodeType":"YulFunctionCall","src":"44628:32:24"},"nativeSrc":"44625:119:24","nodeType":"YulIf","src":"44625:119:24"},{"nativeSrc":"44754:128:24","nodeType":"YulBlock","src":"44754:128:24","statements":[{"nativeSrc":"44769:15:24","nodeType":"YulVariableDeclaration","src":"44769:15:24","value":{"kind":"number","nativeSrc":"44783:1:24","nodeType":"YulLiteral","src":"44783:1:24","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"44773:6:24","nodeType":"YulTypedName","src":"44773:6:24","type":""}]},{"nativeSrc":"44798:74:24","nodeType":"YulAssignment","src":"44798:74:24","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"44844:9:24","nodeType":"YulIdentifier","src":"44844:9:24"},{"name":"offset","nativeSrc":"44855:6:24","nodeType":"YulIdentifier","src":"44855:6:24"}],"functionName":{"name":"add","nativeSrc":"44840:3:24","nodeType":"YulIdentifier","src":"44840:3:24"},"nativeSrc":"44840:22:24","nodeType":"YulFunctionCall","src":"44840:22:24"},{"name":"dataEnd","nativeSrc":"44864:7:24","nodeType":"YulIdentifier","src":"44864:7:24"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"44808:31:24","nodeType":"YulIdentifier","src":"44808:31:24"},"nativeSrc":"44808:64:24","nodeType":"YulFunctionCall","src":"44808:64:24"},"variableNames":[{"name":"value0","nativeSrc":"44798:6:24","nodeType":"YulIdentifier","src":"44798:6:24"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"44538:351:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"44585:9:24","nodeType":"YulTypedName","src":"44585:9:24","type":""},{"name":"dataEnd","nativeSrc":"44596:7:24","nodeType":"YulTypedName","src":"44596:7:24","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"44608:6:24","nodeType":"YulTypedName","src":"44608:6:24","type":""}],"src":"44538:351:24"},{"body":{"nativeSrc":"45049:288:24","nodeType":"YulBlock","src":"45049:288:24","statements":[{"nativeSrc":"45059:26:24","nodeType":"YulAssignment","src":"45059:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"45071:9:24","nodeType":"YulIdentifier","src":"45071:9:24"},{"kind":"number","nativeSrc":"45082:2:24","nodeType":"YulLiteral","src":"45082:2:24","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"45067:3:24","nodeType":"YulIdentifier","src":"45067:3:24"},"nativeSrc":"45067:18:24","nodeType":"YulFunctionCall","src":"45067:18:24"},"variableNames":[{"name":"tail","nativeSrc":"45059:4:24","nodeType":"YulIdentifier","src":"45059:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"45139:6:24","nodeType":"YulIdentifier","src":"45139:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"45152:9:24","nodeType":"YulIdentifier","src":"45152:9:24"},{"kind":"number","nativeSrc":"45163:1:24","nodeType":"YulLiteral","src":"45163:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"45148:3:24","nodeType":"YulIdentifier","src":"45148:3:24"},"nativeSrc":"45148:17:24","nodeType":"YulFunctionCall","src":"45148:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"45095:43:24","nodeType":"YulIdentifier","src":"45095:43:24"},"nativeSrc":"45095:71:24","nodeType":"YulFunctionCall","src":"45095:71:24"},"nativeSrc":"45095:71:24","nodeType":"YulExpressionStatement","src":"45095:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"45220:6:24","nodeType":"YulIdentifier","src":"45220:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"45233:9:24","nodeType":"YulIdentifier","src":"45233:9:24"},{"kind":"number","nativeSrc":"45244:2:24","nodeType":"YulLiteral","src":"45244:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"45229:3:24","nodeType":"YulIdentifier","src":"45229:3:24"},"nativeSrc":"45229:18:24","nodeType":"YulFunctionCall","src":"45229:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"45176:43:24","nodeType":"YulIdentifier","src":"45176:43:24"},"nativeSrc":"45176:72:24","nodeType":"YulFunctionCall","src":"45176:72:24"},"nativeSrc":"45176:72:24","nodeType":"YulExpressionStatement","src":"45176:72:24"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"45302:6:24","nodeType":"YulIdentifier","src":"45302:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"45315:9:24","nodeType":"YulIdentifier","src":"45315:9:24"},{"kind":"number","nativeSrc":"45326:2:24","nodeType":"YulLiteral","src":"45326:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"45311:3:24","nodeType":"YulIdentifier","src":"45311:3:24"},"nativeSrc":"45311:18:24","nodeType":"YulFunctionCall","src":"45311:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"45258:43:24","nodeType":"YulIdentifier","src":"45258:43:24"},"nativeSrc":"45258:72:24","nodeType":"YulFunctionCall","src":"45258:72:24"},"nativeSrc":"45258:72:24","nodeType":"YulExpressionStatement","src":"45258:72:24"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"44895:442:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"45005:9:24","nodeType":"YulTypedName","src":"45005:9:24","type":""},{"name":"value2","nativeSrc":"45017:6:24","nodeType":"YulTypedName","src":"45017:6:24","type":""},{"name":"value1","nativeSrc":"45025:6:24","nodeType":"YulTypedName","src":"45025:6:24","type":""},{"name":"value0","nativeSrc":"45033:6:24","nodeType":"YulTypedName","src":"45033:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"45044:4:24","nodeType":"YulTypedName","src":"45044:4:24","type":""}],"src":"44895:442:24"},{"body":{"nativeSrc":"45449:70:24","nodeType":"YulBlock","src":"45449:70:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"45471:6:24","nodeType":"YulIdentifier","src":"45471:6:24"},{"kind":"number","nativeSrc":"45479:1:24","nodeType":"YulLiteral","src":"45479:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"45467:3:24","nodeType":"YulIdentifier","src":"45467:3:24"},"nativeSrc":"45467:14:24","nodeType":"YulFunctionCall","src":"45467:14:24"},{"hexValue":"75736572207374616b6520616d6f756e74206f766572666c6f77","kind":"string","nativeSrc":"45483:28:24","nodeType":"YulLiteral","src":"45483:28:24","type":"","value":"user stake amount overflow"}],"functionName":{"name":"mstore","nativeSrc":"45460:6:24","nodeType":"YulIdentifier","src":"45460:6:24"},"nativeSrc":"45460:52:24","nodeType":"YulFunctionCall","src":"45460:52:24"},"nativeSrc":"45460:52:24","nodeType":"YulExpressionStatement","src":"45460:52:24"}]},"name":"store_literal_in_memory_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c","nativeSrc":"45343:176:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"45441:6:24","nodeType":"YulTypedName","src":"45441:6:24","type":""}],"src":"45343:176:24"},{"body":{"nativeSrc":"45671:220:24","nodeType":"YulBlock","src":"45671:220:24","statements":[{"nativeSrc":"45681:74:24","nodeType":"YulAssignment","src":"45681:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"45747:3:24","nodeType":"YulIdentifier","src":"45747:3:24"},{"kind":"number","nativeSrc":"45752:2:24","nodeType":"YulLiteral","src":"45752:2:24","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"45688:58:24","nodeType":"YulIdentifier","src":"45688:58:24"},"nativeSrc":"45688:67:24","nodeType":"YulFunctionCall","src":"45688:67:24"},"variableNames":[{"name":"pos","nativeSrc":"45681:3:24","nodeType":"YulIdentifier","src":"45681:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"45853:3:24","nodeType":"YulIdentifier","src":"45853:3:24"}],"functionName":{"name":"store_literal_in_memory_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c","nativeSrc":"45764:88:24","nodeType":"YulIdentifier","src":"45764:88:24"},"nativeSrc":"45764:93:24","nodeType":"YulFunctionCall","src":"45764:93:24"},"nativeSrc":"45764:93:24","nodeType":"YulExpressionStatement","src":"45764:93:24"},{"nativeSrc":"45866:19:24","nodeType":"YulAssignment","src":"45866:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"45877:3:24","nodeType":"YulIdentifier","src":"45877:3:24"},{"kind":"number","nativeSrc":"45882:2:24","nodeType":"YulLiteral","src":"45882:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"45873:3:24","nodeType":"YulIdentifier","src":"45873:3:24"},"nativeSrc":"45873:12:24","nodeType":"YulFunctionCall","src":"45873:12:24"},"variableNames":[{"name":"end","nativeSrc":"45866:3:24","nodeType":"YulIdentifier","src":"45866:3:24"}]}]},"name":"abi_encode_t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c_to_t_string_memory_ptr_fromStack","nativeSrc":"45525:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"45659:3:24","nodeType":"YulTypedName","src":"45659:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"45667:3:24","nodeType":"YulTypedName","src":"45667:3:24","type":""}],"src":"45525:366:24"},{"body":{"nativeSrc":"46068:248:24","nodeType":"YulBlock","src":"46068:248:24","statements":[{"nativeSrc":"46078:26:24","nodeType":"YulAssignment","src":"46078:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"46090:9:24","nodeType":"YulIdentifier","src":"46090:9:24"},{"kind":"number","nativeSrc":"46101:2:24","nodeType":"YulLiteral","src":"46101:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"46086:3:24","nodeType":"YulIdentifier","src":"46086:3:24"},"nativeSrc":"46086:18:24","nodeType":"YulFunctionCall","src":"46086:18:24"},"variableNames":[{"name":"tail","nativeSrc":"46078:4:24","nodeType":"YulIdentifier","src":"46078:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"46125:9:24","nodeType":"YulIdentifier","src":"46125:9:24"},{"kind":"number","nativeSrc":"46136:1:24","nodeType":"YulLiteral","src":"46136:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"46121:3:24","nodeType":"YulIdentifier","src":"46121:3:24"},"nativeSrc":"46121:17:24","nodeType":"YulFunctionCall","src":"46121:17:24"},{"arguments":[{"name":"tail","nativeSrc":"46144:4:24","nodeType":"YulIdentifier","src":"46144:4:24"},{"name":"headStart","nativeSrc":"46150:9:24","nodeType":"YulIdentifier","src":"46150:9:24"}],"functionName":{"name":"sub","nativeSrc":"46140:3:24","nodeType":"YulIdentifier","src":"46140:3:24"},"nativeSrc":"46140:20:24","nodeType":"YulFunctionCall","src":"46140:20:24"}],"functionName":{"name":"mstore","nativeSrc":"46114:6:24","nodeType":"YulIdentifier","src":"46114:6:24"},"nativeSrc":"46114:47:24","nodeType":"YulFunctionCall","src":"46114:47:24"},"nativeSrc":"46114:47:24","nodeType":"YulExpressionStatement","src":"46114:47:24"},{"nativeSrc":"46170:139:24","nodeType":"YulAssignment","src":"46170:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"46304:4:24","nodeType":"YulIdentifier","src":"46304:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c_to_t_string_memory_ptr_fromStack","nativeSrc":"46178:124:24","nodeType":"YulIdentifier","src":"46178:124:24"},"nativeSrc":"46178:131:24","nodeType":"YulFunctionCall","src":"46178:131:24"},"variableNames":[{"name":"tail","nativeSrc":"46170:4:24","nodeType":"YulIdentifier","src":"46170:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"45897:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"46048:9:24","nodeType":"YulTypedName","src":"46048:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"46063:4:24","nodeType":"YulTypedName","src":"46063:4:24","type":""}],"src":"45897:419:24"},{"body":{"nativeSrc":"46428:118:24","nodeType":"YulBlock","src":"46428:118:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"46450:6:24","nodeType":"YulIdentifier","src":"46450:6:24"},{"kind":"number","nativeSrc":"46458:1:24","nodeType":"YulLiteral","src":"46458:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"46446:3:24","nodeType":"YulIdentifier","src":"46446:3:24"},"nativeSrc":"46446:14:24","nodeType":"YulFunctionCall","src":"46446:14:24"},{"hexValue":"616363756d756c617465207265776172647320706572207374616b65206f7665","kind":"string","nativeSrc":"46462:34:24","nodeType":"YulLiteral","src":"46462:34:24","type":"","value":"accumulate rewards per stake ove"}],"functionName":{"name":"mstore","nativeSrc":"46439:6:24","nodeType":"YulIdentifier","src":"46439:6:24"},"nativeSrc":"46439:58:24","nodeType":"YulFunctionCall","src":"46439:58:24"},"nativeSrc":"46439:58:24","nodeType":"YulExpressionStatement","src":"46439:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"46518:6:24","nodeType":"YulIdentifier","src":"46518:6:24"},{"kind":"number","nativeSrc":"46526:2:24","nodeType":"YulLiteral","src":"46526:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"46514:3:24","nodeType":"YulIdentifier","src":"46514:3:24"},"nativeSrc":"46514:15:24","nodeType":"YulFunctionCall","src":"46514:15:24"},{"hexValue":"72666c6f77","kind":"string","nativeSrc":"46531:7:24","nodeType":"YulLiteral","src":"46531:7:24","type":"","value":"rflow"}],"functionName":{"name":"mstore","nativeSrc":"46507:6:24","nodeType":"YulIdentifier","src":"46507:6:24"},"nativeSrc":"46507:32:24","nodeType":"YulFunctionCall","src":"46507:32:24"},"nativeSrc":"46507:32:24","nodeType":"YulExpressionStatement","src":"46507:32:24"}]},"name":"store_literal_in_memory_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e","nativeSrc":"46322:224:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"46420:6:24","nodeType":"YulTypedName","src":"46420:6:24","type":""}],"src":"46322:224:24"},{"body":{"nativeSrc":"46698:220:24","nodeType":"YulBlock","src":"46698:220:24","statements":[{"nativeSrc":"46708:74:24","nodeType":"YulAssignment","src":"46708:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"46774:3:24","nodeType":"YulIdentifier","src":"46774:3:24"},{"kind":"number","nativeSrc":"46779:2:24","nodeType":"YulLiteral","src":"46779:2:24","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"46715:58:24","nodeType":"YulIdentifier","src":"46715:58:24"},"nativeSrc":"46715:67:24","nodeType":"YulFunctionCall","src":"46715:67:24"},"variableNames":[{"name":"pos","nativeSrc":"46708:3:24","nodeType":"YulIdentifier","src":"46708:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"46880:3:24","nodeType":"YulIdentifier","src":"46880:3:24"}],"functionName":{"name":"store_literal_in_memory_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e","nativeSrc":"46791:88:24","nodeType":"YulIdentifier","src":"46791:88:24"},"nativeSrc":"46791:93:24","nodeType":"YulFunctionCall","src":"46791:93:24"},"nativeSrc":"46791:93:24","nodeType":"YulExpressionStatement","src":"46791:93:24"},{"nativeSrc":"46893:19:24","nodeType":"YulAssignment","src":"46893:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"46904:3:24","nodeType":"YulIdentifier","src":"46904:3:24"},{"kind":"number","nativeSrc":"46909:2:24","nodeType":"YulLiteral","src":"46909:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"46900:3:24","nodeType":"YulIdentifier","src":"46900:3:24"},"nativeSrc":"46900:12:24","nodeType":"YulFunctionCall","src":"46900:12:24"},"variableNames":[{"name":"end","nativeSrc":"46893:3:24","nodeType":"YulIdentifier","src":"46893:3:24"}]}]},"name":"abi_encode_t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e_to_t_string_memory_ptr_fromStack","nativeSrc":"46552:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"46686:3:24","nodeType":"YulTypedName","src":"46686:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"46694:3:24","nodeType":"YulTypedName","src":"46694:3:24","type":""}],"src":"46552:366:24"},{"body":{"nativeSrc":"47095:248:24","nodeType":"YulBlock","src":"47095:248:24","statements":[{"nativeSrc":"47105:26:24","nodeType":"YulAssignment","src":"47105:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"47117:9:24","nodeType":"YulIdentifier","src":"47117:9:24"},{"kind":"number","nativeSrc":"47128:2:24","nodeType":"YulLiteral","src":"47128:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"47113:3:24","nodeType":"YulIdentifier","src":"47113:3:24"},"nativeSrc":"47113:18:24","nodeType":"YulFunctionCall","src":"47113:18:24"},"variableNames":[{"name":"tail","nativeSrc":"47105:4:24","nodeType":"YulIdentifier","src":"47105:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"47152:9:24","nodeType":"YulIdentifier","src":"47152:9:24"},{"kind":"number","nativeSrc":"47163:1:24","nodeType":"YulLiteral","src":"47163:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"47148:3:24","nodeType":"YulIdentifier","src":"47148:3:24"},"nativeSrc":"47148:17:24","nodeType":"YulFunctionCall","src":"47148:17:24"},{"arguments":[{"name":"tail","nativeSrc":"47171:4:24","nodeType":"YulIdentifier","src":"47171:4:24"},{"name":"headStart","nativeSrc":"47177:9:24","nodeType":"YulIdentifier","src":"47177:9:24"}],"functionName":{"name":"sub","nativeSrc":"47167:3:24","nodeType":"YulIdentifier","src":"47167:3:24"},"nativeSrc":"47167:20:24","nodeType":"YulFunctionCall","src":"47167:20:24"}],"functionName":{"name":"mstore","nativeSrc":"47141:6:24","nodeType":"YulIdentifier","src":"47141:6:24"},"nativeSrc":"47141:47:24","nodeType":"YulFunctionCall","src":"47141:47:24"},"nativeSrc":"47141:47:24","nodeType":"YulExpressionStatement","src":"47141:47:24"},{"nativeSrc":"47197:139:24","nodeType":"YulAssignment","src":"47197:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"47331:4:24","nodeType":"YulIdentifier","src":"47331:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e_to_t_string_memory_ptr_fromStack","nativeSrc":"47205:124:24","nodeType":"YulIdentifier","src":"47205:124:24"},"nativeSrc":"47205:131:24","nodeType":"YulFunctionCall","src":"47205:131:24"},"variableNames":[{"name":"tail","nativeSrc":"47197:4:24","nodeType":"YulIdentifier","src":"47197:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"46924:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"47075:9:24","nodeType":"YulTypedName","src":"47075:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"47090:4:24","nodeType":"YulTypedName","src":"47090:4:24","type":""}],"src":"46924:419:24"},{"body":{"nativeSrc":"47455:68:24","nodeType":"YulBlock","src":"47455:68:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"47477:6:24","nodeType":"YulIdentifier","src":"47477:6:24"},{"kind":"number","nativeSrc":"47485:1:24","nodeType":"YulLiteral","src":"47485:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"47473:3:24","nodeType":"YulIdentifier","src":"47473:3:24"},"nativeSrc":"47473:14:24","nodeType":"YulFunctionCall","src":"47473:14:24"},{"hexValue":"70656e64696e672072657761726473206f766572666c6f77","kind":"string","nativeSrc":"47489:26:24","nodeType":"YulLiteral","src":"47489:26:24","type":"","value":"pending rewards overflow"}],"functionName":{"name":"mstore","nativeSrc":"47466:6:24","nodeType":"YulIdentifier","src":"47466:6:24"},"nativeSrc":"47466:50:24","nodeType":"YulFunctionCall","src":"47466:50:24"},"nativeSrc":"47466:50:24","nodeType":"YulExpressionStatement","src":"47466:50:24"}]},"name":"store_literal_in_memory_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4","nativeSrc":"47349:174:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"47447:6:24","nodeType":"YulTypedName","src":"47447:6:24","type":""}],"src":"47349:174:24"},{"body":{"nativeSrc":"47675:220:24","nodeType":"YulBlock","src":"47675:220:24","statements":[{"nativeSrc":"47685:74:24","nodeType":"YulAssignment","src":"47685:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"47751:3:24","nodeType":"YulIdentifier","src":"47751:3:24"},{"kind":"number","nativeSrc":"47756:2:24","nodeType":"YulLiteral","src":"47756:2:24","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"47692:58:24","nodeType":"YulIdentifier","src":"47692:58:24"},"nativeSrc":"47692:67:24","nodeType":"YulFunctionCall","src":"47692:67:24"},"variableNames":[{"name":"pos","nativeSrc":"47685:3:24","nodeType":"YulIdentifier","src":"47685:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"47857:3:24","nodeType":"YulIdentifier","src":"47857:3:24"}],"functionName":{"name":"store_literal_in_memory_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4","nativeSrc":"47768:88:24","nodeType":"YulIdentifier","src":"47768:88:24"},"nativeSrc":"47768:93:24","nodeType":"YulFunctionCall","src":"47768:93:24"},"nativeSrc":"47768:93:24","nodeType":"YulExpressionStatement","src":"47768:93:24"},{"nativeSrc":"47870:19:24","nodeType":"YulAssignment","src":"47870:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"47881:3:24","nodeType":"YulIdentifier","src":"47881:3:24"},{"kind":"number","nativeSrc":"47886:2:24","nodeType":"YulLiteral","src":"47886:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"47877:3:24","nodeType":"YulIdentifier","src":"47877:3:24"},"nativeSrc":"47877:12:24","nodeType":"YulFunctionCall","src":"47877:12:24"},"variableNames":[{"name":"end","nativeSrc":"47870:3:24","nodeType":"YulIdentifier","src":"47870:3:24"}]}]},"name":"abi_encode_t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4_to_t_string_memory_ptr_fromStack","nativeSrc":"47529:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"47663:3:24","nodeType":"YulTypedName","src":"47663:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"47671:3:24","nodeType":"YulTypedName","src":"47671:3:24","type":""}],"src":"47529:366:24"},{"body":{"nativeSrc":"48072:248:24","nodeType":"YulBlock","src":"48072:248:24","statements":[{"nativeSrc":"48082:26:24","nodeType":"YulAssignment","src":"48082:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"48094:9:24","nodeType":"YulIdentifier","src":"48094:9:24"},{"kind":"number","nativeSrc":"48105:2:24","nodeType":"YulLiteral","src":"48105:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"48090:3:24","nodeType":"YulIdentifier","src":"48090:3:24"},"nativeSrc":"48090:18:24","nodeType":"YulFunctionCall","src":"48090:18:24"},"variableNames":[{"name":"tail","nativeSrc":"48082:4:24","nodeType":"YulIdentifier","src":"48082:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"48129:9:24","nodeType":"YulIdentifier","src":"48129:9:24"},{"kind":"number","nativeSrc":"48140:1:24","nodeType":"YulLiteral","src":"48140:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"48125:3:24","nodeType":"YulIdentifier","src":"48125:3:24"},"nativeSrc":"48125:17:24","nodeType":"YulFunctionCall","src":"48125:17:24"},{"arguments":[{"name":"tail","nativeSrc":"48148:4:24","nodeType":"YulIdentifier","src":"48148:4:24"},{"name":"headStart","nativeSrc":"48154:9:24","nodeType":"YulIdentifier","src":"48154:9:24"}],"functionName":{"name":"sub","nativeSrc":"48144:3:24","nodeType":"YulIdentifier","src":"48144:3:24"},"nativeSrc":"48144:20:24","nodeType":"YulFunctionCall","src":"48144:20:24"}],"functionName":{"name":"mstore","nativeSrc":"48118:6:24","nodeType":"YulIdentifier","src":"48118:6:24"},"nativeSrc":"48118:47:24","nodeType":"YulFunctionCall","src":"48118:47:24"},"nativeSrc":"48118:47:24","nodeType":"YulExpressionStatement","src":"48118:47:24"},{"nativeSrc":"48174:139:24","nodeType":"YulAssignment","src":"48174:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"48308:4:24","nodeType":"YulIdentifier","src":"48308:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4_to_t_string_memory_ptr_fromStack","nativeSrc":"48182:124:24","nodeType":"YulIdentifier","src":"48182:124:24"},"nativeSrc":"48182:131:24","nodeType":"YulFunctionCall","src":"48182:131:24"},"variableNames":[{"name":"tail","nativeSrc":"48174:4:24","nodeType":"YulIdentifier","src":"48174:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"47901:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"48052:9:24","nodeType":"YulTypedName","src":"48052:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"48067:4:24","nodeType":"YulTypedName","src":"48067:4:24","type":""}],"src":"47901:419:24"},{"body":{"nativeSrc":"48432:76:24","nodeType":"YulBlock","src":"48432:76:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"48454:6:24","nodeType":"YulIdentifier","src":"48454:6:24"},{"kind":"number","nativeSrc":"48462:1:24","nodeType":"YulLiteral","src":"48462:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"48450:3:24","nodeType":"YulIdentifier","src":"48450:3:24"},"nativeSrc":"48450:14:24","nodeType":"YulFunctionCall","src":"48450:14:24"},{"hexValue":"616363756d756c617465207374616b6520616d6f756e74206f766572666c6f77","kind":"string","nativeSrc":"48466:34:24","nodeType":"YulLiteral","src":"48466:34:24","type":"","value":"accumulate stake amount overflow"}],"functionName":{"name":"mstore","nativeSrc":"48443:6:24","nodeType":"YulIdentifier","src":"48443:6:24"},"nativeSrc":"48443:58:24","nodeType":"YulFunctionCall","src":"48443:58:24"},"nativeSrc":"48443:58:24","nodeType":"YulExpressionStatement","src":"48443:58:24"}]},"name":"store_literal_in_memory_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720","nativeSrc":"48326:182:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"48424:6:24","nodeType":"YulTypedName","src":"48424:6:24","type":""}],"src":"48326:182:24"},{"body":{"nativeSrc":"48660:220:24","nodeType":"YulBlock","src":"48660:220:24","statements":[{"nativeSrc":"48670:74:24","nodeType":"YulAssignment","src":"48670:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"48736:3:24","nodeType":"YulIdentifier","src":"48736:3:24"},{"kind":"number","nativeSrc":"48741:2:24","nodeType":"YulLiteral","src":"48741:2:24","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"48677:58:24","nodeType":"YulIdentifier","src":"48677:58:24"},"nativeSrc":"48677:67:24","nodeType":"YulFunctionCall","src":"48677:67:24"},"variableNames":[{"name":"pos","nativeSrc":"48670:3:24","nodeType":"YulIdentifier","src":"48670:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"48842:3:24","nodeType":"YulIdentifier","src":"48842:3:24"}],"functionName":{"name":"store_literal_in_memory_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720","nativeSrc":"48753:88:24","nodeType":"YulIdentifier","src":"48753:88:24"},"nativeSrc":"48753:93:24","nodeType":"YulFunctionCall","src":"48753:93:24"},"nativeSrc":"48753:93:24","nodeType":"YulExpressionStatement","src":"48753:93:24"},{"nativeSrc":"48855:19:24","nodeType":"YulAssignment","src":"48855:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"48866:3:24","nodeType":"YulIdentifier","src":"48866:3:24"},{"kind":"number","nativeSrc":"48871:2:24","nodeType":"YulLiteral","src":"48871:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"48862:3:24","nodeType":"YulIdentifier","src":"48862:3:24"},"nativeSrc":"48862:12:24","nodeType":"YulFunctionCall","src":"48862:12:24"},"variableNames":[{"name":"end","nativeSrc":"48855:3:24","nodeType":"YulIdentifier","src":"48855:3:24"}]}]},"name":"abi_encode_t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720_to_t_string_memory_ptr_fromStack","nativeSrc":"48514:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"48648:3:24","nodeType":"YulTypedName","src":"48648:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"48656:3:24","nodeType":"YulTypedName","src":"48656:3:24","type":""}],"src":"48514:366:24"},{"body":{"nativeSrc":"49057:248:24","nodeType":"YulBlock","src":"49057:248:24","statements":[{"nativeSrc":"49067:26:24","nodeType":"YulAssignment","src":"49067:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"49079:9:24","nodeType":"YulIdentifier","src":"49079:9:24"},{"kind":"number","nativeSrc":"49090:2:24","nodeType":"YulLiteral","src":"49090:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"49075:3:24","nodeType":"YulIdentifier","src":"49075:3:24"},"nativeSrc":"49075:18:24","nodeType":"YulFunctionCall","src":"49075:18:24"},"variableNames":[{"name":"tail","nativeSrc":"49067:4:24","nodeType":"YulIdentifier","src":"49067:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"49114:9:24","nodeType":"YulIdentifier","src":"49114:9:24"},{"kind":"number","nativeSrc":"49125:1:24","nodeType":"YulLiteral","src":"49125:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"49110:3:24","nodeType":"YulIdentifier","src":"49110:3:24"},"nativeSrc":"49110:17:24","nodeType":"YulFunctionCall","src":"49110:17:24"},{"arguments":[{"name":"tail","nativeSrc":"49133:4:24","nodeType":"YulIdentifier","src":"49133:4:24"},{"name":"headStart","nativeSrc":"49139:9:24","nodeType":"YulIdentifier","src":"49139:9:24"}],"functionName":{"name":"sub","nativeSrc":"49129:3:24","nodeType":"YulIdentifier","src":"49129:3:24"},"nativeSrc":"49129:20:24","nodeType":"YulFunctionCall","src":"49129:20:24"}],"functionName":{"name":"mstore","nativeSrc":"49103:6:24","nodeType":"YulIdentifier","src":"49103:6:24"},"nativeSrc":"49103:47:24","nodeType":"YulFunctionCall","src":"49103:47:24"},"nativeSrc":"49103:47:24","nodeType":"YulExpressionStatement","src":"49103:47:24"},{"nativeSrc":"49159:139:24","nodeType":"YulAssignment","src":"49159:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"49293:4:24","nodeType":"YulIdentifier","src":"49293:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720_to_t_string_memory_ptr_fromStack","nativeSrc":"49167:124:24","nodeType":"YulIdentifier","src":"49167:124:24"},"nativeSrc":"49167:131:24","nodeType":"YulFunctionCall","src":"49167:131:24"},"variableNames":[{"name":"tail","nativeSrc":"49159:4:24","nodeType":"YulIdentifier","src":"49159:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"48886:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49037:9:24","nodeType":"YulTypedName","src":"49037:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"49052:4:24","nodeType":"YulTypedName","src":"49052:4:24","type":""}],"src":"48886:419:24"},{"body":{"nativeSrc":"49417:71:24","nodeType":"YulBlock","src":"49417:71:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"49439:6:24","nodeType":"YulIdentifier","src":"49439:6:24"},{"kind":"number","nativeSrc":"49447:1:24","nodeType":"YulLiteral","src":"49447:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"49435:3:24","nodeType":"YulIdentifier","src":"49435:3:24"},"nativeSrc":"49435:14:24","nodeType":"YulFunctionCall","src":"49435:14:24"},{"hexValue":"7374616b6520746f6b656e20616d6f756e74206f766572666c6f77","kind":"string","nativeSrc":"49451:29:24","nodeType":"YulLiteral","src":"49451:29:24","type":"","value":"stake token amount overflow"}],"functionName":{"name":"mstore","nativeSrc":"49428:6:24","nodeType":"YulIdentifier","src":"49428:6:24"},"nativeSrc":"49428:53:24","nodeType":"YulFunctionCall","src":"49428:53:24"},"nativeSrc":"49428:53:24","nodeType":"YulExpressionStatement","src":"49428:53:24"}]},"name":"store_literal_in_memory_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf","nativeSrc":"49311:177:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"49409:6:24","nodeType":"YulTypedName","src":"49409:6:24","type":""}],"src":"49311:177:24"},{"body":{"nativeSrc":"49640:220:24","nodeType":"YulBlock","src":"49640:220:24","statements":[{"nativeSrc":"49650:74:24","nodeType":"YulAssignment","src":"49650:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"49716:3:24","nodeType":"YulIdentifier","src":"49716:3:24"},{"kind":"number","nativeSrc":"49721:2:24","nodeType":"YulLiteral","src":"49721:2:24","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"49657:58:24","nodeType":"YulIdentifier","src":"49657:58:24"},"nativeSrc":"49657:67:24","nodeType":"YulFunctionCall","src":"49657:67:24"},"variableNames":[{"name":"pos","nativeSrc":"49650:3:24","nodeType":"YulIdentifier","src":"49650:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"49822:3:24","nodeType":"YulIdentifier","src":"49822:3:24"}],"functionName":{"name":"store_literal_in_memory_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf","nativeSrc":"49733:88:24","nodeType":"YulIdentifier","src":"49733:88:24"},"nativeSrc":"49733:93:24","nodeType":"YulFunctionCall","src":"49733:93:24"},"nativeSrc":"49733:93:24","nodeType":"YulExpressionStatement","src":"49733:93:24"},{"nativeSrc":"49835:19:24","nodeType":"YulAssignment","src":"49835:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"49846:3:24","nodeType":"YulIdentifier","src":"49846:3:24"},{"kind":"number","nativeSrc":"49851:2:24","nodeType":"YulLiteral","src":"49851:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"49842:3:24","nodeType":"YulIdentifier","src":"49842:3:24"},"nativeSrc":"49842:12:24","nodeType":"YulFunctionCall","src":"49842:12:24"},"variableNames":[{"name":"end","nativeSrc":"49835:3:24","nodeType":"YulIdentifier","src":"49835:3:24"}]}]},"name":"abi_encode_t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf_to_t_string_memory_ptr_fromStack","nativeSrc":"49494:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"49628:3:24","nodeType":"YulTypedName","src":"49628:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"49636:3:24","nodeType":"YulTypedName","src":"49636:3:24","type":""}],"src":"49494:366:24"},{"body":{"nativeSrc":"50037:248:24","nodeType":"YulBlock","src":"50037:248:24","statements":[{"nativeSrc":"50047:26:24","nodeType":"YulAssignment","src":"50047:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"50059:9:24","nodeType":"YulIdentifier","src":"50059:9:24"},{"kind":"number","nativeSrc":"50070:2:24","nodeType":"YulLiteral","src":"50070:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"50055:3:24","nodeType":"YulIdentifier","src":"50055:3:24"},"nativeSrc":"50055:18:24","nodeType":"YulFunctionCall","src":"50055:18:24"},"variableNames":[{"name":"tail","nativeSrc":"50047:4:24","nodeType":"YulIdentifier","src":"50047:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"50094:9:24","nodeType":"YulIdentifier","src":"50094:9:24"},{"kind":"number","nativeSrc":"50105:1:24","nodeType":"YulLiteral","src":"50105:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"50090:3:24","nodeType":"YulIdentifier","src":"50090:3:24"},"nativeSrc":"50090:17:24","nodeType":"YulFunctionCall","src":"50090:17:24"},{"arguments":[{"name":"tail","nativeSrc":"50113:4:24","nodeType":"YulIdentifier","src":"50113:4:24"},{"name":"headStart","nativeSrc":"50119:9:24","nodeType":"YulIdentifier","src":"50119:9:24"}],"functionName":{"name":"sub","nativeSrc":"50109:3:24","nodeType":"YulIdentifier","src":"50109:3:24"},"nativeSrc":"50109:20:24","nodeType":"YulFunctionCall","src":"50109:20:24"}],"functionName":{"name":"mstore","nativeSrc":"50083:6:24","nodeType":"YulIdentifier","src":"50083:6:24"},"nativeSrc":"50083:47:24","nodeType":"YulFunctionCall","src":"50083:47:24"},"nativeSrc":"50083:47:24","nodeType":"YulExpressionStatement","src":"50083:47:24"},{"nativeSrc":"50139:139:24","nodeType":"YulAssignment","src":"50139:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"50273:4:24","nodeType":"YulIdentifier","src":"50273:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf_to_t_string_memory_ptr_fromStack","nativeSrc":"50147:124:24","nodeType":"YulIdentifier","src":"50147:124:24"},"nativeSrc":"50147:131:24","nodeType":"YulFunctionCall","src":"50147:131:24"},"variableNames":[{"name":"tail","nativeSrc":"50139:4:24","nodeType":"YulIdentifier","src":"50139:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"49866:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"50017:9:24","nodeType":"YulTypedName","src":"50017:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"50032:4:24","nodeType":"YulTypedName","src":"50032:4:24","type":""}],"src":"49866:419:24"},{"body":{"nativeSrc":"50397:119:24","nodeType":"YulBlock","src":"50397:119:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"50419:6:24","nodeType":"YulIdentifier","src":"50419:6:24"},{"kind":"number","nativeSrc":"50427:1:24","nodeType":"YulLiteral","src":"50427:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"50415:3:24","nodeType":"YulIdentifier","src":"50415:3:24"},"nativeSrc":"50415:14:24","nodeType":"YulFunctionCall","src":"50415:14:24"},{"hexValue":"75736572207374416d6f756e74206d756c206163635243435065725354206f76","kind":"string","nativeSrc":"50431:34:24","nodeType":"YulLiteral","src":"50431:34:24","type":"","value":"user stAmount mul accRCCPerST ov"}],"functionName":{"name":"mstore","nativeSrc":"50408:6:24","nodeType":"YulIdentifier","src":"50408:6:24"},"nativeSrc":"50408:58:24","nodeType":"YulFunctionCall","src":"50408:58:24"},"nativeSrc":"50408:58:24","nodeType":"YulExpressionStatement","src":"50408:58:24"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"50487:6:24","nodeType":"YulIdentifier","src":"50487:6:24"},{"kind":"number","nativeSrc":"50495:2:24","nodeType":"YulLiteral","src":"50495:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"50483:3:24","nodeType":"YulIdentifier","src":"50483:3:24"},"nativeSrc":"50483:15:24","nodeType":"YulFunctionCall","src":"50483:15:24"},{"hexValue":"6572666c6f77","kind":"string","nativeSrc":"50500:8:24","nodeType":"YulLiteral","src":"50500:8:24","type":"","value":"erflow"}],"functionName":{"name":"mstore","nativeSrc":"50476:6:24","nodeType":"YulIdentifier","src":"50476:6:24"},"nativeSrc":"50476:33:24","nodeType":"YulFunctionCall","src":"50476:33:24"},"nativeSrc":"50476:33:24","nodeType":"YulExpressionStatement","src":"50476:33:24"}]},"name":"store_literal_in_memory_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5","nativeSrc":"50291:225:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"50389:6:24","nodeType":"YulTypedName","src":"50389:6:24","type":""}],"src":"50291:225:24"},{"body":{"nativeSrc":"50668:220:24","nodeType":"YulBlock","src":"50668:220:24","statements":[{"nativeSrc":"50678:74:24","nodeType":"YulAssignment","src":"50678:74:24","value":{"arguments":[{"name":"pos","nativeSrc":"50744:3:24","nodeType":"YulIdentifier","src":"50744:3:24"},{"kind":"number","nativeSrc":"50749:2:24","nodeType":"YulLiteral","src":"50749:2:24","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"50685:58:24","nodeType":"YulIdentifier","src":"50685:58:24"},"nativeSrc":"50685:67:24","nodeType":"YulFunctionCall","src":"50685:67:24"},"variableNames":[{"name":"pos","nativeSrc":"50678:3:24","nodeType":"YulIdentifier","src":"50678:3:24"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"50850:3:24","nodeType":"YulIdentifier","src":"50850:3:24"}],"functionName":{"name":"store_literal_in_memory_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5","nativeSrc":"50761:88:24","nodeType":"YulIdentifier","src":"50761:88:24"},"nativeSrc":"50761:93:24","nodeType":"YulFunctionCall","src":"50761:93:24"},"nativeSrc":"50761:93:24","nodeType":"YulExpressionStatement","src":"50761:93:24"},{"nativeSrc":"50863:19:24","nodeType":"YulAssignment","src":"50863:19:24","value":{"arguments":[{"name":"pos","nativeSrc":"50874:3:24","nodeType":"YulIdentifier","src":"50874:3:24"},{"kind":"number","nativeSrc":"50879:2:24","nodeType":"YulLiteral","src":"50879:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"50870:3:24","nodeType":"YulIdentifier","src":"50870:3:24"},"nativeSrc":"50870:12:24","nodeType":"YulFunctionCall","src":"50870:12:24"},"variableNames":[{"name":"end","nativeSrc":"50863:3:24","nodeType":"YulIdentifier","src":"50863:3:24"}]}]},"name":"abi_encode_t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5_to_t_string_memory_ptr_fromStack","nativeSrc":"50522:366:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"50656:3:24","nodeType":"YulTypedName","src":"50656:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"50664:3:24","nodeType":"YulTypedName","src":"50664:3:24","type":""}],"src":"50522:366:24"},{"body":{"nativeSrc":"51065:248:24","nodeType":"YulBlock","src":"51065:248:24","statements":[{"nativeSrc":"51075:26:24","nodeType":"YulAssignment","src":"51075:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"51087:9:24","nodeType":"YulIdentifier","src":"51087:9:24"},{"kind":"number","nativeSrc":"51098:2:24","nodeType":"YulLiteral","src":"51098:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"51083:3:24","nodeType":"YulIdentifier","src":"51083:3:24"},"nativeSrc":"51083:18:24","nodeType":"YulFunctionCall","src":"51083:18:24"},"variableNames":[{"name":"tail","nativeSrc":"51075:4:24","nodeType":"YulIdentifier","src":"51075:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"51122:9:24","nodeType":"YulIdentifier","src":"51122:9:24"},{"kind":"number","nativeSrc":"51133:1:24","nodeType":"YulLiteral","src":"51133:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"51118:3:24","nodeType":"YulIdentifier","src":"51118:3:24"},"nativeSrc":"51118:17:24","nodeType":"YulFunctionCall","src":"51118:17:24"},{"arguments":[{"name":"tail","nativeSrc":"51141:4:24","nodeType":"YulIdentifier","src":"51141:4:24"},{"name":"headStart","nativeSrc":"51147:9:24","nodeType":"YulIdentifier","src":"51147:9:24"}],"functionName":{"name":"sub","nativeSrc":"51137:3:24","nodeType":"YulIdentifier","src":"51137:3:24"},"nativeSrc":"51137:20:24","nodeType":"YulFunctionCall","src":"51137:20:24"}],"functionName":{"name":"mstore","nativeSrc":"51111:6:24","nodeType":"YulIdentifier","src":"51111:6:24"},"nativeSrc":"51111:47:24","nodeType":"YulFunctionCall","src":"51111:47:24"},"nativeSrc":"51111:47:24","nodeType":"YulExpressionStatement","src":"51111:47:24"},{"nativeSrc":"51167:139:24","nodeType":"YulAssignment","src":"51167:139:24","value":{"arguments":[{"name":"tail","nativeSrc":"51301:4:24","nodeType":"YulIdentifier","src":"51301:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5_to_t_string_memory_ptr_fromStack","nativeSrc":"51175:124:24","nodeType":"YulIdentifier","src":"51175:124:24"},"nativeSrc":"51175:131:24","nodeType":"YulFunctionCall","src":"51175:131:24"},"variableNames":[{"name":"tail","nativeSrc":"51167:4:24","nodeType":"YulIdentifier","src":"51167:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"50894:419:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"51045:9:24","nodeType":"YulTypedName","src":"51045:9:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"51060:4:24","nodeType":"YulTypedName","src":"51060:4:24","type":""}],"src":"50894:419:24"},{"body":{"nativeSrc":"51445:206:24","nodeType":"YulBlock","src":"51445:206:24","statements":[{"nativeSrc":"51455:26:24","nodeType":"YulAssignment","src":"51455:26:24","value":{"arguments":[{"name":"headStart","nativeSrc":"51467:9:24","nodeType":"YulIdentifier","src":"51467:9:24"},{"kind":"number","nativeSrc":"51478:2:24","nodeType":"YulLiteral","src":"51478:2:24","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"51463:3:24","nodeType":"YulIdentifier","src":"51463:3:24"},"nativeSrc":"51463:18:24","nodeType":"YulFunctionCall","src":"51463:18:24"},"variableNames":[{"name":"tail","nativeSrc":"51455:4:24","nodeType":"YulIdentifier","src":"51455:4:24"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"51535:6:24","nodeType":"YulIdentifier","src":"51535:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"51548:9:24","nodeType":"YulIdentifier","src":"51548:9:24"},{"kind":"number","nativeSrc":"51559:1:24","nodeType":"YulLiteral","src":"51559:1:24","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"51544:3:24","nodeType":"YulIdentifier","src":"51544:3:24"},"nativeSrc":"51544:17:24","nodeType":"YulFunctionCall","src":"51544:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"51491:43:24","nodeType":"YulIdentifier","src":"51491:43:24"},"nativeSrc":"51491:71:24","nodeType":"YulFunctionCall","src":"51491:71:24"},"nativeSrc":"51491:71:24","nodeType":"YulExpressionStatement","src":"51491:71:24"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"51616:6:24","nodeType":"YulIdentifier","src":"51616:6:24"},{"arguments":[{"name":"headStart","nativeSrc":"51629:9:24","nodeType":"YulIdentifier","src":"51629:9:24"},{"kind":"number","nativeSrc":"51640:2:24","nodeType":"YulLiteral","src":"51640:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"51625:3:24","nodeType":"YulIdentifier","src":"51625:3:24"},"nativeSrc":"51625:18:24","nodeType":"YulFunctionCall","src":"51625:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"51572:43:24","nodeType":"YulIdentifier","src":"51572:43:24"},"nativeSrc":"51572:72:24","nodeType":"YulFunctionCall","src":"51572:72:24"},"nativeSrc":"51572:72:24","nodeType":"YulExpressionStatement","src":"51572:72:24"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"51319:332:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"51409:9:24","nodeType":"YulTypedName","src":"51409:9:24","type":""},{"name":"value1","nativeSrc":"51421:6:24","nodeType":"YulTypedName","src":"51421:6:24","type":""},{"name":"value0","nativeSrc":"51429:6:24","nodeType":"YulTypedName","src":"51429:6:24","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"51440:4:24","nodeType":"YulTypedName","src":"51440:4:24","type":""}],"src":"51319:332:24"},{"body":{"nativeSrc":"51715:40:24","nodeType":"YulBlock","src":"51715:40:24","statements":[{"nativeSrc":"51726:22:24","nodeType":"YulAssignment","src":"51726:22:24","value":{"arguments":[{"name":"value","nativeSrc":"51742:5:24","nodeType":"YulIdentifier","src":"51742:5:24"}],"functionName":{"name":"mload","nativeSrc":"51736:5:24","nodeType":"YulIdentifier","src":"51736:5:24"},"nativeSrc":"51736:12:24","nodeType":"YulFunctionCall","src":"51736:12:24"},"variableNames":[{"name":"length","nativeSrc":"51726:6:24","nodeType":"YulIdentifier","src":"51726:6:24"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"51657:98:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"51698:5:24","nodeType":"YulTypedName","src":"51698:5:24","type":""}],"returnVariables":[{"name":"length","nativeSrc":"51708:6:24","nodeType":"YulTypedName","src":"51708:6:24","type":""}],"src":"51657:98:24"},{"body":{"nativeSrc":"51869:278:24","nodeType":"YulBlock","src":"51869:278:24","statements":[{"nativeSrc":"51879:52:24","nodeType":"YulVariableDeclaration","src":"51879:52:24","value":{"arguments":[{"name":"value","nativeSrc":"51925:5:24","nodeType":"YulIdentifier","src":"51925:5:24"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"51893:31:24","nodeType":"YulIdentifier","src":"51893:31:24"},"nativeSrc":"51893:38:24","nodeType":"YulFunctionCall","src":"51893:38:24"},"variables":[{"name":"length","nativeSrc":"51883:6:24","nodeType":"YulTypedName","src":"51883:6:24","type":""}]},{"nativeSrc":"51940:95:24","nodeType":"YulAssignment","src":"51940:95:24","value":{"arguments":[{"name":"pos","nativeSrc":"52023:3:24","nodeType":"YulIdentifier","src":"52023:3:24"},{"name":"length","nativeSrc":"52028:6:24","nodeType":"YulIdentifier","src":"52028:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"51947:75:24","nodeType":"YulIdentifier","src":"51947:75:24"},"nativeSrc":"51947:88:24","nodeType":"YulFunctionCall","src":"51947:88:24"},"variableNames":[{"name":"pos","nativeSrc":"51940:3:24","nodeType":"YulIdentifier","src":"51940:3:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"52083:5:24","nodeType":"YulIdentifier","src":"52083:5:24"},{"kind":"number","nativeSrc":"52090:4:24","nodeType":"YulLiteral","src":"52090:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"52079:3:24","nodeType":"YulIdentifier","src":"52079:3:24"},"nativeSrc":"52079:16:24","nodeType":"YulFunctionCall","src":"52079:16:24"},{"name":"pos","nativeSrc":"52097:3:24","nodeType":"YulIdentifier","src":"52097:3:24"},{"name":"length","nativeSrc":"52102:6:24","nodeType":"YulIdentifier","src":"52102:6:24"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"52044:34:24","nodeType":"YulIdentifier","src":"52044:34:24"},"nativeSrc":"52044:65:24","nodeType":"YulFunctionCall","src":"52044:65:24"},"nativeSrc":"52044:65:24","nodeType":"YulExpressionStatement","src":"52044:65:24"},{"nativeSrc":"52118:23:24","nodeType":"YulAssignment","src":"52118:23:24","value":{"arguments":[{"name":"pos","nativeSrc":"52129:3:24","nodeType":"YulIdentifier","src":"52129:3:24"},{"name":"length","nativeSrc":"52134:6:24","nodeType":"YulIdentifier","src":"52134:6:24"}],"functionName":{"name":"add","nativeSrc":"52125:3:24","nodeType":"YulIdentifier","src":"52125:3:24"},"nativeSrc":"52125:16:24","nodeType":"YulFunctionCall","src":"52125:16:24"},"variableNames":[{"name":"end","nativeSrc":"52118:3:24","nodeType":"YulIdentifier","src":"52118:3:24"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"51761:386:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"51850:5:24","nodeType":"YulTypedName","src":"51850:5:24","type":""},{"name":"pos","nativeSrc":"51857:3:24","nodeType":"YulTypedName","src":"51857:3:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"51865:3:24","nodeType":"YulTypedName","src":"51865:3:24","type":""}],"src":"51761:386:24"},{"body":{"nativeSrc":"52287:137:24","nodeType":"YulBlock","src":"52287:137:24","statements":[{"nativeSrc":"52298:100:24","nodeType":"YulAssignment","src":"52298:100:24","value":{"arguments":[{"name":"value0","nativeSrc":"52385:6:24","nodeType":"YulIdentifier","src":"52385:6:24"},{"name":"pos","nativeSrc":"52394:3:24","nodeType":"YulIdentifier","src":"52394:3:24"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"52305:79:24","nodeType":"YulIdentifier","src":"52305:79:24"},"nativeSrc":"52305:93:24","nodeType":"YulFunctionCall","src":"52305:93:24"},"variableNames":[{"name":"pos","nativeSrc":"52298:3:24","nodeType":"YulIdentifier","src":"52298:3:24"}]},{"nativeSrc":"52408:10:24","nodeType":"YulAssignment","src":"52408:10:24","value":{"name":"pos","nativeSrc":"52415:3:24","nodeType":"YulIdentifier","src":"52415:3:24"},"variableNames":[{"name":"end","nativeSrc":"52408:3:24","nodeType":"YulIdentifier","src":"52408:3:24"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"52153:271:24","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"52266:3:24","nodeType":"YulTypedName","src":"52266:3:24","type":""},{"name":"value0","nativeSrc":"52272:6:24","nodeType":"YulTypedName","src":"52272:6:24","type":""}],"returnVariables":[{"name":"end","nativeSrc":"52283:3:24","nodeType":"YulTypedName","src":"52283:3:24","type":""}],"src":"52153:271:24"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1646_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1646_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1646_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1646__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1646_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$1646(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$1646(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1646(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$1646(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$1646(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1646t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1646(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1646(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1646(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid pid\")\n\n    }\n\n    function abi_encode_t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7fef661b28ed06548c398863f4b91546009eeb64708e245e24ecb3036d4a8ef9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw is paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8847135b6debc7c1eafac36ac99118b29a6fb5f9a7ddd35117a1a1cbd9726cf0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"claim is paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2cb819e85b42d1af7e03c2bf371ce8994a92d29afe7189e4fe80244e165de4aa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347(memPtr) {\n\n        mstore(add(memPtr, 0), \"start block must be less than en\")\n\n        mstore(add(memPtr, 32), \"d block\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa3b1b455994c772103720fe4af39fa85fd5e0bb21160c2796388932b5310347_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"rcc per block must be greater th\")\n\n        mstore(add(memPtr, 32), \"an 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d92c4bedf0f8a736f7b94135ed3a68f6f157159c8453e444b20318d8a73b53e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw has already been unpaus\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2446a3d6116532b31ce40c603e0d6b435ef4d8f18a0d70bc5598d83bfc69d81_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid range\")\n\n    }\n\n    function abi_encode_t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f3fae4826f8aadc7f0c47e642bd6af17f22768676b4ccf985afe5a9036bbb0aa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524(memPtr) {\n\n        mstore(add(memPtr, 0), \"multiplier overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed2e4e3e8183911497c31787bf926a0a28f588c80d7b5cd43f0245e266203524_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"claim has already been unpaused\")\n\n    }\n\n    function abi_encode_t_stringliteral_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d158bb4c4a873328703d9f96acee0c7cbc5aa5c8a37379fa0d89c3f5b17533e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient staking amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2608770faecede1f30455c24f1fa92237c86e65e487239fa134801376becdb3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"the first pool must be ETH pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_023d143451915e8800f9cd4ecc09482036d395481d5a2746dc81275d1c6010fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid withdraw locked blocks\")\n\n    }\n\n    function abi_encode_t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b7066b7b5e6aa38bfde2b25d6c89f9adc8bdd52b86ec783332ae07b135f9e691_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97(memPtr) {\n\n        mstore(add(memPtr, 0), \"already ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f353648e56e52a96e32b01f35f7e8f7415e3da2ffe61be632639ddca8cd01b97_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw has already been paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_032eec8ef424d9cddb2a17161f33c064bf9b2808ae59b77861fa513a1188881d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid pool id\")\n\n    }\n\n    function abi_encode_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757(memPtr) {\n\n        mstore(add(memPtr, 0), \"deposit not support ETH staking\")\n\n    }\n\n    function abi_encode_t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0403c4f680248fdfb745a85337b5a4524b3e71ceadaae1f0400d2b6ea40ef757_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid deposit amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH pool must be created first\")\n\n    }\n\n    function abi_encode_t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5108cbdeb69dfa61c00b3896407f196c16b05041002cd65304086ae5fd7b0d10_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid pool weight\")\n\n    }\n\n    function abi_encode_t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5eaee1646c5d50c7be460663f077ce3c45defb0cd14a329ae1af12b6c3b7afe1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH transfer call failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_33d21c5963e08c7586567b1f1dd9a7067fc4580092a1f041993a4b04d74a5a7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH transfer operation did not s\")\n\n        mstore(add(memPtr, 32), \"ucceed\")\n\n    }\n\n    function abi_encode_t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_214264a3b9ec505492dd0ac654c81aa3edc6cab1470aeea7cd5ffdd1906108e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c(memPtr) {\n\n        mstore(add(memPtr, 0), \"user stake amount overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5f0182844d2b5eea26d8a1771f4e74be25d2e13db836948c4d836a1c8c7f176c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e(memPtr) {\n\n        mstore(add(memPtr, 0), \"accumulate rewards per stake ove\")\n\n        mstore(add(memPtr, 32), \"rflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_250ea6768d08d3fcfc4030a7fd1df651fb17e83fc76d25531960a39c1a783c5e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"pending rewards overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cec6de26b04936e09f885a2a936b81663115b78192464a1874f6365097ddc0a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720(memPtr) {\n\n        mstore(add(memPtr, 0), \"accumulate stake amount overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_498af64234f015b6fbd0ccb24c8030a3dfcaedceef4b8cba7227b9e710db9720_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"stake token amount overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67278b7c54264718265d7be3a39ea80062cdb60e78e22d14c0acb84513f0a6bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5(memPtr) {\n\n        mstore(add(memPtr, 0), \"user stAmount mul accRCCPerST ov\")\n\n        mstore(add(memPtr, 32), \"erflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b484ecfaec3bbb5a1e40fba320d299f82835797dc560ba15f2cfe82d958ea3e5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":24,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"636":[{"length":32,"start":14771},{"length":32,"start":14856},{"length":32,"start":15518}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2FF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E2C8A5B GT PUSH2 0x190 JUMPI DUP1 PUSH4 0xBFC3EBBA GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xE2BBB158 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF6326FB3 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0xB41 JUMPI DUP1 PUSH4 0xFAD07ECE EQ PUSH2 0xB4B JUMPI DUP1 PUSH4 0xFE313112 EQ PUSH2 0xB74 JUMPI DUP1 PUSH4 0xFF423357 EQ PUSH2 0xBB7 JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0xAC6 JUMPI DUP1 PUSH4 0xF35E4A6E EQ PUSH2 0xAEF JUMPI DUP1 PUSH4 0xF5485D32 EQ PUSH2 0xB18 JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0xBFC3EBBA EQ PUSH2 0x9F2 JUMPI DUP1 PUSH4 0xC397920E EQ PUSH2 0xA1D JUMPI DUP1 PUSH4 0xC713AA94 EQ PUSH2 0xA34 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xA5D JUMPI DUP1 PUSH4 0xD86C0444 EQ PUSH2 0xA86 JUMPI DUP1 PUSH4 0xDE065CAA EQ PUSH2 0xAAF JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0xAB5E124A GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xB3944D52 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xB3944D52 EQ PUSH2 0x94A JUMPI DUP1 PUSH4 0xB6D9D919 EQ PUSH2 0x975 JUMPI DUP1 PUSH4 0xB908AFA8 EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0xBED66C08 EQ PUSH2 0x9C9 JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0xAB5E124A EQ PUSH2 0x8B1 JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x8DC JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x91F JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x9E2C8A5B EQ PUSH2 0x78B JUMPI DUP1 PUSH4 0xA17BFF83 EQ PUSH2 0x7B4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x7DF JUMPI DUP1 PUSH4 0xA27D9279 EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0xA72D5BF4 EQ PUSH2 0x847 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x872 JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x48CD4CB1 GT PUSH2 0x24F JUMPI DUP1 PUSH4 0x6155E3DE GT PUSH2 0x208 JUMPI DUP1 PUSH4 0x75B238FC GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x6FA JUMPI DUP1 PUSH4 0x8FF095F9 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x74E JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x6155E3DE EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0x70FF0173 EQ PUSH2 0x6A4 JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0x4EC81AF1 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x620 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x64B JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x2BC JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x296 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x37849B3C EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0x41721AB7 EQ PUSH2 0x54A JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x2F3FFB9F EQ PUSH2 0x48E JUMPI PUSH2 0x2FF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x2559004 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x83C6323 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x11548234 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x23B6443E EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3FF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x46B3 JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x46FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x356 PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x47D4 JUMP JUMPDEST PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x4873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x426 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x48C4 JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x4948 JUMP JUMPDEST PUSH2 0x1129 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A3 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x46FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x4948 JUMP JUMPDEST PUSH2 0x115E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x47D4 JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x518 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4988 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x548 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x1210 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x571 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x49BF JUMP JUMPDEST PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59C PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x4A50 JUMP JUMPDEST PUSH2 0x157B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x4BFD JUMP JUMPDEST PUSH2 0x181C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x183B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x635 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x660 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x46FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68B PUSH2 0x1B86 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A2 PUSH2 0x1C49 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B9 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E4 PUSH2 0x1C7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x721 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x4C59 JUMP JUMPDEST PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x74C PUSH2 0x1DC6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x775 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x4948 JUMP JUMPDEST PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x782 SWAP2 SWAP1 PUSH2 0x46FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x4C59 JUMP JUMPDEST PUSH2 0x1F03 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C9 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F4 PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x801 SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x831 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82C SWAP2 SWAP1 PUSH2 0x47D4 JUMP JUMPDEST PUSH2 0x2218 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83E SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85C PUSH2 0x2276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x869 SWAP2 SWAP1 PUSH2 0x4873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x899 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x4C99 JUMP JUMPDEST PUSH2 0x229C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4988 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C6 PUSH2 0x22C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x46FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x903 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8FE SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x22D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x916 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x934 PUSH2 0x234B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x4DC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95F PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96C SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x997 SWAP2 SWAP1 PUSH2 0x4E11 JUMP JUMPDEST PUSH2 0x2391 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B3 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C0 SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x2732 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA07 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA32 PUSH2 0x27DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x28A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x4948 JUMP JUMPDEST PUSH2 0x2947 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAAD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x4E8C JUMP JUMPDEST PUSH2 0x2969 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC4 PUSH2 0x2AAC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE8 SWAP2 SWAP1 PUSH2 0x4C59 JUMP JUMPDEST PUSH2 0x2B6F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB16 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x2D21 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x4EDF JUMP JUMPDEST PUSH2 0x2DC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB49 PUSH2 0x2E9C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB72 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x4F0C JUMP JUMPDEST PUSH2 0x2FB8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBAE SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD9 SWAP2 SWAP1 PUSH2 0x47D4 JUMP JUMPDEST PUSH2 0x319D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBEC SWAP3 SWAP2 SWAP1 PUSH2 0x4F5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xC68 JUMPI POP PUSH2 0xC67 DUP3 PUSH2 0x32FE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBC SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD53 PUSH2 0x3368 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7E PUSH2 0x3390 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC5 SWAP1 PUSH2 0x5040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0xE16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0D SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xE2C JUMPI PUSH2 0xE2B PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xF24 JUMPI NUMBER DUP5 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEBC JUMPI PUSH2 0xEBB PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0xF24 JUMPI DUP4 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEEA JUMPI PUSH2 0xEE9 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP4 PUSH2 0xF07 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP3 POP DUP2 DUP1 PUSH2 0xF14 SWAP1 PUSH2 0x50F2 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE96 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP5 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP PUSH2 0xF3B SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xFB9 JUMPI DUP4 PUSH1 0x3 ADD DUP3 DUP3 PUSH2 0xF52 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF63 JUMPI PUSH2 0xF62 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD DUP5 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF87 JUMPI PUSH2 0xF86 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF28 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x100F JUMPI DUP4 PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH2 0xFD9 JUMPI PUSH2 0xFD8 PUSH2 0x516E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP SWAP1 SSTORE DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xFBD JUMP JUMPDEST POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x10D1 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1080 JUMPI PUSH2 0x107B CALLER DUP4 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x10CF CALLER DUP4 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x34E3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST NUMBER DUP7 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1119 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1132 DUP3 PUSH2 0xD48 JUMP JUMPDEST PUSH2 0x113B DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH2 0x1145 DUP4 DUP4 PUSH2 0x3576 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1166 PUSH2 0x3677 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D4 DUP3 DUP3 PUSH2 0x367F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x1218 PUSH2 0x3390 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x1260 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1257 SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A7 SWAP1 PUSH2 0x51E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x12C6 JUMPI PUSH2 0x12C5 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1333 DUP5 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x5209 JUMP JUMPDEST PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST PUSH2 0x1370 SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x139A JUMPI PUSH1 0x0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1399 CALLER DUP3 PUSH2 0x3781 JUMP JUMPDEST JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x13B7 SWAP2 SWAP1 PUSH2 0x5209 JUMP JUMPDEST PUSH2 0x13C1 SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1410 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1436 JUMPI PUSH2 0x1435 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD DUP7 LT DUP1 ISZERO PUSH2 0x14C0 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x1527 JUMPI PUSH1 0x0 PUSH2 0x14D5 DUP6 PUSH1 0x2 ADD SLOAD DUP9 PUSH2 0x1CA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP7 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x14EC SWAP2 SWAP1 PUSH2 0x5209 JUMP JUMPDEST PUSH2 0x14F6 SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST SWAP1 POP DUP3 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x150D SWAP2 SWAP1 PUSH2 0x5209 JUMP JUMPDEST PUSH2 0x1517 SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST DUP5 PUSH2 0x1522 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1554 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST PUSH2 0x155E SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1585 PUSH2 0x3975 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x15D3 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1608 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1616 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x164D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x169D JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP7 DUP9 GT ISZERO PUSH2 0x16E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D7 SWAP1 PUSH2 0x531D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 GT PUSH2 0x1723 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171A SWAP1 PUSH2 0x53AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x172B PUSH2 0x399D JUMP JUMPDEST PUSH2 0x1733 PUSH2 0x39A7 JUMP JUMPDEST PUSH2 0x1740 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0x3576 JUMP JUMPDEST POP PUSH2 0x176B PUSH32 0xF47FC0C09EBBFE308D89B8035681A1164B9882BCFD49EB89861067738A30F5AB CALLER PUSH2 0x3576 JUMP JUMPDEST POP PUSH2 0x1796 PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE CALLER PUSH2 0x3576 JUMP JUMPDEST POP PUSH2 0x17A0 DUP10 PUSH2 0x2DC8 JUMP JUMPDEST DUP8 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1811 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1808 SWAP2 SWAP1 PUSH2 0x541E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1824 PUSH2 0x39B1 JUMP JUMPDEST PUSH2 0x182D DUP3 PUSH2 0x3A97 JUMP JUMPDEST PUSH2 0x1837 DUP3 DUP3 PUSH2 0x3AC5 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x1883 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187A SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1899 JUMPI PUSH2 0x1898 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x18BA JUMPI POP PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x18DB JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1902 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x18F4 DUP7 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x3BE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1946 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193D SWAP1 PUSH2 0x5485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x195B PUSH1 0x4 SLOAD DUP3 PUSH2 0x3C37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x19A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199A SWAP1 PUSH2 0x5485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x0 DUP1 PUSH2 0x19D3 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x3BE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1A17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0E SWAP1 PUSH2 0x5485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A2A DUP4 DUP3 PUSH2 0x3C37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x1A72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A69 SWAP1 PUSH2 0x5485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A8C DUP4 DUP11 PUSH1 0x3 ADD SLOAD PUSH2 0x3C6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1AD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC7 SWAP1 PUSH2 0x5485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP10 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST NUMBER DUP6 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x2 ADD SLOAD DUP8 PUSH32 0xF5D2D72D9B25D6853AFD7D0554A113B705234B6A68BB36B7F143662994632411 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B1C SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B38 PUSH2 0x3C9C JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B6C PUSH2 0x3D23 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x1BB0 DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1BFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF6 SWAP1 PUSH2 0x5517 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x2523DFDAFA00190F21A4CBD0C25179C8DD3CB34A6C17FEA952ECCA8FA8332C0E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1C67 DUP2 PUSH2 0x183B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1C56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x1CE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CDE SWAP1 PUSH2 0x5583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD DUP4 LT ISZERO PUSH2 0x1CF7 JUMPI PUSH1 0x0 SLOAD SWAP3 POP JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x1D07 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH2 0x1D15 SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST GT PUSH2 0x1D55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D4C SWAP1 PUSH2 0x5583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D77 PUSH1 0x2 SLOAD DUP6 DUP6 PUSH2 0x1D69 SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST PUSH2 0x3BE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x1DBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB6 SWAP1 PUSH2 0x55EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x1DF0 DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E37 SWAP1 PUSH2 0x565B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x443BF540E8151617CD5C39A681CC35A5A22BE078B6F0CF16E5BD822B4C4B61FF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E95 PUSH2 0x3368 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F0B PUSH2 0x3390 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1F5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F52 SWAP1 PUSH2 0x5040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x1FA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F9A SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FB9 JUMPI PUSH2 0x1FB8 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x2064 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205B SWAP1 PUSH2 0x56C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x206D DUP6 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2091 SWAP2 SWAP1 PUSH2 0x5209 JUMP JUMPDEST PUSH2 0x209B SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST PUSH2 0x20A5 SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x20CC JUMPI DUP1 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20C4 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0x2158 JUMPI DUP5 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20E9 SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x6 ADD SLOAD NUMBER PUSH2 0x2115 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP JUMPDEST DUP5 DUP4 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x216C SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2190 SWAP2 SWAP1 PUSH2 0x5209 JUMP JUMPDEST PUSH2 0x219A SWAP2 SWAP1 PUSH2 0x527A JUMP JUMPDEST DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x21AD SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC80277265097707F6F12A4AC4C09D46C9926E2EEA2536F63616CB04D9FCAD7D6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x21FB SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x2262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2259 SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x226D DUP5 DUP5 NUMBER PUSH2 0x141F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x22E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x23BB DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x2483 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x23F6 JUMPI PUSH2 0x23F5 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x247E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2475 SWAP1 PUSH2 0x5733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24F3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24E9 SWAP1 PUSH2 0x5733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x2536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x252D SWAP1 PUSH2 0x579F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER LT PUSH2 0x257A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2571 SWAP1 PUSH2 0x580B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2589 JUMPI PUSH2 0x2588 PUSH2 0x1C49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD NUMBER GT PUSH2 0x259B JUMPI PUSH1 0x0 SLOAD PUSH2 0x259D JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP DUP6 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x25B1 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP DUP1 DUP7 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA296FCE13E7A0E622B3A892E66220C248337289483A3CFA4130CDE0CAA1346 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x26FD SWAP3 SWAP2 SWAP1 PUSH2 0x4F5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xF47FC0C09EBBFE308D89B8035681A1164B9882BCFD49EB89861067738A30F5AB DUP2 JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x275C DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x279F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2796 SWAP1 PUSH2 0x53AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x4C70925B625536DD633F6BD2D615C67FDDC2E7C63C31164047A981A0DF3FEE54 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x2806 DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284D SWAP1 PUSH2 0x5877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x27C975733BACECA09666FAE356A901E083676848AAF9710150079385DAAE743 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x28CA DUP2 PUSH2 0x3562 JUMP JUMPDEST DUP2 PUSH1 0x0 SLOAD GT ISZERO PUSH2 0x290F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2906 SWAP1 PUSH2 0x531D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x1132C5BACCB51DA3D049FABC819697DC845FA224AD59D9B555507D6446B40850 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2950 DUP3 PUSH2 0xD48 JUMP JUMPDEST PUSH2 0x2959 DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH2 0x2963 DUP4 DUP4 PUSH2 0x367F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x29B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A8 SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x29DB DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP6 LT PUSH2 0x2A22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A19 SWAP1 PUSH2 0x58E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2A37 JUMPI PUSH2 0x2A36 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2A61 JUMPI PUSH2 0x2A60 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP5 DUP7 PUSH32 0x30DFFDEDAA3E3B4849298233F7CD71D229956E875AB09270498C96B7CF9181FD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x2AD6 DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B1C SWAP1 PUSH2 0x565B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7C8FAF23A72A53EB5C2C466DC81386A58B2A27D0CC3C7C580A3C12E372BA313 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2BBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BB6 SWAP1 PUSH2 0x5040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x2C07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BFE SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SUB PUSH2 0x2C4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C41 SWAP1 PUSH2 0x594F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2C60 JUMPI PUSH2 0x2C5F PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP1 PUSH1 0x5 ADD SLOAD DUP4 GT PUSH2 0x2CB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CAD SWAP1 PUSH2 0x59BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x2D11 JUMPI PUSH2 0x2D10 CALLER ADDRESS DUP6 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D4B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x2D1B DUP5 DUP5 PUSH2 0x3DCD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x2D4B DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x2D90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D87 SWAP1 PUSH2 0x531D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x63B90B79F11A0F132BCB2C4A4DDD44ABDA45C1308A83B2919318DF7F5F8B7BE4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x2DF2 DUP2 PUSH2 0x3562 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x153AAE53B92218044BD5F43922617C6B253E50AC98A41B44C3ACB5625DED3488 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2EA4 PUSH2 0x3390 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x2EBB JUMPI PUSH2 0x2EBA PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F55 SWAP1 PUSH2 0x5A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP DUP2 PUSH1 0x5 ADD SLOAD DUP2 GT PUSH2 0x2FA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FA0 SWAP1 PUSH2 0x59BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FB4 PUSH1 0x0 DUP3 PUSH2 0x3DCD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x589D473BA17C0F47D494622893831497BAD25919B9AFB8E33E9521B8963FCCDE PUSH2 0x2FE2 DUP2 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP5 LT PUSH2 0x3029 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3020 SWAP1 PUSH2 0x58E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x306C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3063 SWAP1 PUSH2 0x5A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x307B JUMPI PUSH2 0x307A PUSH2 0x1C49 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x3090 JUMPI PUSH2 0x308F PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x30AF SWAP2 SWAP1 PUSH2 0x513A JUMP JUMPDEST PUSH2 0x30B9 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x30D4 JUMPI PUSH2 0x30D3 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH32 0x4B8FA3D6A87CB21D1BF4978BF60628AE358A28AC7F39DE1751A481C6DD957617 DUP5 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x311D SWAP3 SWAP2 SWAP1 PUSH2 0x4F5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x313B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x31E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31DF SWAP1 PUSH2 0x4FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x32F4 JUMPI NUMBER DUP3 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3265 JUMPI PUSH2 0x3264 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0x32B2 JUMPI DUP2 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3292 JUMPI PUSH2 0x3291 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 PUSH2 0x32AF SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP4 POP JUMPDEST DUP2 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x32C8 JUMPI PUSH2 0x32C7 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x32E5 SWAP2 SWAP1 PUSH2 0x50BE JUMP JUMPDEST SWAP5 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x323F JUMP JUMPDEST POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3398 PUSH2 0x1B61 JUMP JUMPDEST ISZERO PUSH2 0x33CF JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x33F8 SWAP1 PUSH2 0x5AE4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3435 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x343A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x347F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3476 SWAP1 PUSH2 0x5B45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x34DD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x349D SWAP2 SWAP1 PUSH2 0x5B7A JUMP JUMPDEST PUSH2 0x34DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34D3 SWAP1 PUSH2 0x5C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x355D DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3516 SWAP3 SWAP2 SWAP1 PUSH2 0x5C39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x4196 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3573 DUP2 PUSH2 0x356E PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x4238 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3581 PUSH2 0x3368 JUMP JUMPDEST SWAP1 POP PUSH2 0x358D DUP5 DUP5 PUSH2 0x1E8A JUMP JUMPDEST PUSH2 0x366B JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3607 PUSH2 0x3677 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x3671 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x368A PUSH2 0x3368 JUMP JUMPDEST SWAP1 POP PUSH2 0x3696 DUP5 DUP5 PUSH2 0x1E8A JUMP JUMPDEST ISZERO PUSH2 0x3775 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3711 PUSH2 0x3677 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x377B JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37DE SWAP2 SWAP1 PUSH2 0x5C62 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x37FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x381F SWAP2 SWAP1 PUSH2 0x5C92 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT PUSH2 0x38CE JUMPI PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3885 SWAP3 SWAP2 SWAP1 PUSH2 0x5C39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38C8 SWAP2 SWAP1 PUSH2 0x5B7A JUMP JUMPDEST POP PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x392B SWAP3 SWAP2 SWAP1 PUSH2 0x5C39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x394A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x396E SWAP2 SWAP1 PUSH2 0x5B7A JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39A5 PUSH2 0x4289 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x39AF PUSH2 0x4289 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3A5E JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A45 PUSH2 0x42C9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3A95 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0xF47FC0C09EBBFE308D89B8035681A1164B9882BCFD49EB89861067738A30F5AB PUSH2 0x3AC1 DUP2 PUSH2 0x3562 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3B2D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B2A SWAP2 SWAP1 PUSH2 0x5CD4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3B6E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B65 SWAP2 SWAP1 PUSH2 0x5C62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x3BD5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BCC SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BDF DUP4 DUP4 PUSH2 0x4320 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 SUB PUSH2 0x3BFC JUMPI PUSH1 0x1 PUSH1 0x0 SWAP2 POP SWAP2 POP PUSH2 0x3C30 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 MUL SWAP1 POP DUP4 DUP6 DUP3 DUP2 PUSH2 0x3C14 JUMPI PUSH2 0x3C13 PUSH2 0x524B JUMP JUMPDEST JUMPDEST DIV EQ PUSH2 0x3C27 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x3C30 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SUB PUSH2 0x3C4E JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x3C66 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x3C60 JUMPI PUSH2 0x3C5F PUSH2 0x524B JUMP JUMPDEST JUMPDEST DIV SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP6 ADD SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x3C8C JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x3C95 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D21 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3DC7 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3D80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5D01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x4196 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3DE3 JUMPI PUSH2 0x3DE2 PUSH2 0x5060 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x3E50 DUP5 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x3FF8 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3E7B DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x3BE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3EBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB6 SWAP1 PUSH2 0x5D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3EDA PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x3C37 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x3F22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F19 SWAP1 PUSH2 0x5E16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3F3C DUP6 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0x4393 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3F80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F77 SWAP1 PUSH2 0x5E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x3FF3 JUMPI PUSH1 0x0 DUP1 PUSH2 0x3FA3 DUP4 DUP9 PUSH1 0x2 ADD SLOAD PUSH2 0x3C6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3FE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FDE SWAP1 PUSH2 0x5E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP8 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x406B JUMPI PUSH1 0x0 DUP1 PUSH2 0x401B DUP4 PUSH1 0x0 ADD SLOAD DUP7 PUSH2 0x3BE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x405F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4056 SWAP1 PUSH2 0x5EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4085 DUP6 DUP6 PUSH1 0x4 ADD SLOAD PUSH2 0x3C6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x40C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C0 SWAP1 PUSH2 0x5F5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x40F0 DUP7 PUSH1 0x3 ADD SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x3BE4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x4134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x412B SWAP1 PUSH2 0x5FEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP8 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP10 PUSH1 0x40 MLOAD PUSH2 0x4184 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x41B9 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x41D4 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x41F0 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x4232 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4229 SWAP2 SWAP1 PUSH2 0x5C62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4242 DUP3 DUP3 PUSH2 0x1E8A JUMP JUMPDEST PUSH2 0x4285 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x427C SWAP3 SWAP2 SWAP1 PUSH2 0x600C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4291 PUSH2 0x43BB JUMP JUMPDEST PUSH2 0x42C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F7 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x43DB JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4329 DUP3 PUSH2 0x43E5 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x4386 JUMPI PUSH2 0x4380 DUP3 DUP3 PUSH2 0x44B2 JUMP JUMPDEST POP PUSH2 0x438F JUMP JUMPDEST PUSH2 0x438E PUSH2 0x4536 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x43AA JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x43B4 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 SUB SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43C5 PUSH2 0x3975 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x4441 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4438 SWAP2 SWAP1 PUSH2 0x5C62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x446E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x43DB JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x44DC SWAP2 SWAP1 PUSH2 0x6071 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4517 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x451C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x452C DUP6 DUP4 DUP4 PUSH2 0x4573 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x4571 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x4588 JUMPI PUSH2 0x4583 DUP3 PUSH2 0x4602 JUMP JUMPDEST PUSH2 0x45FA JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x45B0 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x45F2 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45E9 SWAP2 SWAP1 PUSH2 0x5C62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x45FB JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x4615 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4690 DUP2 PUSH2 0x465B JUMP JUMPDEST DUP2 EQ PUSH2 0x469B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46AD DUP2 PUSH2 0x4687 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46C9 JUMPI PUSH2 0x46C8 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x46D7 DUP5 DUP3 DUP6 ADD PUSH2 0x469E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x46F5 DUP2 PUSH2 0x46E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4710 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x46EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4729 DUP2 PUSH2 0x4716 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4744 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4720 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4753 DUP2 PUSH2 0x4716 JUMP JUMPDEST DUP2 EQ PUSH2 0x475E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4770 DUP2 PUSH2 0x474A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A1 DUP3 PUSH2 0x4776 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47B1 DUP2 PUSH2 0x4796 JUMP JUMPDEST DUP2 EQ PUSH2 0x47BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x47CE DUP2 PUSH2 0x47A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47EB JUMPI PUSH2 0x47EA PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x47F9 DUP6 DUP3 DUP7 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x480A DUP6 DUP3 DUP7 ADD PUSH2 0x47BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4839 PUSH2 0x4834 PUSH2 0x482F DUP5 PUSH2 0x4776 JUMP JUMPDEST PUSH2 0x4814 JUMP JUMPDEST PUSH2 0x4776 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x484B DUP3 PUSH2 0x481E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x485D DUP3 PUSH2 0x4840 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x486D DUP2 PUSH2 0x4852 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4888 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48A1 DUP2 PUSH2 0x488E JUMP JUMPDEST DUP2 EQ PUSH2 0x48AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48BE DUP2 PUSH2 0x4898 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48DA JUMPI PUSH2 0x48D9 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48E8 DUP5 DUP3 DUP6 ADD PUSH2 0x48AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48FA DUP2 PUSH2 0x488E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4915 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x48F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4931 JUMPI PUSH2 0x4930 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x493F DUP5 DUP3 DUP6 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x495F JUMPI PUSH2 0x495E PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x496D DUP6 DUP3 DUP7 ADD PUSH2 0x48AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x497E DUP6 DUP3 DUP7 ADD PUSH2 0x47BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x499D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x49AA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x49B7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4720 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x49D8 JUMPI PUSH2 0x49D7 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49E6 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x49F7 DUP7 DUP3 DUP8 ADD PUSH2 0x47BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4A08 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1D DUP3 PUSH2 0x4796 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A2D DUP2 PUSH2 0x4A12 JUMP JUMPDEST DUP2 EQ PUSH2 0x4A38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A4A DUP2 PUSH2 0x4A24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4A6A JUMPI PUSH2 0x4A69 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A78 DUP8 DUP3 DUP9 ADD PUSH2 0x4A3B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4A89 DUP8 DUP3 DUP9 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4A9A DUP8 DUP3 DUP9 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4AAB DUP8 DUP3 DUP9 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4B0A DUP3 PUSH2 0x4AC1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4B29 JUMPI PUSH2 0x4B28 PUSH2 0x4AD2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3C PUSH2 0x4647 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B48 DUP3 DUP3 PUSH2 0x4B01 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4B68 JUMPI PUSH2 0x4B67 PUSH2 0x4AD2 JUMP JUMPDEST JUMPDEST PUSH2 0x4B71 DUP3 PUSH2 0x4AC1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA0 PUSH2 0x4B9B DUP5 PUSH2 0x4B4D JUMP JUMPDEST PUSH2 0x4B32 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4BBC JUMPI PUSH2 0x4BBB PUSH2 0x4ABC JUMP JUMPDEST JUMPDEST PUSH2 0x4BC7 DUP5 DUP3 DUP6 PUSH2 0x4B7E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4BE4 JUMPI PUSH2 0x4BE3 PUSH2 0x4AB7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4BF4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C14 JUMPI PUSH2 0x4C13 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C22 DUP6 DUP3 DUP7 ADD PUSH2 0x47BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C43 JUMPI PUSH2 0x4C42 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST PUSH2 0x4C4F DUP6 DUP3 DUP7 ADD PUSH2 0x4BCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C70 JUMPI PUSH2 0x4C6F PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C7E DUP6 DUP3 DUP7 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4C8F DUP6 DUP3 DUP7 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4CAF JUMPI PUSH2 0x4CAE PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CBD DUP5 DUP3 DUP6 ADD PUSH2 0x47BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CCF DUP2 PUSH2 0x4796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x4CEA PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x4CC6 JUMP JUMPDEST PUSH2 0x4CF7 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x4D04 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x4D11 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x4D1E PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x4D2B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x4D38 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x4720 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D7E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D63 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D95 DUP3 PUSH2 0x4D44 JUMP JUMPDEST PUSH2 0x4D9F DUP2 DUP6 PUSH2 0x4D4F JUMP JUMPDEST SWAP4 POP PUSH2 0x4DAF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4D60 JUMP JUMPDEST PUSH2 0x4DB8 DUP2 PUSH2 0x4AC1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DDD DUP2 DUP5 PUSH2 0x4D8A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4DEE DUP2 PUSH2 0x46E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x4DF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E0B DUP2 PUSH2 0x4DE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4E2D JUMPI PUSH2 0x4E2C PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4E3B DUP9 DUP3 DUP10 ADD PUSH2 0x47BF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4E4C DUP9 DUP3 DUP10 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4E5D DUP9 DUP3 DUP10 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4E6E DUP9 DUP3 DUP10 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x4E7F DUP9 DUP3 DUP10 ADD PUSH2 0x4DFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4EA5 JUMPI PUSH2 0x4EA4 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4EB3 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4EC4 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4ED5 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EF5 JUMPI PUSH2 0x4EF4 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F03 DUP5 DUP3 DUP6 ADD PUSH2 0x4A3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4F25 JUMPI PUSH2 0x4F24 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F33 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4F44 DUP7 DUP3 DUP8 ADD PUSH2 0x4761 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4F55 DUP7 DUP3 DUP8 ADD PUSH2 0x4DFC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4F74 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4720 JUMP JUMPDEST PUSH2 0x4F81 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4720 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C696420706964000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FBE PUSH1 0xB DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x4FC9 DUP3 PUSH2 0x4F88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FED DUP2 PUSH2 0x4FB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7769746864726177206973207061757365640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x502A PUSH1 0x12 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5035 DUP3 PUSH2 0x4FF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5059 DUP2 PUSH2 0x501D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x50C9 DUP3 PUSH2 0x4716 JUMP JUMPDEST SWAP2 POP PUSH2 0x50D4 DUP4 PUSH2 0x4716 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x50EC JUMPI PUSH2 0x50EB PUSH2 0x508F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50FD DUP3 PUSH2 0x4716 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x512F JUMPI PUSH2 0x512E PUSH2 0x508F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5145 DUP3 PUSH2 0x4716 JUMP JUMPDEST SWAP2 POP PUSH2 0x5150 DUP4 PUSH2 0x4716 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5168 JUMPI PUSH2 0x5167 PUSH2 0x508F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x636C61696D206973207061757365640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D3 PUSH1 0xF DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x51DE DUP3 PUSH2 0x519D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5202 DUP2 PUSH2 0x51C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5214 DUP3 PUSH2 0x4716 JUMP JUMPDEST SWAP2 POP PUSH2 0x521F DUP4 PUSH2 0x4716 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x522D DUP2 PUSH2 0x4716 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x5244 JUMPI PUSH2 0x5243 PUSH2 0x508F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5285 DUP3 PUSH2 0x4716 JUMP JUMPDEST SWAP2 POP PUSH2 0x5290 DUP4 PUSH2 0x4716 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x52A0 JUMPI PUSH2 0x529F PUSH2 0x524B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x737461727420626C6F636B206D757374206265206C657373207468616E20656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420626C6F636B00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5307 PUSH1 0x27 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5312 DUP3 PUSH2 0x52AB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5336 DUP2 PUSH2 0x52FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7263632070657220626C6F636B206D7573742062652067726561746572207468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E203000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5399 PUSH1 0x24 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x53A4 DUP3 PUSH2 0x533D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53C8 DUP2 PUSH2 0x538C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5408 PUSH2 0x5403 PUSH2 0x53FE DUP5 PUSH2 0x53CF JUMP JUMPDEST PUSH2 0x4814 JUMP JUMPDEST PUSH2 0x53D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5418 DUP2 PUSH2 0x53ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5433 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x540F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F766572666C6F77000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x546F PUSH1 0x8 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x547A DUP3 PUSH2 0x5439 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x549E DUP2 PUSH2 0x5462 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77697468647261772068617320616C7265616479206265656E20756E70617573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5501 PUSH1 0x22 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x550C DUP3 PUSH2 0x54A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5530 DUP2 PUSH2 0x54F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C69642072616E676500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x556D PUSH1 0xD DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5578 DUP3 PUSH2 0x5537 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x559C DUP2 PUSH2 0x5560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D756C7469706C696572206F766572666C6F7700000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55D9 PUSH1 0x13 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x55E4 DUP3 PUSH2 0x55A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5608 DUP2 PUSH2 0x55CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x636C61696D2068617320616C7265616479206265656E20756E70617573656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5645 PUSH1 0x1F DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5650 DUP3 PUSH2 0x560F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5674 DUP2 PUSH2 0x5638 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E74207374616B696E6720616D6F756E740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56B1 PUSH1 0x1B DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x56BC DUP3 PUSH2 0x567B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x56E0 DUP2 PUSH2 0x56A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x74686520666972737420706F6F6C206D7573742062652045544820706F6F6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x571D PUSH1 0x1F DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5728 DUP3 PUSH2 0x56E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x574C DUP2 PUSH2 0x5710 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C6964207769746864726177206C6F636B656420626C6F636B730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5789 PUSH1 0x1E DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5794 DUP3 PUSH2 0x5753 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x57B8 DUP2 PUSH2 0x577C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C726561647920656E64656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57F5 PUSH1 0xD DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5800 DUP3 PUSH2 0x57BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5824 DUP2 PUSH2 0x57E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77697468647261772068617320616C7265616479206265656E20706175736564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5861 PUSH1 0x20 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x586C DUP3 PUSH2 0x582B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5890 DUP2 PUSH2 0x5854 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420706F6F6C2069640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58CD PUSH1 0xF DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x58D8 DUP3 PUSH2 0x5897 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x58FC DUP2 PUSH2 0x58C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6465706F736974206E6F7420737570706F727420455448207374616B696E6700 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5939 PUSH1 0x1F DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5944 DUP3 PUSH2 0x5903 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5968 DUP2 PUSH2 0x592C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C6964206465706F73697420616D6F756E7400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59A5 PUSH1 0x16 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x59B0 DUP3 PUSH2 0x596F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x59D4 DUP2 PUSH2 0x5998 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45544820706F6F6C206D75737420626520637265617465642066697273740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A11 PUSH1 0x1E DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5A1C DUP3 PUSH2 0x59DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A40 DUP2 PUSH2 0x5A04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420706F6F6C2077656967687400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7D PUSH1 0x13 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5A88 DUP3 PUSH2 0x5A47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5AAC DUP2 PUSH2 0x5A70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ACE PUSH1 0x0 DUP4 PUSH2 0x5AB3 JUMP JUMPDEST SWAP2 POP PUSH2 0x5AD9 DUP3 PUSH2 0x5ABE JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AEF DUP3 PUSH2 0x5AC1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E736665722063616C6C206661696C65640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2F PUSH1 0x18 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5B3A DUP3 PUSH2 0x5AF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B5E DUP2 PUSH2 0x5B22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B74 DUP2 PUSH2 0x4DE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B90 JUMPI PUSH2 0x5B8F PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5B9E DUP5 DUP3 DUP6 ADD PUSH2 0x5B65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206F7065726174696F6E20646964206E6F742073 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7563636565640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C03 PUSH1 0x26 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5C0E DUP3 PUSH2 0x5BA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C32 DUP2 PUSH2 0x5BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5C4E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4CC6 JUMP JUMPDEST PUSH2 0x5C5B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4720 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4CC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5C8C DUP2 PUSH2 0x474A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CA8 JUMPI PUSH2 0x5CA7 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CB6 DUP5 DUP3 DUP6 ADD PUSH2 0x5C7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5CCE DUP2 PUSH2 0x4898 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CEA JUMPI PUSH2 0x5CE9 PUSH2 0x4651 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CF8 DUP5 DUP3 DUP6 ADD PUSH2 0x5CBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5D16 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4CC6 JUMP JUMPDEST PUSH2 0x5D23 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4CC6 JUMP JUMPDEST PUSH2 0x5D30 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4720 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x75736572207374616B6520616D6F756E74206F766572666C6F77000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D6E PUSH1 0x1A DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5D79 DUP3 PUSH2 0x5D38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5D9D DUP2 PUSH2 0x5D61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616363756D756C617465207265776172647320706572207374616B65206F7665 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72666C6F77000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E00 PUSH1 0x25 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5E0B DUP3 PUSH2 0x5DA4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5E2F DUP2 PUSH2 0x5DF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x70656E64696E672072657761726473206F766572666C6F770000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E6C PUSH1 0x18 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5E77 DUP3 PUSH2 0x5E36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5E9B DUP2 PUSH2 0x5E5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616363756D756C617465207374616B6520616D6F756E74206F766572666C6F77 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ED8 PUSH1 0x20 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5EE3 DUP3 PUSH2 0x5EA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5F07 DUP2 PUSH2 0x5ECB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7374616B6520746F6B656E20616D6F756E74206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F44 PUSH1 0x1B DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5F4F DUP3 PUSH2 0x5F0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5F73 DUP2 PUSH2 0x5F37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x75736572207374416D6F756E74206D756C206163635243435065725354206F76 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572666C6F770000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FD6 PUSH1 0x26 DUP4 PUSH2 0x4D4F JUMP JUMPDEST SWAP2 POP PUSH2 0x5FE1 DUP3 PUSH2 0x5F7A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6005 DUP2 PUSH2 0x5FC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6021 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4CC6 JUMP JUMPDEST PUSH2 0x602E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x48F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x604B DUP3 PUSH2 0x6035 JUMP JUMPDEST PUSH2 0x6055 DUP2 DUP6 PUSH2 0x5AB3 JUMP JUMPDEST SWAP4 POP PUSH2 0x6065 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4D60 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x607D DUP3 DUP5 PUSH2 0x6040 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL PUSH31 0x61F31F01927762E05D2C7B3BA029E4F18BE78B3106E9D06D6A8FF72681064 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"893:27482:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2965:30:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2650:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15300:175;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3183:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4759:191:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22394:1293:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5246:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2780:26:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6348:245:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3279:56:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;23891:725;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14211:1021;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2572:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5817:748;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;16673:1966:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2692:145:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7138:193:23;;;;;;;;;;;;;:::i;:::-;;18743:622;;;;;;;;;;;;;:::i;:::-;;2713:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1202:60;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13337:502;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7692:179;;;;;;;;;;;;;:::i;:::-;;3732:207:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20988:1100:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3141:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2317:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13915:204:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2890:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3044:37;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2844:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3210:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13033:90:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9494:1914;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1268:72;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9070:235;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1346:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7415:198;;;;;;;;;;;;;:::i;:::-;;8703:261;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5662:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11764:441:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7957:183;;;;;;;;;;;;;:::i;:::-;;20136:658;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8338:273;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6946:110;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;19438:379;;;:::i;:::-;;12303:563;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;15610:623;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3443:202:0;3528:4;3566:32;3551:47;;;:11;:47;;;;:87;;;;3602:36;3626:11;3602:23;:36::i;:::-;3551:87;3544:94;;3443:202;;;:::o;2965:30:23:-;;;;:::o;2650:23::-;;;;:::o;15300:175::-;15413:7;15398:4;5271;:11;;;;5264:4;:18;5256:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;15439:4:::1;:10;15444:4;15439:10;;;;;;;;;;;:17;15450:5;15439:17;;;;;;;;;;;;;;;:29;;;15432:36;;15300:175:::0;;;;;:::o;3183:21::-;;;;;;;;;;;;;:::o;4759:191:0:-;4824:7;4843:30;4876:26;:24;:26::i;:::-;4843:59;;4919:1;:8;;:14;4928:4;4919:14;;;;;;;;;;;:24;;;4912:31;;;4759:191;;;:::o;22394:1293:23:-;2316:19:4;:17;:19::i;:::-;5476:14:23::1;;;;;;;;;;;5475:15;5467:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;22492:4:::2;5271;:11;;;;5264:4;:18;5256:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;22508:18:::3;22529:4;22534;22529:10;;;;;;;;:::i;:::-;;;;;;;;;;;;22508:31;;22549:18;22570:4;:10;22575:4;22570:10;;;;;;;;;;;:22;22581:10;22570:22;;;;;;;;;;;;;;;22549:43;;22602:24;22636:15:::0;22723:9:::3;22718:271;22742:5;:14;;:21;;;;22738:1;:25;22718:271;;;22828:12;22788:5;:14;;22803:1;22788:17;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;:52;22784:96:::0;22860:5:::3;22784:96;22931:5;:14;;22946:1;22931:17;;;;;;;;:::i;:::-;;;;;;;;;;;;:24;;;22912:16;:43;;;;:::i;:::-;22893:62;;22969:9;;;;;:::i;:::-;;;;22765:3;;;;;;;22718:271;;;;23033:9;23028:134;23076:7;23052:5;:14;;:21;;;;:31;;;;:::i;:::-;23048:1;:35;23028:134;;;23124:5;:14;;23143:7;23139:1;:11;;;;:::i;:::-;23124:27;;;;;;;;:::i;:::-;;;;;;;;;;;;23104:5;:14;;23119:1;23104:17;;;;;;;;:::i;:::-;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;;23085:3;;;;;;;23028:134;;;;23176:9;23171:83;23195:7;23191:1;:11;23171:83;;;23223:5;:14;;:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;23204:3;;;;;;;23171:83;;;;23286:1;23267:16;:20;23263:345;;;23342:3;23307:39;;:5;:23;;;;;;;;;;;;:39;;::::0;23303:295:::3;;23366:46;23383:10;23395:16;23366;:46::i;:::-;23303:295;;;23451:132;23517:10;23549:16;23458:5;:23;;;;;;;;;;;;23451:44;;;;:132;;;;;:::i;:::-;23303:295;23263:345;23667:12;23643:4;23631:10;23622:58;;;23649:16;23622:58;;;;;;:::i;:::-;;;;;;;;22498:1189;;;;5523:1:::2;22394:1293:::0;:::o;5246:136:0:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;2780:26:23:-;;;;;;;;;;;;;:::o;6348:245:0:-;6463:12;:10;:12::i;:::-;6441:34;;:18;:34;;;6437:102;;6498:30;;;;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;3279:56:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;23891:725::-;2316:19:4;:17;:19::i;:::-;23964:4:23::1;5271;:11;;;;5264:4;:18;5256:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;5370:11:::2;;;;;;;;;;;5369:12;5361:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;23999:18:::3;24020:4;24025;24020:10;;;;;;;;:::i;:::-;;;;;;;;;;;;23999:31;;24040:18;24061:4;:10;24066:4;24061:10;;;;;;;;;;;:22;24072:10;24061:22;;;;;;;;;;;;;;;24040:43;;24093:16;24104:4;24093:10;:16::i;:::-;24119:19;24281:5;:20;;;24245:5;:21;;;24222:7;24174:5;:31;;;24142:5;:17;;;:63;;;;:::i;:::-;24141:89;;;;:::i;:::-;:125;;;;:::i;:::-;:160;;;;:::i;:::-;24119:182;;24329:1;24315:11;:15;24311:125;;;24369:1;24346:5;:20;;:24;;;;24384:41;24401:10;24413:11;24384:16;:41::i;:::-;24311:125;24550:7;24502:5;:31;;;24482:5;:17;;;:51;;;;:::i;:::-;24481:77;;;;:::i;:::-;24445:5;:21;;:113;;;;24591:4;24579:10;24573:36;;;24597:11;24573:36;;;;;;:::i;:::-;;;;;;;;23989:627;;;2345:1:4::1;23891:725:23::0;:::o;14211:1021::-;14349:7;14368:18;14389:4;14394:7;14389:13;;;;;;;;:::i;:::-;;;;;;;;;;;;14368:34;;14412:18;14433:4;:13;14438:7;14433:13;;;;;;;;;;;:20;14447:5;14433:20;;;;;;;;;;;;;;;14412:41;;14463:33;14499:5;:31;;;14463:67;;14540:16;14559:5;:22;;;14540:41;;14610:5;:21;;;14595:12;:36;:53;;;;;14647:1;14635:8;:13;;14595:53;14591:454;;;14664:18;14685:96;14716:5;:21;;;14755:12;14685:13;:96::i;:::-;14664:117;;14795:18;14866:15;;14830:5;:16;;;14817:10;:29;;;;:::i;:::-;14816:65;;;;:::i;:::-;14795:86;;15026:8;14998:7;14984:10;:22;;;;:::i;:::-;14983:51;;;;:::i;:::-;14939:25;:95;;;;:::i;:::-;14895:139;;14650:395;;14591:454;15205:5;:20;;;15169:5;:21;;;15146:7;15105:25;:49;;;;:::i;:::-;15073:5;:17;;;:81;;;;:::i;:::-;:117;;;;:::i;:::-;:152;;;;:::i;:::-;15054:171;;;;;;14211:1021;;;;;:::o;2572:25::-;;;;:::o;5817:748::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;6015:9:23::1;6000:11;:24;;5979:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6122:1;6107:12;:16;6099:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;6237:22;:20;:22::i;:::-;6269:24;:22;:24::i;:::-;6303:42;2362:4:0;6314:18:23::0;::::1;6334:10;6303;:42::i;:::-;;6355:36;1307:33;6380:10;6355;:36::i;:::-;;6401:34;1239:23;6424:10;6401;:34::i;:::-;;6446:12;6453:4;6446:6;:12::i;:::-;6481:11;6468:10;:24;;;;6513:9;6502:8;:20;;;;6546:12;6532:11;:26;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;5817:748:23;;;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;16673:1966:23:-;16723:4;5271;:11;;;;5264:4;:18;5256:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;16739:18:::1;16760:4;16765;16760:10;;;;;;;;:::i;:::-;;;;;;;;;;;;16739:31;;16801:5;:21;;;16785:12;:37;16781:74;;16838:7;;;16781:74;16864:24;16891:5;:22;;;16864:49;;16947:1;16927:16;:21:::0;16923:108:::1;;16988:12;16964:5;:21;;:36;;;;17014:7;;;;16923:108;17125:13;17140:16:::0;17160:109:::1;17252:5;:16;;;17160:84;17187:5;:21;;;17222:12;17160:13;:84::i;:::-;:91;;:109;;;;:::i;:::-;17124:145;;;;17287:8;17279:29;;;;;;;;;;;;:::i;:::-;;;;;;;;;17561:32;17577:15;;17561:8;:15;;:32;;;;:::i;:::-;17538:55;;;;;;;;17611:8;17603:29;;;;;;;;;;;;:::i;:::-;;;;;;;;;17699:16;17718:5;:22;;;17699:41;;17801:1;17790:8;:12;17786:691;;;17875:13;17890:17:::0;17911:24:::1;17927:7;17911:8;:15;;:24;;;;:::i;:::-;17874:61;;;;17957:8;17949:29;;;;;;;;;;;;:::i;:::-;;;;;;;;;18091:26;18108:8;18091:9;:16;;:26;;;;:::i;:::-;18067:50;;;;;;;;18139:8;18131:29;;;;;;;;;;;;:::i;:::-;;;;;;;;;18215:13;18230:33:::0;18267:83:::1;18340:9;18267:5;:48;;;:72;;:83;;;;:::i;:::-;18214:136;;;;18372:8;18364:29;;;;;;;;;;;;:::i;:::-;;;;;;;;;18441:25;18407:5;:31;;:59;;;;17804:673;;;;17786:691;18555:12;18531:5;:21;;:36;;;;18600:5;:21;;;18594:4;18583:49;18623:8;18583:49;;;;;;:::i;:::-;;;;;;;;16729:1910;;;;;5308:1;16673:1966:::0;;:::o;3708:134:2:-;3777:7;2926:20;:18;:20::i;:::-;811:66:12::1;3803:32:2;;3796:39;;3708:134:::0;:::o;2692:145:4:-;2739:4;2755:25;2783:21;:19;:21::i;:::-;2755:49;;2821:1;:9;;;;;;;;;;;;2814:16;;;2692:145;:::o;7138:193:23:-;1239:23;3191:16:0;3202:4;3191:10;:16::i;:::-;7209:14:23::1;;;;;;;;;;;7201:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;7289:4;7272:14;;:21;;;;;;;;;;;;;;;;;;7308:16;;;;;;;;;;7138:193:::0;:::o;18743:622::-;19246:14;19263:4;:11;;;;19246:28;;19289:9;19284:75;19308:6;19304:1;:10;19284:75;;;19335:13;19346:1;19335:10;:13::i;:::-;19316:3;;;;;;;19284:75;;;;18777:588;18743:622::o;2713:26::-;;;;:::o;1202:60::-;1239:23;1202:60;:::o;13337:502::-;13431:18;13478:3;13469:5;:12;;13461:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;13521:10;;13513:5;:18;13509:67;;;13555:10;;13547:18;;13509:67;13595:8;;13589:3;:14;13585:59;;;13625:8;;13619:14;;13585:59;13675:1;13667:5;13661:3;:11;;;;:::i;:::-;:15;13653:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;13704:12;13750:33;13771:11;;13757:5;13751:3;:11;;;;:::i;:::-;13750:20;;:33;;;;:::i;:::-;13726:57;;;;;;;;13801:7;13793:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;13451:388;13337:502;;;;:::o;7692:179::-;1239:23;3191:16:0;3202:4;3191:10;:16::i;:::-;7761:11:23::1;;;;;;;;;;;7760:12;7752:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;7832:4;7818:11;;:18;;;;;;;;;;;;;;;;;;7851:13;;;;;;;;;;7692:179:::0;:::o;3732:207:0:-;3809:4;3825:30;3858:26;:24;:26::i;:::-;3825:59;;3901:1;:8;;:14;3910:4;3901:14;;;;;;;;;;;:22;;:31;3924:7;3901:31;;;;;;;;;;;;;;;;;;;;;;;;;3894:38;;;3732:207;;;;:::o;20988:1100:23:-;2316:19:4;:17;:19::i;:::-;5476:14:23::1;;;;;;;;;;;5475:15;5467:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;21110:4:::2;5271;:11;;;;5264:4;:18;5256:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;21126:18:::3;21147:4;21152;21147:10;;;;;;;;:::i;:::-;;;;;;;;;;;;21126:31;;21167:18;21188:4;:10;21193:4;21188:10;;;;;;;;;;;:22;21199:10;21188:22;;;;;;;;;;;;;;;21167:43;;21249:7;21228:5;:17;;;:28;;21220:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;21298:16;21309:4;21298:10;:16::i;:::-;21324:19;21450:5;:21;;;21427:7;21379:5;:31;;;21347:5;:17;;;:63;;;;:::i;:::-;21346:89;;;;:::i;:::-;:125;;;;:::i;:::-;21324:147;;21499:1;21485:11;:15;21481:81;;;21540:11;21516:5;:20;;;:35;;;;;;;:::i;:::-;;;;;;;;21481:81;21585:1;21575:7;:11;21571:288;;;21623:7;21602:5;:17;;;:28;;;;;;;:::i;:::-;;;;;;;;21644:5;:14;;21681:153;;;;;;;;21726:7;21681:153;;;;21790:5;:25;;;21775:12;:40;;;;:::i;:::-;21681:153;;::::0;21644:204:::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21571:288;21894:7;21868:5;:22;;;:33;;;;;;;:::i;:::-;;;;;;;;22017:7;21969:5;:31;;;21949:5;:17;;;:51;;;;:::i;:::-;21948:77;;;;:::i;:::-;21911:5;:21;;;:114;;;;;;;:::i;:::-;;;;;;;;22067:4;22055:10;22040:41;;;22073:7;22040:41;;;;;;:::i;:::-;;;;;;;;21116:972;;;5523:1:::2;20988:1100:::0;;:::o;3141:35::-;;;;:::o;2317:49:0:-;2362:4;2317:49;;;:::o;13915:204:23:-;14033:7;14015;5271:4;:11;;;;5264:4;:18;5256:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;14059:53:::1;14083:7;14092:5;14099:12;14059:23;:53::i;:::-;14052:60;;13915:204:::0;;;;;:::o;2890:17::-;;;;;;;;;;;;;:::o;3044:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2844:23::-;;;;;;;;;;;;;:::o;3210:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;13033:90:23:-;13079:7;13105:4;:11;;;;13098:18;;13033:90;:::o;9494:1914::-;1239:23;3191:16:0;3202:4;3191:10;:16::i;:::-;10014:1:23::1;10000:4;:11;;;;:15;9996:332;;;10093:3;10056:41;;:4;10061:1;10056:7;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;;;;;;;;;;:41;;;10031:131;;;;;;;;;;;;:::i;:::-;;;;;;;;;9996:332;;;10248:3;10218:34;;:18;:34;;;10193:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;9996:332;10460:1;10437:20;:24;10429:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;10567:8;;10552:12;:23;10544:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;10607:11;10603:59;;;10634:17;:15;:17::i;:::-;10603:59;10671:23;10712:10:::0;::::1;10697:12;:25;:77;;10764:10;;10697:77;;;10737:12;10697:77;10671:103;;10803:11;10784:15;;:30;;;;;;;:::i;:::-;;;;;;;;10824:4;10847:361;;;;;;;;10889:18;10847:361;;;;;;10937:11;10847:361;;;;10983:15;10847:361;;;;11043:1;10847:361;;;;11080:1;10847:361;;;;11117:17;10847:361;;;;11173:20;10847:361;;::::0;10824:394:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11311:15;11286:11;11254:18;11233:168;;;11340:17;11371:20;11233:168;;;;;;;:::i;:::-;;;;;;;;9866:1542;9494:1914:::0;;;;;;:::o;1268:72::-;1307:33;1268:72;:::o;9070:235::-;1239:23;3191:16:0;3202:4;3191:10;:16::i;:::-;9177:1:23::1;9162:12;:16;9154:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;9243:12;9229:11;:26;;;;9285:12;9270:28;;;;;;;;;;9070:235:::0;;:::o;1346:35::-;1380:1;1346:35;:::o;7415:198::-;1239:23;3191:16:0;3202:4;3191:10;:16::i;:::-;7490:14:23::1;;;;;;;;;;;7489:15;7481:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7568:5;7551:14;;:22;;;;;;;;;;;;;;;;;;7588:18;;;;;;;;;;7415:198:::0;:::o;8703:261::-;1239:23;3191:16:0;3202:4;3191:10;:16::i;:::-;8816:9:23::1;8802:10;;:23;;8781:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;8911:9;8900:8;:20;;;;8947:9;8935:22;;;;;;;;;;8703:261:::0;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;:::-;;5662:138:::0;;;:::o;11764:441:23:-;11904:7;5271:4;:11;;;;5264:4;:18;5256:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1239:23:::1;3191:16:0;3202:4;3191:10;:16::i;:::-;11962:4:23::2;:11;;;;11952:7;:21;11944:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;12036:17;12003:4;12008:7;12003:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:30;;:50;;;;12099:20;12063:4;12068:7;12063:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:33;;:56;;;;12177:20;12158:17;12149:7;12134:64;;;;;;;;;;5308:1:::1;11764:441:::0;;;;:::o;7957:183::-;1239:23;3191:16:0;3202:4;3191:10;:16::i;:::-;8027:11:23::1;;;;;;;;;;;8019:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;8098:5;8084:11;;:19;;;;;;;;;;;;;;;;;;8118:15;;;;;;;;;;7957:183:::0;:::o;20136:658::-;5476:14;;;;;;;;;;;5475:15;5467:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;20244:4:::1;5271;:11;;;;5264:4;:18;5256:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;20402:1:::2;20394:4;:9:::0;20386:53:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;20449:18;20470:4;20475;20470:10;;;;;;;;:::i;:::-;;;;;;;;;;;;20449:31;;20508:5;:22;;;20498:7;:32;20490:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;20581:1;20571:7;:11;20567:188;;;20598:146;20664:10;20700:4;20723:7;20605:5;:23;;;;;;;;;;;;20598:48;;;;:146;;;;;;:::i;:::-;20567:188;20764:23;20773:4;20779:7;20764:8;:23::i;:::-;20250:544;5523:1:::1;20136:658:::0;;:::o;8338:273::-;1239:23;3191:16:0;3202:4;3191:10;:16::i;:::-;8456:8:23::1;;8441:11;:23;;8420:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;8552:11;8539:10;:24;;;;8592:11;8578:26;;;;;;;;;;8338:273:::0;;:::o;6946:110::-;1239:23;3191:16:0;3202:4;3191:10;:16::i;:::-;7019:4:23::1;7013:3;;:10;;;;;;;;;;;;;;;;;;7045:3;;;;;;;;;;;7038:11;;;;;;;;;;;;6946:110:::0;;:::o;19438:379::-;2316:19:4;:17;:19::i;:::-;19499:18:23::1;19520:4;1380:1;19520:13;;;;;;;;:::i;:::-;;;;;;;;;;;;19499:34;;19599:3;19564:39;;:5;:23;;;;;;;;;;;;:39;;;19543:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;19670:15;19688:9;19670:27;;19725:5;:22;;;19715:7;:32;19707:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;19784:26;1380:1;19802:7;19784:8;:26::i;:::-;19489:328;;19438:379::o:0;12303:563::-;1239:23;3191:16:0;3202:4;3191:10;:16::i;:::-;12468:4:23::1;:11;;;;12458:7;:21;12450:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;12531:1;12517:11;:15;12509:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;12570:11;12566:59;;;12597:17;:15;:17::i;:::-;12566:59;12733:11;12694:4;12699:7;12694:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:24;;;12664:15;;:54;;;;:::i;:::-;:80;;;;:::i;:::-;12634:15;:110;;;;12781:11;12754:4;12759:7;12754:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:24;;:38;;;;12821:7;12807:52;12830:11;12843:15;;12807:52;;;;;;;:::i;:::-;;;;;;;;12303:563:::0;;;;:::o;3002:18::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15610:623::-;15759:21;15782:29;15733:7;5271:4;:11;;;;5264:4;:18;5256:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;15827:18:::1;15848:4;:13;15853:7;15848:13;;;;;;;;;;;:20;15862:5;15848:20;;;;;;;;;;;;;;;15827:41;;15883:9;15878:349;15902:5;:14;;:21;;;;15898:1;:25;15878:349;;;15988:12;15948:5;:14;;15963:1;15948:17;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;:52;15944:203;;16108:5;:14;;16123:1;16108:17;;;;;;;;:::i;:::-;;;;;;;;;;;;:24;;;16064:21;:68;;;;:::i;:::-;16020:112;;15944:203;16192:5;:14;;16207:1;16192:17;;;;;;;;:::i;:::-;;;;;;;;;;;;:24;;;16176:13;:40;;;;:::i;:::-;16160:56;;15925:3;;;;;;;15878:349;;;;15817:416;15610:623:::0;;;;;;:::o;1035:146:5:-;1111:4;1149:25;1134:40;;;:11;:40;;;;1127:47;;1035:146;;;:::o;2787:177:0:-;2845:30;2920:28;2910:38;;2787:177;:::o;2905:128:4:-;2970:8;:6;:8::i;:::-;2966:61;;;3001:15;;;;;;;;;;;;;;2966:61;2905:128::o;27909:464:23:-;28042:12;28056:17;28085:3;28077:17;;28102:7;28077:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28041:95;;;;28154:7;28146:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;28218:1;28204:4;:11;:15;28200:167;;;28271:4;28260:24;;;;;;;;;;;;:::i;:::-;28235:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;28200:167;27974:399;;27909:464;;:::o;1219:160:15:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;4148:103:0:-;4214:30;4225:4;4231:12;:10;:12::i;:::-;4214:10;:30::i;:::-;4148:103;:::o;7270:387::-;7347:4;7363:30;7396:26;:24;:26::i;:::-;7363:59;;7437:22;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7509:4;7475:1;:8;;:14;7484:4;7475:14;;;;;;;;;;;:22;;:31;7498:7;7475:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;7559:12;:10;:12::i;:::-;7532:40;;7550:7;7532:40;;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;7270:387;;;;;:::o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;7892:388:0:-;7970:4;7986:30;8019:26;:24;:26::i;:::-;7986:59;;8059:22;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:1;:8;;:14;8106:4;8097:14;;;;;;;;;;;:22;;:31;8120:7;8097:31;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;8182:12;:10;:12::i;:::-;8155:40;;8173:7;8155:40;;8167:4;8155:40;;;;;;;;;;8216:4;8209:11;;;;;8055:219;8258:5;8251:12;;;7892:388;;;;;:::o;27179:266:23:-;27254:14;27271:3;;;;;;;;;;;:13;;;27293:4;27271:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27254:45;;27324:6;27313:7;:17;27309:130;;27346:3;;;;;;;;;;;:12;;;27359:3;27364:7;27346:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;27309:130;;;27403:3;;;;;;;;;;;:12;;;27416:3;27421:6;27403:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;27309:130;27244:201;27179:266;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;3231:65:0:-;6931:20:1;:18;:20::i;:::-;3231:65:0:o;2970:67:2:-;6931:20:1;:18;:20::i;:::-;2970:67:2:o;4603:312::-;4692:6;4675:23;;4683:4;4675:23;;;:120;;;;4789:6;4753:42;;:32;:30;:32::i;:::-;:42;;;;4675:120;4658:251;;;4869:29;;;;;;;;;;;;;;4658:251;4603:312::o;6645:111:23:-;1307:33;3191:16:0;3202:4;3191:10;:16::i;:::-;6645:111:23;;:::o;6057:538:2:-;6174:17;6156:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6152:437;;6560:17;6518:60;;;;;;;;;;;:::i;:::-;;;;;;;;6152:437;811:66:12;6258:32:2;;6250:4;:40;6246:120;;6346:4;6317:34;;;;;;;;;;;:::i;:::-;;;;;;;;6246:120;6379:54;6409:17;6428:4;6379:29;:54::i;:::-;6209:235;6057:538;;:::o;1264:508:21:-;1325:12;1339:14;1628:1;1623;:6;1619:28;;1639:4;1645:1;1631:16;;;;;;1619:28;1661:9;1677:1;1673;:5;1661:17;;1705:1;1700;1696;:5;;;;;:::i;:::-;;;:10;1692:33;;1716:5;1723:1;1708:17;;;;;;;1692:33;1747:4;1753:1;1739:16;;;;;1264:508;;;;;;:::o;1896:205::-;1957:12;1971:14;2030:1;2025;:6;2021:29;;2041:5;2048:1;2033:17;;;;;;2021:29;2072:4;2082:1;2078;:5;;;;;:::i;:::-;;;2064:20;;;;1896:205;;;;;;:::o;586:231::-;647:12;661:14;711:9;727:1;723;:5;711:17;;750:1;746;:5;742:28;;;761:5;768:1;753:17;;;;;;;742:28;792:4;798:1;784:16;;;;;586:231;;;;;;:::o;5032:213:2:-;5115:6;5098:23;;5106:4;5098:23;;;5094:145;;5199:29;;;;;;;;;;;;;;5094:145;5032:213::o;1147:162:4:-;1200:25;1270:23;1260:33;;1147:162;:::o;1618:188:15:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;24927:1999:23:-;24995:18;25016:4;25021;25016:10;;;;;;;;:::i;:::-;;;;;;;;;;;;24995:31;;25036:18;25057:4;:10;25062:4;25057:10;;;;;;;;;;;:22;25068:10;25057:22;;;;;;;;;;;;;;;25036:43;;25089:16;25100:4;25089:10;:16::i;:::-;25181:1;25161:5;:17;;;:21;25157:873;;;25199:13;25214:21;25239:87;25281:5;:31;;;25239:5;:17;;;:24;;:87;;;;:::i;:::-;25198:128;;;;25348:8;25340:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;25429:29;25450:7;25429:13;:20;;:29;;;;:::i;:::-;25401:57;;;;;;;;25480:8;25472:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;25546:13;25561:19;25584:73;25622:5;:21;;;25584:13;:20;;:73;;;;:::i;:::-;25545:112;;;;25679:8;25671:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;25748:1;25734:11;:15;25730:290;;;25770:13;25785:19;25808:82;25878:11;25808:5;:41;;;:69;;:82;;;;:::i;:::-;25769:121;;;;25916:8;25908:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;25994:11;25971:5;:20;;:34;;;;25751:269;;25730:290;25184:846;;;;25157:873;26095:1;26085:7;:11;26081:262;;;26113:13;26128:22;26154:63;26186:5;:17;;;26154:7;:14;;:63;;;;:::i;:::-;26112:105;;;;26239:8;26231:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;26318:14;26298:5;:17;;:34;;;;26098:245;;26081:262;26398:13;26413:25;26442:64;26498:7;26442:5;:35;;;:55;;:64;;;;:::i;:::-;26397:109;;;;26524:8;26516:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;26599:17;26574:5;:22;;:42;;;;26628:13;26643:24;26671:79;26709:5;:31;;;26671:5;:17;;;:24;;:79;;;;:::i;:::-;26627:123;;;;26768:8;26760:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;26853:16;26829:5;:21;;:40;;;;26905:4;26893:10;26885:34;;;26911:7;26885:34;;;;;;:::i;:::-;;;;;;;;24985:1941;;;;;;24927:1999;;:::o;7686:720:15:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;4381:197:0:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4547:7;4556:4;4514:47;;;;;;;;;;;;:::i;:::-;;;;;;;;4464:108;4381:197;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1441:138:12:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;937:204:21:-;998:12;1012:14;1070:1;1066;:5;1062:28;;;1081:5;1088:1;1073:17;;;;;;1062:28;1112:4;1122:1;1118;:5;1104:20;;;;937:204;;;;;;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;1899:163:19:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:12:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:16:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:12:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;4437:582:16:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:487::-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7:75:24;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:122::-;2026:24;2044:5;2026:24;:::i;:::-;2019:5;2016:35;2006:63;;2065:1;2062;2055:12;2006:63;1953:122;:::o;2081:139::-;2127:5;2165:6;2152:20;2143:29;;2181:33;2208:5;2181:33;:::i;:::-;2081:139;;;;:::o;2226:126::-;2263:7;2303:42;2296:5;2292:54;2281:65;;2226:126;;;:::o;2358:96::-;2395:7;2424:24;2442:5;2424:24;:::i;:::-;2413:35;;2358:96;;;:::o;2460:122::-;2533:24;2551:5;2533:24;:::i;:::-;2526:5;2523:35;2513:63;;2572:1;2569;2562:12;2513:63;2460:122;:::o;2588:139::-;2634:5;2672:6;2659:20;2650:29;;2688:33;2715:5;2688:33;:::i;:::-;2588:139;;;;:::o;2733:474::-;2801:6;2809;2858:2;2846:9;2837:7;2833:23;2829:32;2826:119;;;2864:79;;:::i;:::-;2826:119;2984:1;3009:53;3054:7;3045:6;3034:9;3030:22;3009:53;:::i;:::-;2999:63;;2955:117;3111:2;3137:53;3182:7;3173:6;3162:9;3158:22;3137:53;:::i;:::-;3127:63;;3082:118;2733:474;;;;;:::o;3213:60::-;3241:3;3262:5;3255:12;;3213:60;;;:::o;3279:142::-;3329:9;3362:53;3380:34;3389:24;3407:5;3389:24;:::i;:::-;3380:34;:::i;:::-;3362:53;:::i;:::-;3349:66;;3279:142;;;:::o;3427:126::-;3477:9;3510:37;3541:5;3510:37;:::i;:::-;3497:50;;3427:126;;;:::o;3559:141::-;3624:9;3657:37;3688:5;3657:37;:::i;:::-;3644:50;;3559:141;;;:::o;3706:161::-;3808:52;3854:5;3808:52;:::i;:::-;3803:3;3796:65;3706:161;;:::o;3873:252::-;3981:4;4019:2;4008:9;4004:18;3996:26;;4032:86;4115:1;4104:9;4100:17;4091:6;4032:86;:::i;:::-;3873:252;;;;:::o;4131:77::-;4168:7;4197:5;4186:16;;4131:77;;;:::o;4214:122::-;4287:24;4305:5;4287:24;:::i;:::-;4280:5;4277:35;4267:63;;4326:1;4323;4316:12;4267:63;4214:122;:::o;4342:139::-;4388:5;4426:6;4413:20;4404:29;;4442:33;4469:5;4442:33;:::i;:::-;4342:139;;;;:::o;4487:329::-;4546:6;4595:2;4583:9;4574:7;4570:23;4566:32;4563:119;;;4601:79;;:::i;:::-;4563:119;4721:1;4746:53;4791:7;4782:6;4771:9;4767:22;4746:53;:::i;:::-;4736:63;;4692:117;4487:329;;;;:::o;4822:118::-;4909:24;4927:5;4909:24;:::i;:::-;4904:3;4897:37;4822:118;;:::o;4946:222::-;5039:4;5077:2;5066:9;5062:18;5054:26;;5090:71;5158:1;5147:9;5143:17;5134:6;5090:71;:::i;:::-;4946:222;;;;:::o;5174:329::-;5233:6;5282:2;5270:9;5261:7;5257:23;5253:32;5250:119;;;5288:79;;:::i;:::-;5250:119;5408:1;5433:53;5478:7;5469:6;5458:9;5454:22;5433:53;:::i;:::-;5423:63;;5379:117;5174:329;;;;:::o;5509:474::-;5577:6;5585;5634:2;5622:9;5613:7;5609:23;5605:32;5602:119;;;5640:79;;:::i;:::-;5602:119;5760:1;5785:53;5830:7;5821:6;5810:9;5806:22;5785:53;:::i;:::-;5775:63;;5731:117;5887:2;5913:53;5958:7;5949:6;5938:9;5934:22;5913:53;:::i;:::-;5903:63;;5858:118;5509:474;;;;;:::o;5989:442::-;6138:4;6176:2;6165:9;6161:18;6153:26;;6189:71;6257:1;6246:9;6242:17;6233:6;6189:71;:::i;:::-;6270:72;6338:2;6327:9;6323:18;6314:6;6270:72;:::i;:::-;6352;6420:2;6409:9;6405:18;6396:6;6352:72;:::i;:::-;5989:442;;;;;;:::o;6437:619::-;6514:6;6522;6530;6579:2;6567:9;6558:7;6554:23;6550:32;6547:119;;;6585:79;;:::i;:::-;6547:119;6705:1;6730:53;6775:7;6766:6;6755:9;6751:22;6730:53;:::i;:::-;6720:63;;6676:117;6832:2;6858:53;6903:7;6894:6;6883:9;6879:22;6858:53;:::i;:::-;6848:63;;6803:118;6960:2;6986:53;7031:7;7022:6;7011:9;7007:22;6986:53;:::i;:::-;6976:63;;6931:118;6437:619;;;;;:::o;7062:111::-;7114:7;7143:24;7161:5;7143:24;:::i;:::-;7132:35;;7062:111;;;:::o;7179:152::-;7267:39;7300:5;7267:39;:::i;:::-;7260:5;7257:50;7247:78;;7321:1;7318;7311:12;7247:78;7179:152;:::o;7337:169::-;7398:5;7436:6;7423:20;7414:29;;7452:48;7494:5;7452:48;:::i;:::-;7337:169;;;;:::o;7512:795::-;7613:6;7621;7629;7637;7686:3;7674:9;7665:7;7661:23;7657:33;7654:120;;;7693:79;;:::i;:::-;7654:120;7813:1;7838:68;7898:7;7889:6;7878:9;7874:22;7838:68;:::i;:::-;7828:78;;7784:132;7955:2;7981:53;8026:7;8017:6;8006:9;8002:22;7981:53;:::i;:::-;7971:63;;7926:118;8083:2;8109:53;8154:7;8145:6;8134:9;8130:22;8109:53;:::i;:::-;8099:63;;8054:118;8211:2;8237:53;8282:7;8273:6;8262:9;8258:22;8237:53;:::i;:::-;8227:63;;8182:118;7512:795;;;;;;;:::o;8313:117::-;8422:1;8419;8412:12;8436:117;8545:1;8542;8535:12;8559:102;8600:6;8651:2;8647:7;8642:2;8635:5;8631:14;8627:28;8617:38;;8559:102;;;:::o;8667:180::-;8715:77;8712:1;8705:88;8812:4;8809:1;8802:15;8836:4;8833:1;8826:15;8853:281;8936:27;8958:4;8936:27;:::i;:::-;8928:6;8924:40;9066:6;9054:10;9051:22;9030:18;9018:10;9015:34;9012:62;9009:88;;;9077:18;;:::i;:::-;9009:88;9117:10;9113:2;9106:22;8896:238;8853:281;;:::o;9140:129::-;9174:6;9201:20;;:::i;:::-;9191:30;;9230:33;9258:4;9250:6;9230:33;:::i;:::-;9140:129;;;:::o;9275:307::-;9336:4;9426:18;9418:6;9415:30;9412:56;;;9448:18;;:::i;:::-;9412:56;9486:29;9508:6;9486:29;:::i;:::-;9478:37;;9570:4;9564;9560:15;9552:23;;9275:307;;;:::o;9588:148::-;9686:6;9681:3;9676;9663:30;9727:1;9718:6;9713:3;9709:16;9702:27;9588:148;;;:::o;9742:423::-;9819:5;9844:65;9860:48;9901:6;9860:48;:::i;:::-;9844:65;:::i;:::-;9835:74;;9932:6;9925:5;9918:21;9970:4;9963:5;9959:16;10008:3;9999:6;9994:3;9990:16;9987:25;9984:112;;;10015:79;;:::i;:::-;9984:112;10105:54;10152:6;10147:3;10142;10105:54;:::i;:::-;9825:340;9742:423;;;;;:::o;10184:338::-;10239:5;10288:3;10281:4;10273:6;10269:17;10265:27;10255:122;;10296:79;;:::i;:::-;10255:122;10413:6;10400:20;10438:78;10512:3;10504:6;10497:4;10489:6;10485:17;10438:78;:::i;:::-;10429:87;;10245:277;10184:338;;;;:::o;10528:652::-;10605:6;10613;10662:2;10650:9;10641:7;10637:23;10633:32;10630:119;;;10668:79;;:::i;:::-;10630:119;10788:1;10813:53;10858:7;10849:6;10838:9;10834:22;10813:53;:::i;:::-;10803:63;;10759:117;10943:2;10932:9;10928:18;10915:32;10974:18;10966:6;10963:30;10960:117;;;10996:79;;:::i;:::-;10960:117;11101:62;11155:7;11146:6;11135:9;11131:22;11101:62;:::i;:::-;11091:72;;10886:287;10528:652;;;;;:::o;11186:474::-;11254:6;11262;11311:2;11299:9;11290:7;11286:23;11282:32;11279:119;;;11317:79;;:::i;:::-;11279:119;11437:1;11462:53;11507:7;11498:6;11487:9;11483:22;11462:53;:::i;:::-;11452:63;;11408:117;11564:2;11590:53;11635:7;11626:6;11615:9;11611:22;11590:53;:::i;:::-;11580:63;;11535:118;11186:474;;;;;:::o;11666:329::-;11725:6;11774:2;11762:9;11753:7;11749:23;11745:32;11742:119;;;11780:79;;:::i;:::-;11742:119;11900:1;11925:53;11970:7;11961:6;11950:9;11946:22;11925:53;:::i;:::-;11915:63;;11871:117;11666:329;;;;:::o;12001:118::-;12088:24;12106:5;12088:24;:::i;:::-;12083:3;12076:37;12001:118;;:::o;12125:886::-;12386:4;12424:3;12413:9;12409:19;12401:27;;12438:71;12506:1;12495:9;12491:17;12482:6;12438:71;:::i;:::-;12519:72;12587:2;12576:9;12572:18;12563:6;12519:72;:::i;:::-;12601;12669:2;12658:9;12654:18;12645:6;12601:72;:::i;:::-;12683;12751:2;12740:9;12736:18;12727:6;12683:72;:::i;:::-;12765:73;12833:3;12822:9;12818:19;12809:6;12765:73;:::i;:::-;12848;12916:3;12905:9;12901:19;12892:6;12848:73;:::i;:::-;12931;12999:3;12988:9;12984:19;12975:6;12931:73;:::i;:::-;12125:886;;;;;;;;;;:::o;13017:99::-;13069:6;13103:5;13097:12;13087:22;;13017:99;;;:::o;13122:169::-;13206:11;13240:6;13235:3;13228:19;13280:4;13275:3;13271:14;13256:29;;13122:169;;;;:::o;13297:248::-;13379:1;13389:113;13403:6;13400:1;13397:13;13389:113;;;13488:1;13483:3;13479:11;13473:18;13469:1;13464:3;13460:11;13453:39;13425:2;13422:1;13418:10;13413:15;;13389:113;;;13536:1;13527:6;13522:3;13518:16;13511:27;13359:186;13297:248;;;:::o;13551:377::-;13639:3;13667:39;13700:5;13667:39;:::i;:::-;13722:71;13786:6;13781:3;13722:71;:::i;:::-;13715:78;;13802:65;13860:6;13855:3;13848:4;13841:5;13837:16;13802:65;:::i;:::-;13892:29;13914:6;13892:29;:::i;:::-;13887:3;13883:39;13876:46;;13643:285;13551:377;;;;:::o;13934:313::-;14047:4;14085:2;14074:9;14070:18;14062:26;;14134:9;14128:4;14124:20;14120:1;14109:9;14105:17;14098:47;14162:78;14235:4;14226:6;14162:78;:::i;:::-;14154:86;;13934:313;;;;:::o;14253:116::-;14323:21;14338:5;14323:21;:::i;:::-;14316:5;14313:32;14303:60;;14359:1;14356;14349:12;14303:60;14253:116;:::o;14375:133::-;14418:5;14456:6;14443:20;14434:29;;14472:30;14496:5;14472:30;:::i;:::-;14375:133;;;;:::o;14514:905::-;14606:6;14614;14622;14630;14638;14687:3;14675:9;14666:7;14662:23;14658:33;14655:120;;;14694:79;;:::i;:::-;14655:120;14814:1;14839:53;14884:7;14875:6;14864:9;14860:22;14839:53;:::i;:::-;14829:63;;14785:117;14941:2;14967:53;15012:7;15003:6;14992:9;14988:22;14967:53;:::i;:::-;14957:63;;14912:118;15069:2;15095:53;15140:7;15131:6;15120:9;15116:22;15095:53;:::i;:::-;15085:63;;15040:118;15197:2;15223:53;15268:7;15259:6;15248:9;15244:22;15223:53;:::i;:::-;15213:63;;15168:118;15325:3;15352:50;15394:7;15385:6;15374:9;15370:22;15352:50;:::i;:::-;15342:60;;15296:116;14514:905;;;;;;;;:::o;15425:619::-;15502:6;15510;15518;15567:2;15555:9;15546:7;15542:23;15538:32;15535:119;;;15573:79;;:::i;:::-;15535:119;15693:1;15718:53;15763:7;15754:6;15743:9;15739:22;15718:53;:::i;:::-;15708:63;;15664:117;15820:2;15846:53;15891:7;15882:6;15871:9;15867:22;15846:53;:::i;:::-;15836:63;;15791:118;15948:2;15974:53;16019:7;16010:6;15999:9;15995:22;15974:53;:::i;:::-;15964:63;;15919:118;15425:619;;;;;:::o;16050:359::-;16124:6;16173:2;16161:9;16152:7;16148:23;16144:32;16141:119;;;16179:79;;:::i;:::-;16141:119;16299:1;16324:68;16384:7;16375:6;16364:9;16360:22;16324:68;:::i;:::-;16314:78;;16270:132;16050:359;;;;:::o;16415:613::-;16489:6;16497;16505;16554:2;16542:9;16533:7;16529:23;16525:32;16522:119;;;16560:79;;:::i;:::-;16522:119;16680:1;16705:53;16750:7;16741:6;16730:9;16726:22;16705:53;:::i;:::-;16695:63;;16651:117;16807:2;16833:53;16878:7;16869:6;16858:9;16854:22;16833:53;:::i;:::-;16823:63;;16778:118;16935:2;16961:50;17003:7;16994:6;16983:9;16979:22;16961:50;:::i;:::-;16951:60;;16906:115;16415:613;;;;;:::o;17034:332::-;17155:4;17193:2;17182:9;17178:18;17170:26;;17206:71;17274:1;17263:9;17259:17;17250:6;17206:71;:::i;:::-;17287:72;17355:2;17344:9;17340:18;17331:6;17287:72;:::i;:::-;17034:332;;;;;:::o;17372:161::-;17512:13;17508:1;17500:6;17496:14;17489:37;17372:161;:::o;17539:366::-;17681:3;17702:67;17766:2;17761:3;17702:67;:::i;:::-;17695:74;;17778:93;17867:3;17778:93;:::i;:::-;17896:2;17891:3;17887:12;17880:19;;17539:366;;;:::o;17911:419::-;18077:4;18115:2;18104:9;18100:18;18092:26;;18164:9;18158:4;18154:20;18150:1;18139:9;18135:17;18128:47;18192:131;18318:4;18192:131;:::i;:::-;18184:139;;17911:419;;;:::o;18336:168::-;18476:20;18472:1;18464:6;18460:14;18453:44;18336:168;:::o;18510:366::-;18652:3;18673:67;18737:2;18732:3;18673:67;:::i;:::-;18666:74;;18749:93;18838:3;18749:93;:::i;:::-;18867:2;18862:3;18858:12;18851:19;;18510:366;;;:::o;18882:419::-;19048:4;19086:2;19075:9;19071:18;19063:26;;19135:9;19129:4;19125:20;19121:1;19110:9;19106:17;19099:47;19163:131;19289:4;19163:131;:::i;:::-;19155:139;;18882:419;;;:::o;19307:180::-;19355:77;19352:1;19345:88;19452:4;19449:1;19442:15;19476:4;19473:1;19466:15;19493:180;19541:77;19538:1;19531:88;19638:4;19635:1;19628:15;19662:4;19659:1;19652:15;19679:191;19719:3;19738:20;19756:1;19738:20;:::i;:::-;19733:25;;19772:20;19790:1;19772:20;:::i;:::-;19767:25;;19815:1;19812;19808:9;19801:16;;19836:3;19833:1;19830:10;19827:36;;;19843:18;;:::i;:::-;19827:36;19679:191;;;;:::o;19876:233::-;19915:3;19938:24;19956:5;19938:24;:::i;:::-;19929:33;;19984:66;19977:5;19974:77;19971:103;;20054:18;;:::i;:::-;19971:103;20101:1;20094:5;20090:13;20083:20;;19876:233;;;:::o;20115:194::-;20155:4;20175:20;20193:1;20175:20;:::i;:::-;20170:25;;20209:20;20227:1;20209:20;:::i;:::-;20204:25;;20253:1;20250;20246:9;20238:17;;20277:1;20271:4;20268:11;20265:37;;;20282:18;;:::i;:::-;20265:37;20115:194;;;;:::o;20315:180::-;20363:77;20360:1;20353:88;20460:4;20457:1;20450:15;20484:4;20481:1;20474:15;20501:165;20641:17;20637:1;20629:6;20625:14;20618:41;20501:165;:::o;20672:366::-;20814:3;20835:67;20899:2;20894:3;20835:67;:::i;:::-;20828:74;;20911:93;21000:3;20911:93;:::i;:::-;21029:2;21024:3;21020:12;21013:19;;20672:366;;;:::o;21044:419::-;21210:4;21248:2;21237:9;21233:18;21225:26;;21297:9;21291:4;21287:20;21283:1;21272:9;21268:17;21261:47;21325:131;21451:4;21325:131;:::i;:::-;21317:139;;21044:419;;;:::o;21469:410::-;21509:7;21532:20;21550:1;21532:20;:::i;:::-;21527:25;;21566:20;21584:1;21566:20;:::i;:::-;21561:25;;21621:1;21618;21614:9;21643:30;21661:11;21643:30;:::i;:::-;21632:41;;21822:1;21813:7;21809:15;21806:1;21803:22;21783:1;21776:9;21756:83;21733:139;;21852:18;;:::i;:::-;21733:139;21517:362;21469:410;;;;:::o;21885:180::-;21933:77;21930:1;21923:88;22030:4;22027:1;22020:15;22054:4;22051:1;22044:15;22071:185;22111:1;22128:20;22146:1;22128:20;:::i;:::-;22123:25;;22162:20;22180:1;22162:20;:::i;:::-;22157:25;;22201:1;22191:35;;22206:18;;:::i;:::-;22191:35;22248:1;22245;22241:9;22236:14;;22071:185;;;;:::o;22262:226::-;22402:34;22398:1;22390:6;22386:14;22379:58;22471:9;22466:2;22458:6;22454:15;22447:34;22262:226;:::o;22494:366::-;22636:3;22657:67;22721:2;22716:3;22657:67;:::i;:::-;22650:74;;22733:93;22822:3;22733:93;:::i;:::-;22851:2;22846:3;22842:12;22835:19;;22494:366;;;:::o;22866:419::-;23032:4;23070:2;23059:9;23055:18;23047:26;;23119:9;23113:4;23109:20;23105:1;23094:9;23090:17;23083:47;23147:131;23273:4;23147:131;:::i;:::-;23139:139;;22866:419;;;:::o;23291:223::-;23431:34;23427:1;23419:6;23415:14;23408:58;23500:6;23495:2;23487:6;23483:15;23476:31;23291:223;:::o;23520:366::-;23662:3;23683:67;23747:2;23742:3;23683:67;:::i;:::-;23676:74;;23759:93;23848:3;23759:93;:::i;:::-;23877:2;23872:3;23868:12;23861:19;;23520:366;;;:::o;23892:419::-;24058:4;24096:2;24085:9;24081:18;24073:26;;24145:9;24139:4;24135:20;24131:1;24120:9;24116:17;24109:47;24173:131;24299:4;24173:131;:::i;:::-;24165:139;;23892:419;;;:::o;24317:85::-;24362:7;24391:5;24380:16;;24317:85;;;:::o;24408:101::-;24444:7;24484:18;24477:5;24473:30;24462:41;;24408:101;;;:::o;24515:156::-;24572:9;24605:60;24622:42;24631:32;24657:5;24631:32;:::i;:::-;24622:42;:::i;:::-;24605:60;:::i;:::-;24592:73;;24515:156;;;:::o;24677:145::-;24771:44;24809:5;24771:44;:::i;:::-;24766:3;24759:57;24677:145;;:::o;24828:236::-;24928:4;24966:2;24955:9;24951:18;24943:26;;24979:78;25054:1;25043:9;25039:17;25030:6;24979:78;:::i;:::-;24828:236;;;;:::o;25070:158::-;25210:10;25206:1;25198:6;25194:14;25187:34;25070:158;:::o;25234:365::-;25376:3;25397:66;25461:1;25456:3;25397:66;:::i;:::-;25390:73;;25472:93;25561:3;25472:93;:::i;:::-;25590:2;25585:3;25581:12;25574:19;;25234:365;;;:::o;25605:419::-;25771:4;25809:2;25798:9;25794:18;25786:26;;25858:9;25852:4;25848:20;25844:1;25833:9;25829:17;25822:47;25886:131;26012:4;25886:131;:::i;:::-;25878:139;;25605:419;;;:::o;26030:221::-;26170:34;26166:1;26158:6;26154:14;26147:58;26239:4;26234:2;26226:6;26222:15;26215:29;26030:221;:::o;26257:366::-;26399:3;26420:67;26484:2;26479:3;26420:67;:::i;:::-;26413:74;;26496:93;26585:3;26496:93;:::i;:::-;26614:2;26609:3;26605:12;26598:19;;26257:366;;;:::o;26629:419::-;26795:4;26833:2;26822:9;26818:18;26810:26;;26882:9;26876:4;26872:20;26868:1;26857:9;26853:17;26846:47;26910:131;27036:4;26910:131;:::i;:::-;26902:139;;26629:419;;;:::o;27054:163::-;27194:15;27190:1;27182:6;27178:14;27171:39;27054:163;:::o;27223:366::-;27365:3;27386:67;27450:2;27445:3;27386:67;:::i;:::-;27379:74;;27462:93;27551:3;27462:93;:::i;:::-;27580:2;27575:3;27571:12;27564:19;;27223:366;;;:::o;27595:419::-;27761:4;27799:2;27788:9;27784:18;27776:26;;27848:9;27842:4;27838:20;27834:1;27823:9;27819:17;27812:47;27876:131;28002:4;27876:131;:::i;:::-;27868:139;;27595:419;;;:::o;28020:169::-;28160:21;28156:1;28148:6;28144:14;28137:45;28020:169;:::o;28195:366::-;28337:3;28358:67;28422:2;28417:3;28358:67;:::i;:::-;28351:74;;28434:93;28523:3;28434:93;:::i;:::-;28552:2;28547:3;28543:12;28536:19;;28195:366;;;:::o;28567:419::-;28733:4;28771:2;28760:9;28756:18;28748:26;;28820:9;28814:4;28810:20;28806:1;28795:9;28791:17;28784:47;28848:131;28974:4;28848:131;:::i;:::-;28840:139;;28567:419;;;:::o;28992:181::-;29132:33;29128:1;29120:6;29116:14;29109:57;28992:181;:::o;29179:366::-;29321:3;29342:67;29406:2;29401:3;29342:67;:::i;:::-;29335:74;;29418:93;29507:3;29418:93;:::i;:::-;29536:2;29531:3;29527:12;29520:19;;29179:366;;;:::o;29551:419::-;29717:4;29755:2;29744:9;29740:18;29732:26;;29804:9;29798:4;29794:20;29790:1;29779:9;29775:17;29768:47;29832:131;29958:4;29832:131;:::i;:::-;29824:139;;29551:419;;;:::o;29976:177::-;30116:29;30112:1;30104:6;30100:14;30093:53;29976:177;:::o;30159:366::-;30301:3;30322:67;30386:2;30381:3;30322:67;:::i;:::-;30315:74;;30398:93;30487:3;30398:93;:::i;:::-;30516:2;30511:3;30507:12;30500:19;;30159:366;;;:::o;30531:419::-;30697:4;30735:2;30724:9;30720:18;30712:26;;30784:9;30778:4;30774:20;30770:1;30759:9;30755:17;30748:47;30812:131;30938:4;30812:131;:::i;:::-;30804:139;;30531:419;;;:::o;30956:181::-;31096:33;31092:1;31084:6;31080:14;31073:57;30956:181;:::o;31143:366::-;31285:3;31306:67;31370:2;31365:3;31306:67;:::i;:::-;31299:74;;31382:93;31471:3;31382:93;:::i;:::-;31500:2;31495:3;31491:12;31484:19;;31143:366;;;:::o;31515:419::-;31681:4;31719:2;31708:9;31704:18;31696:26;;31768:9;31762:4;31758:20;31754:1;31743:9;31739:17;31732:47;31796:131;31922:4;31796:131;:::i;:::-;31788:139;;31515:419;;;:::o;31940:180::-;32080:32;32076:1;32068:6;32064:14;32057:56;31940:180;:::o;32126:366::-;32268:3;32289:67;32353:2;32348:3;32289:67;:::i;:::-;32282:74;;32365:93;32454:3;32365:93;:::i;:::-;32483:2;32478:3;32474:12;32467:19;;32126:366;;;:::o;32498:419::-;32664:4;32702:2;32691:9;32687:18;32679:26;;32751:9;32745:4;32741:20;32737:1;32726:9;32722:17;32715:47;32779:131;32905:4;32779:131;:::i;:::-;32771:139;;32498:419;;;:::o;32923:163::-;33063:15;33059:1;33051:6;33047:14;33040:39;32923:163;:::o;33092:366::-;33234:3;33255:67;33319:2;33314:3;33255:67;:::i;:::-;33248:74;;33331:93;33420:3;33331:93;:::i;:::-;33449:2;33444:3;33440:12;33433:19;;33092:366;;;:::o;33464:419::-;33630:4;33668:2;33657:9;33653:18;33645:26;;33717:9;33711:4;33707:20;33703:1;33692:9;33688:17;33681:47;33745:131;33871:4;33745:131;:::i;:::-;33737:139;;33464:419;;;:::o;33889:182::-;34029:34;34025:1;34017:6;34013:14;34006:58;33889:182;:::o;34077:366::-;34219:3;34240:67;34304:2;34299:3;34240:67;:::i;:::-;34233:74;;34316:93;34405:3;34316:93;:::i;:::-;34434:2;34429:3;34425:12;34418:19;;34077:366;;;:::o;34449:419::-;34615:4;34653:2;34642:9;34638:18;34630:26;;34702:9;34696:4;34692:20;34688:1;34677:9;34673:17;34666:47;34730:131;34856:4;34730:131;:::i;:::-;34722:139;;34449:419;;;:::o;34874:165::-;35014:17;35010:1;35002:6;34998:14;34991:41;34874:165;:::o;35045:366::-;35187:3;35208:67;35272:2;35267:3;35208:67;:::i;:::-;35201:74;;35284:93;35373:3;35284:93;:::i;:::-;35402:2;35397:3;35393:12;35386:19;;35045:366;;;:::o;35417:419::-;35583:4;35621:2;35610:9;35606:18;35598:26;;35670:9;35664:4;35660:20;35656:1;35645:9;35641:17;35634:47;35698:131;35824:4;35698:131;:::i;:::-;35690:139;;35417:419;;;:::o;35842:181::-;35982:33;35978:1;35970:6;35966:14;35959:57;35842:181;:::o;36029:366::-;36171:3;36192:67;36256:2;36251:3;36192:67;:::i;:::-;36185:74;;36268:93;36357:3;36268:93;:::i;:::-;36386:2;36381:3;36377:12;36370:19;;36029:366;;;:::o;36401:419::-;36567:4;36605:2;36594:9;36590:18;36582:26;;36654:9;36648:4;36644:20;36640:1;36629:9;36625:17;36618:47;36682:131;36808:4;36682:131;:::i;:::-;36674:139;;36401:419;;;:::o;36826:172::-;36966:24;36962:1;36954:6;36950:14;36943:48;36826:172;:::o;37004:366::-;37146:3;37167:67;37231:2;37226:3;37167:67;:::i;:::-;37160:74;;37243:93;37332:3;37243:93;:::i;:::-;37361:2;37356:3;37352:12;37345:19;;37004:366;;;:::o;37376:419::-;37542:4;37580:2;37569:9;37565:18;37557:26;;37629:9;37623:4;37619:20;37615:1;37604:9;37600:17;37593:47;37657:131;37783:4;37657:131;:::i;:::-;37649:139;;37376:419;;;:::o;37801:180::-;37941:32;37937:1;37929:6;37925:14;37918:56;37801:180;:::o;37987:366::-;38129:3;38150:67;38214:2;38209:3;38150:67;:::i;:::-;38143:74;;38226:93;38315:3;38226:93;:::i;:::-;38344:2;38339:3;38335:12;38328:19;;37987:366;;;:::o;38359:419::-;38525:4;38563:2;38552:9;38548:18;38540:26;;38612:9;38606:4;38602:20;38598:1;38587:9;38583:17;38576:47;38640:131;38766:4;38640:131;:::i;:::-;38632:139;;38359:419;;;:::o;38784:169::-;38924:21;38920:1;38912:6;38908:14;38901:45;38784:169;:::o;38959:366::-;39101:3;39122:67;39186:2;39181:3;39122:67;:::i;:::-;39115:74;;39198:93;39287:3;39198:93;:::i;:::-;39316:2;39311:3;39307:12;39300:19;;38959:366;;;:::o;39331:419::-;39497:4;39535:2;39524:9;39520:18;39512:26;;39584:9;39578:4;39574:20;39570:1;39559:9;39555:17;39548:47;39612:131;39738:4;39612:131;:::i;:::-;39604:139;;39331:419;;;:::o;39756:147::-;39857:11;39894:3;39879:18;;39756:147;;;;:::o;39909:114::-;;:::o;40029:398::-;40188:3;40209:83;40290:1;40285:3;40209:83;:::i;:::-;40202:90;;40301:93;40390:3;40301:93;:::i;:::-;40419:1;40414:3;40410:11;40403:18;;40029:398;;;:::o;40433:379::-;40617:3;40639:147;40782:3;40639:147;:::i;:::-;40632:154;;40803:3;40796:10;;40433:379;;;:::o;40818:174::-;40958:26;40954:1;40946:6;40942:14;40935:50;40818:174;:::o;40998:366::-;41140:3;41161:67;41225:2;41220:3;41161:67;:::i;:::-;41154:74;;41237:93;41326:3;41237:93;:::i;:::-;41355:2;41350:3;41346:12;41339:19;;40998:366;;;:::o;41370:419::-;41536:4;41574:2;41563:9;41559:18;41551:26;;41623:9;41617:4;41613:20;41609:1;41598:9;41594:17;41587:47;41651:131;41777:4;41651:131;:::i;:::-;41643:139;;41370:419;;;:::o;41795:137::-;41849:5;41880:6;41874:13;41865:22;;41896:30;41920:5;41896:30;:::i;:::-;41795:137;;;;:::o;41938:345::-;42005:6;42054:2;42042:9;42033:7;42029:23;42025:32;42022:119;;;42060:79;;:::i;:::-;42022:119;42180:1;42205:61;42258:7;42249:6;42238:9;42234:22;42205:61;:::i;:::-;42195:71;;42151:125;41938:345;;;;:::o;42289:225::-;42429:34;42425:1;42417:6;42413:14;42406:58;42498:8;42493:2;42485:6;42481:15;42474:33;42289:225;:::o;42520:366::-;42662:3;42683:67;42747:2;42742:3;42683:67;:::i;:::-;42676:74;;42759:93;42848:3;42759:93;:::i;:::-;42877:2;42872:3;42868:12;42861:19;;42520:366;;;:::o;42892:419::-;43058:4;43096:2;43085:9;43081:18;43073:26;;43145:9;43139:4;43135:20;43131:1;43120:9;43116:17;43109:47;43173:131;43299:4;43173:131;:::i;:::-;43165:139;;42892:419;;;:::o;43317:332::-;43438:4;43476:2;43465:9;43461:18;43453:26;;43489:71;43557:1;43546:9;43542:17;43533:6;43489:71;:::i;:::-;43570:72;43638:2;43627:9;43623:18;43614:6;43570:72;:::i;:::-;43317:332;;;;;:::o;43655:222::-;43748:4;43786:2;43775:9;43771:18;43763:26;;43799:71;43867:1;43856:9;43852:17;43843:6;43799:71;:::i;:::-;43655:222;;;;:::o;43883:143::-;43940:5;43971:6;43965:13;43956:22;;43987:33;44014:5;43987:33;:::i;:::-;43883:143;;;;:::o;44032:351::-;44102:6;44151:2;44139:9;44130:7;44126:23;44122:32;44119:119;;;44157:79;;:::i;:::-;44119:119;44277:1;44302:64;44358:7;44349:6;44338:9;44334:22;44302:64;:::i;:::-;44292:74;;44248:128;44032:351;;;;:::o;44389:143::-;44446:5;44477:6;44471:13;44462:22;;44493:33;44520:5;44493:33;:::i;:::-;44389:143;;;;:::o;44538:351::-;44608:6;44657:2;44645:9;44636:7;44632:23;44628:32;44625:119;;;44663:79;;:::i;:::-;44625:119;44783:1;44808:64;44864:7;44855:6;44844:9;44840:22;44808:64;:::i;:::-;44798:74;;44754:128;44538:351;;;;:::o;44895:442::-;45044:4;45082:2;45071:9;45067:18;45059:26;;45095:71;45163:1;45152:9;45148:17;45139:6;45095:71;:::i;:::-;45176:72;45244:2;45233:9;45229:18;45220:6;45176:72;:::i;:::-;45258;45326:2;45315:9;45311:18;45302:6;45258:72;:::i;:::-;44895:442;;;;;;:::o;45343:176::-;45483:28;45479:1;45471:6;45467:14;45460:52;45343:176;:::o;45525:366::-;45667:3;45688:67;45752:2;45747:3;45688:67;:::i;:::-;45681:74;;45764:93;45853:3;45764:93;:::i;:::-;45882:2;45877:3;45873:12;45866:19;;45525:366;;;:::o;45897:419::-;46063:4;46101:2;46090:9;46086:18;46078:26;;46150:9;46144:4;46140:20;46136:1;46125:9;46121:17;46114:47;46178:131;46304:4;46178:131;:::i;:::-;46170:139;;45897:419;;;:::o;46322:224::-;46462:34;46458:1;46450:6;46446:14;46439:58;46531:7;46526:2;46518:6;46514:15;46507:32;46322:224;:::o;46552:366::-;46694:3;46715:67;46779:2;46774:3;46715:67;:::i;:::-;46708:74;;46791:93;46880:3;46791:93;:::i;:::-;46909:2;46904:3;46900:12;46893:19;;46552:366;;;:::o;46924:419::-;47090:4;47128:2;47117:9;47113:18;47105:26;;47177:9;47171:4;47167:20;47163:1;47152:9;47148:17;47141:47;47205:131;47331:4;47205:131;:::i;:::-;47197:139;;46924:419;;;:::o;47349:174::-;47489:26;47485:1;47477:6;47473:14;47466:50;47349:174;:::o;47529:366::-;47671:3;47692:67;47756:2;47751:3;47692:67;:::i;:::-;47685:74;;47768:93;47857:3;47768:93;:::i;:::-;47886:2;47881:3;47877:12;47870:19;;47529:366;;;:::o;47901:419::-;48067:4;48105:2;48094:9;48090:18;48082:26;;48154:9;48148:4;48144:20;48140:1;48129:9;48125:17;48118:47;48182:131;48308:4;48182:131;:::i;:::-;48174:139;;47901:419;;;:::o;48326:182::-;48466:34;48462:1;48454:6;48450:14;48443:58;48326:182;:::o;48514:366::-;48656:3;48677:67;48741:2;48736:3;48677:67;:::i;:::-;48670:74;;48753:93;48842:3;48753:93;:::i;:::-;48871:2;48866:3;48862:12;48855:19;;48514:366;;;:::o;48886:419::-;49052:4;49090:2;49079:9;49075:18;49067:26;;49139:9;49133:4;49129:20;49125:1;49114:9;49110:17;49103:47;49167:131;49293:4;49167:131;:::i;:::-;49159:139;;48886:419;;;:::o;49311:177::-;49451:29;49447:1;49439:6;49435:14;49428:53;49311:177;:::o;49494:366::-;49636:3;49657:67;49721:2;49716:3;49657:67;:::i;:::-;49650:74;;49733:93;49822:3;49733:93;:::i;:::-;49851:2;49846:3;49842:12;49835:19;;49494:366;;;:::o;49866:419::-;50032:4;50070:2;50059:9;50055:18;50047:26;;50119:9;50113:4;50109:20;50105:1;50094:9;50090:17;50083:47;50147:131;50273:4;50147:131;:::i;:::-;50139:139;;49866:419;;;:::o;50291:225::-;50431:34;50427:1;50419:6;50415:14;50408:58;50500:8;50495:2;50487:6;50483:15;50476:33;50291:225;:::o;50522:366::-;50664:3;50685:67;50749:2;50744:3;50685:67;:::i;:::-;50678:74;;50761:93;50850:3;50761:93;:::i;:::-;50879:2;50874:3;50870:12;50863:19;;50522:366;;;:::o;50894:419::-;51060:4;51098:2;51087:9;51083:18;51075:26;;51147:9;51141:4;51137:20;51133:1;51122:9;51118:17;51111:47;51175:131;51301:4;51175:131;:::i;:::-;51167:139;;50894:419;;;:::o;51319:332::-;51440:4;51478:2;51467:9;51463:18;51455:26;;51491:71;51559:1;51548:9;51544:17;51535:6;51491:71;:::i;:::-;51572:72;51640:2;51629:9;51625:18;51616:6;51572:72;:::i;:::-;51319:332;;;;;:::o;51657:98::-;51708:6;51742:5;51736:12;51726:22;;51657:98;;;:::o;51761:386::-;51865:3;51893:38;51925:5;51893:38;:::i;:::-;51947:88;52028:6;52023:3;51947:88;:::i;:::-;51940:95;;52044:65;52102:6;52097:3;52090:4;52083:5;52079:16;52044:65;:::i;:::-;52134:6;52129:3;52125:16;52118:23;;51869:278;51761:386;;;;:::o;52153:271::-;52283:3;52305:93;52394:3;52385:6;52305:93;:::i;:::-;52298:100;;52415:3;52408:10;;52153:271;;;;:::o"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","ETH_PID()":"bfc3ebba","RCC()":"a72d5bf4","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","UPGRADE_ROLE()":"b908afa8","addPool(address,uint256,uint256,uint256,bool)":"b6d9d919","claim(uint256)":"379607f5","claimPaused()":"ab5e124a","deposit(uint256,uint256)":"e2bbb158","depositETH()":"f6326fb3","endBlock()":"083c6323","getMultiplier(uint256,uint256)":"8dbb1e3a","getPendingRCC(uint256,address)":"a27d9279","getPoolLength()":"b3944d52","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,uint256,uint256,uint256)":"4ec81af1","massUpdatePools()":"630b5ba1","pauseClaim()":"8ff095f9","pauseWithdraw()":"6155e3de","paused()":"5c975abb","pendingRCCByBlockNumber(uint256,address,uint256)":"41721ab7","pool(uint256)":"fe313112","pools(uint256)":"ac4afa38","proxiableUUID()":"52d1902d","rccPerBlock()":"70ff0173","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setEndBlock(uint256)":"c713aa94","setPoolWeight(uint256,uint256,bool)":"fad07ece","setRCC(address)":"f5485d32","setRCCPerBlock(uint256)":"bed66c08","setStartBlock(uint256)":"f35e4a6e","stToken()":"23b6443e","stakingBalance(uint256,address)":"11548234","startBlock()":"48cd4cb1","supportsInterface(bytes4)":"01ffc9a7","totalPoolWeight()":"02559004","unpPauseWithdraw()":"c397920e","unpauseClaim()":"de065caa","unstake(uint256,uint256)":"9e2c8a5b","unstakeReleaseBlocks()":"a17bff83","updatePool(uint256)":"51eb05a6","updatePool(uint256,uint256,uint256)":"d86c0444","upgradeToAndCall(address,bytes)":"4f1ef286","user(uint256,address)":"37849b3c","users(address)":"a87430ba","withdraw(uint256)":"2e1a7d4d","withdrawAmount(uint256,address)":"ff423357","withdrawPaused()":"2f3ffb9f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakeTokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolWeight\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minDepositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unStakeLockedBlocks\",\"type\":\"uint256\"}],\"name\":\"AddPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"RccReward\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pid\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GetRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PausedClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PausedWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RequestUnstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"SetEndBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPoolWeight\",\"type\":\"uint256\"}],\"name\":\"SetPoolWeight\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"RCC\",\"type\":\"address\"}],\"name\":\"SetRCC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rccPerBlock\",\"type\":\"uint256\"}],\"name\":\"SetRCCPerBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"}],\"name\":\"SetStartBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pid\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pid\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UnpausedClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UnpausedWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRCC\",\"type\":\"uint256\"}],\"name\":\"UpdatePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"minDepositAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unStakeLockedBlocks\",\"type\":\"uint256\"}],\"name\":\"UpdatePoolInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ETH_PID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RCC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minDepositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unStakeLockedBlocks\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getPendingRCC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_RCC\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rccPerBlock\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"pendingRCCByBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulateRewardsPerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minDepositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unStakeLockedBlocks\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulateRewardsPerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minDepositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unStakeLockedBlocks\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rccPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"}],\"name\":\"setEndBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolWeight\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"setPoolWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_RCC\",\"type\":\"address\"}],\"name\":\"setRCC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rccPerBlock\",\"type\":\"uint256\"}],\"name\":\"setRCCPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"name\":\"setStartBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"stakingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPoolWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpPauseWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeReleaseBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minDepositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unStakeLockedBlocks\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"user\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishedRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishedRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"withdrawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingWithdrawAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"claim(uint256)\":{\"params\":{\"_pid\":\"Id of the pool to be claimed from \\u7d22\\u53d6\\u3001\\u4e3b\\u5f20\\u3001\\u7d22\\u8d54 TODO: \\u8fd9\\u6bb5\\u903b\\u8f91\\u8c01\\u8c03\\u7528\\uff1f\"}},\"deposit(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount of staking tokens to be deposited\",\"_pid\":\"Id of the pool to be deposited to\"}},\"getMultiplier(uint256,uint256)\":{\"params\":{\"_from\":\"From block number (included)\",\"_to\":\"To block number (exluded)\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unstake(uint256,uint256)\":{\"params\":{\"_amount\":\"amount of staking tokens to be withdrawn\",\"_pid\":\"Id of the pool to be withdrawn from\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdraw(uint256)\":{\"params\":{\"_pid\":\"Id of the pool to be withdrawn from \\u529f\\u80fd: \\u63d0\\u53d6\\u4e00\\u4e2a\\u6c60\\u5b50\\u91cc\\u6240\\u6709\\u7684\\u4ee3\\u5e01 - \\u63d0\\u53d6\\u6c60\\u5b50\\u91cc\\u6240\\u6709\\u7684\\u4ee3\\u5e01\\uff1b - \\u62ff\\u8d70\\u6240\\u6709\\u7684\\u5956\\u52b1\\uff1b - \\u66f4\\u65b0\\u6c60\\u5b50 - \\u53d1\\u5c04\\u4e8b\\u4ef6\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPool(address,uint256,uint256,uint256,bool)\":{\"notice\":\"Add a new staking to pool. Can only be called by admin DO NOT add the same staking token more than once. RCC rewards will be messed up if you do\"},\"claim(uint256)\":{\"notice\":\"Claim RCC tokens reward\"},\"deposit(uint256,uint256)\":{\"notice\":\"Deposit staking token for RCC rewards Before depositing, user needs approve this contract to be able to spend or transfer their staking tokens\"},\"depositETH()\":{\"notice\":\"Deposit staking ETH for RCC rewards\"},\"getMultiplier(uint256,uint256)\":{\"notice\":\"Return reward multiplier over given _from to _to block. [_from, _to)\"},\"getPendingRCC(uint256,address)\":{\"notice\":\"Get pending RCC amount of user in pool\"},\"getPoolLength()\":{\"notice\":\"Get the length/amount of pool\"},\"initialize(address,uint256,uint256,uint256)\":{\"notice\":\"Set RCC token address. Set basic info when deploying. - \\u6267\\u884c\\u521d\\u59cb\\u5316\\u52a8\\u4f5c - \\u8bbe\\u7f6e\\u89d2\\u8272\\u6743\\u9650 - \\u8bbe\\u7f6e\\u4ee3\\u5e01\\u5956\\u52b1\\u76f8\\u5173\\u4fe1\\u606f\"},\"massUpdatePools()\":{\"notice\":\"Update reward variables for all pools. Be careful of gas spending!\"},\"pauseClaim()\":{\"notice\":\"Pause claim. Can only be called by admin.\"},\"pauseWithdraw()\":{\"notice\":\"Pause withdraw. Can only be called by admin.\"},\"pendingRCCByBlockNumber(uint256,address,uint256)\":{\"notice\":\"Get pending RCC amount of user by block number in pool\"},\"setEndBlock(uint256)\":{\"notice\":\"Update staking end block. Can only be called by admin.\"},\"setPoolWeight(uint256,uint256,bool)\":{\"notice\":\"Update the given pool's weight. Can only be called by admin.\"},\"setRCC(address)\":{\"notice\":\"Set RCC token address. Can only be called by admin\"},\"setRCCPerBlock(uint256)\":{\"notice\":\"Update the RCC reward amount per block. Can only be called by admin.\"},\"setStartBlock(uint256)\":{\"notice\":\"Update staking start block. Can only be called by admin.\"},\"stakingBalance(uint256,address)\":{\"notice\":\"Get the staking amount of user\"},\"unpPauseWithdraw()\":{\"notice\":\"Unpause withdraw. Can only be called by admin.\"},\"unpauseClaim()\":{\"notice\":\"Pause unpauseClaim. Can only be called by admin.\"},\"unstake(uint256,uint256)\":{\"notice\":\"Unstake staking tokens\"},\"updatePool(uint256)\":{\"notice\":\"Update reward variables of the given pool to be up-to-date. \\u4e3b\\u8981\\u662f\\u66f4\\u65b0 - \\u6c60\\u5b50\\u91cc\\u6bcf\\u5355\\u4f4d\\u4ee3\\u5e01\\u7d2f\\u8ba1\\u53d1\\u653e\\u7684\\u5956\\u52b1\\uff1b\\uff08TODO: \\u8fd9\\u4e2a\\u6570\\u636e\\u7684\\u53c2\\u8003\\u4ef7\\u503c\\u6709\\u591a\\u9ad8\\u5462\\uff1f\\uff09 - \\u6700\\u540e\\u53d1\\u653e\\u5956\\u52b1\\u533a\\u5757\\u7684number\\uff1b - \\u66f4\\u65b0\\u6574\\u4e2a\\u6c60\\u5b50\\uff0c\\u7d2f\\u8ba1\\u5e94\\u8be5\\u65b9\\u6cd5\\u7684\\u5956\\u52b1\\uff1b\"},\"updatePool(uint256,uint256,uint256)\":{\"notice\":\"Update the given pool's info (minDepositAmount and unStakeLockedBlocks). Can only be called by admin. \\u8fd9\\u5c31\\u662f\\u51fd\\u6570\\u7b7e\\u540d\\u7684\\u4f5c\\u7528\\uff0c\\u51fd\\u6570\\u91cd\\u540d\\u6ca1\\u4e8b\\u513f\\uff0c\\u8fd8\\u6709\\u53c2\\u6570\\u8fd4\\u56de\\u503c\\u5565\\u7684\\u5462\\uff1b\\u3001 \\u66f4\\u65b0\\u6c60\\u5b50\\u5e72\\u4e86\\u5565\\u4e8b\\u513f - \\u6539\\u4e86\\u6700\\u5c0f\\u5b58\\u5165\\u91d1\\u989d - \\u4e0d\\u80fd\\u63d0\\u53d6\\u7684\\u533a\\u5757\\u9501\\u5b9a\\u533a\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw the unlock unstake amount\"},\"withdrawAmount(uint256,address)\":{\"notice\":\"Get the withdraw amount info, including the locked unstake amount and the unlocked unstake amount\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/rcc-stake.sol\":\"RCCStake\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/rcc-stake.sol\":{\"keccak256\":\"0x1dc75070296200fd6e3e10a714b3171ce4e4e81735d2d77dc8f59912c22f8b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9862f099d529249c2da8502a5db2f5b5a195583f2f9696c946b9d4de27b7e93f\",\"dweb:/ipfs/QmTKFvCk1XstbbEtcEnZLffYvNQp5onESGbVAdd8NKKV8f\"]}},\"version\":1}"}}}}}